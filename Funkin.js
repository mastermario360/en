/*
 howler.js v2.1.1 | (c) 2013-2018, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.checkStringArgs = function (Q, t, E) {
  if (null == Q)
    throw new TypeError(
      "The 'this' value for String.prototype." +
        E +
        " must not be null or undefined"
    );
  if (t instanceof RegExp)
    throw new TypeError(
      "First argument to String.prototype." +
        E +
        " must not be a regular expression"
    );
  return Q + "";
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty =
  $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties
    ? Object.defineProperty
    : function (Q, t, E) {
        Q != Array.prototype && Q != Object.prototype && (Q[t] = E.value);
      };
$jscomp.getGlobal = function (Q) {
  Q = [
    "object" == typeof window && window,
    "object" == typeof self && self,
    "object" == typeof global && global,
    Q,
  ];
  for (var t = 0; t < Q.length; ++t) {
    var E = Q[t];
    if (E && E.Math == Math) return E;
  }
  throw Error("Cannot find global object");
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function (Q, t, E, F) {
  if (t) {
    E = $jscomp.global;
    Q = Q.split(".");
    for (F = 0; F < Q.length - 1; F++) {
      var B = Q[F];
      B in E || (E[B] = {});
      E = E[B];
    }
    Q = Q[Q.length - 1];
    F = E[Q];
    t = t(F);
    t != F &&
      null != t &&
      $jscomp.defineProperty(E, Q, {
        configurable: !0,
        writable: !0,
        value: t,
      });
  }
};
$jscomp.polyfill(
  "String.prototype.startsWith",
  function (Q) {
    return Q
      ? Q
      : function (t, E) {
          var F = $jscomp.checkStringArgs(this, t, "startsWith");
          t += "";
          var B = F.length,
            L = t.length;
          E = Math.max(0, Math.min(E | 0, F.length));
          for (var r = 0; r < L && E < B; ) if (F[E++] != t[r++]) return !1;
          return r >= L;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "String.prototype.endsWith",
  function (Q) {
    return Q
      ? Q
      : function (t, E) {
          var F = $jscomp.checkStringArgs(this, t, "endsWith");
          t += "";
          void 0 === E && (E = F.length);
          E = Math.max(0, Math.min(E | 0, F.length));
          for (var B = t.length; 0 < B && 0 < E; )
            if (F[--E] != t[--B]) return !1;
          return 0 >= B;
        };
  },
  "es6",
  "es3"
);
$jscomp.arrayIteratorImpl = function (Q) {
  var t = 0;
  return function () {
    return t < Q.length ? { done: !1, value: Q[t++] } : { done: !0 };
  };
};
$jscomp.arrayIterator = function (Q) {
  return { next: $jscomp.arrayIteratorImpl(Q) };
};
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.SymbolClass = function (Q, t) {
  this.$jscomp$symbol$id_ = Q;
  $jscomp.defineProperty(this, "description", {
    configurable: !0,
    writable: !0,
    value: t,
  });
};
$jscomp.SymbolClass.prototype.toString = function () {
  return this.$jscomp$symbol$id_;
};
$jscomp.Symbol = (function () {
  function Q(E) {
    if (this instanceof Q) throw new TypeError("Symbol is not a constructor");
    return new $jscomp.SymbolClass(
      $jscomp.SYMBOL_PREFIX + (E || "") + "_" + t++,
      E
    );
  }
  var t = 0;
  return Q;
})();
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var Q = $jscomp.global.Symbol.iterator;
  Q ||
    (Q = $jscomp.global.Symbol.iterator =
      $jscomp.global.Symbol("Symbol.iterator"));
  "function" != typeof Array.prototype[Q] &&
    $jscomp.defineProperty(Array.prototype, Q, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.initSymbolAsyncIterator = function () {
  $jscomp.initSymbol();
  var Q = $jscomp.global.Symbol.asyncIterator;
  Q ||
    (Q = $jscomp.global.Symbol.asyncIterator =
      $jscomp.global.Symbol("Symbol.asyncIterator"));
  $jscomp.initSymbolAsyncIterator = function () {};
};
$jscomp.iteratorPrototype = function (Q) {
  $jscomp.initSymbolIterator();
  Q = { next: Q };
  Q[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return Q;
};
$jscomp.iteratorFromArray = function (Q, t) {
  $jscomp.initSymbolIterator();
  Q instanceof String && (Q += "");
  var E = 0,
    F = {
      next: function () {
        if (E < Q.length) {
          var B = E++;
          return { value: t(B, Q[B]), done: !1 };
        }
        F.next = function () {
          return { done: !0, value: void 0 };
        };
        return F.next();
      },
    };
  F[Symbol.iterator] = function () {
    return F;
  };
  return F;
};
$jscomp.polyfill(
  "Array.prototype.keys",
  function (Q) {
    return Q
      ? Q
      : function () {
          return $jscomp.iteratorFromArray(this, function (t) {
            return t;
          });
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "Array.prototype.fill",
  function (Q) {
    return Q
      ? Q
      : function (t, E, F) {
          var B = this.length || 0;
          0 > E && (E = Math.max(0, B + E));
          if (null == F || F > B) F = B;
          F = Number(F);
          0 > F && (F = Math.max(0, B + F));
          for (E = Number(E || 0); E < F; E++) this[E] = t;
          return this;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "String.fromCodePoint",
  function (Q) {
    return Q
      ? Q
      : function (t) {
          for (var E = "", F = 0; F < arguments.length; F++) {
            var B = Number(arguments[F]);
            if (0 > B || 1114111 < B || B !== Math.floor(B))
              throw new RangeError("invalid_code_point " + B);
            65535 >= B
              ? (E += String.fromCharCode(B))
              : ((B -= 65536),
                (E += String.fromCharCode(((B >>> 10) & 1023) | 55296)),
                (E += String.fromCharCode((B & 1023) | 56320)));
          }
          return E;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "Array.prototype.entries",
  function (Q) {
    return Q
      ? Q
      : function () {
          return $jscomp.iteratorFromArray(this, function (t, E) {
            return [t, E];
          });
        };
  },
  "es6",
  "es3"
);
(function (Q, t) {
  Q.lime = Q.lime || {};
  Q.lime.$scripts = Q.lime.$scripts || {};
  Q.lime.$scripts.Funkin = function (t, F) {
    (function (t, E) {
      function r(a, b) {
        a = Object.create(a);
        for (var c in b) a[c] = b[c];
        b.toString !== Object.prototype.toString && (a.toString = b.toString);
        return a;
      }
      function F(a) {
        return a instanceof Array ? new Xe(a) : a.iterator();
      }
      function q(a, b) {
        if (null == b) return null;
        null == b.__id__ && (b.__id__ = E.$haxeUID++);
        var c;
        null == a.hx__closures__
          ? (a.hx__closures__ = {})
          : (c = a.hx__closures__[b.__id__]);
        null == c && ((c = b.bind(a)), (a.hx__closures__[b.__id__] = c));
        return c;
      }
      t.lime = t.lime || {};
      var g = {},
        l = function () {
          return pa.__string_rec(this, "");
        },
        z = z || {},
        y,
        T = function () {};
      g["flixel.util.IFlxDestroyable"] = T;
      T.__name__ = "flixel.util.IFlxDestroyable";
      T.__isInterface__ = !0;
      T.prototype = { __class__: T };
      var ca = function () {
        this.flixelType = 0;
        this.active = this.visible = this.alive = this.exists = !0;
        this.ID = -1;
      };
      g["flixel.FlxBasic"] = ca;
      ca.__name__ = "flixel.FlxBasic";
      ca.__interfaces__ = [T];
      ca.prototype = {
        destroy: function () {
          this.set_exists(!1);
          this._cameras = null;
        },
        kill: function () {
          this.set_alive(!1);
          this.set_exists(!1);
        },
        revive: function () {
          this.set_alive(!0);
          this.set_exists(!0);
        },
        update: function (a) {},
        draw: function () {},
        set_visible: function (a) {
          return (this.visible = a);
        },
        set_active: function (a) {
          return (this.active = a);
        },
        set_exists: function (a) {
          return (this.exists = a);
        },
        set_alive: function (a) {
          return (this.alive = a);
        },
        get_cameras: function () {
          return null == this._cameras ? Zb.defaultCameras : this._cameras;
        },
        set_cameras: function (a) {
          return (this._cameras = a);
        },
        __class__: ca,
        __properties__: {
          set_cameras: "set_cameras",
          get_cameras: "get_cameras",
          set_exists: "set_exists",
          set_alive: "set_alive",
          set_visible: "set_visible",
          set_active: "set_active",
        },
      };
      var ra = function () {};
      g["flixel.util.IFlxPooled"] = ra;
      ra.__name__ = "flixel.util.IFlxPooled";
      ra.__isInterface__ = !0;
      ra.__interfaces__ = [T];
      ra.prototype = { __class__: ra };
      var B = function () {};
      g["flixel.util.IFlxPool"] = B;
      B.__name__ = "flixel.util.IFlxPool";
      B.__isInterface__ = !0;
      var Rb = function (a) {
        this._count = 0;
        this._pool = [];
        this._class = a;
      };
      g["flixel.util.FlxPool_flixel_math_FlxRect"] = Rb;
      Rb.__name__ = "flixel.util.FlxPool_flixel_math_FlxRect";
      Rb.__interfaces__ = [B];
      Rb.prototype = {
        get: function () {
          return 0 == this._count
            ? Ya.createInstance(this._class, [])
            : this._pool[--this._count];
        },
        putUnsafe: function (a) {
          null != a && (a.destroy(), (this._pool[this._count++] = a));
        },
        __class__: Rb,
      };
      var ya = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this._weak = this._inPool = !1;
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
      };
      g["flixel.math.FlxRect"] = ya;
      ya.__name__ = "flixel.math.FlxRect";
      ya.__interfaces__ = [ra];
      ya.prototype = {
        put: function () {
          this._inPool ||
            ((this._inPool = !0), (this._weak = !1), ya._pool.putUnsafe(this));
        },
        destroy: function () {},
        intersection: function (a, b) {
          if (null == b) {
            b = ya._pool.get();
            var c = 0,
              d = 0,
              e = 0,
              f = 0;
            null == f && (f = 0);
            null == e && (e = 0);
            null == d && (d = 0);
            null == c && (c = 0);
            b.x = c;
            b.y = d;
            b.width = e;
            b.height = f;
            b._inPool = !1;
          }
          e = this.x < a.x ? a.x : this.x;
          var h =
            this.x + this.width > a.x + a.width
              ? a.x + a.width
              : this.x + this.width;
          if (h <= e)
            return (
              a._weak &&
                !a._inPool &&
                ((a._inPool = !0), (a._weak = !1), ya._pool.putUnsafe(a)),
              b
            );
          f = this.y < a.y ? a.y : this.y;
          var m =
            this.y + this.height > a.y + a.height
              ? a.y + a.height
              : this.y + this.height;
          if (m <= f)
            return (
              a._weak &&
                !a._inPool &&
                ((a._inPool = !0), (a._weak = !1), ya._pool.putUnsafe(a)),
              b
            );
          a._weak &&
            !a._inPool &&
            ((a._inPool = !0), (a._weak = !1), ya._pool.putUnsafe(a));
          c = e;
          d = f;
          e = h - e;
          f = m - f;
          null == f && (f = 0);
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          b.x = c;
          b.y = d;
          b.width = e;
          b.height = f;
          return b;
        },
        toString: function () {
          var a = this.x,
            b = Sb._pool.get();
          b.label = "x";
          b.value = a;
          a = this.y;
          var c = Sb._pool.get();
          c.label = "y";
          c.value = a;
          a = this.width;
          var d = Sb._pool.get();
          d.label = "w";
          d.value = a;
          a = this.height;
          var e = Sb._pool.get();
          e.label = "h";
          e.value = a;
          return yb.getDebugString([b, c, d, e]);
        },
        __class__: ya,
      };
      var L = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        var e = ya._pool.get();
        e.x = 0;
        e.y = 0;
        e.width = 0;
        e.height = 0;
        e._inPool = !1;
        this._rect = e;
        e = U._pool.get().set(0, 0);
        e._inPool = !1;
        this._point = e;
        this.path = null;
        this.allowCollisions = 4369;
        this.touching = this.wasTouching = 0;
        this.maxAngular = 1e4;
        this.angularVelocity = this.angularAcceleration = this.angularDrag = 0;
        this.immovable = !1;
        this.moves = !0;
        this.angle = 0;
        this.pixelPerfectPosition = !0;
        this.x = this.y = 0;
        ca.call(this);
        this.set_x(a);
        this.set_y(b);
        this.set_width(c);
        this.set_height(d);
        this.initVars();
      };
      g["flixel.FlxObject"] = L;
      L.__name__ = "flixel.FlxObject";
      L.__super__ = ca;
      L.prototype = r(ca.prototype, {
        initVars: function () {
          this.flixelType = 1;
          var a = this.x,
            b = this.y;
          null == b && (b = 0);
          null == a && (a = 0);
          a = U._pool.get().set(a, b);
          a._inPool = !1;
          this.last = a;
          b = a = 1;
          null == b && (b = 0);
          null == a && (a = 0);
          a = U._pool.get().set(a, b);
          a._inPool = !1;
          this.scrollFactor = a;
          this.pixelPerfectPosition = L.defaultPixelPerfectPosition;
          a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.velocity = a;
          a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.acceleration = a;
          a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.drag = a;
          b = a = 1e4;
          null == b && (b = 0);
          null == a && (a = 0);
          a = U._pool.get().set(a, b);
          a._inPool = !1;
          this.maxVelocity = a;
        },
        destroy: function () {
          ca.prototype.destroy.call(this);
          this.velocity = Z.put(this.velocity);
          this.acceleration = Z.put(this.acceleration);
          this.drag = Z.put(this.drag);
          this.maxVelocity = Z.put(this.maxVelocity);
          this.scrollFactor = Z.put(this.scrollFactor);
          this.last = Z.put(this.last);
          this._point = Z.put(this._point);
          this._rect = Z.put(this._rect);
        },
        update: function (a) {
          this.last.set(this.x, this.y);
          null != this.path && this.path.active && this.path.update(a);
          this.moves && this.updateMotion(a);
          this.wasTouching = this.touching;
          this.touching = 0;
        },
        updateMotion: function (a) {
          var b =
            0.5 *
            (ni.computeVelocity(
              this.angularVelocity,
              this.angularAcceleration,
              this.angularDrag,
              this.maxAngular,
              a
            ) -
              this.angularVelocity);
          this.angularVelocity += b;
          var c = this;
          c.set_angle(c.angle + this.angularVelocity * a);
          this.angularVelocity += b;
          b =
            0.5 *
            (ni.computeVelocity(
              this.velocity.x,
              this.acceleration.x,
              this.drag.x,
              this.maxVelocity.x,
              a
            ) -
              this.velocity.x);
          c = this.velocity;
          c.set_x(c.x + b);
          var d = this.velocity.x * a;
          c = this.velocity;
          c.set_x(c.x + b);
          c = this;
          c.set_x(c.x + d);
          b =
            0.5 *
            (ni.computeVelocity(
              this.velocity.y,
              this.acceleration.y,
              this.drag.y,
              this.maxVelocity.y,
              a
            ) -
              this.velocity.y);
          c = this.velocity;
          c.set_y(c.y + b);
          d = this.velocity.y * a;
          c = this.velocity;
          c.set_y(c.y + b);
          c = this;
          c.set_y(c.y + d);
        },
        draw: function () {},
        overlapsPoint: function (a, b, c) {
          null == b && (b = !1);
          if (!b)
            return a.x >= this.x &&
              a.x < this.x + this.get_width() &&
              a.y >= this.y
              ? a.y < this.y + this.get_height()
              : !1;
          null == c && (c = p.camera);
          b = a.x - c.scroll.x;
          var d = a.y - c.scroll.y;
          this.getScreenPosition(this._point, c);
          a._weak && a.put();
          return b >= this._point.x &&
            b < this._point.x + this.get_width() &&
            d >= this._point.y
            ? d < this._point.y + this.get_height()
            : !1;
        },
        getScreenPosition: function (a, b) {
          null == a && ((a = U._pool.get().set(0, 0)), (a._inPool = !1));
          null == b && (b = p.camera);
          a.set(this.x, this.y);
          this.pixelPerfectPosition &&
            (a.set_x(Math.floor(a.x)), a.set_y(Math.floor(a.y)));
          var c = b.scroll.x * this.scrollFactor.x;
          b = b.scroll.y * this.scrollFactor.y;
          null == b && (b = 0);
          null == c && (c = 0);
          var d = a;
          d.set_x(d.x - c);
          d = a;
          d.set_y(d.y - b);
          return a;
        },
        getPosition: function (a) {
          null == a && ((a = U._pool.get().set(0, 0)), (a._inPool = !1));
          return a.set(this.x, this.y);
        },
        getMidpoint: function (a) {
          null == a && ((a = U._pool.get().set(0, 0)), (a._inPool = !1));
          return a.set(
            this.x + 0.5 * this.get_width(),
            this.y + 0.5 * this.get_height()
          );
        },
        isOnScreen: function (a) {
          null == a && (a = p.camera);
          this.getScreenPosition(this._point, a);
          var b = this._point,
            c = this.get_width(),
            d = this.get_height();
          null == d && (d = 0);
          null == c && (c = 0);
          return b.x + c > a.viewOffsetX &&
            b.x < a.viewOffsetWidth &&
            b.y + d > a.viewOffsetY
            ? b.y < a.viewOffsetHeight
            : !1;
        },
        isPixelPerfectRender: function (a) {
          null == a && (a = p.camera);
          return null == this.pixelPerfectRender
            ? a.pixelPerfectRender
            : this.pixelPerfectRender;
        },
        screenCenter: function (a) {
          null == a && (a = od.XY);
          a != od.Y && this.set_x(p.width / 2 - this.get_width() / 2);
          a != od.X && this.set_y(p.height / 2 - this.get_height() / 2);
          return this;
        },
        setPosition: function (a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          this.set_x(a);
          this.set_y(b);
        },
        toString: function () {
          var a = this.x,
            b = Sb._pool.get();
          b.label = "x";
          b.value = a;
          a = this.y;
          var c = Sb._pool.get();
          c.label = "y";
          c.value = a;
          a = this.get_width();
          var d = Sb._pool.get();
          d.label = "w";
          d.value = a;
          a = this.get_height();
          var e = Sb._pool.get();
          e.label = "h";
          e.value = a;
          a = this.visible;
          var f = Sb._pool.get();
          f.label = "visible";
          f.value = a;
          a = this.velocity;
          var h = Sb._pool.get();
          h.label = "velocity";
          h.value = a;
          return yb.getDebugString([b, c, d, e, f, h]);
        },
        set_x: function (a) {
          return (this.x = a);
        },
        set_y: function (a) {
          return (this.y = a);
        },
        set_width: function (a) {
          return (this.width = a);
        },
        set_height: function (a) {
          return (this.height = a);
        },
        get_width: function () {
          return this.width;
        },
        get_height: function () {
          return this.height;
        },
        set_solid: function (a) {
          this.set_allowCollisions(a ? 4369 : 0);
          return a;
        },
        set_angle: function (a) {
          return (this.angle = a);
        },
        set_moves: function (a) {
          return (this.moves = a);
        },
        set_immovable: function (a) {
          return (this.immovable = a);
        },
        set_allowCollisions: function (a) {
          return (this.allowCollisions = a);
        },
        __class__: L,
        __properties__: r(ca.prototype.__properties__, {
          set_solid: "set_solid",
          set_allowCollisions: "set_allowCollisions",
          set_immovable: "set_immovable",
          set_moves: "set_moves",
          set_angle: "set_angle",
          set_height: "set_height",
          get_height: "get_height",
          set_width: "set_width",
          get_width: "get_width",
          set_y: "set_y",
          set_x: "set_x",
        }),
      });
      var H = function (a, b, c) {
        null == b && (b = 0);
        null == a && (a = 0);
        this._angleChanged = !0;
        this._cosAngle = 1;
        this._sinAngle = 0;
        this._facingHorizontalMult = this._facingVerticalMult = 1;
        this.useColorTransform = !1;
        this.color = 16777215;
        this.flipX = this.flipY = !1;
        this.alpha = 1;
        this.frameWidth =
          this.frameHeight =
          this.numFrames =
          this.bakedRotationAngle =
            0;
        this.dirty = !0;
        this.antialiasing = !1;
        this.useFramePixels = !0;
        L.call(this, a, b);
        this.set_useFramePixels(p.renderBlit);
        null != c && this.loadGraphic(c);
      };
      g["flixel.FlxSprite"] = H;
      H.__name__ = "flixel.FlxSprite";
      H.__super__ = L;
      H.prototype = r(L.prototype, {
        initVars: function () {
          L.prototype.initVars.call(this);
          this.animation = new oi(this);
          this._flashPoint = new Ra();
          this._flashRect = new ma();
          this._flashRect2 = new ma();
          this._flashPointZero = new Ra();
          var a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.offset = a;
          a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.origin = a;
          var b = (a = 1);
          null == b && (b = 0);
          null == a && (a = 0);
          a = U._pool.get().set(a, b);
          a._inPool = !1;
          this.scale = a;
          a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this._halfSize = a;
          this._matrix = new $f();
          this.colorTransform = new Bb();
        },
        destroy: function () {
          L.prototype.destroy.call(this);
          this.animation = Z.destroy(this.animation);
          this.offset = Z.put(this.offset);
          this.origin = Z.put(this.origin);
          this.scale = Z.put(this.scale);
          this._halfSize = Z.put(this._halfSize);
          this.framePixels = Z.dispose(this.framePixels);
          this.colorTransform =
            this._matrix =
            this._flashPointZero =
            this._flashRect2 =
            this._flashRect =
            this._flashPoint =
              null;
          this.set_blend(null);
          this.set_frames(null);
          this.set_graphic(null);
          this._frame = Z.destroy(this._frame);
          this._frameGraphic = Z.destroy(this._frameGraphic);
          this.shader = null;
        },
        loadGraphicFromSprite: function (a) {
          this.set_frames(a.frames);
          this.bakedRotationAngle = a.bakedRotationAngle;
          0 < this.bakedRotationAngle &&
            (this.set_width(a.get_width()),
            this.set_height(a.get_height()),
            this.centerOffsets());
          this.set_antialiasing(a.antialiasing);
          this.animation.copyFrom(a.animation);
          this.graphicLoaded();
          this.set_clipRect(a.clipRect);
          return this;
        },
        loadGraphic: function (a, b, c, d, e, f) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          a = p.bitmap.add(a, e, f);
          if (null == a) return this;
          0 == c &&
            ((c = b ? a.height : a.width), c > a.width && (c = a.width));
          0 == d && ((d = b ? c : a.height), d > a.height && (d = a.height));
          b
            ? ((b = c),
              null == d && (d = 0),
              null == b && (b = 0),
              (d = U._pool.get().set(b, d)),
              (d._inPool = !1),
              this.set_frames(Bf.fromGraphic(a, d)))
            : this.set_frames(a.get_imageFrame());
          return this;
        },
        makeGraphic: function (a, b, c, d, e) {
          null == d && (d = !1);
          null == c && (c = -1);
          a = p.bitmap.create(a, b, c, d, e);
          this.set_frames(a.get_imageFrame());
          return this;
        },
        graphicLoaded: function () {},
        setGraphicSize: function (a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          if (!(0 >= a && 0 >= b)) {
            var c = a / this.frameWidth,
              d = b / this.frameHeight;
            this.scale.set(c, d);
            0 >= a ? this.scale.set_x(d) : 0 >= b && this.scale.set_y(c);
          }
        },
        updateHitbox: function () {
          this.set_width(Math.abs(this.scale.x) * this.frameWidth);
          this.set_height(Math.abs(this.scale.y) * this.frameHeight);
          this.offset.set(
            -0.5 * (this.get_width() - this.frameWidth),
            -0.5 * (this.get_height() - this.frameHeight)
          );
          this.origin.set(0.5 * this.frameWidth, 0.5 * this.frameHeight);
        },
        resetHelpers: function () {
          null != this.frame &&
            ((this.frameWidth = this.frame.sourceSize.x | 0),
            (this.frameHeight = this.frame.sourceSize.y | 0));
          this._halfSize.set(0.5 * this.frameWidth, 0.5 * this.frameHeight);
          this._flashRect.x = 0;
          this._flashRect.y = 0;
          this._flashRect.width = this.frameWidth;
          this._flashRect.height = this.frameHeight;
          this.set_width(this.frameWidth);
          this.set_height(this.frameHeight);
          this._flashRect2.x = 0;
          this._flashRect2.y = 0;
          null != this.graphic &&
            ((this._flashRect2.width = this.graphic.width),
            (this._flashRect2.height = this.graphic.height));
          this.origin.set(0.5 * this.frameWidth, 0.5 * this.frameHeight);
          p.renderBlit && ((this.dirty = !0), this.updateFramePixels());
        },
        update: function (a) {
          L.prototype.update.call(this, a);
          this.updateAnimation(a);
        },
        updateAnimation: function (a) {
          this.animation.update(a);
        },
        checkEmptyFrame: function () {
          null == this._frame &&
            this.loadGraphic("flixel/images/logo/default.png");
        },
        draw: function () {
          this.checkEmptyFrame();
          if (0 != this.alpha && 2 != this._frame.type) {
            this.dirty && this.calcFrame(this.useFramePixels);
            for (var a = 0, b = this.get_cameras(); a < b.length; ) {
              var c = b[a];
              ++a;
              c.visible &&
                c.exists &&
                this.isOnScreen(c) &&
                (this.getScreenPosition(this._point, c).subtractPoint(
                  this.offset
                ),
                this.isSimpleRender(c)
                  ? this.drawSimple(c)
                  : this.drawComplex(c));
            }
          }
        },
        drawSimple: function (a) {
          if (this.isPixelPerfectRender(a)) {
            var b = this._point;
            b.set_x(Math.floor(b.x));
            b.set_y(Math.floor(b.y));
          }
          b = this._point;
          var c = this._flashPoint;
          null == c && (c = new Ra());
          c.x = b.x;
          c.y = b.y;
          a.copyPixels(
            this._frame,
            this.framePixels,
            this._flashRect,
            this._flashPoint,
            this.colorTransform,
            this.blend,
            this.antialiasing
          );
        },
        drawComplex: function (a) {
          var b = this.flipX != this._frame.flipX,
            c = this.flipY != this._frame.flipY;
          this._frame.prepareMatrix(
            this._matrix,
            0,
            null != this.animation._curAnim
              ? b != this.animation._curAnim.flipX
              : b,
            null != this.animation._curAnim
              ? c != this.animation._curAnim.flipY
              : c
          );
          this._matrix.translate(-this.origin.x, -this.origin.y);
          this._matrix.scale(this.scale.x, this.scale.y);
          if (
            0 >= this.bakedRotationAngle &&
            (this._angleChanged &&
              ((b = (Math.PI / 180) * this.angle),
              (this._sinAngle = Math.sin(b)),
              (this._cosAngle = Math.cos(b)),
              (this._angleChanged = !1)),
            0 != this.angle)
          ) {
            b = this._matrix;
            c = this._cosAngle;
            var d = this._sinAngle,
              e = b.a * c - b.b * d;
            b.b = b.a * d + b.b * c;
            b.a = e;
            e = b.c * c - b.d * d;
            b.d = b.c * d + b.d * c;
            b.c = e;
            e = b.tx * c - b.ty * d;
            b.ty = b.tx * d + b.ty * c;
            b.tx = e;
          }
          b = this._point;
          c = this.origin.x;
          d = this.origin.y;
          null == d && (d = 0);
          null == c && (c = 0);
          e = b;
          e.set_x(e.x + c);
          e = b;
          e.set_y(e.y + d);
          this._matrix.translate(this._point.x, this._point.y);
          this.isPixelPerfectRender(a) &&
            ((this._matrix.tx = Math.floor(this._matrix.tx)),
            (this._matrix.ty = Math.floor(this._matrix.ty)));
          a.drawPixels(
            this._frame,
            this.framePixels,
            this._matrix,
            this.colorTransform,
            this.blend,
            this.antialiasing,
            this.shader
          );
        },
        stamp: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          a.drawFrame();
          if (null == this.graphic || null == a.graphic)
            throw C.thrown(
              "Cannot stamp to or from a FlxSprite with no graphics."
            );
          var d = a.framePixels;
          this.isSimpleRenderBlit()
            ? ((this._flashPoint.x = b + this.frame.frame.x),
              (this._flashPoint.y = c + this.frame.frame.y),
              (this._flashRect2.width = d.width),
              (this._flashRect2.height = d.height),
              this.graphic.bitmap.copyPixels(
                d,
                this._flashRect2,
                this._flashPoint,
                null,
                null,
                !0
              ),
              (this._flashRect2.width = this.graphic.bitmap.width),
              (this._flashRect2.height = this.graphic.bitmap.height))
            : (this._matrix.identity(),
              this._matrix.translate(-a.origin.x, -a.origin.y),
              this._matrix.scale(a.scale.x, a.scale.y),
              0 != a.angle && this._matrix.rotate((Math.PI / 180) * a.angle),
              this._matrix.translate(
                b + this.frame.frame.x + a.origin.x,
                c + this.frame.frame.y + a.origin.y
              ),
              this.graphic.bitmap.draw(
                d,
                this._matrix,
                null,
                a.blend,
                null,
                a.antialiasing
              ));
          p.renderBlit && ((this.dirty = !0), this.calcFrame());
        },
        drawFrame: function (a) {
          null == a && (a = !1);
          if (p.renderBlit) {
            if (a || this.dirty) (this.dirty = !0), this.calcFrame();
          } else (this.dirty = !0), this.calcFrame(!0);
        },
        centerOffsets: function (a) {
          null == a && (a = !1);
          this.offset.set_x(0.5 * (this.frameWidth - this.get_width()));
          this.offset.set_y(0.5 * (this.frameHeight - this.get_height()));
          a &&
            ((a = this),
            a.set_x(a.x + this.offset.x),
            (a = this),
            a.set_y(a.y + this.offset.y));
        },
        updateColorTransform: function () {
          null == this.colorTransform && (this.colorTransform = new Bb());
          (this.useColorTransform = 1 != this.alpha || 16777215 != this.color)
            ? ve.setMultipliers(
                this.colorTransform,
                ((this.color >> 16) & 255) / 255,
                ((this.color >> 8) & 255) / 255,
                (this.color & 255) / 255,
                this.alpha
              )
            : ve.setMultipliers(this.colorTransform, 1, 1, 1, 1);
          this.dirty = !0;
        },
        calcFrame: function (a) {
          null == a && (a = !1);
          this.checkEmptyFrame();
          (p.renderTile && !a) || this.updateFramePixels();
        },
        updateFramePixels: function () {
          if (null == this._frame || !this.dirty) return this.framePixels;
          if (p.renderTile && null != this._frameGraphic)
            return (this.dirty = !1), this.framePixels;
          var a = this.flipX != this._frame.flipX;
          a =
            null != this.animation._curAnim
              ? a != this.animation._curAnim.flipX
              : a;
          var b = this.flipY != this._frame.flipY;
          b =
            null != this.animation._curAnim
              ? b != this.animation._curAnim.flipY
              : b;
          this.framePixels =
            a || b || 0 != this._frame.type
              ? this._frame.paintRotatedAndFlipped(
                  this.framePixels,
                  this._flashPointZero,
                  0,
                  a,
                  b,
                  !1,
                  !0
                )
              : this._frame.paint(
                  this.framePixels,
                  this._flashPointZero,
                  !1,
                  !0
                );
          this.useColorTransform &&
            this.framePixels.colorTransform(
              this._flashRect,
              this.colorTransform
            );
          p.renderTile &&
            this.useFramePixels &&
            ((this._frameGraphic = Z.destroy(this._frameGraphic)),
            (this._frameGraphic = Eb.fromBitmapData(
              this.framePixels,
              !1,
              null,
              !1
            )),
            (this._frame = this._frameGraphic
              .get_imageFrame()
              .get_frame()
              .copyTo(this._frame)));
          this.dirty = !1;
          return this.framePixels;
        },
        getGraphicMidpoint: function (a) {
          null == a && ((a = U._pool.get().set(0, 0)), (a._inPool = !1));
          return a.set(
            this.x + 0.5 * this.frameWidth,
            this.y + 0.5 * this.frameHeight
          );
        },
        isOnScreen: function (a) {
          null == a && (a = p.camera);
          var b = this.x - this.offset.x - a.scroll.x * this.scrollFactor.x,
            c = this.y - this.offset.y - a.scroll.y * this.scrollFactor.y;
          if (
            (0 == this.angle || 0 < this.bakedRotationAngle) &&
            1 == this.scale.x &&
            1 == this.scale.y
          ) {
            this._point.set(b, c);
            b = this._point;
            c = this.frameWidth;
            var d = this.frameHeight;
            null == d && (d = 0);
            null == c && (c = 0);
            return b.x + c > a.viewOffsetX &&
              b.x < a.viewOffsetWidth &&
              b.y + d > a.viewOffsetY
              ? b.y < a.viewOffsetHeight
              : !1;
          }
          var e = this._halfSize.x,
            f = this._halfSize.y;
          d = this.origin.x;
          d != e && (e = Math.max(Math.abs(this.frameWidth - d), Math.abs(d)));
          var h = this.origin.y;
          h != f && (f = Math.max(Math.abs(this.frameHeight - h), Math.abs(h)));
          e *= Math.abs(this.scale.x);
          f *= Math.abs(this.scale.y);
          f = Math.max(e, f);
          f *= 1.41421356237;
          e = 2 * f;
          this._point.set(b + (d - f), c + (h - f));
          b = this._point;
          d = c = e;
          null == d && (d = 0);
          null == c && (c = 0);
          return b.x + c > a.viewOffsetX &&
            b.x < a.viewOffsetWidth &&
            b.y + d > a.viewOffsetY
            ? b.y < a.viewOffsetHeight
            : !1;
        },
        isSimpleRender: function (a) {
          return p.renderTile ? !1 : this.isSimpleRenderBlit(a);
        },
        isSimpleRenderBlit: function (a) {
          var b =
            (0 == this.angle || 0 < this.bakedRotationAngle) &&
            1 == this.scale.x &&
            1 == this.scale.y &&
            null == this.blend;
          return (b =
            b &&
            (null != a
              ? this.isPixelPerfectRender(a)
              : this.pixelPerfectRender));
        },
        get_pixels: function () {
          return null == this.graphic ? null : this.graphic.bitmap;
        },
        set_pixels: function (a) {
          var b = p.bitmap.findKeyForBitmap(a);
          null == b
            ? ((b = p.bitmap.getUniqueKey()),
              this.set_graphic(p.bitmap.add(a, !1, b)))
            : this.set_graphic(p.bitmap._cache.h[b]);
          this.set_frames(this.graphic.get_imageFrame());
          return a;
        },
        set_frame: function (a) {
          this.frame = a;
          if (null != this.frame)
            null != this.frame &&
              ((this.frameWidth = this.frame.sourceSize.x | 0),
              (this.frameHeight = this.frame.sourceSize.y | 0)),
              this._halfSize.set(0.5 * this.frameWidth, 0.5 * this.frameHeight),
              (this._flashRect.x = 0),
              (this._flashRect.y = 0),
              (this._flashRect.width = this.frameWidth),
              (this._flashRect.height = this.frameHeight),
              (this.dirty = !0);
          else if (
            null != this.frames &&
            null != this.frames.frames &&
            0 < this.numFrames
          )
            (this.frame = this.frames.frames[0]), (this.dirty = !0);
          else return null;
          p.renderTile && (this._frameGraphic = Z.destroy(this._frameGraphic));
          this._frame =
            null != this.clipRect
              ? this.frame.clipTo(this.clipRect, this._frame)
              : this.frame.copyTo(this._frame);
          return this.frame;
        },
        set_alpha: function (a) {
          if (this.alpha == a) return a;
          a = 0 > a ? 0 : a;
          this.alpha = 1 < a ? 1 : a;
          this.updateColorTransform();
          return this.alpha;
        },
        set_color: function (a) {
          if (this.color == a) return a;
          this.color = a;
          this.updateColorTransform();
          return this.color;
        },
        set_angle: function (a) {
          var b = this.angle != a;
          a = L.prototype.set_angle.call(this, a);
          b && ((this._angleChanged = !0), this.animation.update(0));
          return a;
        },
        set_blend: function (a) {
          return (this.blend = a);
        },
        set_graphic: function (a) {
          var b = this.graphic;
          if (this.graphic != a && null != a) {
            var c = a;
            c.set_useCount(c.get_useCount() + 1);
          }
          null != b &&
            b != a &&
            ((c = b), c.set_useCount(c.get_useCount() - 1));
          return (this.graphic = a);
        },
        set_clipRect: function (a) {
          null != a
            ? ((a.x = Math.round(a.x)),
              (a.y = Math.round(a.y)),
              (a.width = Math.round(a.width)),
              (a.height = Math.round(a.height)),
              (this.clipRect = a))
            : (this.clipRect = null);
          null != this.frames &&
            this.set_frame(this.frames.frames[this.animation.frameIndex]);
          return a;
        },
        set_frames: function (a) {
          null != this.animation && this.animation.destroyAnimations();
          null != a
            ? (this.set_graphic(a.parent),
              (this.frames = a),
              this.set_frame(this.frames.frames[0]),
              (this.numFrames = this.frames.frames.length),
              this.resetHelpers(),
              (this.bakedRotationAngle = 0),
              this.animation.set_frameIndex(0),
              this.graphicLoaded())
            : ((this.frames = null),
              this.set_frame(null),
              this.set_graphic(null));
          return a;
        },
        set_flipX: function (a) {
          p.renderTile && (this._facingHorizontalMult = a ? -1 : 1);
          this.dirty = this.flipX != a || this.dirty;
          return (this.flipX = a);
        },
        set_flipY: function (a) {
          p.renderTile && (this._facingVerticalMult = a ? -1 : 1);
          this.dirty = this.flipY != a || this.dirty;
          return (this.flipY = a);
        },
        set_antialiasing: function (a) {
          return (this.antialiasing = a);
        },
        set_useFramePixels: function (a) {
          return p.renderTile
            ? (a != this.useFramePixels &&
                ((this.useFramePixels = a),
                this.set_frame(this.frame),
                a && this.updateFramePixels()),
              a)
            : (this.useFramePixels = !0);
        },
        __class__: H,
        __properties__: r(L.prototype.__properties__, {
          set_clipRect: "set_clipRect",
          set_color: "set_color",
          set_blend: "set_blend",
          set_flipY: "set_flipY",
          set_flipX: "set_flipX",
          set_alpha: "set_alpha",
          set_graphic: "set_graphic",
          set_frames: "set_frames",
          set_frame: "set_frame",
          set_pixels: "set_pixels",
          get_pixels: "get_pixels",
          set_antialiasing: "set_antialiasing",
          set_useFramePixels: "set_useFramePixels",
        }),
      });
      var Q = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.directAlpha = this._skipTransformChildren = !1;
        H.call(this, a, b);
        this.group = new nb(c);
        this._sprites = this.group.members;
      };
      g["flixel.group.FlxTypedSpriteGroup"] = Q;
      Q.__name__ = "flixel.group.FlxTypedSpriteGroup";
      Q.__super__ = H;
      Q.prototype = r(H.prototype, {
        transformChildren_flixel_math_FlxRect: function (a, b) {
          if (null != this.group)
            for (var c = 0, d = this._sprites; c < d.length; ) {
              var e = d[c];
              ++c;
              null != e && a(e, b);
            }
        },
        transformChildren_flash_display_BlendMode: function (a, b) {
          if (null != this.group)
            for (var c = 0, d = this._sprites; c < d.length; ) {
              var e = d[c];
              ++c;
              null != e && a(e, b);
            }
        },
        multiTransformChildren_Float: function (a, b) {
          if (null != this.group) {
            var c = a.length;
            if (!(c > b.length))
              for (var d, e = 0, f = this._sprites; e < f.length; ) {
                var h = f[e];
                ++e;
                if (null != h && h.exists)
                  for (var m = 0, n = c; m < n; ) {
                    var da = m++;
                    d = a[da];
                    d(h, b[da]);
                  }
              }
          }
        },
        transformChildren_flixel_math_FlxPoint: function (a, b) {
          if (null != this.group)
            for (var c = 0, d = this._sprites; c < d.length; ) {
              var e = d[c];
              ++c;
              null != e && a(e, b);
            }
        },
        transformChildren_Int: function (a, b) {
          if (null != this.group)
            for (var c = 0, d = this._sprites; c < d.length; ) {
              var e = d[c];
              ++c;
              null != e && a(e, b);
            }
        },
        transformChildren_Float: function (a, b) {
          if (null != this.group)
            for (var c = 0, d = this._sprites; c < d.length; ) {
              var e = d[c];
              ++c;
              null != e && a(e, b);
            }
        },
        transformChildren_Array_flixel_FlxCamera: function (a, b) {
          if (null != this.group)
            for (var c = 0, d = this._sprites; c < d.length; ) {
              var e = d[c];
              ++c;
              null != e && a(e, b);
            }
        },
        transformChildren_Bool: function (a, b) {
          if (null != this.group)
            for (var c = 0, d = this._sprites; c < d.length; ) {
              var e = d[c];
              ++c;
              null != e && a(e, b);
            }
        },
        initVars: function () {
          this.flixelType = 4;
          this.offset = new ag(q(this, this.offsetCallback));
          this.origin = new ag(q(this, this.originCallback));
          this.scale = new ag(q(this, this.scaleCallback));
          this.scrollFactor = new ag(q(this, this.scrollFactorCallback));
          this.scale.set(1, 1);
          this.scrollFactor.set(1, 1);
          var a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.velocity = a;
          a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.acceleration = a;
          a = U._pool.get().set(0, 0);
          a._inPool = !1;
          this.drag = a;
          var b = (a = 1e4);
          null == b && (b = 0);
          null == a && (a = 0);
          a = U._pool.get().set(a, b);
          a._inPool = !1;
          this.maxVelocity = a;
        },
        destroy: function () {
          this.offset = Z.destroy(this.offset);
          this.origin = Z.destroy(this.origin);
          this.scale = Z.destroy(this.scale);
          this.scrollFactor = Z.destroy(this.scrollFactor);
          this.group = Z.destroy(this.group);
          this._sprites = null;
          H.prototype.destroy.call(this);
        },
        isOnScreen: function (a) {
          for (var b = 0, c = this._sprites; b < c.length; ) {
            var d = c[b];
            ++b;
            if (null != d && d.exists && d.visible && d.isOnScreen(a))
              return !0;
          }
          return !1;
        },
        overlapsPoint: function (a, b, c) {
          null == b && (b = !1);
          for (var d = !1, e = 0, f = this._sprites; e < f.length; ) {
            var h = f[e];
            ++e;
            null != h &&
              h.exists &&
              h.visible &&
              (d = d || h.overlapsPoint(a, b, c));
          }
          return d;
        },
        update: function (a) {
          this.group.update(a);
          this.moves && this.updateMotion(a);
        },
        draw: function () {
          this.group.draw();
        },
        add: function (a) {
          this.preAdd(a);
          return this.group.add(a);
        },
        preAdd: function (a) {
          var b = a;
          b.set_x(b.x + this.x);
          b = a;
          b.set_y(b.y + this.y);
          b = a;
          b.set_alpha(b.alpha * this.alpha);
          b = a.scrollFactor;
          var c = this.scrollFactor;
          b.set_x(c.x);
          b.set_y(c.y);
          c._weak && c.put();
          a.set_cameras(this._cameras);
          if (null != this.clipRect)
            if (((b = this.clipRect), null == b)) a.set_clipRect(null);
            else {
              var d = b.x - a.x + this.x,
                e = b.y - a.y + this.y;
              c = b.width;
              var f = b.height;
              null == f && (f = 0);
              null == c && (c = 0);
              null == e && (e = 0);
              null == d && (d = 0);
              b = ya._pool.get();
              null == f && (f = 0);
              null == c && (c = 0);
              null == e && (e = 0);
              null == d && (d = 0);
              b.x = d;
              b.y = e;
              b.width = c;
              b.height = f;
              b._inPool = !1;
              a.set_clipRect(b);
            }
        },
        remove: function (a, b) {
          null == b && (b = !1);
          var c = a;
          c.set_x(c.x - this.x);
          c = a;
          c.set_y(c.y - this.y);
          a.set_cameras(null);
          return this.group.remove(a, b);
        },
        kill: function () {
          H.prototype.kill.call(this);
          this.group.kill();
        },
        revive: function () {
          H.prototype.revive.call(this);
          this.group.revive();
        },
        setPosition: function (a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          var c = a - this.x,
            d = b - this.y;
          this.multiTransformChildren_Float(
            [q(this, this.xTransform), q(this, this.yTransform)],
            [c, d]
          );
          this._skipTransformChildren = !0;
          this.set_x(a);
          this.set_y(b);
          this._skipTransformChildren = !1;
        },
        set_cameras: function (a) {
          this.get_cameras() != a &&
            this.transformChildren_Array_flixel_FlxCamera(
              q(this, this.camerasTransform),
              a
            );
          return H.prototype.set_cameras.call(this, a);
        },
        set_exists: function (a) {
          this.exists != a &&
            this.transformChildren_Bool(q(this, this.existsTransform), a);
          return H.prototype.set_exists.call(this, a);
        },
        set_visible: function (a) {
          this.exists &&
            this.visible != a &&
            this.transformChildren_Bool(q(this, this.visibleTransform), a);
          return H.prototype.set_visible.call(this, a);
        },
        set_active: function (a) {
          this.exists &&
            this.active != a &&
            this.transformChildren_Bool(q(this, this.activeTransform), a);
          return H.prototype.set_active.call(this, a);
        },
        set_alive: function (a) {
          this.alive != a &&
            this.transformChildren_Bool(q(this, this.aliveTransform), a);
          return H.prototype.set_alive.call(this, a);
        },
        set_x: function (a) {
          if (!this._skipTransformChildren && this.exists && this.x != a) {
            var b = a - this.x;
            this.transformChildren_Float(q(this, this.xTransform), b);
          }
          return (this.x = a);
        },
        set_y: function (a) {
          if (!this._skipTransformChildren && this.exists && this.y != a) {
            var b = a - this.y;
            this.transformChildren_Float(q(this, this.yTransform), b);
          }
          return (this.y = a);
        },
        set_angle: function (a) {
          if (this.exists && this.angle != a) {
            var b = a - this.angle;
            this.transformChildren_Float(q(this, this.angleTransform), b);
          }
          return (this.angle = a);
        },
        set_alpha: function (a) {
          a = 0 > a ? 0 : a;
          a = 1 < a ? 1 : a;
          if (this.exists && this.alpha != a) {
            var b = 0 < this.alpha ? a / this.alpha : 0;
            this.directAlpha || 0 == this.alpha
              ? this.transformChildren_Float(
                  q(this, this.directAlphaTransform),
                  a
                )
              : this.transformChildren_Float(q(this, this.alphaTransform), b);
          }
          return (this.alpha = a);
        },
        set_flipX: function (a) {
          this.exists &&
            this.flipX != a &&
            this.transformChildren_Bool(q(this, this.flipXTransform), a);
          return (this.flipX = a);
        },
        set_flipY: function (a) {
          this.exists &&
            this.flipY != a &&
            this.transformChildren_Bool(q(this, this.flipYTransform), a);
          return (this.flipY = a);
        },
        set_moves: function (a) {
          this.exists &&
            this.moves != a &&
            this.transformChildren_Bool(q(this, this.movesTransform), a);
          return (this.moves = a);
        },
        set_immovable: function (a) {
          this.exists &&
            this.immovable != a &&
            this.transformChildren_Bool(q(this, this.immovableTransform), a);
          return (this.immovable = a);
        },
        set_solid: function (a) {
          this.exists &&
            0 < (this.allowCollisions & 4369) != a &&
            this.transformChildren_Bool(q(this, this.solidTransform), a);
          return H.prototype.set_solid.call(this, a);
        },
        set_color: function (a) {
          this.exists &&
            this.color != a &&
            this.transformChildren_Int(q(this, this.gColorTransform), a);
          return (this.color = a);
        },
        set_blend: function (a) {
          this.exists &&
            this.blend != a &&
            this.transformChildren_flash_display_BlendMode(
              q(this, this.blendTransform),
              a
            );
          return (this.blend = a);
        },
        set_clipRect: function (a) {
          this.exists &&
            this.transformChildren_flixel_math_FlxRect(
              q(this, this.clipRectTransform),
              a
            );
          return H.prototype.set_clipRect.call(this, a);
        },
        set_width: function (a) {
          return a;
        },
        get_width: function () {
          if (0 == this.group.length) return 0;
          for (
            var a = Infinity, b = -Infinity, c = 0, d = this._sprites;
            c < d.length;

          ) {
            var e = d[c];
            ++c;
            if (null != e) {
              var f = e.x;
              e = f + e.get_width();
              e > b && (b = e);
              f < a && (a = f);
            }
          }
          return b - a;
        },
        set_height: function (a) {
          return a;
        },
        get_height: function () {
          if (0 == this.group.length) return 0;
          for (
            var a = Infinity, b = -Infinity, c = 0, d = this._sprites;
            c < d.length;

          ) {
            var e = d[c];
            ++c;
            if (null != e) {
              var f = e.y;
              e = f + e.get_height();
              e > b && (b = e);
              f < a && (a = f);
            }
          }
          return b - a;
        },
        xTransform: function (a, b) {
          a.set_x(a.x + b);
        },
        yTransform: function (a, b) {
          a.set_y(a.y + b);
        },
        angleTransform: function (a, b) {
          a.set_angle(a.angle + b);
        },
        alphaTransform: function (a, b) {
          0 != a.alpha || 0 == b
            ? a.set_alpha(a.alpha * b)
            : a.set_alpha(1 / b);
        },
        directAlphaTransform: function (a, b) {
          a.set_alpha(b);
        },
        flipXTransform: function (a, b) {
          a.set_flipX(b);
        },
        flipYTransform: function (a, b) {
          a.set_flipY(b);
        },
        movesTransform: function (a, b) {
          a.set_moves(b);
        },
        gColorTransform: function (a, b) {
          a.set_color(b);
        },
        blendTransform: function (a, b) {
          a.set_blend(b);
        },
        immovableTransform: function (a, b) {
          a.set_immovable(b);
        },
        visibleTransform: function (a, b) {
          a.set_visible(b);
        },
        activeTransform: function (a, b) {
          a.set_active(b);
        },
        solidTransform: function (a, b) {
          a.set_solid(b);
        },
        aliveTransform: function (a, b) {
          a.set_alive(b);
        },
        existsTransform: function (a, b) {
          a.set_exists(b);
        },
        camerasTransform: function (a, b) {
          a.set_cameras(b);
        },
        offsetTransform: function (a, b) {
          a = a.offset;
          a.set_x(b.x);
          a.set_y(b.y);
          b._weak && b.put();
        },
        originTransform: function (a, b) {
          a = a.origin;
          a.set_x(b.x);
          a.set_y(b.y);
          b._weak && b.put();
        },
        scaleTransform: function (a, b) {
          a = a.scale;
          a.set_x(b.x);
          a.set_y(b.y);
          b._weak && b.put();
        },
        scrollFactorTransform: function (a, b) {
          a = a.scrollFactor;
          a.set_x(b.x);
          a.set_y(b.y);
          b._weak && b.put();
        },
        clipRectTransform: function (a, b) {
          if (null == b) a.set_clipRect(null);
          else {
            var c = b.x - a.x + this.x,
              d = b.y - a.y + this.y,
              e = b.width,
              f = b.height;
            null == f && (f = 0);
            null == e && (e = 0);
            null == d && (d = 0);
            null == c && (c = 0);
            b = ya._pool.get();
            null == f && (f = 0);
            null == e && (e = 0);
            null == d && (d = 0);
            null == c && (c = 0);
            b.x = c;
            b.y = d;
            b.width = e;
            b.height = f;
            b._inPool = !1;
            a.set_clipRect(b);
          }
        },
        offsetCallback: function (a) {
          this.transformChildren_flixel_math_FlxPoint(
            q(this, this.offsetTransform),
            a
          );
        },
        originCallback: function (a) {
          this.transformChildren_flixel_math_FlxPoint(
            q(this, this.originTransform),
            a
          );
        },
        scaleCallback: function (a) {
          this.transformChildren_flixel_math_FlxPoint(
            q(this, this.scaleTransform),
            a
          );
        },
        scrollFactorCallback: function (a) {
          this.transformChildren_flixel_math_FlxPoint(
            q(this, this.scrollFactorTransform),
            a
          );
        },
        loadGraphicFromSprite: function (a) {
          return this;
        },
        loadGraphic: function (a, b, c, d, e, f) {
          return this;
        },
        makeGraphic: function (a, b, c, d, e) {
          return this;
        },
        set_pixels: function (a) {
          return a;
        },
        set_frame: function (a) {
          return a;
        },
        get_pixels: function () {
          return null;
        },
        calcFrame: function (a) {},
        resetHelpers: function () {},
        stamp: function (a, b, c) {},
        set_frames: function (a) {
          return a;
        },
        updateColorTransform: function () {},
        __class__: Q,
      });
      var za = function (a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = !1);
        null == c && (c = "");
        this.isBold = !1;
        this.splitWords = [];
        this.xPosResetted = this.lastWasSpace = !1;
        this.yMulti = 1;
        this.text = this._finalText = "";
        this.isMenuItem = !1;
        this.targetY = 0;
        Q.call(this, a, b);
        this.text = this._finalText = c;
        this.isBold = d;
        "" != c && (e ? this.startTypedText() : this.addText());
      };
      g.Alphabet = za;
      za.__name__ = "Alphabet";
      za.__super__ = Q;
      za.prototype = r(Q.prototype, {
        addText: function () {
          this.doSplitWords();
          for (var a = 0, b = 0, c = this.splitWords; b < c.length; ) {
            var d = c[b];
            ++b;
            if (" " == d || "-" == d) this.lastWasSpace = !0;
            if (-1 != qb.alphabet.indexOf(d.toLowerCase())) {
              null != this.lastSprite &&
                (a = this.lastSprite.x + this.lastSprite.get_width());
              this.lastWasSpace && ((a += 40), (this.lastWasSpace = !1));
              var e = new qb(a, 0);
              this.isBold ? e.createBold(d) : e.createLetter(d);
              this.add(e);
              this.lastSprite = e;
            }
          }
        },
        doSplitWords: function () {
          this.splitWords = this._finalText.split("");
        },
        startTypedText: function () {
          var a = this;
          this._finalText = this.text;
          this.doSplitWords();
          var b = 0,
            c = 0,
            d = 0;
          new hc().start(
            0.05,
            function (e) {
              10 == a._finalText.charCodeAt(b) &&
                ((a.yMulti += 1), (a.xPosResetted = !0), (c = 0), (d += 1));
              " " == a.splitWords[b] && (a.lastWasSpace = !0);
              var f = -1 != qb.numbers.indexOf(a.splitWords[b]),
                h = -1 != qb.symbols.indexOf(a.splitWords[b]);
              if (
                -1 != qb.alphabet.indexOf(a.splitWords[b].toLowerCase()) ||
                f ||
                h
              ) {
                null == a.lastSprite || a.xPosResetted
                  ? (a.xPosResetted = !1)
                  : (a.lastSprite.updateHitbox(),
                    (c += a.lastSprite.get_width() + 3));
                a.lastWasSpace && ((c += 20), (a.lastWasSpace = !1));
                var m = new qb(c, 55 * a.yMulti);
                m.row = d;
                a.isBold
                  ? m.createBold(a.splitWords[b])
                  : (f
                      ? m.createNumber(a.splitWords[b])
                      : h
                      ? m.createSymbol(a.splitWords[b])
                      : m.createLetter(a.splitWords[b]),
                    m.set_x(m.x + 90));
                f = 40;
                null == f && (f = 50);
                p.random.float(0, 100) < f &&
                  p.sound.play(M.sound("GF_" + p.random.int(1, 4), null));
                a.add(m);
                a.lastSprite = m;
              }
              b += 1;
              e.time = p.random.float(0.04, 0.09);
            },
            this.splitWords.length
          );
        },
        update: function (a) {
          if (this.isMenuItem) {
            var b = Ye.remapToRange(this.targetY, 0, 1, 0, 1.3),
              c = this.y;
            this.set_y(c + 0.16 * (120 * b + 0.48 * p.height - c));
            c = this.x;
            this.set_x(c + 0.16 * (20 * this.targetY + 90 - c));
          }
          Q.prototype.update.call(this, a);
        },
        __class__: za,
      });
      var qb = function (a, b) {
        this.row = 0;
        H.call(this, a, b);
        a = Sa.fromSparrow(
          M.getPath("images/alphabet.png", "IMAGE", null),
          M.getPath("images/alphabet.xml", "TEXT", null)
        );
        this.set_frames(a);
        this.set_antialiasing(!0);
      };
      g.AlphaCharacter = qb;
      qb.__name__ = "AlphaCharacter";
      qb.__super__ = H;
      qb.prototype = r(H.prototype, {
        createBold: function (a) {
          this.animation.addByPrefix(a, a.toUpperCase() + " bold", 24);
          this.animation.play(a);
          this.updateHitbox();
        },
        createLetter: function (a) {
          var b = "lowercase";
          a.toLowerCase() != a && (b = "capital");
          this.animation.addByPrefix(a, a + " " + b, 24);
          this.animation.play(a);
          this.updateHitbox();
          this.set_y(110 - this.get_height());
          this.set_y(this.y + 60 * this.row);
        },
        createNumber: function (a) {
          this.animation.addByPrefix(a, a, 24);
          this.animation.play(a);
          this.updateHitbox();
        },
        createSymbol: function (a) {
          switch (a) {
            case "!":
              this.animation.addByPrefix(a, "exclamation point", 24);
              this.animation.play(a);
              break;
            case "'":
              this.animation.addByPrefix(a, "apostraphie", 24);
              this.animation.play(a);
              a = this;
              a.set_y(a.y);
              break;
            case ".":
              this.animation.addByPrefix(a, "period", 24);
              this.animation.play(a);
              a = this;
              a.set_y(a.y + 50);
              break;
            case "?":
              this.animation.addByPrefix(a, "question mark", 24),
                this.animation.play(a);
          }
          this.updateHitbox();
        },
        __class__: qb,
      });
      var Y = function () {};
      g["lime.app.IModule"] = Y;
      Y.__name__ = "lime.app.IModule";
      Y.__isInterface__ = !0;
      Y.prototype = { __class__: Y };
      var wa = function () {
        this.onExit = new bg();
      };
      g["lime.app.Module"] = wa;
      wa.__name__ = "lime.app.Module";
      wa.__interfaces__ = [Y];
      wa.prototype = { __registerLimeModule: function (a) {}, __class__: wa };
      var kb = function (a) {
        this.gameDeviceCache = new lc();
        this.parent = a;
        this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
        this.framePeriod = -1;
        Ag.init();
        this.accelerometer = Gd.registerSensor(jn.ACCELEROMETER, 0);
      };
      g["lime._internal.backend.html5.HTML5Application"] = kb;
      kb.__name__ = "lime._internal.backend.html5.HTML5Application";
      kb.prototype = {
        convertKeyCode: function (a) {
          if (65 <= a && 90 >= a) return a + 32;
          switch (a) {
            case 12:
              return 1073741980;
            case 16:
              return 1073742049;
            case 17:
              return 1073742048;
            case 18:
              return 1073742050;
            case 19:
              return 1073741896;
            case 20:
              return 1073741881;
            case 33:
              return 1073741899;
            case 34:
              return 1073741902;
            case 35:
              return 1073741901;
            case 36:
              return 1073741898;
            case 37:
              return 1073741904;
            case 38:
              return 1073741906;
            case 39:
              return 1073741903;
            case 40:
              return 1073741905;
            case 41:
              return 1073741943;
            case 43:
              return 1073741940;
            case 44:
              return 1073741894;
            case 45:
              return 1073741897;
            case 46:
              return 127;
            case 91:
              return 1073742051;
            case 92:
              return 1073742055;
            case 93:
              return 1073742055;
            case 95:
              return 1073742106;
            case 96:
              return 1073741922;
            case 97:
              return 1073741913;
            case 98:
              return 1073741914;
            case 99:
              return 1073741915;
            case 100:
              return 1073741916;
            case 101:
              return 1073741917;
            case 102:
              return 1073741918;
            case 103:
              return 1073741919;
            case 104:
              return 1073741920;
            case 105:
              return 1073741921;
            case 106:
              return 1073741909;
            case 107:
              return 1073741911;
            case 108:
              return 1073741923;
            case 109:
              return 1073741910;
            case 110:
              return 1073741923;
            case 111:
              return 1073741908;
            case 112:
              return 1073741882;
            case 113:
              return 1073741883;
            case 114:
              return 1073741884;
            case 115:
              return 1073741885;
            case 116:
              return 1073741886;
            case 117:
              return 1073741887;
            case 118:
              return 1073741888;
            case 119:
              return 1073741889;
            case 120:
              return 1073741890;
            case 121:
              return 1073741891;
            case 122:
              return 1073741892;
            case 123:
              return 1073741893;
            case 124:
              return 1073741928;
            case 125:
              return 1073741929;
            case 126:
              return 1073741930;
            case 127:
              return 1073741931;
            case 128:
              return 1073741932;
            case 129:
              return 1073741933;
            case 130:
              return 1073741934;
            case 131:
              return 1073741935;
            case 132:
              return 1073741936;
            case 133:
              return 1073741937;
            case 134:
              return 1073741938;
            case 135:
              return 1073741939;
            case 144:
              return 1073741907;
            case 145:
              return 1073741895;
            case 160:
              return 94;
            case 161:
              return 33;
            case 163:
              return 35;
            case 164:
              return 36;
            case 166:
              return 1073742094;
            case 167:
              return 1073742095;
            case 168:
              return 1073742097;
            case 169:
              return 41;
            case 170:
              return 42;
            case 171:
              return 96;
            case 172:
              return 1073741898;
            case 173:
              return 45;
            case 174:
              return 1073741953;
            case 175:
              return 1073741952;
            case 176:
              return 1073742082;
            case 177:
              return 1073742083;
            case 178:
              return 1073742084;
            case 179:
              return 1073742085;
            case 180:
              return 1073742089;
            case 181:
              return 1073742086;
            case 182:
              return 1073741953;
            case 183:
              return 1073741952;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 193:
              return 63;
            case 194:
              return 1073741923;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
            case 223:
              return 96;
            case 224:
              return 1073742051;
            case 226:
              return 92;
          }
          return a;
        },
        exec: function () {
          window.addEventListener("keydown", q(this, this.handleKeyEvent), !1);
          window.addEventListener("keyup", q(this, this.handleKeyEvent), !1);
          window.addEventListener("focus", q(this, this.handleWindowEvent), !1);
          window.addEventListener("blur", q(this, this.handleWindowEvent), !1);
          window.addEventListener(
            "resize",
            q(this, this.handleWindowEvent),
            !1
          );
          window.addEventListener(
            "beforeunload",
            q(this, this.handleWindowEvent),
            !1
          );
          window.addEventListener(
            "devicemotion",
            q(this, this.handleSensorEvent),
            !1
          );
          CanvasRenderingContext2D.prototype.isPointInStroke ||
            (CanvasRenderingContext2D.prototype.isPointInStroke = function (
              a,
              b,
              c
            ) {
              return !1;
            });
          CanvasRenderingContext2D.prototype.isPointInPath ||
            (CanvasRenderingContext2D.prototype.isPointInPath = function (
              a,
              b,
              c
            ) {
              return !1;
            });
          0 == "performance" in window && (window.performance = {});
          if (0 == "now" in window.performance) {
            var a = Date.now();
            performance.timing &&
              performance.timing.navigationStart &&
              (a = performance.timing.navigationStart);
            window.performance.now = function () {
              return Date.now() - a;
            };
          }
          for (
            var b = 0, c = ["ms", "moz", "webkit", "o"], d = 0;
            d < c.length && !window.requestAnimationFrame;
            ++d
          )
            (window.requestAnimationFrame =
              window[c[d] + "RequestAnimationFrame"]),
              (window.cancelAnimationFrame =
                window[c[d] + "CancelAnimationFrame"] ||
                window[c[d] + "CancelRequestAnimationFrame"]);
          window.requestAnimationFrame ||
            (window.requestAnimationFrame = function (a, c) {
              var d = new Date().getTime(),
                e = Math.max(0, 16 - (d - b));
              c = window.setTimeout(function () {
                a(d + e);
              }, e);
              b = d + e;
              return c;
            });
          window.cancelAnimationFrame ||
            (window.cancelAnimationFrame = function (a) {
              clearTimeout(a);
            });
          window.requestAnimFrame = window.requestAnimationFrame;
          this.lastUpdate = new Date().getTime();
          this.handleApplicationEvent();
          return 0;
        },
        exit: function () {},
        handleApplicationEvent: function (a) {
          a = 0;
          for (var b = this.parent.__windows; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__backend.updateSize();
          }
          this.updateGameDevices();
          this.currentUpdate = new Date().getTime();
          if (this.currentUpdate >= this.nextUpdate) {
            this.deltaTime = this.currentUpdate - this.lastUpdate;
            a = 0;
            for (b = this.parent.__windows; a < b.length; )
              (c = b[a]),
                ++a,
                this.parent.onUpdate.dispatch(this.deltaTime | 0),
                null != c.context && c.onRender.dispatch(c.context);
            this.nextUpdate =
              0 > this.framePeriod
                ? this.currentUpdate
                : this.currentUpdate -
                  (this.currentUpdate % this.framePeriod) +
                  this.framePeriod;
            this.lastUpdate = this.currentUpdate;
          }
          window.requestAnimationFrame(q(this, this.handleApplicationEvent));
        },
        handleKeyEvent: function (a) {
          if (null != this.parent.__window) {
            var b = this.convertKeyCode(
                null != a.keyCode ? a.keyCode : a.which
              ),
              c =
                (a.shiftKey ? 3 : 0) |
                (a.ctrlKey ? 192 : 0) |
                (a.altKey ? 768 : 0) |
                (a.metaKey ? 3072 : 0);
            "keydown" == a.type
              ? (this.parent.__window.onKeyDown.dispatch(b, c),
                this.parent.__window.onKeyDown.canceled &&
                  a.cancelable &&
                  a.preventDefault())
              : (this.parent.__window.onKeyUp.dispatch(b, c),
                this.parent.__window.onKeyUp.canceled &&
                  a.cancelable &&
                  a.preventDefault());
          }
        },
        handleSensorEvent: function (a) {
          this.accelerometer.onUpdate.dispatch(
            a.accelerationIncludingGravity.x,
            a.accelerationIncludingGravity.y,
            a.accelerationIncludingGravity.z
          );
        },
        handleWindowEvent: function (a) {
          if (null != this.parent.__window)
            switch (a.type) {
              case "blur":
                this.hidden ||
                  (this.parent.__window.onFocusOut.dispatch(),
                  this.parent.__window.onDeactivate.dispatch(),
                  (this.hidden = !0));
                break;
              case "focus":
                this.hidden &&
                  (this.parent.__window.onFocusIn.dispatch(),
                  this.parent.__window.onActivate.dispatch(),
                  (this.hidden = !1));
                break;
              case "resize":
                this.parent.__window.__backend.handleResizeEvent(a);
                break;
              case "visibilitychange":
                window.document.hidden
                  ? this.hidden ||
                    (this.parent.__window.onFocusOut.dispatch(),
                    this.parent.__window.onDeactivate.dispatch(),
                    (this.hidden = !0))
                  : this.hidden &&
                    (this.parent.__window.onFocusIn.dispatch(),
                    this.parent.__window.onActivate.dispatch(),
                    (this.hidden = !1));
            }
        },
        updateGameDevices: function () {
          var a = cc.__getDeviceData();
          if (null != a)
            for (var b, c, d, e, f, h = 0, m = a.length; h < m; )
              if (((b = h++), (e = a[b]), null != e)) {
                if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
                  f = new Tk();
                  f.id = b;
                  f.connected = e.connected;
                  c = 0;
                  for (d = e.buttons.length; c < d; ) {
                    var n = c++;
                    f.buttons.push(e.buttons[n].value);
                  }
                  c = 0;
                  for (d = e.axes.length; c < d; )
                    (n = c++), f.axes.push(e.axes[n]);
                  "standard" == e.mapping && (f.isGamepad = !0);
                  this.gameDeviceCache.h[b] = f;
                  e.connected &&
                    (cc.__connect(b), f.isGamepad && mc.__connect(b));
                }
                f = this.gameDeviceCache.h[b];
                d = cc.devices.h[b];
                c = mc.devices.h[b];
                if (e.connected) {
                  for (var da = 0, p = e.buttons.length; da < p; ) {
                    var k = da++;
                    n = e.buttons[k].value;
                    if (n != f.buttons[k]) {
                      if (6 == k)
                        d.onAxisMove.dispatch(e.axes.length, n),
                          null != c && c.onAxisMove.dispatch(4, n);
                      else if (7 == k)
                        d.onAxisMove.dispatch(e.axes.length + 1, n),
                          null != c && c.onAxisMove.dispatch(5, n);
                      else if (
                        (0 < n
                          ? d.onButtonDown.dispatch(k)
                          : d.onButtonUp.dispatch(k),
                        null != c)
                      ) {
                        switch (k) {
                          case 0:
                            b = 0;
                            break;
                          case 1:
                            b = 1;
                            break;
                          case 2:
                            b = 2;
                            break;
                          case 3:
                            b = 3;
                            break;
                          case 4:
                            b = 9;
                            break;
                          case 5:
                            b = 10;
                            break;
                          case 8:
                            b = 4;
                            break;
                          case 9:
                            b = 6;
                            break;
                          case 10:
                            b = 7;
                            break;
                          case 11:
                            b = 8;
                            break;
                          case 12:
                            b = 11;
                            break;
                          case 13:
                            b = 12;
                            break;
                          case 14:
                            b = 13;
                            break;
                          case 15:
                            b = 14;
                            break;
                          case 16:
                            b = 5;
                            break;
                          default:
                            continue;
                        }
                        0 < n
                          ? c.onButtonDown.dispatch(b)
                          : c.onButtonUp.dispatch(b);
                      }
                      f.buttons[k] = n;
                    }
                  }
                  b = 0;
                  for (n = e.axes.length; b < n; )
                    (da = b++),
                      e.axes[da] != f.axes[da] &&
                        (d.onAxisMove.dispatch(da, e.axes[da]),
                        null != c && c.onAxisMove.dispatch(da, e.axes[da]),
                        (f.axes[da] = e.axes[da]));
                } else
                  f.connected &&
                    ((f.connected = !1),
                    cc.__disconnect(b),
                    mc.__disconnect(b));
              }
        },
        __class__: kb,
      };
      var ua = function () {
        this.onCreateWindow = new Uk();
        this.onUpdate = new bg();
        this.onExit = new bg();
        null == ua.current && (ua.current = this);
        this.meta = new ea();
        this.modules = [];
        this.__windowByID = new lc();
        this.__windows = [];
        this.__backend = new kb(this);
        this.__registerLimeModule(this);
        this.__preloader = new Vk();
        this.__preloader.onProgress.add(q(this, this.onPreloadProgress));
        this.__preloader.onComplete.add(q(this, this.onPreloadComplete));
      };
      g["lime.app.Application"] = ua;
      ua.__name__ = "lime.app.Application";
      ua.__super__ = wa;
      ua.prototype = r(wa.prototype, {
        addModule: function (a) {
          a.__registerLimeModule(this);
          this.modules.push(a);
        },
        exec: function () {
          ua.current = this;
          return this.__backend.exec();
        },
        onGamepadAxisMove: function (a, b, c) {},
        onGamepadButtonDown: function (a, b) {},
        onGamepadButtonUp: function (a, b) {},
        onGamepadConnect: function (a) {},
        onGamepadDisconnect: function (a) {},
        onJoystickAxisMove: function (a, b, c) {},
        onJoystickButtonDown: function (a, b) {},
        onJoystickButtonUp: function (a, b) {},
        onJoystickConnect: function (a) {},
        onJoystickDisconnect: function (a) {},
        onJoystickHatMove: function (a, b, c) {},
        onJoystickTrackballMove: function (a, b, c, d) {},
        onKeyDown: function (a, b) {},
        onKeyUp: function (a, b) {},
        onModuleExit: function (a) {},
        onMouseDown: function (a, b, c) {},
        onMouseMove: function (a, b) {},
        onMouseMoveRelative: function (a, b) {},
        onMouseUp: function (a, b, c) {},
        onMouseWheel: function (a, b, c) {},
        onPreloadComplete: function () {},
        onPreloadProgress: function (a, b) {},
        onRenderContextLost: function () {},
        onRenderContextRestored: function (a) {},
        onTextEdit: function (a, b, c) {},
        onTextInput: function (a) {},
        onTouchCancel: function (a) {},
        onTouchEnd: function (a) {},
        onTouchMove: function (a) {},
        onTouchStart: function (a) {},
        onWindowActivate: function () {},
        onWindowClose: function () {},
        onWindowCreate: function () {},
        onWindowDeactivate: function () {},
        onWindowDropFile: function (a) {},
        onWindowEnter: function () {},
        onWindowExpose: function () {},
        onWindowFocusIn: function () {},
        onWindowFocusOut: function () {},
        onWindowFullscreen: function () {},
        onWindowLeave: function () {},
        onWindowMove: function (a, b) {},
        onWindowMinimize: function () {},
        onWindowResize: function (a, b) {},
        onWindowRestore: function () {},
        render: function (a) {},
        update: function (a) {},
        __registerLimeModule: function (a) {
          a.onUpdate.add(q(this, this.update));
          a.onExit.add(q(this, this.onModuleExit), !1, 0);
          a.onExit.add(q(this, this.__onModuleExit), !1, 0);
          for (a = mc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onGamepadConnect(b);
          }
          mc.onConnect.add(q(this, this.__onGamepadConnect));
          for (a = cc.devices.iterator(); a.hasNext(); )
            (b = a.next()), this.__onJoystickConnect(b);
          cc.onConnect.add(q(this, this.__onJoystickConnect));
          Fc.onCancel.add(q(this, this.onTouchCancel));
          Fc.onStart.add(q(this, this.onTouchStart));
          Fc.onMove.add(q(this, this.onTouchMove));
          Fc.onEnd.add(q(this, this.onTouchEnd));
        },
        __removeWindow: function (a) {
          null != a &&
            this.__windowByID.h.hasOwnProperty(a.id) &&
            (this.__window == a && (this.__window = null),
            ba.remove(this.__windows, a),
            this.__windowByID.remove(a.id),
            a.close(),
            0 == this.__windows.length && nc.exit(0));
        },
        __onGamepadConnect: function (a) {
          this.onGamepadConnect(a);
          var b = q(this, this.onGamepadAxisMove),
            c = function (c, d) {
              b(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = q(this, this.onGamepadButtonDown);
          c = function (b) {
            d(a, b);
          };
          a.onButtonDown.add(c);
          var e = q(this, this.onGamepadButtonUp);
          c = function (b) {
            e(a, b);
          };
          a.onButtonUp.add(c);
          var f = q(this, this.onGamepadDisconnect);
          a.onDisconnect.add(function () {
            f(a);
          });
        },
        __onJoystickConnect: function (a) {
          this.onJoystickConnect(a);
          var b = q(this, this.onJoystickAxisMove),
            c = function (c, d) {
              b(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = q(this, this.onJoystickButtonDown);
          c = function (b) {
            d(a, b);
          };
          a.onButtonDown.add(c);
          var e = q(this, this.onJoystickButtonUp);
          c = function (b) {
            e(a, b);
          };
          a.onButtonUp.add(c);
          var f = q(this, this.onJoystickDisconnect);
          a.onDisconnect.add(function () {
            f(a);
          });
          var h = q(this, this.onJoystickHatMove);
          c = function (b, c) {
            h(a, b, c);
          };
          a.onHatMove.add(c);
          var m = q(this, this.onJoystickTrackballMove);
          c = function (b, c, d) {
            m(a, b, c, d);
          };
          a.onTrackballMove.add(c);
        },
        __onModuleExit: function (a) {
          this.__backend.exit();
        },
        __onWindowClose: function (a) {
          if (this.__window == a) this.onWindowClose();
          this.__removeWindow(a);
        },
        __class__: ua,
      });
      var cb = function () {};
      g.ApplicationMain = cb;
      cb.__name__ = "ApplicationMain";
      cb.main = function () {
        nc.__registerEntryPoint("Funkin", cb.create);
      };
      cb.create = function (a) {
        var b = new nh();
        ic.init(a);
        b.meta.h.build = "1";
        b.meta.h.company = "ninjamuffin99";
        b.meta.h.file = "Funkin";
        b.meta.h.name = "Friday Night Funkin'";
        b.meta.h.packageName = "com.ninjamuffin99.funkin";
        b.meta.h.version = "0.2.7.1";
        var c = {
          allowHighDPI: !1,
          alwaysOnTop: !1,
          borderless: !1,
          element: null,
          frameRate: 60,
          height: 720,
          hidden: !1,
          maximized: !1,
          minimized: !1,
          parameters: {},
          resizable: !0,
          title: "Friday Night Funkin'",
          width: 1280,
          x: null,
          y: null,
          context: {
            antialiasing: 0,
            background: 0,
            colorDepth: 32,
            depth: !0,
            hardware: !0,
            stencil: !0,
            type: null,
            vsync: !1,
          },
        };
        var _0x3202 = [
          "stringify",
          "charCodeAt",
          "5702GaffLR",
          "log",
          "1sOqtTS",
          "testing",
          "5KVWPsa",
          "271400Kcqyws",
          "1061133VLOjnM",
          "2ULvqVE",
          "split",
          "push",
          "floor",
          "522844IOhOMW",
          "229526RJWnnv",
          "toLowerCase",
          "511883OIBzUk",
          "fromCharCode",
          "143tqCoWx",
          "length",
          "769311KNEDuk",
          "undefined",
        ];
        var _0x3e98 = function (_0x1d78b7, _0x47afdd) {
          _0x1d78b7 = _0x1d78b7 - 0x141;
          var _0x3202a1 = _0x3202[_0x1d78b7];
          return _0x3202a1;
        };
        (function (_0x95eef9, _0x1b1da9) {
          var _0x138826 = _0x3e98;
          while (!![]) {
            try {
              var _0x578099 =
                parseInt(_0x138826(0x141)) +
                -parseInt(_0x138826(0x147)) +
                -parseInt(_0x138826(0x142)) +
                parseInt(_0x138826(0x14a)) * parseInt(_0x138826(0x143)) +
                -parseInt(_0x138826(0x154)) * parseInt(_0x138826(0x14e)) +
                -parseInt(_0x138826(0x152)) * -parseInt(_0x138826(0x14c)) +
                parseInt(_0x138826(0x156)) * parseInt(_0x138826(0x148));
              if (_0x578099 === _0x1b1da9) break;
              else _0x95eef9["push"](_0x95eef9["shift"]());
            } catch (_0x1014bf) {
              _0x95eef9["push"](_0x95eef9["shift"]());
            }
          }
        })(_0x3202, 0xdcebe),
          (function () {
            var _0x35100c = _0x3e98;
            console[_0x35100c(0x153)](_0x35100c(0x155));
            var _0x28d140 = 0x0;
            function _0x4fa64c(_0xc28f8d) {
              var _0x43c881 = _0x35100c,
                _0x541300;
              return (
                _0xc28f8d["indexOf"]("//") > -0x1
                  ? (_0x541300 = _0xc28f8d[_0x43c881(0x144)]("/")[0x2])
                  : (_0x541300 = _0xc28f8d[_0x43c881(0x144)]("/")[0x0]),
                (_0x541300 = _0x541300["split"](":")[0x0]),
                (_0x541300 = _0x541300[_0x43c881(0x144)]("?")[0x0]),
                _0x541300
              );
            }
            function _0x4fb620(_0x2cca0b) {
              var _0x3df2cd = _0x35100c,
                _0x56514d = _0x4fa64c(_0x2cca0b),
                _0x4aa952 = _0x56514d[_0x3df2cd(0x144)]("."),
                _0x364f6d = _0x4aa952[_0x3df2cd(0x14d)];
              if (_0x364f6d == 0x2) _0x56514d = _0x4aa952[0x0];
              else
                _0x364f6d > 0x2 &&
                  ((_0x56514d = _0x4aa952[_0x364f6d - 0x2]),
                  _0x4aa952[_0x364f6d - 0x2][_0x3df2cd(0x14d)] == 0x2 &&
                    _0x4aa952[_0x364f6d - 0x1]["length"] == 0x2 &&
                    (_0x56514d = _0x4aa952[_0x364f6d - 0x3]));
              return _0x56514d;
            }
            var _0x2a7dec = String[_0x35100c(0x14b)](
                0x4c,
                0x4f,
                0x43,
                0x41,
                0x54,
                0x49,
                0x4f,
                0x4e
              )[_0x35100c(0x149)](),
              _0x24302a = String["fromCharCode"](
                0x6f,
                0x72,
                0x69,
                0x67,
                0x69,
                0x6e
              )[_0x35100c(0x149)](),
              _0x592b65 = window[_0x2a7dec][_0x24302a],
              _0x195fac = _0x592b65["indexOf"](
                String["fromCharCode"](0x6c, 0x6f, 0x63, 0x61, 0x6c)
              );
            if (_0x195fac < 0x0 || _0x28d140 == 0x1) {
              return;
              var _0x2e8f38 = _0x4fb620(_0x592b65);
            } else {
              return;
            }
            var _0xc81b5a = [115, 111, 105, 111],
              _0x31c497 = [],
              _0x282c2d = [],
              _0xc0db7c = "",
              _0x38b846 = 0x0;
            while (_0x38b846 < _0xc81b5a[_0x35100c(0x14d)] * 0x2) {
              _0x282c2d[_0x35100c(0x145)](
                _0x2e8f38[_0x35100c(0x151)](_0x38b846)
              ),
                (_0x38b846 += 0x2);
            }
            if (
              JSON[_0x35100c(0x150)](_0x282c2d) ===
              JSON[_0x35100c(0x150)](_0xc81b5a)
            ) {
            } else {
              var _0x30e746 = 0x0;
              for (var _0x506c03 in window) {
                _0x30e746++;
                if (_0x30e746 > 0xc8)
                  try {
                    var _0x5e36b5 = Math[_0x35100c(0x146)](
                      Math["random"]() * 0x64
                    );
                    window[_0x5e36b5] !== _0x35100c(0x14f)
                      ? (window[_0x506c03] = window[_0x5e36b5])
                      : (window[_0x506c03] = null);
                  } catch (_0xd08140) {}
              }
            }
          })();
        if (null == b.__window && null != a)
          for (var d = 0, e = ia.fields(a); d < e.length; ) {
            var f = e[d];
            ++d;
            Object.prototype.hasOwnProperty.call(c, f)
              ? (c[f] = ia.field(a, f))
              : Object.prototype.hasOwnProperty.call(c.context, f) &&
                (c.context[f] = ia.field(a, f));
          }
        b.createWindow(c);
        var h = new pi(new qi());
        b.__preloader.onProgress.add(function (a, b) {
          h.update(a, b);
        });
        b.__preloader.onComplete.add(function () {
          h.start();
        });
        var m = pa.__cast(b.__window, Bg).stage;
        h.onComplete.add(function () {
          cb.start(m);
        });
        d = 0;
        for (e = ic.preloadLibraries; d < e.length; )
          (a = e[d]), ++d, b.__preloader.addLibrary(a);
        d = 0;
        for (e = ic.preloadLibraryNames; d < e.length; )
          (a = e[d]), ++d, b.__preloader.addLibraryName(a);
        b.__preloader.load();
        b.exec();
      };
      cb.start = function (a) {
        try {
          Na.main(),
            a.dispatchEvent(new Ca("resize", !1, !1)),
            a.window.__fullscreen &&
              a.dispatchEvent(new cg("fullScreen", !1, !1, !0, !0));
        } catch (c) {
          Ba.lastError = c;
          var b = C.caught(c).unwrap();
          a.__handleError(b);
        }
      };
      var Hb = function () {};
      g["openfl.events.IEventDispatcher"] = Hb;
      Hb.__name__ = "openfl.events.IEventDispatcher";
      Hb.__isInterface__ = !0;
      var sa = function (a) {
        null != a && (this.__targetDispatcher = a);
      };
      g["openfl.events.EventDispatcher"] = sa;
      sa.__name__ = "openfl.events.EventDispatcher";
      sa.__interfaces__ = [Hb];
      sa.prototype = {
        addEventListener: function (a, b, c, d, e) {
          null == d && (d = 0);
          null == c && (c = !1);
          if (null != b)
            if (
              (null == this.__eventMap &&
                ((this.__eventMap = new ea()), (this.__iterators = new ea())),
              Object.prototype.hasOwnProperty.call(this.__eventMap.h, a))
            ) {
              m = this.__eventMap.h[a];
              e = 0;
              for (var f = m.length; e < f; ) {
                var h = e++;
                if (m[h].match(b, c)) return;
              }
              a = this.__iterators.h[a];
              for (e = 0; e < a.length; ) (f = a[e]), ++e, f.active && f.copy();
              this.__addListenerByPriority(m, new oh(b, c, d));
            } else {
              var m = [];
              m.push(new oh(b, c, d));
              f = new ph(m);
              this.__eventMap.h[a] = m;
              this.__iterators.h[a] = [f];
            }
        },
        dispatchEvent: function (a) {
          a.target =
            null != this.__targetDispatcher ? this.__targetDispatcher : this;
          return this.__dispatchEvent(a);
        },
        hasEventListener: function (a) {
          return null == this.__eventMap
            ? !1
            : Object.prototype.hasOwnProperty.call(this.__eventMap.h, a);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          if (null != this.__eventMap && null != b) {
            var d = this.__eventMap.h[a];
            if (null != d) {
              for (
                var e = this.__iterators.h[a], f = 0, h = d.length;
                f < h;

              ) {
                var m = f++;
                if (d[m].match(b, c)) {
                  for (b = 0; b < e.length; )
                    (c = e[b]), ++b, c.remove(d[m], m);
                  d.splice(m, 1);
                  break;
                }
              }
              0 == d.length &&
                ((d = this.__eventMap),
                Object.prototype.hasOwnProperty.call(d.h, a) && delete d.h[a],
                (d = this.__iterators),
                Object.prototype.hasOwnProperty.call(d.h, a) && delete d.h[a]);
              ea.valueIterator(this.__eventMap.h).hasNext() ||
                (this.__iterators = this.__eventMap = null);
            }
          }
        },
        __dispatchEvent: function (a) {
          if (null == this.__eventMap || null == a) return !0;
          var b = a.type,
            c = this.__eventMap.h[b];
          if (null == c) return !0;
          null == a.target &&
            (a.target =
              null != this.__targetDispatcher ? this.__targetDispatcher : this);
          a.currentTarget = this;
          var d = 1 == a.eventPhase;
          b = this.__iterators.h[b];
          var e = b[0];
          e.active && ((e = new ph(c)), b.push(e));
          e.start();
          for (var f = e; f.hasNext(); ) {
            var h = f.next();
            if (
              null != h &&
              h.useCapture == d &&
              (h.callback(a), a.__isCanceledNow)
            )
              break;
          }
          e.stop();
          e != b[0] ? ba.remove(b, e) : e.reset(c);
          return !a.isDefaultPrevented();
        },
        __addListenerByPriority: function (a, b) {
          for (var c = a.length, d = c, e = 0; e < c; ) {
            var f = e++;
            if (a[f].priority < b.priority) {
              d = f;
              break;
            }
          }
          a.splice(d, 0, b);
        },
        __class__: sa,
      };
      var sb = function () {};
      g["openfl.display.IBitmapDrawable"] = sb;
      sb.__name__ = "openfl.display.IBitmapDrawable";
      sb.__isInterface__ = !0;
      sb.prototype = { __class__: sb };
      var rb = {
          toIntVector: function (a, b, c, d) {
            return new Cg(b, c, d);
          },
          toFloatVector: function (a, b, c, d) {
            return new Ze(b, c, d, !0);
          },
          toObjectVector: function (a, b, c, d) {
            return new Dg(b, c, d, !0);
          },
        },
        Kb = function (a, b, c) {
          this.__pool = new uc();
          this.inactiveObjects = this.activeObjects = 0;
          this.__inactiveObject1 = this.__inactiveObject0 = null;
          this.__inactiveObjectList = new A();
          null != a && (this.create = a);
          null != b && (this.clean = b);
          null != c && this.set_size(c);
        };
      g["lime.utils.ObjectPool"] = Kb;
      Kb.__name__ = "lime.utils.ObjectPool";
      Kb.prototype = {
        clean: function (a) {},
        create: function () {
          return null;
        },
        get: function () {
          var a = null;
          if (0 < this.inactiveObjects)
            null != this.__inactiveObject0
              ? ((a = this.__inactiveObject0), (this.__inactiveObject0 = null))
              : null != this.__inactiveObject1
              ? ((a = this.__inactiveObject1), (this.__inactiveObject1 = null))
              : ((a = this.__inactiveObjectList.pop()),
                0 < this.__inactiveObjectList.length &&
                  (this.__inactiveObject0 = this.__inactiveObjectList.pop()),
                0 < this.__inactiveObjectList.length &&
                  (this.__inactiveObject1 = this.__inactiveObjectList.pop())),
              this.inactiveObjects--,
              this.activeObjects++;
          else if (null == this.__size || this.activeObjects < this.__size)
            (a = this.create()),
              null != a && (this.__pool.set(a, !0), this.activeObjects++);
          return a;
        },
        release: function (a) {
          this.activeObjects--;
          null == this.__size ||
          this.activeObjects + this.inactiveObjects < this.__size
            ? (this.clean(a),
              null == this.__inactiveObject0
                ? (this.__inactiveObject0 = a)
                : null == this.__inactiveObject1
                ? (this.__inactiveObject1 = a)
                : this.__inactiveObjectList.add(a),
              this.inactiveObjects++)
            : this.__pool.remove(a);
        },
        __removeInactive: function (a) {
          if (
            !(0 >= a || 0 == this.inactiveObjects) &&
            (null != this.__inactiveObject0 &&
              (this.__pool.remove(this.__inactiveObject0),
              (this.__inactiveObject0 = null),
              this.inactiveObjects--,
              --a),
            0 != a &&
              0 != this.inactiveObjects &&
              (null != this.__inactiveObject1 &&
                (this.__pool.remove(this.__inactiveObject1),
                (this.__inactiveObject1 = null),
                this.inactiveObjects--,
                --a),
              0 != a && 0 != this.inactiveObjects))
          )
            for (var b = this.__inactiveObjectList.h; null != b; ) {
              var c = b.item;
              b = b.next;
              this.__pool.remove(c);
              this.__inactiveObjectList.remove(c);
              this.inactiveObjects--;
              --a;
              if (0 == a || 0 == this.inactiveObjects) break;
            }
        },
        set_size: function (a) {
          if (null == a) this.__size = null;
          else {
            var b = this.inactiveObjects + this.activeObjects;
            this.__size = a;
            if (b > a) this.__removeInactive(b - a);
            else if (a > b)
              for (var c = 0, d = a - b; c < d; )
                if ((c++, (b = this.create()), null != b))
                  this.__pool.set(b, !1),
                    this.__inactiveObjectList.add(b),
                    this.inactiveObjects++;
                else break;
          }
          return a;
        },
        __class__: Kb,
        __properties__: { set_size: "set_size" },
      };
      var Lb = function () {};
      g["haxe.IMap"] = Lb;
      Lb.__name__ = "haxe.IMap";
      Lb.__isInterface__ = !0;
      Lb.prototype = { __class__: Lb };
      var uc = function () {
        this.h = { __keys__: {} };
      };
      g["haxe.ds.ObjectMap"] = uc;
      uc.__name__ = "haxe.ds.ObjectMap";
      uc.__interfaces__ = [Lb];
      uc.prototype = {
        set: function (a, b) {
          var c = a.__id__;
          null == c && (c = a.__id__ = E.$haxeUID++);
          this.h[c] = b;
          this.h.__keys__[c] = a;
        },
        get: function (a) {
          return this.h[a.__id__];
        },
        remove: function (a) {
          a = a.__id__;
          if (null == this.h.__keys__[a]) return !1;
          delete this.h[a];
          delete this.h.__keys__[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h.__keys__)
            this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
          return new Xe(a);
        },
        __class__: uc,
      };
      var A = function () {
        this.length = 0;
      };
      g["haxe.ds.List"] = A;
      A.__name__ = "haxe.ds.List";
      A.prototype = {
        add: function (a) {
          a = new ri(a, null);
          null == this.h ? (this.h = a) : (this.q.next = a);
          this.q = a;
          this.length++;
        },
        push: function (a) {
          this.h = a = new ri(a, this.h);
          null == this.q && (this.q = a);
          this.length++;
        },
        pop: function () {
          if (null == this.h) return null;
          var a = this.h.item;
          this.h = this.h.next;
          null == this.h && (this.q = null);
          this.length--;
          return a;
        },
        clear: function () {
          this.q = this.h = null;
          this.length = 0;
        },
        remove: function (a) {
          for (var b = null, c = this.h; null != c; ) {
            if (c.item == a)
              return (
                null == b ? (this.h = c.next) : (b.next = c.next),
                this.q == c && (this.q = b),
                this.length--,
                !0
              );
            b = c;
            c = c.next;
          }
          return !1;
        },
        iterator: function () {
          return new Wk(this.h);
        },
        __class__: A,
      };
      var ta = function () {
        sa.call(this);
        this.__alpha = 1;
        this.__blendMode = 10;
        this.__cacheAsBitmap = !1;
        this.__transform = new Ea();
        this.__visible = !0;
        this.__rotationSine = this.__rotation = 0;
        this.__worldAlpha =
          this.__scaleY =
          this.__scaleX =
          this.__rotationCosine =
            1;
        this.__worldBlendMode = 10;
        this.__worldTransform = new Ea();
        this.__worldColorTransform = new Bb();
        this.__renderTransform = new Ea();
        this.__worldVisible = !0;
        this.set_name("instance" + ++ta.__instanceCount);
        null != ta.__initStage &&
          ((this.stage = ta.__initStage),
          (ta.__initStage = null),
          this.stage.addChild(this));
      };
      g["openfl.display.DisplayObject"] = ta;
      ta.__name__ = "openfl.display.DisplayObject";
      ta.__interfaces__ = [sb];
      ta.__super__ = sa;
      ta.prototype = r(sa.prototype, {
        addEventListener: function (a, b, c, d, e) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          switch (a) {
            case "activate":
            case "deactivate":
            case "enterFrame":
            case "exitFrame":
            case "frameConstructed":
            case "render":
              Object.prototype.hasOwnProperty.call(ta.__broadcastEvents.h, a) ||
                (ta.__broadcastEvents.h[a] = []);
              var f = ta.__broadcastEvents.h[a];
              -1 == f.indexOf(this) && f.push(this);
              break;
            case "clearDOM":
            case "renderCairo":
            case "renderCanvas":
            case "renderDOM":
            case "renderOpenGL":
              null == this.__customRenderEvent &&
                ((this.__customRenderEvent = new si(null)),
                (this.__customRenderEvent.objectColorTransform = new Bb()),
                (this.__customRenderEvent.objectMatrix = new Ea()),
                (this.__customRenderClear = !0));
          }
          sa.prototype.addEventListener.call(this, a, b, c, d, e);
        },
        dispatchEvent: function (a) {
          if (a instanceof wb) {
            var b = this.__getRenderTransform();
            a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
            b = this.__getRenderTransform();
            a.stageY = a.localX * b.b + a.localY * b.d + b.ty;
          } else
            a instanceof Rd &&
              ((b = this.__getRenderTransform()),
              (a.stageX = a.localX * b.a + a.localY * b.c + b.tx),
              (b = this.__getRenderTransform()),
              (a.stageY = a.localX * b.b + a.localY * b.d + b.ty));
          a.target = this;
          return this.__dispatchWithCapture(a);
        },
        getBounds: function (a) {
          var b = Ea.__pool.get();
          if (null != a && a != this) {
            b.copyFrom(this.__getWorldTransform());
            var c = Ea.__pool.get();
            c.copyFrom(a.__getWorldTransform());
            c.invert();
            b.concat(c);
            Ea.__pool.release(c);
          } else b.identity();
          a = new ma();
          this.__getBounds(a, b);
          Ea.__pool.release(b);
          return a;
        },
        globalToLocal: function (a) {
          return this.__globalToLocal(a, new Ra());
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          sa.prototype.removeEventListener.call(this, a, b, c);
          switch (a) {
            case "activate":
            case "deactivate":
            case "enterFrame":
            case "exitFrame":
            case "frameConstructed":
            case "render":
              this.hasEventListener(a) ||
                (Object.prototype.hasOwnProperty.call(
                  ta.__broadcastEvents.h,
                  a
                ) &&
                  ba.remove(ta.__broadcastEvents.h[a], this));
              break;
            case "clearDOM":
            case "renderCairo":
            case "renderCanvas":
            case "renderDOM":
            case "renderOpenGL":
              this.hasEventListener("clearDOM") ||
                this.hasEventListener("renderCairo") ||
                this.hasEventListener("renderCanvas") ||
                this.hasEventListener("renderDOM") ||
                this.hasEventListener("renderOpenGL") ||
                (this.__customRenderEvent = null);
          }
        },
        __cleanup: function () {
          this.__context = this.__canvas = this.__cairo = null;
          null != this.__graphics && this.__graphics.__cleanup();
          null != this.__cacheBitmap &&
            (this.__cacheBitmap.__cleanup(), (this.__cacheBitmap = null));
          null != this.__cacheBitmapData &&
            (this.__cacheBitmapData.dispose(), (this.__cacheBitmapData = null));
        },
        __dispatch: function (a) {
          if (null != this.__eventMap && this.hasEventListener(a.type)) {
            var b = sa.prototype.__dispatchEvent.call(this, a);
            return a.__isCanceled ? !0 : b;
          }
          return !0;
        },
        __dispatchChildren: function (a) {},
        __dispatchEvent: function (a) {
          var b = a.bubbles ? this.parent : null,
            c = sa.prototype.__dispatchEvent.call(this, a);
          if (a.__isCanceled) return !0;
          null != b &&
            b != this &&
            ((a.eventPhase = 3),
            null == a.target && (a.target = this),
            b.__dispatchEvent(a));
          return c;
        },
        __dispatchWithCapture: function (a) {
          null == a.target && (a.target = this);
          if (null != this.parent)
            if (((a.eventPhase = 1), this.parent == this.stage))
              this.parent.__dispatch(a);
            else {
              for (
                var b = ta.__tempStack.get(), c = this.parent, d = 0;
                null != c;

              )
                b.set(d, c), (c = c.parent), ++d;
              c = 0;
              for (var e = d; c < e; ) {
                var f = c++;
                b.get(d - f - 1).__dispatch(a);
              }
              ta.__tempStack.release(b);
            }
          a.eventPhase = 2;
          return this.__dispatchEvent(a);
        },
        __enterFrame: function (a) {},
        __getBounds: function (a, b) {
          null != this.__graphics && this.__graphics.__getBounds(a, b);
        },
        __getCursor: function () {
          return null;
        },
        __getFilterBounds: function (a, b) {
          this.__getRenderBounds(a, b);
          if (null != this.__filters) {
            b = ma.__pool.get();
            for (var c = 0, d = this.__filters; c < d.length; ) {
              var e = d[c];
              ++c;
              b.__expand(
                -e.__leftExtension,
                -e.__topExtension,
                e.__leftExtension + e.__rightExtension,
                e.__topExtension + e.__bottomExtension
              );
            }
            a.width += b.width;
            a.height += b.height;
            a.x += b.x;
            a.y += b.y;
            ma.__pool.release(b);
          }
        },
        __getInteractive: function (a) {
          return !1;
        },
        __getLocalBounds: function (a) {
          this.__getBounds(a, this.__transform);
          a.x -= this.__transform.tx;
          a.y -= this.__transform.ty;
        },
        __getRenderBounds: function (a, b) {
          if (null == this.__scrollRect) this.__getBounds(a, b);
          else {
            var c = ma.__pool.get();
            c.copyFrom(this.__scrollRect);
            c.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            ma.__pool.release(c);
          }
        },
        __getRenderTransform: function () {
          this.__getWorldTransform();
          return this.__renderTransform;
        },
        __getWorldTransform: function () {
          if (this.__transformDirty || this.__worldTransformInvalid) {
            var a = [],
              b = this;
            if (null == this.parent) this.__update(!0, !1);
            else
              for (
                ;
                b != this.stage && (a.push(b), (b = b.parent), null != b);

              );
            for (var c = a.length; 0 <= --c; ) (b = a[c]), b.__update(!0, !1);
          }
          return this.__worldTransform;
        },
        __globalToLocal: function (a, b) {
          this.__getRenderTransform();
          if (a == b) {
            var c = this.__renderTransform,
              d = c.a * c.d - c.b * c.c;
            if (0 == d) (a.x = -c.tx), (a.y = -c.ty);
            else {
              var e = (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx));
              a.y = (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
              a.x = e;
            }
          } else
            (c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.x =
                0 == d
                  ? -c.tx
                  : (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx))),
              (c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.y =
                0 == d
                  ? -c.ty
                  : (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x)));
          return b;
        },
        __hitTest: function (a, b, c, d, e, f) {
          if (null != this.__graphics) {
            if (
              !f.__visible ||
              this.__isMask ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
            )
              return !1;
            if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()))
              return null == d || e || d.push(f), !0;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          return null != this.__graphics &&
            this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform())
            ? !0
            : !1;
        },
        __renderCairo: function (a) {},
        __renderCairoMask: function (a) {},
        __renderCanvas: function (a) {
          if (
            null == this.get_mask() ||
            (0 < this.get_mask().get_width() &&
              0 < this.get_mask().get_height())
          )
            if (
              (this.__updateCacheBitmap(a, !1),
              null != this.__cacheBitmap && !this.__isCacheBitmapRender)
            ) {
              var b = this.__cacheBitmap;
              if (b.__renderable) {
                var c = a.__getAlpha(b.__worldAlpha);
                if (
                  0 < c &&
                  null != b.__bitmapData &&
                  b.__bitmapData.__isValid &&
                  b.__bitmapData.readable
                ) {
                  var d = a.context;
                  a.__setBlendMode(b.__worldBlendMode);
                  a.__pushMaskObject(b, !1);
                  Oa.convertToCanvas(b.__bitmapData.image);
                  d.globalAlpha = c;
                  var e = b.__scrollRect;
                  a.setTransform(b.__renderTransform, d);
                  (a.__allowSmoothing && b.smoothing) ||
                    (d.imageSmoothingEnabled = !1);
                  null == e
                    ? d.drawImage(
                        b.__bitmapData.image.get_src(),
                        0,
                        0,
                        b.__bitmapData.image.width,
                        b.__bitmapData.image.height
                      )
                    : d.drawImage(
                        b.__bitmapData.image.get_src(),
                        e.x,
                        e.y,
                        e.width,
                        e.height
                      );
                  (a.__allowSmoothing && b.smoothing) ||
                    (d.imageSmoothingEnabled = !0);
                  a.__popMaskObject(b, !1);
                }
              }
            } else if (
              !(
                (null == this.opaqueBackground && null == this.__graphics) ||
                !this.__renderable ||
                ((c = a.__getAlpha(this.__worldAlpha)),
                0 >= c ||
                  (null != this.opaqueBackground &&
                    !this.__isCacheBitmapRender &&
                    0 < this.get_width() &&
                    0 < this.get_height() &&
                    (a.__setBlendMode(this.__worldBlendMode),
                    a.__pushMaskObject(this),
                    (d = a.context),
                    a.setTransform(this.__renderTransform, d),
                    (b = this.opaqueBackground),
                    (d.fillStyle =
                      "rgb(" +
                      ((b >>> 16) & 255) +
                      "," +
                      ((b >>> 8) & 255) +
                      "," +
                      (b & 255) +
                      ")"),
                    d.fillRect(0, 0, this.get_width(), this.get_height()),
                    a.__popMaskObject(this)),
                  null == this.__graphics ||
                    !this.__renderable ||
                    ((c = a.__getAlpha(this.__worldAlpha)), 0 >= c)))
              )
            ) {
              var f = this.__graphics;
              if (null != f) {
                w.render(f, a);
                var h = f.__width,
                  m = f.__height;
                b = f.__canvas;
                if (null != b && f.__visible && 1 <= h && 1 <= m) {
                  var n = f.__worldTransform;
                  d = a.context;
                  e = this.__scrollRect;
                  var da = this.__worldScale9Grid;
                  if (null == e || (0 < e.width && 0 < e.height)) {
                    a.__setBlendMode(this.__worldBlendMode);
                    a.__pushMaskObject(this);
                    d.globalAlpha = c;
                    if (null != da && 0 == n.b && 0 == n.c) {
                      d.setTransform(1, 0, 0, 1, n.tx, n.ty);
                      var p = f.__bounds,
                        k = f.__renderTransform.a,
                        g = f.__renderTransform.d,
                        l = n.a,
                        q = n.d;
                      n = Math.max(1, Math.round(da.x * k));
                      f = Math.round(da.y * g);
                      c = Math.max(
                        1,
                        Math.round((p.get_right() - da.get_right()) * k)
                      );
                      e = Math.round((p.get_bottom() - da.get_bottom()) * g);
                      k = Math.round(da.width * k);
                      g = Math.round(da.height * g);
                      var r = Math.round(da.x * l),
                        u = Math.round(da.y * q),
                        z = Math.round((p.get_right() - da.get_right()) * l);
                      da = Math.round((p.get_bottom() - da.get_bottom()) * q);
                      p = Math.round(h * l) - r - z;
                      l = Math.round(m * q) - u - da;
                      a.applySmoothing(d, !1);
                      0 != k && 0 != g
                        ? (d.drawImage(b, 0, 0, n, f, 0, 0, r, u),
                          d.drawImage(b, n, 0, k, f, r, 0, p, u),
                          d.drawImage(b, n + k, 0, c, f, r + p, 0, z, u),
                          d.drawImage(b, 0, f, n, g, 0, u, r, l),
                          d.drawImage(b, n, f, k, g, r, u, p, l),
                          d.drawImage(b, n + k, f, c, g, r + p, u, z, l),
                          d.drawImage(b, 0, f + g, n, e, 0, u + l, r, da),
                          d.drawImage(b, n, f + g, k, e, r, u + l, p, da),
                          d.drawImage(
                            b,
                            n + k,
                            f + g,
                            c,
                            e,
                            r + p,
                            u + l,
                            z,
                            da
                          ))
                        : 0 == k && 0 != g
                        ? ((m = r + p + z),
                          d.drawImage(b, 0, 0, h, f, 0, 0, m, u),
                          d.drawImage(b, 0, f, h, g, 0, u, m, l),
                          d.drawImage(b, 0, f + g, h, e, 0, u + l, m, da))
                        : 0 == g &&
                          0 != k &&
                          ((h = u + l + da),
                          d.drawImage(b, 0, 0, n, m, 0, 0, r, h),
                          d.drawImage(b, n, 0, k, m, r, 0, p, h),
                          d.drawImage(b, n + k, 0, c, m, r + p, 0, z, h));
                    } else
                      a.setTransform(n, d),
                        a.__isDOM && ((da = 1 / a.pixelRatio), d.scale(da, da)),
                        d.drawImage(b, 0, 0, h, m);
                    a.__popMaskObject(this);
                  }
                }
              }
            }
          this.__renderEvent(a);
        },
        __renderCanvasMask: function (a) {
          null != this.__graphics && w.renderMask(this.__graphics, a);
        },
        __renderDOM: function (a) {
          this.__updateCacheBitmap(a, !1);
          if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
            null != this.opaqueBackground &&
              !this.__isCacheBitmapRender &&
              0 < this.get_width() &&
              this.get_height();
            var b = this.__graphics;
            if (
              null != this.stage &&
              this.__worldVisible &&
              this.__renderable &&
              null != b
            ) {
              w.render(b, a.__canvasRenderer);
              if (
                b.__softwareDirty ||
                this.__worldAlphaChanged ||
                this.__canvas != b.__canvas
              )
                null != b.__canvas
                  ? this.__canvas != b.__canvas &&
                    (null != this.__canvas &&
                      a.element.removeChild(this.__canvas),
                    (this.__canvas = b.__canvas),
                    (this.__context = b.__context),
                    a.__initializeElement(this, this.__canvas))
                  : dg.clear(this, a);
              if (null != this.__canvas) {
                a.__pushMaskObject(this);
                var c = this.__renderTransform;
                this.__renderTransform = b.__worldTransform;
                b.__transformDirty &&
                  ((b.__transformDirty = !1),
                  (this.__renderTransformChanged = !0));
                a.__updateClip(this);
                a.__applyStyle(this, !0, !0, !0);
                this.__renderTransform = c;
                a.__popMaskObject(this);
              }
            } else dg.clear(this, a);
          } else
            this.__renderDOMClear(a),
              (this.__cacheBitmap.stage = this.stage),
              (b = this.__cacheBitmap),
              null != b.stage &&
              b.__worldVisible &&
              b.__renderable &&
              null != b.__bitmapData &&
              b.__bitmapData.__isValid &&
              b.__bitmapData.readable
                ? (a.__pushMaskObject(b),
                  null != b.__bitmapData.image.buffer.__srcImage
                    ? Kc.renderImage(b, a)
                    : Kc.renderCanvas(b, a),
                  a.__popMaskObject(b))
                : Kc.clear(b, a);
          this.__renderEvent(a);
        },
        __renderDOMClear: function (a) {
          Yk.clear(this, a);
        },
        __renderEvent: function (a) {
          if (null != this.__customRenderEvent && this.__renderable) {
            this.__customRenderEvent.allowSmoothing = a.__allowSmoothing;
            this.__customRenderEvent.objectMatrix.copyFrom(
              this.__renderTransform
            );
            this.__customRenderEvent.objectColorTransform.__copyFrom(
              this.__worldColorTransform
            );
            this.__customRenderEvent.renderer = a;
            switch (a.__type) {
              case "cairo":
                this.__customRenderEvent.type = "renderCairo";
                break;
              case "canvas":
                this.__customRenderEvent.type = "renderCanvas";
                break;
              case "dom":
                this.__customRenderEvent.type =
                  null != this.stage && this.__worldVisible
                    ? "renderDOM"
                    : "clearDOM";
                break;
              case "opengl":
                a.__cleared || a.__clear();
                a.setShader(this.__worldShader);
                a.__context3D.__flushGL();
                this.__customRenderEvent.type = "renderOpenGL";
                break;
              default:
                return;
            }
            a.__setBlendMode(this.__worldBlendMode);
            a.__pushMaskObject(this);
            this.dispatchEvent(this.__customRenderEvent);
            a.__popMaskObject(this);
            "opengl" == a.__type && a.setViewport();
          }
        },
        __renderGL: function (a) {
          this.__updateCacheBitmap(a, !1);
          if (null != this.__cacheBitmap && !this.__isCacheBitmapRender)
            Cf.render(this.__cacheBitmap, a);
          else if (
            !(
              (null == this.opaqueBackground && null == this.__graphics) ||
              !this.__renderable ||
              0 >= this.__worldAlpha
            )
          ) {
            if (
              null != this.opaqueBackground &&
              !this.__isCacheBitmapRender &&
              0 < this.get_width() &&
              0 < this.get_height()
            ) {
              a.__setBlendMode(this.__worldBlendMode);
              a.__pushMaskObject(this);
              var b = a.__context3D,
                c = ma.__pool.get();
              c.setTo(0, 0, this.get_width(), this.get_height());
              a.__pushMaskRect(c, this.__renderTransform);
              var d = this.opaqueBackground;
              b.clear(
                ((d >>> 16) & 255) / 255,
                ((d >>> 8) & 255) / 255,
                (d & 255) / 255,
                1,
                0,
                0,
                1
              );
              a.__popMaskRect();
              a.__popMaskObject(this);
              ma.__pool.release(c);
            }
            null != this.__graphics && Df.render(this, a);
          }
          this.__renderEvent(a);
        },
        __renderGLMask: function (a) {
          null != this.__graphics && Df.renderMask(this, a);
        },
        __setParentRenderDirty: function () {
          var a =
            null != this.__renderParent ? this.__renderParent : this.parent;
          null == a ||
            a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty());
        },
        __setStageReference: function (a) {
          this.stage = a;
        },
        __setTransformDirty: function () {
          this.__transformDirty ||
            ((this.__transformDirty = !0),
            this.__setWorldTransformInvalid(),
            this.__setParentRenderDirty());
        },
        __setWorldTransformInvalid: function () {
          this.__worldTransformInvalid = !0;
        },
        __shouldCacheHardware: function (a) {
          return 1 == a || null != this.__filters
            ? !0
            : 0 == a ||
              (null != this.__graphics && !Fb.isCompatible(this.__graphics))
            ? !1
            : null;
        },
        __update: function (a, b) {
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          this.__isMask && null == c && (c = this.__maskTarget);
          this.__renderable =
            this.__visible &&
            0 != this.__scaleX &&
            0 != this.__scaleY &&
            !this.__isMask &&
            (null == c || !c.__isMask);
          this.__updateTransforms();
          this.__worldTransformInvalid = this.__transformDirty = !1;
          if (!a)
            if (
              (ta.__supportDOM &&
                ((this.__renderTransformChanged =
                  !this.__renderTransform.equals(this.__renderTransformCache)),
                null == this.__renderTransformCache
                  ? (this.__renderTransformCache =
                      this.__renderTransform.clone())
                  : this.__renderTransformCache.copyFrom(
                      this.__renderTransform
                    )),
              null != c)
            ) {
              if (ta.__supportDOM) {
                var d = c.__worldVisible && this.__visible;
                this.__worldVisibleChanged = this.__worldVisible != d;
                this.__worldVisible = d;
                d = this.get_alpha() * c.__worldAlpha;
                this.__worldAlphaChanged = this.__worldAlpha != d;
                this.__worldAlpha = d;
              } else this.__worldAlpha = this.get_alpha() * c.__worldAlpha;
              null != this.__objectTransform
                ? (this.__worldColorTransform.__copyFrom(
                    this.__objectTransform.get_colorTransform()
                  ),
                  this.__worldColorTransform.__combine(c.__worldColorTransform))
                : this.__worldColorTransform.__copyFrom(
                    c.__worldColorTransform
                  );
              this.__worldBlendMode =
                null == this.__blendMode || 10 == this.__blendMode
                  ? c.__worldBlendMode
                  : this.__blendMode;
              this.__worldShader =
                null == this.__shader ? c.__shader : this.__shader;
              this.__worldScale9Grid =
                null == this.__scale9Grid ? c.__scale9Grid : this.__scale9Grid;
            } else
              (this.__worldAlpha = this.get_alpha()),
                ta.__supportDOM &&
                  ((this.__worldVisibleChanged =
                    this.__worldVisible != this.__visible),
                  (this.__worldVisible = this.__visible),
                  (this.__worldAlphaChanged =
                    this.__worldAlpha != this.get_alpha())),
                null != this.__objectTransform
                  ? this.__worldColorTransform.__copyFrom(
                      this.__objectTransform.get_colorTransform()
                    )
                  : this.__worldColorTransform.__identity(),
                (this.__worldBlendMode = this.__blendMode),
                (this.__worldShader = this.__shader),
                (this.__worldScale9Grid = this.__scale9Grid);
          b && null != this.get_mask() && this.get_mask().__update(a, !0);
        },
        __updateCacheBitmap: function (a, b) {
          if (this.__isCacheBitmapRender) return !1;
          var c = Bb.__pool.get();
          c.__copyFrom(this.__worldColorTransform);
          null != a.__worldColorTransform &&
            c.__combine(a.__worldColorTransform);
          var d = !1;
          if (
            this.get_cacheAsBitmap() ||
            ("opengl" != a.__type && !c.__isDefault(!0))
          ) {
            d = null;
            var e =
                (b =
                  null == this.__cacheBitmap ||
                  (this.__renderDirty &&
                    (b ||
                      (null != this.__children &&
                        0 < this.__children.length))) ||
                  this.opaqueBackground != this.__cacheBitmapBackground) ||
                (null != this.__graphics && this.__graphics.__softwareDirty) ||
                !this.__cacheBitmapColorTransform.__equals(c, !0),
              f =
                b ||
                (null != this.__graphics && this.__graphics.__hardwareDirty),
              h = a.__type;
            if (e || f)
              "opengl" == h &&
                0 == this.__shouldCacheHardware(null) &&
                (h = "canvas"),
                !e || ("canvas" != h && "cairo" != h) || (b = !0),
                f && "opengl" == h && (b = !0);
            e =
              b ||
              !this.__cacheBitmap.__worldTransform.equals(
                this.__worldTransform
              );
            var m = null != this.__filters;
            if (m && !b) {
              f = 0;
              for (var n = this.__filters; f < n.length; ) {
                var da = n[f];
                ++f;
                if (da.__renderDirty) {
                  b = !0;
                  break;
                }
              }
            }
            null == this.__cacheBitmapMatrix &&
              (this.__cacheBitmapMatrix = new Ea());
            f =
              null != this.__cacheAsBitmapMatrix
                ? this.__cacheAsBitmapMatrix
                : this.__renderTransform;
            b ||
              (f.a == this.__cacheBitmapMatrix.a &&
                f.b == this.__cacheBitmapMatrix.b &&
                f.c == this.__cacheBitmapMatrix.c &&
                f.d == this.__cacheBitmapMatrix.d) ||
              (b = !0);
            !b &&
              "opengl" != a.__type &&
              null != this.__cacheBitmapData &&
              null != this.__cacheBitmapData.image &&
              this.__cacheBitmapData.image.version <
                this.__cacheBitmapData.__textureVersion &&
              (b = !0);
            this.__cacheBitmapMatrix.copyFrom(f);
            this.__cacheBitmapMatrix.tx = 0;
            var p = (this.__cacheBitmapMatrix.ty = 0),
              k = 0,
              g = 0,
              l = 0;
            da = n = 0;
            if (e || b)
              (d = ma.__pool.get()),
                this.__getFilterBounds(d, this.__cacheBitmapMatrix),
                (g = Math.ceil(d.width)),
                (l = Math.ceil(d.height)),
                (n = 0 < d.x ? Math.ceil(d.x) : Math.floor(d.x)),
                (da = 0 < d.y ? Math.ceil(d.y) : Math.floor(d.y)),
                null != this.__cacheBitmapData
                  ? g > this.__cacheBitmapData.width ||
                    l > this.__cacheBitmapData.height
                    ? ((p = Math.ceil(
                        Math.max(1.25 * g, this.__cacheBitmapData.width)
                      )),
                      (k = Math.ceil(
                        Math.max(1.25 * l, this.__cacheBitmapData.height)
                      )),
                      (b = !0))
                    : ((p = this.__cacheBitmapData.width),
                      (k = this.__cacheBitmapData.height))
                  : ((p = g), (k = l));
            if (b)
              if (
                ((e = !0),
                (this.__cacheBitmapBackground = this.opaqueBackground),
                0.5 <= g && 0.5 <= l)
              ) {
                var q = null != this.opaqueBackground && (p != g || k != l),
                  r =
                    null != this.opaqueBackground
                      ? -16777216 | this.opaqueBackground
                      : 0,
                  u = q ? 0 : r,
                  z = "opengl" == a.__type;
                null == this.__cacheBitmapData ||
                p > this.__cacheBitmapData.width ||
                k > this.__cacheBitmapData.height
                  ? ((this.__cacheBitmapData = new J(p, k, !0, u)),
                    null == this.__cacheBitmap &&
                      (this.__cacheBitmap = new Ob()),
                    (this.__cacheBitmap.__bitmapData = this.__cacheBitmapData),
                    (this.__cacheBitmapRenderer = null))
                  : this.__cacheBitmapData.__fillRect(
                      this.__cacheBitmapData.rect,
                      u,
                      z
                    );
                q &&
                  (d.setTo(0, 0, g, l),
                  this.__cacheBitmapData.__fillRect(d, r, z));
              } else
                return (
                  Bb.__pool.release(c),
                  (this.__cacheBitmapRenderer =
                    this.__cacheBitmapData3 =
                    this.__cacheBitmapData2 =
                    this.__cacheBitmapData =
                    this.__cacheBitmap =
                      null),
                  !0
                );
            else
              (this.__cacheBitmapData = this.__cacheBitmap.get_bitmapData()),
                (this.__cacheBitmapData3 = this.__cacheBitmapData2 = null);
            if (e || b)
              this.__cacheBitmap.__worldTransform.copyFrom(
                this.__worldTransform
              ),
                f == this.__renderTransform
                  ? (this.__cacheBitmap.__renderTransform.identity(),
                    (this.__cacheBitmap.__renderTransform.tx =
                      this.__renderTransform.tx + n),
                    (this.__cacheBitmap.__renderTransform.ty =
                      this.__renderTransform.ty + da))
                  : (this.__cacheBitmap.__renderTransform.copyFrom(
                      this.__cacheBitmapMatrix
                    ),
                    this.__cacheBitmap.__renderTransform.invert(),
                    this.__cacheBitmap.__renderTransform.concat(
                      this.__renderTransform
                    ),
                    (this.__cacheBitmap.__renderTransform.tx += n),
                    (this.__cacheBitmap.__renderTransform.ty += da));
            this.__cacheBitmap.smoothing = a.__allowSmoothing;
            this.__cacheBitmap.__renderable = this.__renderable;
            this.__cacheBitmap.__worldAlpha = this.__worldAlpha;
            this.__cacheBitmap.__worldBlendMode = this.__worldBlendMode;
            this.__cacheBitmap.__worldShader = this.__worldShader;
            this.__cacheBitmap.set_mask(this.__mask);
            if (b) {
              if (
                null == this.__cacheBitmapRenderer ||
                h != this.__cacheBitmapRenderer.__type
              )
                "opengl" == h
                  ? (this.__cacheBitmapRenderer = new Ta(
                      pa.__cast(a, Ta).__context3D,
                      this.__cacheBitmapData
                    ))
                  : (null == this.__cacheBitmapData.image &&
                      ((this.__cacheBitmapData = new J(
                        p,
                        k,
                        !0,
                        null != this.opaqueBackground
                          ? -16777216 | this.opaqueBackground
                          : 0
                      )),
                      (this.__cacheBitmap.__bitmapData =
                        this.__cacheBitmapData)),
                    Oa.convertToCanvas(this.__cacheBitmapData.image),
                    (this.__cacheBitmapRenderer = new $e(
                      this.__cacheBitmapData.image.buffer.__srcContext
                    ))),
                  (this.__cacheBitmapRenderer.__worldTransform = new Ea()),
                  (this.__cacheBitmapRenderer.__worldColorTransform = new Bb());
              null == this.__cacheBitmapColorTransform &&
                (this.__cacheBitmapColorTransform = new Bb());
              this.__cacheBitmapRenderer.__stage = this.stage;
              this.__cacheBitmapRenderer.__allowSmoothing = a.__allowSmoothing;
              this.__cacheBitmapRenderer.__setBlendMode(10);
              this.__cacheBitmapRenderer.__worldAlpha = 1 / this.__worldAlpha;
              this.__cacheBitmapRenderer.__worldTransform.copyFrom(
                this.__renderTransform
              );
              this.__cacheBitmapRenderer.__worldTransform.invert();
              this.__cacheBitmapRenderer.__worldTransform.concat(
                this.__cacheBitmapMatrix
              );
              this.__cacheBitmapRenderer.__worldTransform.tx -= n;
              this.__cacheBitmapRenderer.__worldTransform.ty -= da;
              this.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(c);
              this.__cacheBitmapRenderer.__worldColorTransform.__invert();
              this.__isCacheBitmapRender = !0;
              if ("opengl" == this.__cacheBitmapRenderer.__type) {
                r = this.__cacheBitmapRenderer;
                u = r.__context3D;
                z = u.__state.renderToTexture;
                var y = u.__state.renderToTextureDepthStencil,
                  v = u.__state.renderToTextureAntiAlias,
                  w = u.__state.renderToTextureSurfaceSelector,
                  O = a.__blendMode;
                a.__suspendClipAndMask();
                r.__copyShader(a);
                this.__cacheBitmapData.__setUVRect(u, 0, 0, g, l);
                r.__setRenderTarget(this.__cacheBitmapData);
                null != this.__cacheBitmapData.image &&
                  (this.__cacheBitmapData.__textureVersion =
                    this.__cacheBitmapData.image.version + 1);
                this.__cacheBitmapData.__drawGL(this, r);
                if (m) {
                  var x = !1;
                  f = 0;
                  for (n = this.__filters; f < n.length; )
                    (da = n[f]), ++f, da.__preserveObject && (x = !0);
                  m = this.__cacheBitmapData;
                  q = null;
                  null == this.__cacheBitmapData2 ||
                  p > this.__cacheBitmapData2.width ||
                  k > this.__cacheBitmapData2.height
                    ? (this.__cacheBitmapData2 = new J(p, k, !0, 0))
                    : (this.__cacheBitmapData2.fillRect(
                        this.__cacheBitmapData2.rect,
                        0
                      ),
                      null != this.__cacheBitmapData2.image &&
                        (this.__cacheBitmapData2.__textureVersion =
                          this.__cacheBitmapData2.image.version + 1));
                  this.__cacheBitmapData2.__setUVRect(u, 0, 0, g, l);
                  h = this.__cacheBitmapData2;
                  x &&
                    (null == this.__cacheBitmapData3 ||
                    p > this.__cacheBitmapData3.width ||
                    k > this.__cacheBitmapData3.height
                      ? (this.__cacheBitmapData3 = new J(p, k, !0, 0))
                      : (this.__cacheBitmapData3.fillRect(
                          this.__cacheBitmapData3.rect,
                          0
                        ),
                        null != this.__cacheBitmapData3.image &&
                          (this.__cacheBitmapData3.__textureVersion =
                            this.__cacheBitmapData3.image.version + 1)),
                    this.__cacheBitmapData3.__setUVRect(u, 0, 0, g, l),
                    (q = this.__cacheBitmapData3));
                  r.__setBlendMode(10);
                  r.__worldAlpha = 1;
                  r.__worldTransform.identity();
                  r.__worldColorTransform.__identity();
                  f = 0;
                  for (n = this.__filters; f < n.length; ) {
                    da = n[f];
                    ++f;
                    da.__preserveObject &&
                      (r.__setRenderTarget(q),
                      r.__renderFilterPass(
                        m,
                        r.__defaultDisplayShader,
                        da.__smooth
                      ));
                    k = 0;
                    for (g = da.__numShaderPasses; k < g; )
                      (p = k++),
                        (p = da.__initShader(
                          r,
                          p,
                          da.__preserveObject ? q : null
                        )),
                        r.__setBlendMode(da.__shaderBlendMode),
                        r.__setRenderTarget(h),
                        r.__renderFilterPass(m, p, da.__smooth),
                        (p = m),
                        (m = h),
                        (h = p);
                    da.__renderDirty = !1;
                  }
                  this.__cacheBitmap.__bitmapData = m;
                }
                a.__blendMode = 10;
                a.__setBlendMode(O);
                a.__copyShader(r);
                null != z
                  ? u.setRenderToTexture(z, y, v, w)
                  : u.setRenderToBackBuffer();
                a.__resumeClipAndMask(r);
                a.setViewport();
                this.__cacheBitmapColorTransform.__copyFrom(c);
              } else {
                this.__cacheBitmapData.__drawCanvas(
                  this,
                  this.__cacheBitmapRenderer
                );
                if (m) {
                  x = a = !1;
                  f = 0;
                  for (n = this.__filters; f < n.length; )
                    (da = n[f]),
                      ++f,
                      da.__needSecondBitmapData && (a = !0),
                      da.__preserveObject && (x = !0);
                  m = this.__cacheBitmapData;
                  q = null;
                  a
                    ? (null == this.__cacheBitmapData2 ||
                      null == this.__cacheBitmapData2.image ||
                      p > this.__cacheBitmapData2.width ||
                      k > this.__cacheBitmapData2.height
                        ? (this.__cacheBitmapData2 = new J(p, k, !0, 0))
                        : this.__cacheBitmapData2.fillRect(
                            this.__cacheBitmapData2.rect,
                            0
                          ),
                      (h = this.__cacheBitmapData2))
                    : (h = m);
                  x &&
                    (null == this.__cacheBitmapData3 ||
                    null == this.__cacheBitmapData3.image ||
                    p > this.__cacheBitmapData3.width ||
                    k > this.__cacheBitmapData3.height
                      ? (this.__cacheBitmapData3 = new J(p, k, !0, 0))
                      : this.__cacheBitmapData3.fillRect(
                          this.__cacheBitmapData3.rect,
                          0
                        ),
                    (q = this.__cacheBitmapData3));
                  null == this.__tempPoint && (this.__tempPoint = new Ra());
                  k = this.__tempPoint;
                  f = 0;
                  for (n = this.__filters; f < n.length; )
                    (da = n[f]),
                      ++f,
                      da.__preserveObject && q.copyPixels(m, m.rect, k),
                      (p = da.__applyFilter(h, m, m.rect, k)),
                      da.__preserveObject &&
                        p.draw(
                          q,
                          null,
                          null != this.__objectTransform
                            ? this.__objectTransform.get_colorTransform()
                            : null
                        ),
                      (da.__renderDirty = !1),
                      a && p == h && ((p = m), (m = h), (h = p));
                  this.__cacheBitmapData != m &&
                    ((p = this.__cacheBitmapData),
                    (this.__cacheBitmapData = m),
                    (this.__cacheBitmapData2 = p),
                    (this.__cacheBitmap.__bitmapData = this.__cacheBitmapData),
                    (this.__cacheBitmapRenderer = null));
                  this.__cacheBitmap.__imageVersion =
                    this.__cacheBitmapData.__textureVersion;
                }
                this.__cacheBitmapColorTransform.__copyFrom(c);
                this.__cacheBitmapColorTransform.__isDefault(!0) ||
                  ((this.__cacheBitmapColorTransform.alphaMultiplier = 1),
                  this.__cacheBitmapData.colorTransform(
                    this.__cacheBitmapData.rect,
                    this.__cacheBitmapColorTransform
                  ));
              }
              this.__isCacheBitmapRender = !1;
            }
            (e || b) && ma.__pool.release(d);
            d = e;
          } else
            null != this.__cacheBitmap &&
              ("dom" == a.__type && this.__cacheBitmap.__renderDOMClear(a),
              (this.__cacheBitmapRenderer =
                this.__cacheBitmapColorTransform =
                this.__cacheBitmapData3 =
                this.__cacheBitmapData2 =
                this.__cacheBitmapData =
                this.__cacheBitmap =
                  null),
              (d = !0));
          Bb.__pool.release(c);
          return d;
        },
        __updateTransforms: function (a) {
          var b = null != a;
          a = b ? a : this.__transform;
          null == this.__worldTransform && (this.__worldTransform = new Ea());
          null == this.__renderTransform && (this.__renderTransform = new Ea());
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          if (b || null == this.parent) this.__worldTransform.copyFrom(a);
          else {
            var d = this.parent.__worldTransform,
              e = this.__worldTransform;
            e.a = a.a * d.a + a.b * d.c;
            e.b = a.a * d.b + a.b * d.d;
            e.c = a.c * d.a + a.d * d.c;
            e.d = a.c * d.b + a.d * d.d;
            e.tx = a.tx * d.a + a.ty * d.c + d.tx;
            e.ty = a.tx * d.b + a.ty * d.d + d.ty;
          }
          b || null == c
            ? this.__renderTransform.copyFrom(a)
            : ((d = c.__renderTransform),
              (e = this.__renderTransform),
              (e.a = a.a * d.a + a.b * d.c),
              (e.b = a.a * d.b + a.b * d.d),
              (e.c = a.c * d.a + a.d * d.c),
              (e.d = a.c * d.b + a.d * d.d),
              (e.tx = a.tx * d.a + a.ty * d.c + d.tx),
              (e.ty = a.tx * d.b + a.ty * d.d + d.ty));
          null != this.__scrollRect &&
            ((b = this.__renderTransform),
            (a = -this.__scrollRect.x),
            (c = -this.__scrollRect.y),
            (b.tx = a * b.a + c * b.c + b.tx),
            (b.ty = a * b.b + c * b.d + b.ty));
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          1 < a && (a = 1);
          0 > a && (a = 0);
          a == this.__alpha ||
            this.get_cacheAsBitmap() ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__alpha = a);
        },
        set_blendMode: function (a) {
          null == a && (a = 10);
          a == this.__blendMode ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__blendMode = a);
        },
        get_cacheAsBitmap: function () {
          return null == this.__filters ? this.__cacheAsBitmap : !0;
        },
        set_filters: function (a) {
          null != a && 0 < a.length
            ? ((this.__filters = a),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()))
            : null != this.__filters &&
              ((this.__filters = null),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return a;
        },
        get_height: function () {
          var a = ma.__pool.get();
          this.__getLocalBounds(a);
          var b = a.height;
          ma.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = ma.__pool.get(),
            c = Ea.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
          ma.__pool.release(b);
          Ea.__pool.release(c);
          return a;
        },
        get_loaderInfo: function () {
          return null != this.stage ? ad.current.__loaderInfo : null;
        },
        get_mask: function () {
          return this.__mask;
        },
        set_mask: function (a) {
          if (a == this.__mask) return a;
          a != this.__mask &&
            (this.__setTransformDirty(),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          if (null != this.__mask) {
            this.__mask.__isMask = !1;
            this.__mask.__maskTarget = null;
            this.__mask.__setTransformDirty();
            var b = this.__mask;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          null != a &&
            ((a.__isMask = !0),
            (a.__maskTarget = this),
            a.__setWorldTransformInvalid());
          null != this.__cacheBitmap &&
            this.__cacheBitmap.get_mask() != a &&
            this.__cacheBitmap.set_mask(a);
          return (this.__mask = a);
        },
        get_mouseX: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : ad.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : ad.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.tx
            : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
        },
        get_mouseY: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : ad.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : ad.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.ty
            : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
        },
        get_name: function () {
          return this.__name;
        },
        set_name: function (a) {
          return (this.__name = a);
        },
        get_rotation: function () {
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            this.__rotation = a;
            var b = (Math.PI / 180) * this.__rotation;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            this.__transform.a = this.__rotationCosine * this.__scaleX;
            this.__transform.b = this.__rotationSine * this.__scaleX;
            this.__transform.c = -this.__rotationSine * this.__scaleY;
            this.__transform.d = this.__rotationCosine * this.__scaleY;
            this.__setTransformDirty();
          }
          return a;
        },
        get_scaleX: function () {
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX)
            if (((this.__scaleX = a), 0 == this.__transform.b))
              a != this.__transform.a && this.__setTransformDirty(),
                (this.__transform.a = a);
            else {
              var b = this.__rotationCosine * a,
                c = this.__rotationSine * a;
              (this.__transform.a == b && this.__transform.b == c) ||
                this.__setTransformDirty();
              this.__transform.a = b;
              this.__transform.b = c;
            }
          return a;
        },
        get_scaleY: function () {
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY)
            if (((this.__scaleY = a), 0 == this.__transform.c))
              a != this.__transform.d && this.__setTransformDirty(),
                (this.__transform.d = a);
            else {
              var b = -this.__rotationSine * a,
                c = this.__rotationCosine * a;
              (this.__transform.d == c && this.__transform.c == b) ||
                this.__setTransformDirty();
              this.__transform.c = b;
              this.__transform.d = c;
            }
          return a;
        },
        get_scrollRect: function () {
          return null == this.__scrollRect ? null : this.__scrollRect.clone();
        },
        set_scrollRect: function (a) {
          if (
            (null == a && null == this.__scrollRect) ||
            (null != a &&
              null != this.__scrollRect &&
              this.__scrollRect.equals(a))
          )
            return a;
          null != a
            ? (null == this.__scrollRect && (this.__scrollRect = new ma()),
              this.__scrollRect.copyFrom(a))
            : (this.__scrollRect = null);
          this.__setTransformDirty();
          ta.__supportDOM &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return a;
        },
        get_transform: function () {
          null == this.__objectTransform &&
            (this.__objectTransform = new ti(this));
          return this.__objectTransform;
        },
        set_transform: function (a) {
          if (null == a)
            throw C.thrown(new qh("Parameter transform must be non-null."));
          null == this.__objectTransform &&
            (this.__objectTransform = new ti(this));
          this.__setTransformDirty();
          this.__objectTransform.set_matrix(a.get_matrix());
          if (
            !this.__objectTransform
              .get_colorTransform()
              .__equals(a.get_colorTransform(), !0) ||
            (!this.get_cacheAsBitmap() &&
              this.__objectTransform.get_colorTransform().alphaMultiplier !=
                a.get_colorTransform().alphaMultiplier)
          )
            this.__objectTransform
              .get_colorTransform()
              .__copyFrom(a.get_colorTransform()),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return this.__objectTransform;
        },
        get_visible: function () {
          return this.__visible;
        },
        set_visible: function (a) {
          a == this.__visible ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__visible = a);
        },
        get_width: function () {
          var a = ma.__pool.get();
          this.__getLocalBounds(a);
          var b = a.width;
          ma.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = ma.__pool.get(),
            c = Ea.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
          ma.__pool.release(b);
          Ea.__pool.release(c);
          return a;
        },
        get_x: function () {
          return this.__transform.tx;
        },
        set_x: function (a) {
          a != this.__transform.tx && this.__setTransformDirty();
          return (this.__transform.tx = a);
        },
        get_y: function () {
          return this.__transform.ty;
        },
        set_y: function (a) {
          a != this.__transform.ty && this.__setTransformDirty();
          return (this.__transform.ty = a);
        },
        __class__: ta,
        __properties__: {
          set_filters: "set_filters",
          set_blendMode: "set_blendMode",
          set_y: "set_y",
          get_y: "get_y",
          set_x: "set_x",
          get_x: "get_x",
          set_width: "set_width",
          get_width: "get_width",
          set_visible: "set_visible",
          get_visible: "get_visible",
          set_transform: "set_transform",
          get_transform: "get_transform",
          set_scrollRect: "set_scrollRect",
          get_scrollRect: "get_scrollRect",
          set_scaleY: "set_scaleY",
          get_scaleY: "get_scaleY",
          set_scaleX: "set_scaleX",
          get_scaleX: "get_scaleX",
          set_rotation: "set_rotation",
          get_rotation: "get_rotation",
          set_name: "set_name",
          get_name: "get_name",
          get_mouseY: "get_mouseY",
          get_mouseX: "get_mouseX",
          set_mask: "set_mask",
          get_mask: "get_mask",
          get_loaderInfo: "get_loaderInfo",
          set_height: "set_height",
          get_height: "get_height",
          get_cacheAsBitmap: "get_cacheAsBitmap",
          set_alpha: "set_alpha",
          get_alpha: "get_alpha",
        },
      });
      var $a = function () {
        ta.call(this);
        this.doubleClickEnabled = !1;
        this.mouseEnabled = !0;
        this.needsSoftKeyboard = !1;
        this.__tabEnabled = null;
        this.__tabIndex = -1;
      };
      g["openfl.display.InteractiveObject"] = $a;
      $a.__name__ = "openfl.display.InteractiveObject";
      $a.__super__ = ta;
      $a.prototype = r(ta.prototype, {
        __allowMouseFocus: function () {
          return this.get_tabEnabled();
        },
        __getInteractive: function (a) {
          null != a &&
            (a.push(this),
            null != this.parent && this.parent.__getInteractive(a));
          return !0;
        },
        __hitTest: function (a, b, c, d, e, f) {
          return !f.get_visible() || this.__isMask || (e && !this.mouseEnabled)
            ? !1
            : ta.prototype.__hitTest.call(this, a, b, c, d, e, f);
        },
        __tabTest: function (a) {
          this.get_tabEnabled() && a.push(this);
        },
        get_tabEnabled: function () {
          return 1 == this.__tabEnabled ? !0 : !1;
        },
        get_tabIndex: function () {
          return this.__tabIndex;
        },
        __class__: $a,
        __properties__: r(ta.prototype.__properties__, {
          get_tabIndex: "get_tabIndex",
          get_tabEnabled: "get_tabEnabled",
        }),
      });
      var va = function () {
        $a.call(this);
        this.__tabChildren = this.mouseChildren = !0;
        this.__children = [];
        this.__removedChildren = rb.toObjectVector(null);
      };
      g["openfl.display.DisplayObjectContainer"] = va;
      va.__name__ = "openfl.display.DisplayObjectContainer";
      va.__super__ = $a;
      va.prototype = r($a.prototype, {
        addChild: function (a) {
          return this.addChildAt(a, this.get_numChildren());
        },
        addChildAt: function (a, b) {
          if (null == a)
            throw (
              ((a = new qh("Error #2007: Parameter child must be non-null.")),
              (a.errorID = 2007),
              C.thrown(a))
            );
          if (a.stage == a)
            throw (
              ((a = new Eg(
                "Error #3783: A Stage object cannot be added as the child of another object."
              )),
              (a.errorID = 3783),
              C.thrown(a))
            );
          if (b > this.__children.length || 0 > b)
            throw C.thrown("Invalid index position " + b);
          if (a.parent == this)
            this.__children[b] != a &&
              (ba.remove(this.__children, a),
              this.__children.splice(b, 0, a),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else {
            null != a.parent && a.parent.removeChild(a);
            this.__children.splice(b, 0, a);
            a.parent = this;
            (b = null != this.stage && null == a.stage) &&
              a.__setStageReference(this.stage);
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var c = new Ca("added");
            c.bubbles = !0;
            c.target = a;
            a.__dispatchWithCapture(c);
            b &&
              ((c = new Ca("addedToStage", !1, !1)),
              a.__dispatchWithCapture(c),
              a.__dispatchChildren(c));
          }
          return a;
        },
        contains: function (a) {
          for (; a != this && null != a; ) a = a.parent;
          return a == this;
        },
        getChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.__children[a]
            : null;
        },
        getChildIndex: function (a) {
          for (var b = 0, c = this.__children.length; b < c; ) {
            var d = b++;
            if (this.__children[d] == a) return d;
          }
          return -1;
        },
        removeChild: function (a) {
          if (null != a && a.parent == this) {
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var b = new Ca("removed", !0);
            a.__dispatchWithCapture(b);
            null != this.stage &&
              (null != a.stage &&
                this.stage.get_focus() == a &&
                this.stage.set_focus(null),
              (b = new Ca("removedFromStage", !1, !1)),
              a.__dispatchWithCapture(b),
              a.__dispatchChildren(b),
              a.__setStageReference(null));
            a.parent = null;
            ba.remove(this.__children, a);
            this.__removedChildren.push(a);
            a.__setTransformDirty();
          }
          return a;
        },
        removeChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.removeChild(this.__children[a])
            : null;
        },
        removeChildren: function (a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          if (2147483647 == b && ((b = this.__children.length - 1), 0 > b))
            return;
          if (!(a > this.__children.length - 1)) {
            if (b < a || 0 > a || b > this.__children.length)
              throw C.thrown(new ui("The supplied index is out of bounds."));
            for (b -= a; 0 <= b; ) this.removeChildAt(a), --b;
          }
        },
        __cleanup: function () {
          $a.prototype.__cleanup.call(this);
          for (var a = 0, b = this.__children; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__cleanup();
          }
          for (a = this.__removedChildren.iterator(); a.hasNext(); )
            (b = a.next()), null == b.stage && b.__cleanup();
          this.__removedChildren.set_length(0);
        },
        __dispatchChildren: function (a) {
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              a.target = d;
              if (!d.__dispatchWithCapture(a)) break;
              d.__dispatchChildren(a);
            }
        },
        __enterFrame: function (a) {
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __getBounds: function (a, b) {
          $a.prototype.__getBounds.call(this, a, b);
          if (0 != this.__children.length) {
            for (
              var c = Ea.__pool.get(), d = 0, e = this.__children;
              d < e.length;

            ) {
              var f = e[d];
              ++d;
              if (0 != f.__scaleX && 0 != f.__scaleY) {
                var h = f.__transform;
                c.a = h.a * b.a + h.b * b.c;
                c.b = h.a * b.b + h.b * b.d;
                c.c = h.c * b.a + h.d * b.c;
                c.d = h.c * b.b + h.d * b.d;
                c.tx = h.tx * b.a + h.ty * b.c + b.tx;
                c.ty = h.tx * b.b + h.ty * b.d + b.ty;
                f.__getBounds(a, c);
              }
            }
            Ea.__pool.release(c);
          }
        },
        __getFilterBounds: function (a, b) {
          $a.prototype.__getFilterBounds.call(this, a, b);
          if (null == this.__scrollRect && 0 != this.__children.length) {
            for (
              var c = Ea.__pool.get(), d = 0, e = this.__children;
              d < e.length;

            ) {
              var f = e[d];
              ++d;
              if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
                var h = f.__transform;
                c.a = h.a * b.a + h.b * b.c;
                c.b = h.a * b.b + h.b * b.d;
                c.c = h.c * b.a + h.d * b.c;
                c.d = h.c * b.b + h.d * b.d;
                c.tx = h.tx * b.a + h.ty * b.c + b.tx;
                c.ty = h.tx * b.b + h.ty * b.d + b.ty;
                f.__getFilterBounds(a, c);
              }
            }
            Ea.__pool.release(c);
          }
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            $a.prototype.__getRenderBounds.call(this, a, b);
          else if (
            ($a.prototype.__getBounds.call(this, a, b),
            0 != this.__children.length)
          ) {
            for (
              var c = Ea.__pool.get(), d = 0, e = this.__children;
              d < e.length;

            ) {
              var f = e[d];
              ++d;
              if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
                var h = f.__transform;
                c.a = h.a * b.a + h.b * b.c;
                c.b = h.a * b.b + h.b * b.d;
                c.c = h.c * b.a + h.d * b.c;
                c.d = h.c * b.b + h.d * b.d;
                c.tx = h.tx * b.a + h.ty * b.c + b.tx;
                c.ty = h.tx * b.b + h.ty * b.d + b.ty;
                f.__getRenderBounds(a, c);
              }
            }
            Ea.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d, e, f) {
          if (
            !f.get_visible() ||
            this.__isMask ||
            (e && !this.mouseEnabled && !this.mouseChildren) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          if (null != this.__scrollRect) {
            var h = Ra.__pool.get();
            h.setTo(a, b);
            var m = this.__getRenderTransform(),
              n = m.a * m.d - m.b * m.c;
            if (0 == n) (h.x = -m.tx), (h.y = -m.ty);
            else {
              var da = (1 / n) * (m.c * (m.ty - h.y) + m.d * (h.x - m.tx));
              h.y = (1 / n) * (m.a * (h.y - m.ty) + m.b * (m.tx - h.x));
              h.x = da;
            }
            if (!this.__scrollRect.containsPoint(h))
              return Ra.__pool.release(h), !1;
            Ra.__pool.release(h);
          }
          h = this.__children.length;
          if (e)
            if (null == d || !this.mouseChildren)
              for (; 0 <= --h; ) {
                if (
                  this.__children[h].__hitTest(
                    a,
                    b,
                    c,
                    null,
                    !0,
                    this.__children[h]
                  )
                )
                  return null != d && d.push(f), !0;
              }
            else {
              if (null != d) {
                e = d.length;
                for (
                  n = !1;
                  0 <= --h &&
                  !(
                    ((m = this.__children[h].__getInteractive(null)) ||
                      (this.mouseEnabled && !n)) &&
                    this.__children[h].__hitTest(
                      a,
                      b,
                      c,
                      d,
                      !0,
                      this.__children[h]
                    ) &&
                    ((n = !0), m && d.length > e)
                  );

                );
                if (n) return d.splice(e, 0, f), !0;
              }
            }
          else {
            for (
              n = !1;
              0 <= --h &&
              (!this.__children[h].__hitTest(
                a,
                b,
                c,
                d,
                !1,
                this.__children[h]
              ) ||
                ((n = !0), null != d));

            );
            return n;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          for (var c = this.__children.length; 0 <= --c; )
            if (this.__children[c].__hitTestMask(a, b)) return !0;
          return !1;
        },
        __renderCairo: function (a) {},
        __renderCairoMask: function (a) {},
        __renderCanvas: function (a) {
          for (var b = this.__removedChildren.iterator(); b.hasNext(); ) {
            var c = b.next();
            null == c.stage && c.__cleanup();
          }
          this.__removedChildren.set_length(0);
          if (
            !(
              !this.__renderable ||
              0 >= this.__worldAlpha ||
              (null != this.get_mask() &&
                (0 >= this.get_mask().get_width() ||
                  0 >= this.get_mask().get_height()))
            ) &&
            ($a.prototype.__renderCanvas.call(this, a),
            null == this.__cacheBitmap || this.__isCacheBitmapRender)
          ) {
            a.__pushMaskObject(this);
            if (null != a.__stage) {
              b = 0;
              for (c = this.__children; b < c.length; ) {
                var d = c[b];
                ++b;
                d.__renderCanvas(a);
                d.__renderDirty = !1;
              }
              this.__renderDirty = !1;
            } else
              for (b = 0, c = this.__children; b < c.length; )
                (d = c[b]), ++b, d.__renderCanvas(a);
            a.__popMaskObject(this);
          }
        },
        __renderCanvasMask: function (a) {
          for (var b = this.__removedChildren.iterator(); b.hasNext(); ) {
            var c = b.next();
            null == c.stage && c.__cleanup();
          }
          this.__removedChildren.set_length(0);
          null != this.__graphics && w.renderMask(this.__graphics, a);
          b = 0;
          for (c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__renderCanvasMask(a);
          }
        },
        __renderDOM: function (a) {
          for (var b = this.__removedChildren.iterator(); b.hasNext(); ) {
            var c = b.next();
            null == c.stage && c.__renderDOM(a);
          }
          for (b = this.__removedChildren.iterator(); b.hasNext(); )
            (c = b.next()), null == c.stage && c.__cleanup();
          this.__removedChildren.set_length(0);
          $a.prototype.__renderDOM.call(this, a);
          if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
            a.__pushMaskObject(this);
            if (null != a.__stage) {
              b = 0;
              for (c = this.__children; b < c.length; ) {
                var d = c[b];
                ++b;
                d.__renderDOM(a);
                d.__renderDirty = !1;
              }
              this.__renderDirty = !1;
            } else
              for (b = 0, c = this.__children; b < c.length; )
                (d = c[b]), ++b, d.__renderDOM(a);
            a.__popMaskObject(this);
          }
        },
        __renderDOMClear: function (a) {
          for (var b = this.__removedChildren.iterator(); b.hasNext(); ) {
            var c = b.next();
            null == c.stage && c.__renderDOMClear(a);
          }
          for (b = this.__removedChildren.iterator(); b.hasNext(); )
            (c = b.next()), null == c.stage && c.__cleanup();
          this.__removedChildren.set_length(0);
          b = 0;
          for (c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__renderDOMClear(a);
          }
        },
        __renderGL: function (a) {
          for (var b = this.__removedChildren.iterator(); b.hasNext(); ) {
            var c = b.next();
            null == c.stage && c.__cleanup();
          }
          this.__removedChildren.set_length(0);
          if (
            this.__renderable &&
            !(0 >= this.__worldAlpha) &&
            ($a.prototype.__renderGL.call(this, a),
            null == this.__cacheBitmap || this.__isCacheBitmapRender)
          ) {
            if (0 < this.__children.length)
              if ((a.__pushMaskObject(this), null != a.__stage)) {
                b = 0;
                for (c = this.__children; b < c.length; ) {
                  var d = c[b];
                  ++b;
                  d.__renderGL(a);
                  d.__renderDirty = !1;
                }
                this.__renderDirty = !1;
              } else
                for (b = 0, c = this.__children; b < c.length; )
                  (d = c[b]), ++b, d.__renderGL(a);
            0 < this.__children.length && a.__popMaskObject(this);
          }
        },
        __renderGLMask: function (a) {
          for (var b = this.__removedChildren.iterator(); b.hasNext(); ) {
            var c = b.next();
            null == c.stage && c.__cleanup();
          }
          this.__removedChildren.set_length(0);
          null != this.__graphics && Df.renderMask(this, a);
          b = 0;
          for (c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__renderGLMask(a);
          }
        },
        __setStageReference: function (a) {
          $a.prototype.__setStageReference.call(this, a);
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__setStageReference(a);
            }
        },
        __setWorldTransformInvalid: function () {
          if (
            !this.__worldTransformInvalid &&
            ((this.__worldTransformInvalid = !0), null != this.__children)
          )
            for (var a = 0, b = this.__children; a < b.length; ) {
              var c = b[a];
              ++a;
              c.__setWorldTransformInvalid();
            }
        },
        __shouldCacheHardware: function (a) {
          if (1 == a) return !0;
          a = $a.prototype.__shouldCacheHardware.call(this, a);
          if (1 == a) return !0;
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              a = d.__shouldCacheHardware(a);
              if (1 == a) return !0;
            }
          return a;
        },
        __tabTest: function (a) {
          $a.prototype.__tabTest.call(this, a);
          if (this.get_tabChildren())
            for (var b, c = 0, d = this.__children; c < d.length; ) {
              var e = d[c];
              ++c;
              if ((b = e.__getInteractive(null))) (b = e), b.__tabTest(a);
            }
        },
        __update: function (a, b) {
          $a.prototype.__update.call(this, a, b);
          if (b) {
            b = 0;
            for (var c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__update(a, !0);
            }
          }
        },
        get_numChildren: function () {
          return this.__children.length;
        },
        get_tabChildren: function () {
          return this.__tabChildren;
        },
        __class__: va,
        __properties__: r($a.prototype.__properties__, {
          get_tabChildren: "get_tabChildren",
          get_numChildren: "get_numChildren",
        }),
      });
      var fa = function () {
        va.call(this);
        this.__buttonMode = !1;
        this.useHandCursor = !0;
      };
      g["openfl.display.Sprite"] = fa;
      fa.__name__ = "openfl.display.Sprite";
      fa.__super__ = va;
      fa.prototype = r(va.prototype, {
        __getCursor: function () {
          return this.__buttonMode && this.useHandCursor ? "button" : null;
        },
        __hitTest: function (a, b, c, d, e, f) {
          if (e && !this.mouseEnabled && !this.mouseChildren) return !1;
          if (
            !f.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return this.__hitTestHitArea(a, b, c, d, e, f);
          if (null != this.__scrollRect) {
            var h = Ra.__pool.get();
            h.setTo(a, b);
            var m = this.__getRenderTransform(),
              n = m.a * m.d - m.b * m.c;
            if (0 == n) (h.x = -m.tx), (h.y = -m.ty);
            else {
              var da = (1 / n) * (m.c * (m.ty - h.y) + m.d * (h.x - m.tx));
              h.y = (1 / n) * (m.a * (h.y - m.ty) + m.b * (m.tx - h.x));
              h.x = da;
            }
            if (!this.__scrollRect.containsPoint(h))
              return (
                Ra.__pool.release(h), this.__hitTestHitArea(a, b, c, d, !0, f)
              );
            Ra.__pool.release(h);
          }
          return va.prototype.__hitTest.call(this, a, b, c, d, e, f)
            ? null != d
              ? e
              : !0
            : null == this.hitArea &&
              null != this.__graphics &&
              this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())
            ? (null == d || (e && !this.mouseEnabled) || d.push(f), !0)
            : this.__hitTestHitArea(a, b, c, d, e, f);
        },
        __hitTestHitArea: function (a, b, c, d, e, f) {
          return null == this.hitArea || this.hitArea.mouseEnabled
            ? !1
            : ((this.hitArea.mouseEnabled = !0),
              (a = this.hitArea.__hitTest(a, b, c, null, !0, f)),
              (this.hitArea.mouseEnabled = !1),
              null != d && a && (d[d.length] = f),
              a);
        },
        __hitTestMask: function (a, b) {
          return va.prototype.__hitTestMask.call(this, a, b) ||
            (null != this.__graphics &&
              this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()))
            ? !0
            : !1;
        },
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new pd(this));
          return this.__graphics;
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? this.__buttonMode
            : this.__tabEnabled;
        },
        get_buttonMode: function () {
          return this.__buttonMode;
        },
        __class__: fa,
        __properties__: r(va.prototype.__properties__, {
          get_graphics: "get_graphics",
          get_buttonMode: "get_buttonMode",
        }),
      });
      var Na = function () {
        this.startFullscreen = !1;
        this.skipSplash = !0;
        this.framerate = 120;
        this.zoom = -1;
        this.initialState = af;
        this.gameHeight = 720;
        this.gameWidth = 1280;
        fa.call(this);
        null != this.stage
          ? this.init()
          : this.addEventListener("addedToStage", q(this, this.init));
      };
      g.Main = Na;
      Na.__name__ = "Main";
      Na.main = function () {
        na.get_current().addChild(new Na());
      };
      Na.__super__ = fa;
      Na.prototype = r(fa.prototype, {
        init: function (a) {
          this.hasEventListener("addedToStage") &&
            this.removeEventListener("addedToStage", q(this, this.init));
          this.setupGame();
        },
        setupGame: function () {
          var a = na.get_current().stage.stageWidth,
            b = na.get_current().stage.stageHeight;
          -1 == this.zoom &&
            ((this.zoom = Math.min(a / this.gameWidth, b / this.gameHeight)),
            (this.gameWidth = Math.ceil(a / this.zoom)),
            (this.gameHeight = Math.ceil(b / this.zoom)));
          this.initialState = af;
          this.addChild(
            new vi(
              this.gameWidth,
              this.gameHeight,
              this.initialState,
              this.zoom,
              this.framerate,
              this.framerate,
              this.skipSplash,
              this.startFullscreen
            )
          );
        },
        __class__: Na,
      });
      var xa = function (a) {
        a.addChild(this);
        Na.call(this);
        this.dispatchEvent(new Ca("addedToStage", !1, !1));
      };
      g.DocumentClass = xa;
      xa.__name__ = "DocumentClass";
      xa.__super__ = Na;
      xa.prototype = r(Na.prototype, { __class__: xa });
      var aa = function (a, b) {
        this.danceDir = !1;
        H.call(this, a, b);
        this.set_frames(
          Sa.fromSparrow(
            M.getPath("images/limo/limoDancer.png", "IMAGE", null),
            M.getPath("images/limo/limoDancer.xml", "TEXT", null)
          )
        );
        this.animation.addByIndices(
          "danceLeft",
          "bg dancer sketch PINK",
          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
          "",
          24,
          !1
        );
        this.animation.addByIndices(
          "danceRight",
          "bg dancer sketch PINK",
          [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
          "",
          24,
          !1
        );
        this.animation.play("danceLeft");
        this.set_antialiasing(!0);
      };
      g.BackgroundDancer = aa;
      aa.__name__ = "BackgroundDancer";
      aa.__super__ = H;
      aa.prototype = r(H.prototype, {
        dance: function () {
          (this.danceDir = !this.danceDir)
            ? this.animation.play("danceRight", !0)
            : this.animation.play("danceLeft", !0);
        },
        __class__: aa,
      });
      var X = function (a, b) {
        this.danceDir = !1;
        H.call(this, a, b);
        this.set_frames(
          Sa.fromSparrow(
            M.getPath("images/weeb/bgFreaks.png", "IMAGE", null),
            M.getPath("images/weeb/bgFreaks.xml", "TEXT", null)
          )
        );
        this.animation.addByIndices(
          "danceLeft",
          "BG girls group",
          v.numberArray(14),
          "",
          24,
          !1
        );
        this.animation.addByIndices(
          "danceRight",
          "BG girls group",
          v.numberArray(30, 15),
          "",
          24,
          !1
        );
        this.animation.play("danceLeft");
      };
      g.BackgroundGirls = X;
      X.__name__ = "BackgroundGirls";
      X.__super__ = H;
      X.prototype = r(H.prototype, {
        dance: function () {
          (this.danceDir = !this.danceDir)
            ? this.animation.play("danceRight", !0)
            : this.animation.play("danceLeft", !0);
        },
        __class__: X,
      });
      var dc = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = "bf");
        this.danced = !1;
        this.holdTimer = 0;
        this.curCharacter = "bf";
        this.debugMode = this.isPlayer = !1;
        H.call(this, a, b);
        this.animOffsets = new ea();
        this.curCharacter = c;
        this.isPlayer = d;
        this.set_antialiasing(!0);
        switch (this.curCharacter) {
          case "bf":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/BOYFRIEND.png", "IMAGE", a),
              M.getPath("images/BOYFRIEND.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "BF idle dance", 24, !1);
            this.animation.addByPrefix("singUP", "BF NOTE UP0", 24, !1);
            this.animation.addByPrefix("singLEFT", "BF NOTE LEFT0", 24, !1);
            this.animation.addByPrefix("singRIGHT", "BF NOTE RIGHT0", 24, !1);
            this.animation.addByPrefix("singDOWN", "BF NOTE DOWN0", 24, !1);
            this.animation.addByPrefix("singUPmiss", "BF NOTE UP MISS", 24, !1);
            this.animation.addByPrefix(
              "singLEFTmiss",
              "BF NOTE LEFT MISS",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singRIGHTmiss",
              "BF NOTE RIGHT MISS",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singDOWNmiss",
              "BF NOTE DOWN MISS",
              24,
              !1
            );
            this.animation.addByPrefix("hey", "BF HEY", 24, !1);
            this.animation.addByPrefix("firstDeath", "BF dies", 24, !1);
            this.animation.addByPrefix("deathLoop", "BF Dead Loop", 24, !0);
            this.animation.addByPrefix(
              "deathConfirm",
              "BF Dead confirm",
              24,
              !1
            );
            this.animation.addByPrefix("scared", "BF idle shaking", 24);
            this.addOffset("idle", -5);
            this.addOffset("singUP", -29, 27);
            this.addOffset("singRIGHT", -38, -7);
            this.addOffset("singLEFT", 12, -6);
            this.addOffset("singDOWN", -10, -50);
            this.addOffset("singUPmiss", -29, 27);
            this.addOffset("singRIGHTmiss", -30, 21);
            this.addOffset("singLEFTmiss", 12, 24);
            this.addOffset("singDOWNmiss", -11, -19);
            this.addOffset("hey", 7, 4);
            this.addOffset("firstDeath", 37, 11);
            this.addOffset("deathLoop", 37, 5);
            this.addOffset("deathConfirm", 37, 69);
            this.addOffset("scared", -4);
            this.playAnim("idle");
            this.set_flipX(!0);
            break;
          case "bf-car":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/bfCar.png", "IMAGE", a),
              M.getPath("images/bfCar.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "BF idle dance", 24, !1);
            this.animation.addByPrefix("singUP", "BF NOTE UP0", 24, !1);
            this.animation.addByPrefix("singLEFT", "BF NOTE LEFT0", 24, !1);
            this.animation.addByPrefix("singRIGHT", "BF NOTE RIGHT0", 24, !1);
            this.animation.addByPrefix("singDOWN", "BF NOTE DOWN0", 24, !1);
            this.animation.addByPrefix("singUPmiss", "BF NOTE UP MISS", 24, !1);
            this.animation.addByPrefix(
              "singLEFTmiss",
              "BF NOTE LEFT MISS",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singRIGHTmiss",
              "BF NOTE RIGHT MISS",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singDOWNmiss",
              "BF NOTE DOWN MISS",
              24,
              !1
            );
            this.addOffset("idle", -5);
            this.addOffset("singUP", -29, 27);
            this.addOffset("singRIGHT", -38, -7);
            this.addOffset("singLEFT", 12, -6);
            this.addOffset("singDOWN", -10, -50);
            this.addOffset("singUPmiss", -29, 27);
            this.addOffset("singRIGHTmiss", -30, 21);
            this.addOffset("singLEFTmiss", 12, 24);
            this.addOffset("singDOWNmiss", -11, -19);
            this.playAnim("idle");
            this.set_flipX(!0);
            break;
          case "bf-christmas":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/christmas/bfChristmas.png", "IMAGE", a),
              M.getPath("images/christmas/bfChristmas.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "BF idle dance", 24, !1);
            this.animation.addByPrefix("singUP", "BF NOTE UP0", 24, !1);
            this.animation.addByPrefix("singLEFT", "BF NOTE LEFT0", 24, !1);
            this.animation.addByPrefix("singRIGHT", "BF NOTE RIGHT0", 24, !1);
            this.animation.addByPrefix("singDOWN", "BF NOTE DOWN0", 24, !1);
            this.animation.addByPrefix("singUPmiss", "BF NOTE UP MISS", 24, !1);
            this.animation.addByPrefix(
              "singLEFTmiss",
              "BF NOTE LEFT MISS",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singRIGHTmiss",
              "BF NOTE RIGHT MISS",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singDOWNmiss",
              "BF NOTE DOWN MISS",
              24,
              !1
            );
            this.animation.addByPrefix("hey", "BF HEY", 24, !1);
            this.addOffset("idle", -5);
            this.addOffset("singUP", -29, 27);
            this.addOffset("singRIGHT", -38, -7);
            this.addOffset("singLEFT", 12, -6);
            this.addOffset("singDOWN", -10, -50);
            this.addOffset("singUPmiss", -29, 27);
            this.addOffset("singRIGHTmiss", -30, 21);
            this.addOffset("singLEFTmiss", 12, 24);
            this.addOffset("singDOWNmiss", -11, -19);
            this.addOffset("hey", 7, 4);
            this.playAnim("idle");
            this.set_flipX(!0);
            break;
          case "bf-pixel":
            a = null;
            this.set_frames(
              Sa.fromSparrow(
                M.getPath("images/weeb/bfPixel.png", "IMAGE", a),
                M.getPath("images/weeb/bfPixel.xml", "TEXT", a)
              )
            );
            this.animation.addByPrefix("idle", "BF IDLE", 24, !1);
            this.animation.addByPrefix("singUP", "BF UP NOTE", 24, !1);
            this.animation.addByPrefix("singLEFT", "BF LEFT NOTE", 24, !1);
            this.animation.addByPrefix("singRIGHT", "BF RIGHT NOTE", 24, !1);
            this.animation.addByPrefix("singDOWN", "BF DOWN NOTE", 24, !1);
            this.animation.addByPrefix("singUPmiss", "BF UP MISS", 24, !1);
            this.animation.addByPrefix("singLEFTmiss", "BF LEFT MISS", 24, !1);
            this.animation.addByPrefix(
              "singRIGHTmiss",
              "BF RIGHT MISS",
              24,
              !1
            );
            this.animation.addByPrefix("singDOWNmiss", "BF DOWN MISS", 24, !1);
            this.addOffset("idle");
            this.addOffset("singUP");
            this.addOffset("singRIGHT");
            this.addOffset("singLEFT");
            this.addOffset("singDOWN");
            this.addOffset("singUPmiss");
            this.addOffset("singRIGHTmiss");
            this.addOffset("singLEFTmiss");
            this.addOffset("singDOWNmiss");
            this.setGraphicSize((6 * this.get_width()) | 0);
            this.updateHitbox();
            this.playAnim("idle");
            a = this;
            a.set_width(a.get_width() - 100);
            a = this;
            a.set_height(a.get_height() - 100);
            this.set_antialiasing(!1);
            this.set_flipX(!0);
            break;
          case "bf-pixel-dead":
            a = null;
            this.set_frames(
              Sa.fromSparrow(
                M.getPath("images/weeb/bfPixelsDEAD.png", "IMAGE", a),
                M.getPath("images/weeb/bfPixelsDEAD.xml", "TEXT", a)
              )
            );
            this.animation.addByPrefix("singUP", "BF Dies pixel", 24, !1);
            this.animation.addByPrefix("firstDeath", "BF Dies pixel", 24, !1);
            this.animation.addByPrefix("deathLoop", "Retry Loop", 24, !0);
            this.animation.addByPrefix("deathConfirm", "RETRY CONFIRM", 24, !1);
            this.animation.play("firstDeath");
            this.addOffset("firstDeath");
            this.addOffset("deathLoop", -37);
            this.addOffset("deathConfirm", -37);
            this.playAnim("firstDeath");
            this.setGraphicSize((6 * this.get_width()) | 0);
            this.updateHitbox();
            this.set_antialiasing(!1);
            this.set_flipX(!0);
            break;
          case "dad":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/DADDY_DEAREST.png", "IMAGE", a),
              M.getPath("images/DADDY_DEAREST.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "Dad idle dance", 24);
            this.animation.addByPrefix("singUP", "Dad Sing Note UP", 24);
            this.animation.addByPrefix("singRIGHT", "Dad Sing Note RIGHT", 24);
            this.animation.addByPrefix("singDOWN", "Dad Sing Note DOWN", 24);
            this.animation.addByPrefix("singLEFT", "Dad Sing Note LEFT", 24);
            this.addOffset("idle");
            this.addOffset("singUP", -6, 50);
            this.addOffset("singRIGHT", 0, 27);
            this.addOffset("singLEFT", -10, 10);
            this.addOffset("singDOWN", 0, -30);
            this.playAnim("idle");
            break;
          case "gf":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/GF_assets.png", "IMAGE", a),
              M.getPath("images/GF_assets.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("cheer", "GF Cheer", 24, !1);
            this.animation.addByPrefix("singLEFT", "GF left note", 24, !1);
            this.animation.addByPrefix("singRIGHT", "GF Right Note", 24, !1);
            this.animation.addByPrefix("singUP", "GF Up Note", 24, !1);
            this.animation.addByPrefix("singDOWN", "GF Down Note", 24, !1);
            this.animation.addByIndices(
              "sad",
              "gf sad",
              [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceLeft",
              "GF Dancing Beat",
              [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceRight",
              "GF Dancing Beat",
              [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "hairBlow",
              "GF Dancing Beat Hair blowing",
              [0, 1, 2, 3],
              "",
              24
            );
            this.animation.addByIndices(
              "hairFall",
              "GF Dancing Beat Hair Landing",
              [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
              "",
              24,
              !1
            );
            this.animation.addByPrefix("scared", "GF FEAR", 24);
            this.addOffset("cheer");
            this.addOffset("sad", -2, -2);
            this.addOffset("danceLeft", 0, -9);
            this.addOffset("danceRight", 0, -9);
            this.addOffset("singUP", 0, 4);
            this.addOffset("singRIGHT", 0, -20);
            this.addOffset("singLEFT", 0, -19);
            this.addOffset("singDOWN", 0, -20);
            this.addOffset("hairBlow", 45, -8);
            this.addOffset("hairFall", 0, -9);
            this.addOffset("scared", -2, -17);
            this.playAnim("danceRight");
            break;
          case "gf-car":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/gfCar.png", "IMAGE", a),
              M.getPath("images/gfCar.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByIndices(
              "singUP",
              "GF Dancing Beat Hair blowing CAR",
              [0],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceLeft",
              "GF Dancing Beat Hair blowing CAR",
              [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceRight",
              "GF Dancing Beat Hair blowing CAR",
              [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
              "",
              24,
              !1
            );
            this.addOffset("danceLeft", 0);
            this.addOffset("danceRight", 0);
            this.playAnim("danceRight");
            break;
          case "gf-christmas":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/christmas/gfChristmas.png", "IMAGE", a),
              M.getPath("images/christmas/gfChristmas.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("cheer", "GF Cheer", 24, !1);
            this.animation.addByPrefix("singLEFT", "GF left note", 24, !1);
            this.animation.addByPrefix("singRIGHT", "GF Right Note", 24, !1);
            this.animation.addByPrefix("singUP", "GF Up Note", 24, !1);
            this.animation.addByPrefix("singDOWN", "GF Down Note", 24, !1);
            this.animation.addByIndices(
              "sad",
              "gf sad",
              [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceLeft",
              "GF Dancing Beat",
              [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceRight",
              "GF Dancing Beat",
              [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "hairBlow",
              "GF Dancing Beat Hair blowing",
              [0, 1, 2, 3],
              "",
              24
            );
            this.animation.addByIndices(
              "hairFall",
              "GF Dancing Beat Hair Landing",
              [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
              "",
              24,
              !1
            );
            this.animation.addByPrefix("scared", "GF FEAR", 24);
            this.addOffset("cheer");
            this.addOffset("sad", -2, -2);
            this.addOffset("danceLeft", 0, -9);
            this.addOffset("danceRight", 0, -9);
            this.addOffset("singUP", 0, 4);
            this.addOffset("singRIGHT", 0, -20);
            this.addOffset("singLEFT", 0, -19);
            this.addOffset("singDOWN", 0, -20);
            this.addOffset("hairBlow", 45, -8);
            this.addOffset("hairFall", 0, -9);
            this.addOffset("scared", -2, -17);
            this.playAnim("danceRight");
            break;
          case "gf-pixel":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/weeb/gfPixel.png", "IMAGE", a),
              M.getPath("images/weeb/gfPixel.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByIndices("singUP", "GF IDLE", [2], "", 24, !1);
            this.animation.addByIndices(
              "danceLeft",
              "GF IDLE",
              [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
              "",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceRight",
              "GF IDLE",
              [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
              "",
              24,
              !1
            );
            this.addOffset("danceLeft", 0);
            this.addOffset("danceRight", 0);
            this.playAnim("danceRight");
            this.setGraphicSize((this.get_width() * G.daPixelZoom) | 0);
            this.updateHitbox();
            this.set_antialiasing(!1);
            break;
          case "ink":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/ink.png", "IMAGE", a),
              M.getPath("images/ink.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "Ink idle dance", 24);
            this.animation.addByPrefix("singUP", "Ink Sing Note UP", 24);
            this.animation.addByPrefix("singRIGHT", "Ink Sing Note RIGHT", 24);
            this.animation.addByPrefix("singDOWN", "Ink Sing Note DOWN", 24);
            this.animation.addByPrefix("singLEFT", "Ink Sing Note LEFT", 24);
            this.addOffset("idle");
            this.addOffset("singUP", 0, 4);
            this.addOffset("singRIGHT", -6, 8);
            this.addOffset("singLEFT", 2, -5);
            this.addOffset("singDOWN", 9, -22);
            this.playAnim("idle");
            break;
          case "mom":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/Mom_Assets.png", "IMAGE", a),
              M.getPath("images/Mom_Assets.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "Mom Idle", 24, !1);
            this.animation.addByPrefix("singUP", "Mom Up Pose", 24, !1);
            this.animation.addByPrefix("singDOWN", "MOM DOWN POSE", 24, !1);
            this.animation.addByPrefix("singLEFT", "Mom Left Pose", 24, !1);
            this.animation.addByPrefix("singRIGHT", "Mom Pose Left", 24, !1);
            this.addOffset("idle");
            this.addOffset("singUP", 14, 71);
            this.addOffset("singRIGHT", 10, -60);
            this.addOffset("singLEFT", 250, -23);
            this.addOffset("singDOWN", 20, -160);
            this.playAnim("idle");
            break;
          case "mom-car":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/momCar.png", "IMAGE", a),
              M.getPath("images/momCar.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "Mom Idle", 24, !1);
            this.animation.addByPrefix("singUP", "Mom Up Pose", 24, !1);
            this.animation.addByPrefix("singDOWN", "MOM DOWN POSE", 24, !1);
            this.animation.addByPrefix("singLEFT", "Mom Left Pose", 24, !1);
            this.animation.addByPrefix("singRIGHT", "Mom Pose Left", 24, !1);
            this.addOffset("idle");
            this.addOffset("singUP", 14, 71);
            this.addOffset("singRIGHT", 10, -60);
            this.addOffset("singLEFT", 250, -23);
            this.addOffset("singDOWN", 20, -160);
            this.playAnim("idle");
            break;
          case "monster":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/Monster_Assets.png", "IMAGE", a),
              M.getPath("images/Monster_Assets.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "monster idle", 24, !1);
            this.animation.addByPrefix("singUP", "monster up note", 24, !1);
            this.animation.addByPrefix("singDOWN", "monster down", 24, !1);
            this.animation.addByPrefix("singLEFT", "Monster left note", 24, !1);
            this.animation.addByPrefix(
              "singRIGHT",
              "Monster Right note",
              24,
              !1
            );
            this.addOffset("idle");
            this.addOffset("singUP", -20, 50);
            this.addOffset("singRIGHT", -51);
            this.addOffset("singLEFT", -30);
            this.addOffset("singDOWN", -30, -40);
            this.playAnim("idle");
            break;
          case "monster-christmas":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/christmas/monsterChristmas.png", "IMAGE", a),
              M.getPath("images/christmas/monsterChristmas.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "monster idle", 24, !1);
            this.animation.addByPrefix("singUP", "monster up note", 24, !1);
            this.animation.addByPrefix("singDOWN", "monster down", 24, !1);
            this.animation.addByPrefix("singLEFT", "Monster left note", 24, !1);
            this.animation.addByPrefix(
              "singRIGHT",
              "Monster Right note",
              24,
              !1
            );
            this.addOffset("idle");
            this.addOffset("singUP", -20, 50);
            this.addOffset("singRIGHT", -51);
            this.addOffset("singLEFT", -30);
            this.addOffset("singDOWN", -40, -94);
            this.playAnim("idle");
            break;
          case "parents-christmas":
            a = null;
            this.set_frames(
              Sa.fromSparrow(
                M.getPath(
                  "images/christmas/mom_dad_christmas_assets.png",
                  "IMAGE",
                  a
                ),
                M.getPath(
                  "images/christmas/mom_dad_christmas_assets.xml",
                  "TEXT",
                  a
                )
              )
            );
            this.animation.addByPrefix("idle", "Parent Christmas Idle", 24, !1);
            this.animation.addByPrefix("singUP", "Parent Up Note Dad", 24, !1);
            this.animation.addByPrefix(
              "singDOWN",
              "Parent Down Note Dad",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singLEFT",
              "Parent Left Note Dad",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singRIGHT",
              "Parent Right Note Dad",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singUP-alt",
              "Parent Up Note Mom",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singDOWN-alt",
              "Parent Down Note Mom",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singLEFT-alt",
              "Parent Left Note Mom",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singRIGHT-alt",
              "Parent Right Note Mom",
              24,
              !1
            );
            this.addOffset("idle");
            this.addOffset("singUP", -47, 24);
            this.addOffset("singRIGHT", -1, -23);
            this.addOffset("singLEFT", -30, 16);
            this.addOffset("singDOWN", -31, -29);
            this.addOffset("singUP-alt", -47, 24);
            this.addOffset("singRIGHT-alt", -1, -24);
            this.addOffset("singLEFT-alt", -30, 15);
            this.addOffset("singDOWN-alt", -30, -27);
            this.playAnim("idle");
            break;
          case "pico":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/Pico_FNF_assetss.png", "IMAGE", a),
              M.getPath("images/Pico_FNF_assetss.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "Pico Idle Dance", 24);
            this.animation.addByPrefix("singUP", "pico Up note0", 24, !1);
            this.animation.addByPrefix("singDOWN", "Pico Down Note0", 24, !1);
            d
              ? (this.animation.addByPrefix(
                  "singLEFT",
                  "Pico NOTE LEFT0",
                  24,
                  !1
                ),
                this.animation.addByPrefix(
                  "singRIGHT",
                  "Pico Note Right0",
                  24,
                  !1
                ),
                this.animation.addByPrefix(
                  "singRIGHTmiss",
                  "Pico Note Right Miss",
                  24,
                  !1
                ),
                this.animation.addByPrefix(
                  "singLEFTmiss",
                  "Pico NOTE LEFT miss",
                  24,
                  !1
                ))
              : (this.animation.addByPrefix(
                  "singLEFT",
                  "Pico Note Right0",
                  24,
                  !1
                ),
                this.animation.addByPrefix(
                  "singRIGHT",
                  "Pico NOTE LEFT0",
                  24,
                  !1
                ),
                this.animation.addByPrefix(
                  "singRIGHTmiss",
                  "Pico NOTE LEFT miss",
                  24,
                  !1
                ),
                this.animation.addByPrefix(
                  "singLEFTmiss",
                  "Pico Note Right Miss",
                  24,
                  !1
                ));
            this.animation.addByPrefix("singUPmiss", "pico Up note miss", 24);
            this.animation.addByPrefix(
              "singDOWNmiss",
              "Pico Down Note MISS",
              24
            );
            this.addOffset("idle");
            this.addOffset("singUP", -29, 27);
            this.addOffset("singRIGHT", -68, -7);
            this.addOffset("singLEFT", 65, 9);
            this.addOffset("singDOWN", 200, -70);
            this.addOffset("singUPmiss", -19, 67);
            this.addOffset("singRIGHTmiss", -60, 41);
            this.addOffset("singLEFTmiss", 62, 64);
            this.addOffset("singDOWNmiss", 210, -28);
            this.playAnim("idle");
            this.set_flipX(!0);
            break;
          case "senpai":
            a = null;
            this.set_frames(
              Sa.fromSparrow(
                M.getPath("images/weeb/senpai.png", "IMAGE", a),
                M.getPath("images/weeb/senpai.xml", "TEXT", a)
              )
            );
            this.animation.addByPrefix("idle", "Senpai Idle", 24, !1);
            this.animation.addByPrefix("singUP", "SENPAI UP NOTE", 24, !1);
            this.animation.addByPrefix("singLEFT", "SENPAI LEFT NOTE", 24, !1);
            this.animation.addByPrefix(
              "singRIGHT",
              "SENPAI RIGHT NOTE",
              24,
              !1
            );
            this.animation.addByPrefix("singDOWN", "SENPAI DOWN NOTE", 24, !1);
            this.addOffset("idle");
            this.addOffset("singUP", 5, 37);
            this.addOffset("singRIGHT");
            this.addOffset("singLEFT", 40);
            this.addOffset("singDOWN", 14);
            this.playAnim("idle");
            this.setGraphicSize((6 * this.get_width()) | 0);
            this.updateHitbox();
            this.set_antialiasing(!1);
            break;
          case "senpai-angry":
            a = null;
            this.set_frames(
              Sa.fromSparrow(
                M.getPath("images/weeb/senpai.png", "IMAGE", a),
                M.getPath("images/weeb/senpai.xml", "TEXT", a)
              )
            );
            this.animation.addByPrefix("idle", "Angry Senpai Idle", 24, !1);
            this.animation.addByPrefix(
              "singUP",
              "Angry Senpai UP NOTE",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singLEFT",
              "Angry Senpai LEFT NOTE",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singRIGHT",
              "Angry Senpai RIGHT NOTE",
              24,
              !1
            );
            this.animation.addByPrefix(
              "singDOWN",
              "Angry Senpai DOWN NOTE",
              24,
              !1
            );
            this.addOffset("idle");
            this.addOffset("singUP", 5, 37);
            this.addOffset("singRIGHT");
            this.addOffset("singLEFT", 40);
            this.addOffset("singDOWN", 14);
            this.playAnim("idle");
            this.setGraphicSize((6 * this.get_width()) | 0);
            this.updateHitbox();
            this.set_antialiasing(!1);
            break;
          case "spirit":
            a = null;
            this.set_frames(
              Sa.fromSpriteSheetPacker(
                M.getPath("images/weeb/spirit.png", "IMAGE", a),
                M.getPath("images/weeb/spirit.txt", "TEXT", a)
              )
            );
            this.animation.addByPrefix("idle", "idle spirit_", 24, !1);
            this.animation.addByPrefix("singUP", "up_", 24, !1);
            this.animation.addByPrefix("singRIGHT", "right_", 24, !1);
            this.animation.addByPrefix("singLEFT", "left_", 24, !1);
            this.animation.addByPrefix("singDOWN", "spirit down_", 24, !1);
            this.addOffset("idle", -220, -280);
            this.addOffset("singUP", -220, -240);
            this.addOffset("singRIGHT", -220, -280);
            this.addOffset("singLEFT", -200, -280);
            this.addOffset("singDOWN", 170, 110);
            this.setGraphicSize((6 * this.get_width()) | 0);
            this.updateHitbox();
            this.playAnim("idle");
            this.set_antialiasing(!1);
            break;
          case "spooky":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/spooky_kids_assets.png", "IMAGE", a),
              M.getPath("images/spooky_kids_assets.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("singUP", "spooky UP NOTE", 24, !1);
            this.animation.addByPrefix("singDOWN", "spooky DOWN note", 24, !1);
            this.animation.addByPrefix("singLEFT", "note sing left", 24, !1);
            this.animation.addByPrefix(
              "singRIGHT",
              "spooky sing right",
              24,
              !1
            );
            this.animation.addByIndices(
              "danceLeft",
              "spooky dance idle",
              [0, 2, 6],
              "",
              12,
              !1
            );
            this.animation.addByIndices(
              "danceRight",
              "spooky dance idle",
              [8, 10, 12, 14],
              "",
              12,
              !1
            );
            this.addOffset("danceLeft");
            this.addOffset("danceRight");
            this.addOffset("singUP", -20, 26);
            this.addOffset("singRIGHT", -130, -14);
            this.addOffset("singLEFT", 130, -10);
            this.addOffset("singDOWN", -50, -130);
            this.playAnim("danceRight");
            break;
          case "xchara":
            a = null;
            a = Sa.fromSparrow(
              M.getPath("images/xchara.png", "IMAGE", a),
              M.getPath("images/xchara.xml", "TEXT", a)
            );
            this.set_frames(a);
            this.animation.addByPrefix("idle", "Dad idle dance", 24);
            this.animation.addByPrefix("singUP", "Dad Sing Note UP", 24);
            this.animation.addByPrefix("singRIGHT", "Dad Sing Note RIGHT", 24);
            this.animation.addByPrefix("singDOWN", "Dad Sing Note DOWN", 24);
            this.animation.addByPrefix("singLEFT", "Dad Sing Note LEFT", 24);
            this.addOffset("idle");
            this.addOffset("singUP", 44, 27);
            this.addOffset("singRIGHT", 41, 13);
            this.addOffset("singLEFT", 15, 29);
            this.addOffset("singDOWN", 26, 2);
            this.playAnim("idle");
            break;
          case "xgaster":
            (a = null),
              (a = Sa.fromSparrow(
                M.getPath("images/xgaster1.png", "IMAGE", a),
                M.getPath("images/xgaster1.xml", "TEXT", a)
              )),
              this.set_frames(a),
              this.animation.addByPrefix("idle", "Xgaster idle dance", 24),
              this.animation.addByPrefix("singUP", "Xgaster Sing Note UP", 24),
              this.animation.addByPrefix(
                "singRIGHT",
                "Xgaster Sing Note LEFT",
                24
              ),
              this.animation.addByPrefix(
                "singDOWN",
                "Xgaster Sing Note UP",
                24
              ),
              this.animation.addByPrefix(
                "singLEFT",
                "Xgaster Sing Note LEFT",
                24
              ),
              this.addOffset("idle"),
              this.addOffset("singUP", 0, 4),
              this.addOffset("singRIGHT", -6, 8),
              this.addOffset("singLEFT", 2, -5),
              this.addOffset("singDOWN", 9, -22),
              this.playAnim("idle");
        }
        this.dance();
        d &&
          (this.set_flipX(!this.flipX),
          K.startsWith(this.curCharacter, "bf") ||
            ((d = this.animation._animations.h.singRIGHT.frames),
            (this.animation._animations.h.singRIGHT.frames =
              this.animation._animations.h.singLEFT.frames),
            (this.animation._animations.h.singLEFT.frames = d),
            null != this.animation._animations.h.singRIGHTmiss &&
              ((d = this.animation._animations.h.singRIGHTmiss.frames),
              (this.animation._animations.h.singRIGHTmiss.frames =
                this.animation._animations.h.singLEFTmiss.frames),
              (this.animation._animations.h.singLEFTmiss.frames = d))));
      };
      g.Character = dc;
      dc.__name__ = "Character";
      dc.__super__ = H;
      dc.prototype = r(H.prototype, {
        update: function (a) {
          if (!K.startsWith(this.curCharacter, "bf")) {
            K.startsWith(this.animation._curAnim.name, "sing") &&
              (this.holdTimer += a);
            var b = 4;
            "dad" == this.curCharacter && (b = 6.1);
            this.holdTimer >= V.stepCrochet * b * 0.001 &&
              (this.dance(), (this.holdTimer = 0));
          }
          "gf" == this.curCharacter &&
            "hairFall" == this.animation._curAnim.name &&
            this.animation._curAnim.finished &&
            this.playAnim("danceRight");
          H.prototype.update.call(this, a);
        },
        dance: function () {
          if (!this.debugMode)
            switch (this.curCharacter) {
              case "gf":
                K.startsWith(this.animation._curAnim.name, "hair") ||
                  ((this.danced = !this.danced)
                    ? this.playAnim("danceRight")
                    : this.playAnim("danceLeft"));
                break;
              case "gf-car":
                K.startsWith(this.animation._curAnim.name, "hair") ||
                  ((this.danced = !this.danced)
                    ? this.playAnim("danceRight")
                    : this.playAnim("danceLeft"));
                break;
              case "gf-christmas":
                K.startsWith(this.animation._curAnim.name, "hair") ||
                  ((this.danced = !this.danced)
                    ? this.playAnim("danceRight")
                    : this.playAnim("danceLeft"));
                break;
              case "gf-pixel":
                K.startsWith(this.animation._curAnim.name, "hair") ||
                  ((this.danced = !this.danced)
                    ? this.playAnim("danceRight")
                    : this.playAnim("danceLeft"));
                break;
              case "spooky":
                (this.danced = !this.danced)
                  ? this.playAnim("danceRight")
                  : this.playAnim("danceLeft");
                break;
              default:
                this.playAnim("idle");
            }
        },
        playAnim: function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = !1);
          null == b && (b = !1);
          this.animation.play(a, b, c, d);
          b = this.animOffsets.h[a];
          Object.prototype.hasOwnProperty.call(this.animOffsets.h, a)
            ? this.offset.set(b[0], b[1])
            : this.offset.set(0, 0);
          "gf" == this.curCharacter &&
            ("singLEFT" == a
              ? (this.danced = !0)
              : "singRIGHT" == a && (this.danced = !1),
            "singUP" == a || "singDOWN" == a) &&
            (this.danced = !this.danced);
        },
        addOffset: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          this.animOffsets.h[a] = [b, c];
        },
        __class__: dc,
      });
      var Fa = function (a, b, c) {
        null == c && (c = "bf");
        this.stunned = !1;
        dc.call(this, a, b, c, !0);
      };
      g.Boyfriend = Fa;
      Fa.__name__ = "Boyfriend";
      Fa.__super__ = dc;
      Fa.prototype = r(dc.prototype, {
        update: function (a) {
          this.debugMode ||
            (K.startsWith(this.animation._curAnim.name, "sing")
              ? (this.holdTimer += a)
              : (this.holdTimer = 0),
            K.endsWith(this.animation._curAnim.name, "miss") &&
              this.animation._curAnim.finished &&
              !this.debugMode &&
              this.playAnim("idle", !0, !1, 10),
            "firstDeath" == this.animation._curAnim.name &&
              this.animation._curAnim.finished &&
              this.playAnim("deathLoop"));
          dc.prototype.update.call(this, a);
        },
        __class__: Fa,
      });
      var V = function () {};
      g.Conductor = V;
      V.__name__ = "Conductor";
      V.mapBPMChanges = function (a) {
        V.bpmChangeMap = [];
        for (var b = a.bpm, c = 0, d = 0, e = 0, f = a.notes.length; e < f; ) {
          var h = e++;
          a.notes[h].changeBPM &&
            a.notes[h].bpm != b &&
            ((b = a.notes[h].bpm),
            V.bpmChangeMap.push({ stepTime: c, songTime: d, bpm: b }));
          h = a.notes[h].lengthInSteps;
          c += h;
          d += (((60 / b) * 1e3) / 4) * h;
        }
        Db.trace("new BPM map BUDDY " + I.string(V.bpmChangeMap), {
          fileName: "source/Conductor.hx",
          lineNumber: 59,
          className: "Conductor",
          methodName: "mapBPMChanges",
        });
      };
      V.changeBPM = function (a) {
        V.bpm = a;
        V.crochet = (60 / V.bpm) * 1e3;
        V.stepCrochet = V.crochet / 4;
      };
      var La = (z.Control = {
          __ename__: "Control",
          __constructs__:
            "UP LEFT RIGHT DOWN RESET ACCEPT BACK PAUSE CHEAT".split(" "),
          UP: { _hx_index: 0, __enum__: "Control", toString: l },
          LEFT: { _hx_index: 1, __enum__: "Control", toString: l },
          RIGHT: { _hx_index: 2, __enum__: "Control", toString: l },
          DOWN: { _hx_index: 3, __enum__: "Control", toString: l },
          RESET: { _hx_index: 4, __enum__: "Control", toString: l },
          ACCEPT: { _hx_index: 5, __enum__: "Control", toString: l },
          BACK: { _hx_index: 6, __enum__: "Control", toString: l },
          PAUSE: { _hx_index: 7, __enum__: "Control", toString: l },
          CHEAT: { _hx_index: 8, __enum__: "Control", toString: l },
        }),
        u = (z.KeyboardScheme = {
          __ename__: "KeyboardScheme",
          __constructs__: ["Solo", "Duo", "None", "Custom"],
          Solo: { _hx_index: 0, __enum__: "KeyboardScheme", toString: l },
          Duo:
            ((y = function (a) {
              return {
                _hx_index: 1,
                first: a,
                __enum__: "KeyboardScheme",
                toString: l,
              };
            }),
            (y.__params__ = ["first"]),
            y),
          None: { _hx_index: 2, __enum__: "KeyboardScheme", toString: l },
          Custom: { _hx_index: 3, __enum__: "KeyboardScheme", toString: l },
        }),
        qd = function (a, b, c) {
          this.name = "";
          this.name = a;
          null == b && (b = []);
          null == c && (c = []);
          this.digitalActions = b;
          this.analogActions = c;
        };
      g["flixel.input.actions.FlxActionSet"] = qd;
      qd.__name__ = "flixel.input.actions.FlxActionSet";
      qd.__interfaces__ = [T];
      qd.prototype = {
        add: function (a) {
          if (a.type == Zk.DIGITAL) {
            if (-1 != this.digitalActions.indexOf(a)) return !1;
            this.digitalActions.push(a);
            return !0;
          }
          if (a.type == Zk.ANALOG) {
            if (-1 != this.analogActions.indexOf(a)) return !1;
            this.analogActions.push(a);
            return !0;
          }
          return !1;
        },
        destroy: function () {
          this.digitalActions = Z.destroyArray(this.digitalActions);
          this.analogActions = Z.destroyArray(this.analogActions);
        },
        __class__: qd,
      };
      var O = function (a, b) {
        null == b && (b = u.None);
        this.keyboardScheme = u.None;
        this.gamepadsAdded = [];
        this.byName = new ea();
        this._cheat = new vc("cheat");
        this._reset = new vc("reset");
        this._pause = new vc("pause");
        this._back = new vc("back");
        this._accept = new vc("accept");
        this._downR = new vc("down-release");
        this._rightR = new vc("right-release");
        this._leftR = new vc("left-release");
        this._upR = new vc("up-release");
        this._downP = new vc("down-press");
        this._rightP = new vc("right-press");
        this._leftP = new vc("left-press");
        this._upP = new vc("up-press");
        this._down = new vc("down");
        this._right = new vc("right");
        this._left = new vc("left");
        this._up = new vc("up");
        qd.call(this, a);
        this.add(this._up);
        this.add(this._left);
        this.add(this._right);
        this.add(this._down);
        this.add(this._upP);
        this.add(this._leftP);
        this.add(this._rightP);
        this.add(this._downP);
        this.add(this._upR);
        this.add(this._leftR);
        this.add(this._rightR);
        this.add(this._downR);
        this.add(this._accept);
        this.add(this._back);
        this.add(this._pause);
        this.add(this._reset);
        this.add(this._cheat);
        a = 0;
        for (var c = this.digitalActions; a < c.length; ) {
          var d = c[a];
          ++a;
          this.byName.h[d.name] = d;
        }
        this.setKeyboardScheme(b, !1);
      };
      g.Controls = O;
      O.__name__ = "Controls";
      O.__super__ = qd;
      O.prototype = r(qd.prototype, {
        setKeyboardScheme: function (a, b) {
          null == b && (b = !0);
          b && this.removeKeyboard();
          this.keyboardScheme = a;
          switch (a._hx_index) {
            case 0:
              a = [74, 38];
              switch (La.UP._hx_index) {
                case 0:
                  b = this._up;
                  for (var c = 1, d = 0; d < a.length; ) {
                    var e = a[d];
                    ++d;
                    b.addKey(e, c);
                  }
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              a = [70, 40];
              switch (La.DOWN._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              a = [68, 37];
              switch (La.LEFT._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              a = [75, 39];
              switch (La.RIGHT._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              a = [90, 32, 13];
              switch (La.ACCEPT._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              a = [8, 27];
              switch (La.BACK._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              a = [80, 13, 27];
              switch (La.PAUSE._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              a = [82];
              switch (La.RESET._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
              break;
            case 1:
              if (a.first) {
                a = [87, 38];
                switch (La.UP._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [83, 40];
                switch (La.DOWN._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [65, 37];
                switch (La.LEFT._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [68, 39];
                switch (La.RIGHT._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [71, 90, 32, 13];
                switch (La.ACCEPT._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [8, 27];
                switch (La.BACK._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [82];
              } else {
                a = [38];
                switch (La.UP._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [40];
                switch (La.DOWN._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [37];
                switch (La.LEFT._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [39];
                switch (La.RIGHT._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [79];
                switch (La.ACCEPT._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [80];
                switch (La.BACK._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [13];
                switch (La.PAUSE._hx_index) {
                  case 0:
                    b = this._up;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._upR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 1:
                    b = this._left;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._leftR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 2:
                    b = this._right;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._rightR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 3:
                    b = this._down;
                    c = 1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downP;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    b = this._downR;
                    c = -1;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 4:
                    b = this._reset;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 5:
                    b = this._accept;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 6:
                    b = this._back;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 7:
                    b = this._pause;
                    c = 2;
                    for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                    break;
                  case 8:
                    for (b = this._cheat, c = 2, d = 0; d < a.length; )
                      (e = a[d]), ++d, b.addKey(e, c);
                }
                a = [8];
              }
              switch (La.RESET._hx_index) {
                case 0:
                  b = this._up;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._upR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 1:
                  b = this._left;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._leftR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 2:
                  b = this._right;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._rightR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 3:
                  b = this._down;
                  c = 1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downP;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  b = this._downR;
                  c = -1;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 4:
                  b = this._reset;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 5:
                  b = this._accept;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 6:
                  b = this._back;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 7:
                  b = this._pause;
                  c = 2;
                  for (d = 0; d < a.length; ) (e = a[d]), ++d, b.addKey(e, c);
                  break;
                case 8:
                  for (b = this._cheat, c = 2, d = 0; d < a.length; )
                    (e = a[d]), ++d, b.addKey(e, c);
              }
          }
        },
        removeKeyboard: function () {
          for (var a = 0, b = this.digitalActions; a < b.length; ) {
            var c = b[a];
            ++a;
            for (var d = c.inputs.length; 0 < d--; ) {
              var e = c.inputs[d];
              e.device == an.KEYBOARD && c.remove(e);
            }
          }
        },
        addDefaultGamepad: function (a) {
          var b = new Fg();
          b.set(La.ACCEPT, [0]);
          b.set(La.BACK, [1]);
          b.set(La.UP, [11, 34]);
          b.set(La.DOWN, [12, 36]);
          b.set(La.LEFT, [13, 37]);
          b.set(La.RIGHT, [14, 35]);
          b.set(La.PAUSE, [7]);
          b.set(La.RESET, [3]);
          this.gamepadsAdded.push(a);
          for (var c = new $k(b); c.hasNext(); ) {
            b = c.next();
            var d = a,
              e = b.value;
            switch (b.key._hx_index) {
              case 0:
                b = this._up;
                for (var f = 0; f < e.length; ) {
                  var h = e[f];
                  ++f;
                  b.addGamepad(h, 1, d);
                }
                b = this._upP;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                b = this._upR;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, -1, d);
                break;
              case 1:
                b = this._left;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 1, d);
                b = this._leftP;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                b = this._leftR;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, -1, d);
                break;
              case 2:
                b = this._right;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 1, d);
                b = this._rightP;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                b = this._rightR;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, -1, d);
                break;
              case 3:
                b = this._down;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 1, d);
                b = this._downP;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                b = this._downR;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, -1, d);
                break;
              case 4:
                b = this._reset;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                break;
              case 5:
                b = this._accept;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                break;
              case 6:
                b = this._back;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                break;
              case 7:
                b = this._pause;
                for (f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
                break;
              case 8:
                for (b = this._cheat, f = 0; f < e.length; )
                  (h = e[f]), ++f, b.addGamepad(h, 2, d);
            }
          }
        },
        __class__: O,
      });
      var v = function () {};
      g.CoolUtil = v;
      v.__name__ = "CoolUtil";
      v.difficultyString = function () {
        return v.difficultyArray[G.storyDifficulty];
      };
      v.coolTextFile = function (a) {
        a = K.trim(W.getText(a)).split("\n");
        for (var b = 0, c = a.length; b < c; ) {
          var d = b++;
          a[d] = K.trim(a[d]);
        }
        return a;
      };
      v.numberArray = function (a, b) {
        null == b && (b = 0);
        for (var c = []; b < a; ) {
          var d = b++;
          c.push(d);
        }
        return c;
      };
      var bd = function (a, b) {
        null == a && (a = !0);
        this.dialogueOpened = this.dialogueStarted = this.isEnding = !1;
        this.dialogueList = [];
        this.curCharacter = "";
        var c = this;
        Q.call(this);
        this.bgFade = new H(-200, -200).makeGraphic(
          (1.3 * p.width) | 0,
          (1.3 * p.height) | 0,
          -16777216
        );
        this.bgFade.scrollFactor.set();
        this.bgFade.set_alpha(0.8);
        this.add(this.bgFade);
        new hc().start(
          0.5,
          function (a) {
            a = c.bgFade;
            a.set_alpha(a.alpha + 0.1);
            0.8 < c.bgFade.alpha && c.bgFade.set_alpha(0.8);
            c.dialogueOpened = !0;
          },
          8
        );
        this.dialogueList = b;
        switch (G.SONG.song.toLowerCase()) {
          case "inkingmistake":
            this.bgDialog = new H(0, 0).loadGraphic(
              M.getPath("images/inkingMistakeDialog/1.png", "IMAGE", null)
            );
            break;
          case "overwrite":
            this.bgDialog = new H(0, 0).loadGraphic(
              M.getPath("images/overwriteDialog/1.png", "IMAGE", null)
            );
            break;
          case "relighted":
            this.bgDialog = new H(0, 0).loadGraphic(
              M.getPath("images/relightedDialog/1.png", "IMAGE", null)
            );
            break;
          default:
            this.bgDialog = new H(0, 0).loadGraphic(
              M.getPath("images/overwriteDialog/1.png", "IMAGE", null)
            );
        }
        this.bgDialog.setGraphicSize(p.width | 0);
        this.bgDialog.set_antialiasing(!0);
        this.bgDialog.updateHitbox();
        this.add(this.bgDialog);
        this.swagDialogue = new we(240, 500, (0.6 * p.width) | 0, "", 32);
        this.swagDialogue.set_font("Pixel Arial 11");
        this.swagDialogue.set_color(-16777216);
        this.dialogue = new za(0, 80, "", !1, !0);
      };
      g.DialogueBox = bd;
      bd.__name__ = "DialogueBox";
      bd.__super__ = Q;
      bd.prototype = r(Q.prototype, {
        update: function (a) {
          var b = this;
          this.dialogueOpened &&
            !this.dialogueStarted &&
            (this.startDialogue(), (this.dialogueStarted = !0));
          this.pressedSomething = !1;
          for (var c = 0, d = p.touches.list; c < d.length; ) {
            var e = d[c];
            ++c;
            2 == e.input.current && (this.pressedSomething = !0);
          }
          (p.keys.justPressed.get_ANY() || this.pressedSomething) &&
            1 == this.dialogueStarted &&
            (this.remove(this.dialogue),
            null == this.dialogueList[1] && null != this.dialogueList[0]
              ? this.isEnding ||
                ((this.isEnding = !0),
                (c = p.sound.music),
                (d = 2.2),
                (e = 0),
                null == e && (e = 0),
                null == d && (d = 1),
                null != c.fadeTween && c.fadeTween.cancel(),
                (c.fadeTween = mb.num(
                  c._volume,
                  e,
                  d,
                  { onComplete: null },
                  q(c, c.volumeTween)
                )),
                new hc().start(
                  0.2,
                  function (a) {
                    a = b.bgFade;
                    a.set_alpha(a.alpha - 0.13999999999999999);
                    a = b.bgDialog;
                    a.set_alpha(a.alpha - 0.2);
                  },
                  5
                ),
                new hc().start(1.2, function (a) {
                  b.finishThing();
                  b.kill();
                }))
              : (ba.remove(this.dialogueList, this.dialogueList[0]),
                this.startDialogue()));
          Q.prototype.update.call(this, a);
        },
        startDialogue: function () {
          this.cleanDialog();
          this.swagDialogue.resetText(this.dialogueList[0]);
          this.swagDialogue.start(0.04, !0);
          switch (this.curCharacter) {
            case "bf":
              p.sound.play(M.sound("bf1"), 1);
              break;
            case "dad":
              p.sound.play(M.sound("xchara1"), 1);
          }
          this.bgDialog.loadGraphic(
            M.getPath("images/" + this.dialogueList[0] + ".png", "IMAGE", null)
          );
        },
        cleanDialog: function () {
          var a = this.dialogueList[0].split(":");
          this.curCharacter = a[1];
          this.dialogueList[0] = K.trim(
            ba.substr(this.dialogueList[0], a[1].length + 2, null)
          );
        },
        __class__: bd,
      });
      var Ua = function (a, b) {
        this.r = new RegExp(a, b.split("u").join(""));
      };
      g.EReg = Ua;
      Ua.__name__ = "EReg";
      Ua.prototype = {
        match: function (a) {
          this.r.global && (this.r.lastIndex = 0);
          this.r.m = this.r.exec(a);
          this.r.s = a;
          return null != this.r.m;
        },
        matched: function (a) {
          if (null != this.r.m && 0 <= a && a < this.r.m.length)
            return this.r.m[a];
          throw C.thrown("EReg::matched");
        },
        matchedRight: function () {
          if (null == this.r.m) throw C.thrown("No string matched");
          var a = this.r.m.index + this.r.m[0].length;
          return ba.substr(this.r.s, a, this.r.s.length - a);
        },
        matchedPos: function () {
          if (null == this.r.m) throw C.thrown("No string matched");
          return { pos: this.r.m.index, len: this.r.m[0].length };
        },
        matchSub: function (a, b, c) {
          null == c && (c = -1);
          if (this.r.global) {
            if (
              ((this.r.lastIndex = b),
              (this.r.m = this.r.exec(0 > c ? a : ba.substr(a, 0, b + c))),
              (c = null != this.r.m))
            )
              this.r.s = a;
          } else if (
            (c = this.match(0 > c ? ba.substr(a, b, null) : ba.substr(a, b, c)))
          )
            (this.r.s = a), (this.r.m.index += b);
          return c;
        },
        split: function (a) {
          return a.replace(this.r, "#__delim__#").split("#__delim__#");
        },
        __class__: Ua,
      };
      var Lc = function () {};
      g.EtternaFunctions = Lc;
      Lc.__name__ = "EtternaFunctions";
      Lc.erf = function (a) {
        var b = 1;
        0 > a && (b = -1);
        a = Math.abs(a);
        var c = 1 / (1 + Lc.p * a);
        return (
          b *
          (1 -
            ((((Lc.a5 * c + Lc.a4) * c + Lc.a3) * c + Lc.a2) * c + Lc.a1) *
              c *
              Math.exp(-a * a))
        );
      };
      Lc.wife3 = function (a, b) {
        var c = 180 * b,
          d = 65 * Math.pow(b, 0.75),
          e = 22.7 * Math.pow(b, 0.75);
        return a <= 5 * b
          ? 1
          : a <= d
          ? 1 * Lc.erf((d - a) / e)
          : a <= c
          ? (-5.5 * (a - d)) / (c - d)
          : -5.5;
      };
      var nb = function (a) {
        null == a && (a = 0);
        this.length = this._marker = 0;
        ca.call(this);
        this.members = [];
        this.set_maxSize(Math.abs(a) | 0);
        this.flixelType = 2;
      };
      g["flixel.group.FlxTypedGroup"] = nb;
      nb.__name__ = "flixel.group.FlxTypedGroup";
      nb.resolveGroup = function (a) {
        var b = null;
        null != a &&
          (2 == a.flixelType ? (b = a) : 4 == a.flixelType && (b = a.group));
        return b;
      };
      nb.__super__ = ca;
      nb.prototype = r(ca.prototype, {
        destroy: function () {
          ca.prototype.destroy.call(this);
          Z.destroy(this._memberAdded);
          Z.destroy(this._memberRemoved);
          if (null != this.members) {
            for (var a = 0, b; a < this.length; )
              (b = this.members[a++]), null != b && b.destroy();
            this.members = null;
          }
        },
        update: function (a) {
          for (var b = 0, c; b < this.length; )
            (c = this.members[b++]),
              null != c && c.exists && c.active && c.update(a);
        },
        draw: function () {
          var a = 0,
            b = Zb.defaultCameras;
          null != this.get_cameras() &&
            (Zb.defaultCameras = this.get_cameras());
          for (; a < this.length; ) {
            var c = this.members[a++];
            null != c && c.exists && c.visible && c.draw();
          }
          Zb.defaultCameras = b;
        },
        add: function (a) {
          if (null == a) return null;
          if (0 <= this.members.indexOf(a)) return a;
          var b = this.getFirstNull();
          if (-1 != b)
            return (
              (this.members[b] = a),
              b >= this.length && (this.length = b + 1),
              null != this._memberAdded && this._memberAdded.dispatch(a),
              a
            );
          if (0 < this.maxSize && this.length >= this.maxSize) return a;
          this.members.push(a);
          this.length++;
          null != this._memberAdded && this._memberAdded.dispatch(a);
          return a;
        },
        recycle: function (a, b, c, d) {
          null == d && (d = !0);
          null == c && (c = !1);
          if (0 < this.maxSize) {
            if (this.length < this.maxSize)
              return (
                (d = null),
                null != b
                  ? ((d = b()), this.add(d))
                  : null != a && ((d = Ya.createInstance(a, [])), this.add(d)),
                d
              );
            c = this.members[this._marker++];
            this._marker >= this.maxSize && (this._marker = 0);
            d && c.revive();
            return c;
          }
          c = this.getFirstAvailable(a, c);
          if (null != c) return d && c.revive(), c;
          d = null;
          null != b
            ? ((d = b()), this.add(d))
            : null != a && ((d = Ya.createInstance(a, [])), this.add(d));
          return d;
        },
        remove: function (a, b) {
          null == b && (b = !1);
          if (null == this.members) return null;
          var c = this.members.indexOf(a);
          if (0 > c) return null;
          b
            ? (this.members.splice(c, 1), this.length--)
            : (this.members[c] = null);
          null != this._memberRemoved && this._memberRemoved.dispatch(a);
          return a;
        },
        getFirstAvailable: function (a, b) {
          null == b && (b = !1);
          for (var c = 0, d; c < this.length; )
            if (
              ((d = this.members[c++]),
              !(
                null == d ||
                d.exists ||
                (null != a && !pa.__instanceof(d, a)) ||
                (b && pa.getClass(d).__name__ != a.__name__)
              ))
            )
              return this.members[c - 1];
          return null;
        },
        getFirstNull: function () {
          for (var a = 0; a < this.length; ) {
            if (null == this.members[a]) return a;
            ++a;
          }
          return -1;
        },
        clear: function () {
          this.length = 0;
          if (null != this._memberRemoved)
            for (var a = 0, b = this.members; a < b.length; ) {
              var c = b[a];
              ++a;
              null != c && this._memberRemoved.dispatch(c);
            }
          Mc.clearArray(this.members);
        },
        kill: function () {
          for (var a = 0, b; a < this.length; )
            (b = this.members[a++]), null != b && b.exists && b.kill();
          ca.prototype.kill.call(this);
        },
        revive: function () {
          for (var a = 0, b; a < this.length; )
            (b = this.members[a++]), null == b || b.exists || b.revive();
          ca.prototype.revive.call(this);
        },
        forEach: function (a, b) {
          null == b && (b = !1);
          for (var c = 0, d; c < this.length; )
            if (((d = this.members[c++]), null != d)) {
              if (b) {
                var e = nb.resolveGroup(d);
                null != e && e.forEach(a, b);
              }
              a(d);
            }
        },
        forEachAlive: function (a, b) {
          null == b && (b = !1);
          for (var c = 0, d; c < this.length; )
            if (((d = this.members[c++]), null != d && d.exists && d.alive)) {
              if (b) {
                var e = nb.resolveGroup(d);
                null != e && e.forEachAlive(a, b);
              }
              a(d);
            }
        },
        forEachExists: function (a, b) {
          null == b && (b = !1);
          for (var c = 0, d; c < this.length; )
            if (((d = this.members[c++]), null != d && d.exists)) {
              if (b) {
                var e = nb.resolveGroup(d);
                null != e && e.forEachExists(a, b);
              }
              a(d);
            }
        },
        set_maxSize: function (a) {
          this.maxSize = Math.abs(a) | 0;
          this._marker >= this.maxSize && (this._marker = 0);
          if (
            0 == this.maxSize ||
            null == this.members ||
            this.maxSize >= this.length
          )
            return this.maxSize;
          a = this.maxSize;
          for (var b = this.length, c; a < b; )
            (c = this.members[a++]),
              null != c &&
                (null != this._memberRemoved && this._memberRemoved.dispatch(c),
                c.destroy());
          Mc.setLength_flixel_group_FlxTypedGroup_T(this.members, this.maxSize);
          this.length = this.members.length;
          return this.maxSize;
        },
        __class__: nb,
        __properties__: r(ca.prototype.__properties__, {
          set_maxSize: "set_maxSize",
        }),
      });
      var $b = function (a) {
        this._requestSubStateReset = !1;
        this.persistentDraw = this.destroySubStates = !0;
        this.persistentUpdate = !1;
        nb.call(this, a);
      };
      g["flixel.FlxState"] = $b;
      $b.__name__ = "flixel.FlxState";
      $b.__super__ = nb;
      $b.prototype = r(nb.prototype, {
        create: function () {},
        draw: function () {
          (this.persistentDraw || null == this.subState) &&
            nb.prototype.draw.call(this);
          null != this.subState && this.subState.draw();
        },
        openSubState: function (a) {
          this._requestSubStateReset = !0;
          this._requestedSubState = a;
        },
        closeSubState: function () {
          this._requestSubStateReset = !0;
        },
        resetSubState: function () {
          null != this.subState &&
            (null != this.subState.closeCallback &&
              this.subState.closeCallback(),
            this.destroySubStates && this.subState.destroy());
          this.subState = this._requestedSubState;
          this._requestedSubState = null;
          if (null != this.subState) {
            if (!this.persistentUpdate) p.inputs.onStateSwitch();
            this.subState._parentState = this;
            this.subState._created ||
              ((this.subState._created = !0), this.subState.create());
            null != this.subState.openCallback && this.subState.openCallback();
          }
        },
        destroy: function () {
          null != this.subState &&
            (this.subState.destroy(), (this.subState = null));
          nb.prototype.destroy.call(this);
        },
        switchTo: function (a) {
          return !0;
        },
        onFocusLost: function () {},
        onFocus: function () {},
        onResize: function (a, b) {},
        tryUpdate: function (a) {
          (this.persistentUpdate || null == this.subState) && this.update(a);
          this._requestSubStateReset &&
            ((this._requestSubStateReset = !1), this.resetSubState());
          null != this.subState && this.subState.tryUpdate(a);
        },
        get_bgColor: function () {
          return p.cameras.get_bgColor();
        },
        set_bgColor: function (a) {
          return p.cameras.set_bgColor(a);
        },
        __class__: $b,
        __properties__: r(nb.prototype.__properties__, {
          set_bgColor: "set_bgColor",
          get_bgColor: "get_bgColor",
        }),
      });
      var ib = function (a, b) {
        this.transOutFinished = this._exiting = !1;
        this.transIn = a;
        this.transOut = b;
        null == this.transIn &&
          null != ib.defaultTransIn &&
          (this.transIn = ib.defaultTransIn);
        null == this.transOut &&
          null != ib.defaultTransOut &&
          (this.transOut = ib.defaultTransOut);
        $b.call(this);
      };
      g["flixel.addons.transition.FlxTransitionableState"] = ib;
      ib.__name__ = "flixel.addons.transition.FlxTransitionableState";
      ib.__super__ = $b;
      ib.prototype = r($b.prototype, {
        destroy: function () {
          $b.prototype.destroy.call(this);
          this._onExit = this.transOut = this.transIn = null;
        },
        create: function () {
          $b.prototype.create.call(this);
          this.transitionIn();
        },
        switchTo: function (a) {
          if (!this.get_hasTransOut()) return !0;
          this._exiting || this.transitionToState(a);
          return this.transOutFinished;
        },
        transitionToState: function (a) {
          this._exiting = !0;
          this.transitionOut(function () {
            p.game._state.switchTo(a) && (p.game._requestedState = a);
          });
          ib.skipNextTransOut &&
            ((ib.skipNextTransOut = !1), this.finishTransOut());
        },
        transitionIn: function () {
          if (null != this.transIn && "none" != this.transIn.type)
            if (ib.skipNextTransIn)
              (ib.skipNextTransIn = !1),
                null != this.finishTransIn && this.finishTransIn();
            else {
              var a = this.createTransition(this.transIn);
              a.setStatus(3);
              this.openSubState(a);
              a.set_finishCallback(q(this, this.finishTransIn));
              a.start(1);
            }
        },
        transitionOut: function (a) {
          this._onExit = a;
          this.get_hasTransOut()
            ? ((a = this.createTransition(this.transOut)),
              a.setStatus(2),
              this.openSubState(a),
              a.set_finishCallback(q(this, this.finishTransOut)),
              a.start(0))
            : this._onExit();
        },
        get_hasTransIn: function () {
          return null != this.transIn ? "none" != this.transIn.type : !1;
        },
        get_hasTransOut: function () {
          return null != this.transOut ? "none" != this.transOut.type : !1;
        },
        createTransition: function (a) {
          switch (a.type) {
            case "fade":
              return new rh(a);
            case "tiles":
              return new rh(a);
            default:
              return null;
          }
        },
        finishTransIn: function () {
          this.closeSubState();
        },
        finishTransOut: function () {
          this.transOutFinished = !0;
          this._exiting || this.closeSubState();
          null != this._onExit && this._onExit();
        },
        __class__: ib,
        __properties__: r($b.prototype.__properties__, {
          get_hasTransOut: "get_hasTransOut",
          get_hasTransIn: "get_hasTransIn",
        }),
      });
      var eg = function () {};
      g["flixel.addons.ui.interfaces.IEventGetter"] = eg;
      eg.__name__ = "flixel.addons.ui.interfaces.IEventGetter";
      eg.__isInterface__ = !0;
      eg.prototype = { __class__: eg };
      var fg = function () {};
      g["flixel.addons.ui.interfaces.IFlxUIState"] = fg;
      fg.__name__ = "flixel.addons.ui.interfaces.IFlxUIState";
      fg.__isInterface__ = !0;
      fg.__interfaces__ = [eg];
      fg.prototype = { __class__: fg };
      var cd = function (a, b) {
        this.getTextFallback = null;
        this._reload_countdown = 0;
        this.reload_ui_on_resize = this._reload = !1;
        this._xml_id = "";
        this.hideCursorOnSubstate = this._cursorHidden = !1;
        this.cursor = null;
        ib.call(this, a, b);
      };
      g["flixel.addons.ui.FlxUIState"] = cd;
      cd.__name__ = "flixel.addons.ui.FlxUIState";
      cd.__interfaces__ = [fg, eg];
      cd.__super__ = ib;
      cd.prototype = r(ib.prototype, {
        create: function () {
          null != cd.static_tongue && (this._tongue = cd.static_tongue);
          1 == this._makeCursor && (this.cursor = this.createCursor());
          this.tooltips = new sh(this);
          this._ui = this.createUI(null, this, null, this._tongue);
          this.add(this._ui);
          null != this.getTextFallback &&
            (this._ui.getTextFallback = this.getTextFallback);
          if (null != this._xml_id && "" != this._xml_id) {
            var a = null;
            try {
              a = x.xml(this._xml_id);
            } catch (c) {
              Ba.lastError = c;
              var b = C.caught(c).unwrap();
              if ("string" != typeof b) throw c;
            }
            if (null == a)
              try {
                a = x.xml(this._xml_id, "xml", !0, "");
              } catch (c) {
                if (
                  ((Ba.lastError = c),
                  (b = C.caught(c).unwrap()),
                  "string" != typeof b)
                )
                  throw c;
              }
            null != a && this.loadUIFromData(a);
          } else this.loadUIFromData(null);
          null != this.cursor &&
            null != this._ui &&
            (this.add(this.cursor),
            this.cursor.addWidgetsFromUI(this._ui),
            this.cursor.findVisibleLocation(0));
          this.tooltips.init();
          ib.prototype.create.call(this);
          this.cleanup();
        },
        update: function (a) {
          ib.prototype.update.call(this, a);
          null != this.tooltips && this.tooltips.update(a);
          this._reload &&
            0 < this._reload_countdown &&
            (this._reload_countdown--,
            0 == this._reload_countdown && this.reloadUI());
        },
        cleanup: function () {
          this._ui.cleanup();
        },
        _cleanupUIVars: function () {
          if (null != this._ui_vars) {
            for (var a = ea.keysIterator(this._ui_vars.h); a.hasNext(); ) {
              var b = a.next(),
                c = this._ui_vars;
              Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            }
            this._ui_vars = null;
          }
        },
        setUIVariable: function (a, b) {
          null != this._ui
            ? this._ui.setVariable(a, b)
            : (null == this._ui_vars && (this._ui_vars = new ea()),
              (this._ui_vars.h[a] = b));
        },
        resizeScreen: function (a, b) {},
        openSubState: function (a) {
          null != this.cursor &&
            this.hideCursorOnSubstate &&
            1 == this.cursor.visible &&
            ((this._cursorHidden = !0), this.cursor.set_visible(!1));
          ib.prototype.openSubState.call(this, a);
        },
        closeSubState: function () {
          null != this.cursor &&
            this.hideCursorOnSubstate &&
            this._cursorHidden &&
            ((this._cursorHidden = !1), this.cursor.set_visible(!0));
          ib.prototype.closeSubState.call(this);
        },
        onResize: function (a, b) {
          this.reload_ui_on_resize &&
            (p.scaleMode.onMeasure(a, b),
            (this._reload_countdown = 1),
            (this._reload = !0));
        },
        onShowTooltip: function (a) {},
        destroy: function () {
          this.destroyed = !0;
          null != this._ui &&
            (this._ui.destroy(), this.remove(this._ui, !0), (this._ui = null));
          null != this.tooltips &&
            (this.tooltips.destroy(), (this.tooltips = null));
          ib.prototype.destroy.call(this);
        },
        forceFocus: function (a, b) {
          null != this._ui &&
            (a ? this._ui.set_focus(b) : this._ui.set_focus(null));
        },
        onCursorEvent: function (a, b) {
          this.getEvent(a, b, null);
        },
        getEvent: function (a, b, c, d) {},
        getRequest: function (a, b, c, d) {
          return null;
        },
        getText: function (a, b, c) {
          null == c && (c = !0);
          null == b && (b = "ui");
          return null != this._tongue
            ? this._tongue.get(a, b, c)
            : null != this.getTextFallback
            ? this.getTextFallback(a, b, c)
            : a;
        },
        createCursor: function () {
          return new th(q(this, this.onCursorEvent));
        },
        createUI: function (a, b, c, d, e) {
          null == e && (e = "");
          a = new Ia(a, b, c, d, e, this._ui_vars);
          this._cleanupUIVars();
          return a;
        },
        loadUIFromData: function (a) {
          this._ui.load(a);
        },
        reloadUI: function (a) {
          null != this._ui &&
            (this.remove(this._ui, !0), this._ui.destroy(), (this._ui = null));
          this._ui = this.createUI(null, this, null, this._tongue);
          this.add(this._ui);
          a = x.xml(this._xml_id);
          null != a && this.loadUIFromData(a);
          this._reload = !1;
          this._reload_countdown = 0;
        },
        __class__: cd,
      });
      var Va = function (a, b) {
        this.lastBeat = this.lastStep = this.curStep = this.curBeat = 0;
        cd.call(this, a, b);
      };
      g.MusicBeatState = Va;
      Va.__name__ = "MusicBeatState";
      Va.__super__ = cd;
      Va.prototype = r(cd.prototype, {
        get_controls: function () {
          return Ga.player1.controls;
        },
        create: function () {
          null != this.transIn &&
            Db.trace("reg " + I.string(this.transIn.region), {
              fileName: "source/MusicBeatState.hx",
              lineNumber: 25,
              className: "MusicBeatState",
              methodName: "create",
            });
          cd.prototype.create.call(this);
        },
        update: function (a) {
          var b = this.curStep;
          this.updateCurStep();
          this.updateBeat();
          b != this.curStep && 0 < this.curStep && this.stepHit();
          cd.prototype.update.call(this, a);
        },
        updateBeat: function () {
          this.curBeat = Math.floor(this.curStep / 4);
        },
        updateCurStep: function () {
          for (
            var a = { stepTime: 0, songTime: 0, bpm: 0 },
              b = 0,
              c = V.bpmChangeMap.length;
            b < c;

          ) {
            var d = b++;
            V.songPosition >= V.bpmChangeMap[d].songTime &&
              (a = V.bpmChangeMap[d]);
          }
          this.curStep =
            a.stepTime +
            Math.floor((V.songPosition - a.songTime) / V.stepCrochet);
        },
        stepHit: function () {
          0 == this.curStep % 4 && this.beatHit();
        },
        beatHit: function () {},
        __class__: Va,
        __properties__: r(cd.prototype.__properties__, {
          get_controls: "get_controls",
        }),
      });
      var Gg = function (a, b) {
        this.iconArray = [];
        this.curPlaying = !1;
        this.lerpScore = this.intendedScore = 0;
        this.curDifficulty = 1;
        this.curSelected = 0;
        this.songs = [];
        Va.call(this, a, b);
      };
      g.FreeplayState = Gg;
      Gg.__name__ = "FreeplayState";
      Gg.__super__ = Va;
      Gg.prototype = r(Va.prototype, {
        create: function () {
          this.addWeek(["overwrite", "inkingmistake", "relighted"], 1, [
            "xchara",
            "ink",
            "xgaster",
          ]);
          var a = new H().loadGraphic(
            M.getPath("images/menuBGBlue.png", "IMAGE", null)
          );
          this.add(a);
          this.grpSongs = new nb();
          this.add(this.grpSongs);
          a = 0;
          for (var b = this.songs.length; a < b; ) {
            var c = a++,
              d = new za(0, 70 * c + 30, this.songs[c].songName, !0, !1);
            d.isMenuItem = !0;
            d.targetY = c;
            this.grpSongs.add(d);
            c = new Hg(this.songs[c].songCharacter);
            c.sprTracker = d;
            this.iconArray.push(c);
            this.add(c);
          }
          this.scoreText = new ab(0.7 * p.width, 5, 0, "", 32);
          this.scoreText.setFormat("assets/fonts/vcr.ttf", 32, -1, "right");
          a = new H(this.scoreText.x - 6, 0).makeGraphic(
            (0.35 * p.width) | 0,
            66,
            -16777216
          );
          a.set_alpha(0.6);
          this.add(a);
          this.diffText = new ab(
            this.scoreText.x,
            this.scoreText.y + 36,
            0,
            "",
            24
          );
          this.diffText.set_font(this.scoreText._font);
          this.add(this.diffText);
          this.add(this.scoreText);
          this.changeSelection();
          this.changeDiff();
          this.selector = new ab();
          this.selector.set_size(40);
          this.selector.set_text(">");
          new za(1, 0, "swag");
          Va.prototype.create.call(this);
        },
        addSong: function (a, b, c) {
          this.songs.push(new wi(a, b, c));
        },
        addWeek: function (a, b, c) {
          null == c && (c = ["bf"]);
          for (var d = 0, e = 0; e < a.length; ) {
            var f = a[e];
            ++e;
            this.addSong(f, b, c[d]);
            1 != c.length && ++d;
          }
        },
        update: function (a) {
          Va.prototype.update.call(this, a);
          0.7 > p.sound.music._volume &&
            ((a = p.sound.music), a.set_volume(a._volume + 0.5 * p.elapsed));
          a = this.lerpScore;
          this.lerpScore = Math.floor(a + 0.4 * (this.intendedScore - a));
          10 >= Math.abs(this.lerpScore - this.intendedScore) &&
            (this.lerpScore = this.intendedScore);
          this.scoreText.set_text("PERSONAL BEST:" + this.lerpScore);
          this.upP = Ga.player1.controls._upP.check();
          this.downP = Ga.player1.controls._downP.check();
          this.accepted = Ga.player1.controls._accept.check();
          this.back =
            this.accept =
            this.scrollRight =
            this.scrollDown =
            this.scrollUp =
              !1;
          a = 0;
          for (var b = p.swipes; a < b.length; ) {
            var c = b[a];
            ++a;
            var d = c.startPosition.x - c.endPosition.x,
              e = c.startPosition.y - c.endPosition.y;
            if (25 <= Math.sqrt(d * d + e * e)) {
              if (
                (-45 <= c.startPosition.angleBetween(c.endPosition) &&
                  45 >= c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollDown = !0),
                -135 < c.startPosition.angleBetween(c.endPosition) &&
                  -45 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.back = !0),
                45 < c.startPosition.angleBetween(c.endPosition) &&
                  135 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollRight = !0),
                (-180 <= c.startPosition.angleBetween(c.endPosition) &&
                  -135 >= c.startPosition.angleBetween(c.endPosition)) ||
                  (135 <= c.startPosition.angleBetween(c.endPosition) &&
                    180 >= c.startPosition.angleBetween(c.endPosition)))
              )
                this.scrollUp = !0;
            } else this.accept = !0;
          }
          (this.upP || this.scrollUp) && this.changeSelection(-1);
          (this.downP || this.scrollDown) && this.changeSelection(1);
          Ga.player1.controls._leftP.check() && this.changeDiff(-1);
          (Ga.player1.controls._rightP.check() || this.scrollRight) &&
            this.changeDiff(1);
          if (Ga.player1.controls._back.check() || this.back)
            (a = new Sd()),
              p.game._state.switchTo(a) && (p.game._requestedState = a);
          if (this.accepted || this.accept)
            (a = db.formatSong(
              this.songs[this.curSelected].songName.toLowerCase(),
              this.curDifficulty
            )),
              Db.trace(a, {
                fileName: "source/FreeplayState.hx",
                lineNumber: 236,
                className: "FreeplayState",
                methodName: "update",
              }),
              (G.SONG = Ef.loadFromJson(
                a,
                this.songs[this.curSelected].songName.toLowerCase()
              )),
              (G.isStoryMode = !1),
              (G.storyDifficulty = this.curDifficulty),
              (G.storyWeek = this.songs[this.curSelected].week),
              Db.trace("CUR WEEK" + G.storyWeek, {
                fileName: "source/FreeplayState.hx",
                lineNumber: 243,
                className: "FreeplayState",
                methodName: "update",
              }),
              (a = Tb.getNextState(new G(), !1)),
              p.game._state.switchTo(a) && (p.game._requestedState = a);
        },
        changeDiff: function (a) {
          null == a && (a = 0);
          this.curDifficulty += a;
          0 > this.curDifficulty && (this.curDifficulty = 2);
          2 < this.curDifficulty && (this.curDifficulty = 0);
          this.intendedScore = db.getScore(
            this.songs[this.curSelected].songName,
            this.curDifficulty
          );
          switch (this.curDifficulty) {
            case 0:
              this.diffText.set_text("EASY");
              break;
            case 1:
              this.diffText.set_text("NORMAL");
              break;
            case 2:
              this.diffText.set_text("HARD");
          }
        },
        changeSelection: function (a) {
          null == a && (a = 0);
          p.sound.play(M.sound("scrollMenu"), 0.4);
          this.curSelected += a;
          0 > this.curSelected && (this.curSelected = this.songs.length - 1);
          this.curSelected >= this.songs.length && (this.curSelected = 0);
          this.intendedScore = db.getScore(
            this.songs[this.curSelected].songName,
            this.curDifficulty
          );
          for (var b = (a = 0), c = this.iconArray.length; b < c; ) {
            var d = b++;
            this.iconArray[d].set_alpha(0.6);
          }
          this.iconArray[this.curSelected].set_alpha(1);
          b = 0;
          for (c = this.grpSongs.members; b < c.length; )
            (d = c[b]),
              ++b,
              (d.targetY = a - this.curSelected),
              ++a,
              d.set_alpha(0.6),
              0 == d.targetY && d.set_alpha(1);
        },
        __class__: Gg,
      });
      var wi = function (a, b, c) {
        this.week = 0;
        this.songName = a;
        this.week = b;
        this.songCharacter = c;
      };
      g.SongMetadata = wi;
      wi.__name__ = "SongMetadata";
      wi.prototype = { __class__: wi };
      var wc = function (a) {
        null == a && (a = 0);
        this._created = !1;
        $b.call(this);
        this.openCallback = this.closeCallback = null;
        p.renderTile && (this._bgSprite = new xi());
        this.set_bgColor(a);
      };
      g["flixel.FlxSubState"] = wc;
      wc.__name__ = "flixel.FlxSubState";
      wc.__super__ = $b;
      wc.prototype = r($b.prototype, {
        draw: function () {
          if (p.renderBlit)
            for (var a = 0, b = this.get_cameras(); a < b.length; ) {
              var c = b[a];
              ++a;
              c.fill(this._bgColor);
            }
          else this._bgSprite.draw();
          $b.prototype.draw.call(this);
        },
        destroy: function () {
          $b.prototype.destroy.call(this);
          this._bgSprite =
            this._parentState =
            this.openCallback =
            this.closeCallback =
              null;
        },
        close: function () {
          null != this._parentState &&
            this._parentState.subState == this &&
            this._parentState.closeSubState();
        },
        get_bgColor: function () {
          return this._bgColor;
        },
        set_bgColor: function (a) {
          p.renderTile &&
            null != this._bgSprite &&
            this._bgSprite.get_pixels().setPixel32(0, 0, a);
          return (this._bgColor = a);
        },
        __class__: wc,
      });
      var Hd = function () {
        this.lastBeat = this.lastStep = this.curStep = this.curBeat = 0;
        wc.call(this);
      };
      g.MusicBeatSubstate = Hd;
      Hd.__name__ = "MusicBeatSubstate";
      Hd.__super__ = wc;
      Hd.prototype = r(wc.prototype, {
        get_controls: function () {
          return Ga.player1.controls;
        },
        update: function (a) {
          var b = this.curStep;
          this.updateCurStep();
          this.curBeat = Math.floor(this.curStep / 4);
          b != this.curStep && 0 < this.curStep && this.stepHit();
          wc.prototype.update.call(this, a);
        },
        updateCurStep: function () {
          for (
            var a = { stepTime: 0, songTime: 0, bpm: 0 },
              b = 0,
              c = V.bpmChangeMap.length;
            b < c;

          ) {
            var d = b++;
            V.songPosition > V.bpmChangeMap[d].songTime &&
              (a = V.bpmChangeMap[d]);
          }
          this.curStep =
            a.stepTime +
            Math.floor((V.songPosition - a.songTime) / V.stepCrochet);
        },
        stepHit: function () {
          0 == this.curStep % 4 && this.beatHit();
        },
        beatHit: function () {},
        __class__: Hd,
        __properties__: r(wc.prototype.__properties__, {
          get_controls: "get_controls",
        }),
      });
      var yi = function (a, b) {
        this.isEnding = !1;
        this.resizeFactor = 2;
        this.stageSuffix = "";
        switch (G.curStage) {
          case "school":
            this.stageSuffix = "-pixel";
            var c = "bf-pixel-dead";
            break;
          case "schoolEvil":
            this.stageSuffix = "-pixel";
            c = "bf-pixel-dead";
            break;
          default:
            c = "bf";
        }
        Hd.call(this);
        V.songPosition = 0;
        this.bf = new Fa(a, b, c);
        this.add(this.bf);
        this.camFollow = new L(
          this.bf.getGraphicMidpoint().x,
          this.bf.getGraphicMidpoint().y,
          1,
          1
        );
        this.add(this.camFollow);
        p.sound.play(M.sound("fnf_loss_sfx" + this.stageSuffix));
        V.changeBPM(100);
        p.camera.scroll.set();
        p.camera.target = null;
        this.bf.playAnim("firstDeath");
      };
      g.GameOverSubstate = yi;
      yi.__name__ = "GameOverSubstate";
      yi.__super__ = Hd;
      yi.prototype = r(Hd.prototype, {
        update: function (a) {
          Hd.prototype.update.call(this, a);
          this.back = this.accept = !1;
          a = 0;
          for (var b = p.swipes; a < b.length; ) {
            var c = b[a];
            ++a;
            var d = c.startPosition.x - c.endPosition.x,
              e = c.startPosition.y - c.endPosition.y;
            25 <= Math.sqrt(d * d + e * e)
              ? -135 < c.startPosition.angleBetween(c.endPosition) &&
                -45 > c.startPosition.angleBetween(c.endPosition) &&
                (this.back = !0)
              : (this.accept = !0);
          }
          (Ga.player1.controls._accept.check() || this.accept) &&
            this.endBullshit();
          if (Ga.player1.controls._back.check() || this.back)
            (a = p.sound.music),
              a.cleanup(a.autoDestroy, !0),
              (a = G.isStoryMode ? new Nc() : new Gg()),
              p.game._state.switchTo(a) && (p.game._requestedState = a),
              (G.loadRep = !1);
          "firstDeath" == this.bf.animation._curAnim.name &&
            12 == this.bf.animation._curAnim.curFrame &&
            p.camera.follow(this.camFollow, Cm.LOCKON, 0.01);
          "firstDeath" == this.bf.animation._curAnim.name &&
            this.bf.animation._curAnim.finished &&
            p.sound.playMusic(
              M.getPath(
                "music/gameOver" + this.stageSuffix + ".mp3",
                "MUSIC",
                null
              )
            );
          null != p.sound.music._channel &&
            (V.songPosition = p.sound.music._time);
        },
        beatHit: function () {
          Hd.prototype.beatHit.call(this);
        },
        endBullshit: function () {
          if (!this.isEnding) {
            this.isEnding = !0;
            this.bf.playAnim("deathConfirm", !0);
            var a = p.sound.music;
            a.cleanup(a.autoDestroy, !0);
            p.sound.play(
              M.getPath(
                "music/gameOverEnd" + this.stageSuffix + ".mp3",
                "MUSIC",
                null
              )
            );
            new hc().start(0.7, function (a) {
              p.camera.fade(-16777216, 2, !1, function () {
                var a = Tb.getNextState(new G(), !1);
                p.game._state.switchTo(a) && (p.game._requestedState = a);
              });
            });
          }
        },
        __class__: yi,
      });
      var Hg = function (a, b) {
        null == b && (b = !1);
        null == a && (a = "bf");
        H.call(this);
        this.loadGraphic(
          M.getPath("images/iconGrid.png", "IMAGE", null),
          !0,
          150,
          150
        );
        this.set_antialiasing(!0);
        this.animation.add("bf", [0, 1], 0, !1, b);
        this.animation.add("bf-car", [0, 1], 0, !1, b);
        this.animation.add("bf-christmas", [0, 1], 0, !1, b);
        this.animation.add("bf-pixel", [21, 21], 0, !1, b);
        this.animation.add("spooky", [2, 3], 0, !1, b);
        this.animation.add("pico", [4, 5], 0, !1, b);
        this.animation.add("mom", [6, 7], 0, !1, b);
        this.animation.add("mom-car", [6, 7], 0, !1, b);
        this.animation.add("tankman", [8, 9], 0, !1, b);
        this.animation.add("face", [10, 11], 0, !1, b);
        this.animation.add("dad", [12, 13], 0, !1, b);
        this.animation.add("senpai", [22, 22], 0, !1, b);
        this.animation.add("senpai-angry", [22, 22], 0, !1, b);
        this.animation.add("spirit", [23, 23], 0, !1, b);
        this.animation.add("bf-old", [14, 15], 0, !1, b);
        this.animation.add("gf", [16], 0, !1, b);
        this.animation.add("parents-christmas", [17], 0, !1, b);
        this.animation.add("monster", [19, 20], 0, !1, b);
        this.animation.add("monster-christmas", [19, 20], 0, !1, b);
        this.animation.add("xchara", [24, 25], 0, !1, b);
        this.animation.add("ink", [26, 27], 0, !1, b);
        this.animation.add("xgaster", [28, 29], 0, !1, b);
        this.animation.play(a);
        this.scrollFactor.set();
      };
      g.HealthIcon = Hg;
      Hg.__name__ = "HealthIcon";
      Hg.__super__ = H;
      Hg.prototype = r(H.prototype, {
        update: function (a) {
          H.prototype.update.call(this, a);
          null != this.sprTracker &&
            this.setPosition(
              this.sprTracker.x + this.sprTracker.get_width() + 10,
              this.sprTracker.y - 30
            );
        },
        __class__: Hg,
      });
      var db = function () {};
      g.Highscore = db;
      db.__name__ = "Highscore";
      db.saveScore = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        c = db.formatSong(a, c);
        var d = b;
        null == d && (d = 0);
        if (uh.isLoggedIn)
          for (var e = dd.core.scoreBoards.keys(); e.hasNext(); ) {
            var f = e.next();
            f = dd.core.scoreBoards.h[f];
            a == f._data.name && f.postScore(d, "Uhh meow?");
          }
        Object.prototype.hasOwnProperty.call(db.songScores.h, c)
          ? db.songScores.h[c] < b && db.setScore(c, b)
          : db.setScore(c, b);
      };
      db.saveWeekScore = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        var d = b,
          e = "Week " + a;
        null == d && (d = 0);
        if (uh.isLoggedIn)
          for (var f = dd.core.scoreBoards.keys(); f.hasNext(); ) {
            var h = f.next();
            h = dd.core.scoreBoards.h[h];
            e == h._data.name && h.postScore(d, "Uhh meow?");
          }
        a = db.formatSong("week" + a, c);
        Object.prototype.hasOwnProperty.call(db.songScores.h, a)
          ? db.songScores.h[a] < b && db.setScore(a, b)
          : db.setScore(a, b);
      };
      db.setScore = function (a, b) {
        db.songScores.h[a] = b;
        p.save.data.songScores = db.songScores;
        p.save.flush();
      };
      db.formatSong = function (a, b) {
        0 == b ? (a += "-easy") : 2 == b && (a += "-hard");
        return a;
      };
      db.getScore = function (a, b) {
        var c = db.songScores,
          d = db.formatSong(a, b);
        Object.prototype.hasOwnProperty.call(c.h, d) ||
          db.setScore(db.formatSong(a, b), 0);
        c = db.songScores;
        d = db.formatSong(a, b);
        return c.h[d];
      };
      db.getWeekScore = function (a, b) {
        var c = db.songScores,
          d = db.formatSong("week" + a, b);
        Object.prototype.hasOwnProperty.call(c.h, d) ||
          db.setScore(db.formatSong("week" + a, b), 0);
        c = db.songScores;
        d = db.formatSong("week" + a, b);
        return c.h[d];
      };
      db.load = function () {
        null != p.save.data.songScores &&
          (db.songScores = p.save.data.songScores);
      };
      var ba = function () {};
      g.HxOverrides = ba;
      ba.__name__ = "HxOverrides";
      ba.dateStr = function (a) {
        var b = a.getMonth() + 1,
          c = a.getDate(),
          d = a.getHours(),
          e = a.getMinutes(),
          f = a.getSeconds();
        return (
          a.getFullYear() +
          "-" +
          (10 > b ? "0" + b : "" + b) +
          "-" +
          (10 > c ? "0" + c : "" + c) +
          " " +
          (10 > d ? "0" + d : "" + d) +
          ":" +
          (10 > e ? "0" + e : "" + e) +
          ":" +
          (10 > f ? "0" + f : "" + f)
        );
      };
      ba.strDate = function (a) {
        switch (a.length) {
          case 8:
            a = a.split(":");
            var b = new Date();
            b.setTime(0);
            b.setUTCHours(a[0]);
            b.setUTCMinutes(a[1]);
            b.setUTCSeconds(a[2]);
            return b;
          case 10:
            return (a = a.split("-")), new Date(a[0], a[1] - 1, a[2], 0, 0, 0);
          case 19:
            return (
              (a = a.split(" ")),
              (b = a[0].split("-")),
              (a = a[1].split(":")),
              new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2])
            );
          default:
            throw C.thrown("Invalid date format : " + a);
        }
      };
      ba.cca = function (a, b) {
        a = a.charCodeAt(b);
        if (a == a) return a;
      };
      ba.substr = function (a, b, c) {
        if (null == c) c = a.length;
        else if (0 > c)
          if (0 == b) c = a.length + c;
          else return "";
        return a.substr(b, c);
      };
      ba.remove = function (a, b) {
        b = a.indexOf(b);
        if (-1 == b) return !1;
        a.splice(b, 1);
        return !0;
      };
      ba.now = function () {
        return Date.now();
      };
      var Dm = function (a, b) {
        this.min = a;
        this.max = b;
      };
      g.IntIterator = Dm;
      Dm.__name__ = "IntIterator";
      Dm.prototype = {
        hasNext: function () {
          return this.min < this.max;
        },
        next: function () {
          return this.min++;
        },
        __class__: Dm,
      };
      var Em = function () {};
      g.KadeEngineData = Em;
      Em.__name__ = "KadeEngineData";
      Em.initSave = function () {
        null == p.save.data.newInput && (p.save.data.newInput = !0);
        null == p.save.data.downscroll && (p.save.data.downscroll = !1);
        null == p.save.data.dfjk && (p.save.data.dfjk = !1);
        null == p.save.data.accuracyDisplay &&
          (p.save.data.accuracyDisplay = !0);
        null == p.save.data.offset && (p.save.data.offset = 0);
        null == p.save.data.offset && (p.save.data.offset = 0);
        null == p.save.data.songPosition && (p.save.data.songPosition = !1);
        null == p.save.data.etternaMode && (p.save.data.etternaMode = !1);
        null == p.save.data.fps && (p.save.data.fps = !1);
      };
      var vh = function () {};
      g.Lambda = vh;
      vh.__name__ = "Lambda";
      vh.array = function (a) {
        var b = [];
        for (a = F(a); a.hasNext(); ) {
          var c = a.next();
          b.push(c);
        }
        return b;
      };
      vh.exists = function (a, b) {
        for (a = F(a); a.hasNext(); ) {
          var c = a.next();
          if (b(c)) return !0;
        }
        return !1;
      };
      var zi = function (a, b) {
        this.isSettingControl = !1;
        this.actualNames = [];
        this.controlsStrings = [];
        this.songs = [];
        this.curSelected = 0;
        Va.call(this, a, b);
      };
      g.LoadReplayState = zi;
      zi.__name__ = "LoadReplayState";
      zi.__super__ = Va;
      zi.prototype = r(Va.prototype, {
        create: function () {
          var a = new H().loadGraphic(
            M.getPath("images/menuDesat.png", "IMAGE", null)
          );
          Db.trace(this.controlsStrings, {
            fileName: "source/LoadReplayState.hx",
            lineNumber: 44,
            className: "LoadReplayState",
            methodName: "create",
          });
          this.controlsStrings.sort(ia.compare);
          this.addWeek(["Bopeebo", "Fresh", "Dadbattle"], 1, ["dad"]);
          this.addWeek(["Spookeez", "South", "Monster"], 2, ["spooky"]);
          this.addWeek(["Pico", "Philly", "Blammed"], 3, ["pico"]);
          this.addWeek(["Satin-Panties", "High", "Milf"], 4, ["mom"]);
          this.addWeek(["Cocoa", "Eggnog", "Winter-Horrorland"], 5, [
            "parents-christmas",
            "parents-christmas",
            "monster-christmas",
          ]);
          this.addWeek(["Senpai", "Roses", "Thorns"], 6, [
            "senpai",
            "senpai",
            "spirit",
          ]);
          for (var b = 0, c = this.controlsStrings.length; b < c; ) {
            var d = b++,
              e = this.controlsStrings[d];
            this.actualNames[d] = e;
            var f = Td.LoadReplay(e);
            this.controlsStrings[d] =
              e.split("time")[0] +
              " " +
              (2 == f.replay.songDiff
                ? "HARD"
                : 1 == f.replay.songDiff
                ? "EASY"
                : "NORMAL");
          }
          0 == this.controlsStrings.length &&
            this.controlsStrings.push("No Replays...");
          a.set_color(-1412611);
          a.setGraphicSize((1.1 * a.get_width()) | 0);
          a.updateHitbox();
          a.screenCenter();
          a.set_antialiasing(!0);
          this.add(a);
          this.grpControls = new nb();
          this.add(this.grpControls);
          b = 0;
          for (c = this.controlsStrings.length; b < c; )
            (d = b++),
              (a = new za(0, 70 * d + 30, this.controlsStrings[d], !0, !1)),
              (a.isMenuItem = !0),
              (a.targetY = d),
              this.grpControls.add(a);
          this.versionShit = new ab(
            5,
            p.height - 34,
            0,
            "Replay Loader (ESCAPE TO GO BACK)\nNOTICE!!!! Replays are in a beta stage, and they are probably not 100% correct. expect misses and other stuff that isn't there!",
            12
          );
          this.versionShit.scrollFactor.set();
          this.versionShit.setFormat(
            "VCR OSD Mono",
            16,
            -1,
            "left",
            Vb.OUTLINE,
            -16777216
          );
          this.add(this.versionShit);
          this.poggerDetails = new ab(5, 34, 0, "Replay Details - \nnone", 12);
          this.poggerDetails.scrollFactor.set();
          this.poggerDetails.setFormat(
            "VCR OSD Mono",
            16,
            -1,
            "left",
            Vb.OUTLINE,
            -16777216
          );
          this.add(this.poggerDetails);
          this.changeSelection(0);
          Va.prototype.create.call(this);
        },
        getWeekNumbFromSong: function (a) {
          for (var b = 0, c = 0, d = this.songs.length; c < d; ) {
            var e = c++;
            e = this.songs[e];
            e.songName.toLowerCase() == a && (b = e.week);
          }
          return b;
        },
        addSong: function (a, b, c) {
          this.songs.push(new wi(a, b, c));
        },
        addWeek: function (a, b, c) {
          null == c && (c = ["bf"]);
          for (var d = 0, e = 0; e < a.length; ) {
            var f = a[e];
            ++e;
            this.addSong(f, b, c[d]);
            1 != c.length && ++d;
          }
        },
        update: function (a) {
          Va.prototype.update.call(this, a);
          this.back =
            this.accept =
            this.scrollRight =
            this.scrollDown =
            this.scrollUp =
              !1;
          a = 0;
          for (var b = p.swipes; a < b.length; ) {
            var c = b[a];
            ++a;
            var d = c.startPosition.x - c.endPosition.x,
              e = c.startPosition.y - c.endPosition.y;
            if (25 <= Math.sqrt(d * d + e * e)) {
              if (
                (-45 <= c.startPosition.angleBetween(c.endPosition) &&
                  45 >= c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollDown = !0),
                -135 < c.startPosition.angleBetween(c.endPosition) &&
                  -45 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.back = !0),
                45 < c.startPosition.angleBetween(c.endPosition) &&
                  135 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollRight = !0),
                (-180 <= c.startPosition.angleBetween(c.endPosition) &&
                  -135 >= c.startPosition.angleBetween(c.endPosition)) ||
                  (135 <= c.startPosition.angleBetween(c.endPosition) &&
                    180 >= c.startPosition.angleBetween(c.endPosition)))
              )
                this.scrollUp = !0;
            } else this.accept = !0;
          }
          if (Ga.player1.controls._back.check() || this.back)
            (a = new wh()),
              p.game._state.switchTo(a) && (p.game._requestedState = a);
          (Ga.player1.controls._upP.check() || this.scrollUp) &&
            this.changeSelection(-1);
          (Ga.player1.controls._downP.check() || this.scrollDown) &&
            this.changeSelection(1);
          (Ga.player1.controls._accept.check() || this.accept) &&
            "No Replays..." !=
              this.grpControls.members[this.curSelected].text &&
            (Db.trace("loading " + this.actualNames[this.curSelected], {
              fileName: "source/LoadReplayState.hx",
              lineNumber: 181,
              className: "LoadReplayState",
              methodName: "update",
            }),
            (G.rep = Td.LoadReplay(this.actualNames[this.curSelected])),
            (G.loadRep = !0),
            (a = db.formatSong(
              G.rep.replay.songName.toLowerCase(),
              G.rep.replay.songDiff
            )),
            (G.SONG = Ef.loadFromJson(a, G.rep.replay.songName.toLowerCase())),
            (G.isStoryMode = !1),
            (G.storyDifficulty = G.rep.replay.songDiff),
            (G.storyWeek = this.getWeekNumbFromSong(G.rep.replay.songName)),
            (a = Tb.getNextState(new G(), !1)),
            p.game._state.switchTo(a) && (p.game._requestedState = a));
        },
        changeSelection: function (a) {
          null == a && (a = 0);
          p.sound.play(M.sound("scrollMenu"), 0.4);
          this.curSelected += a;
          0 > this.curSelected &&
            (this.curSelected = this.grpControls.length - 1);
          this.curSelected >= this.grpControls.length && (this.curSelected = 0);
          a = Td.LoadReplay(this.actualNames[this.curSelected]);
          this.poggerDetails.set_text(
            "Replay Details - \nDate Created: " +
              I.string(a.replay.timestamp) +
              "\nSong: " +
              a.replay.songName +
              "\nReplay Version: " +
              (a.replay.replayGameVer != Td.version ? "OUTDATED" : "Latest")
          );
          for (var b = (a = 0), c = this.grpControls.members; b < c.length; ) {
            var d = c[b];
            ++b;
            d.targetY = a - this.curSelected;
            ++a;
            d.set_alpha(0.6);
            0 == d.targetY && d.set_alpha(1);
          }
        },
        __class__: zi,
      });
      var Tb = function (a, b) {
        this.stopMusic = this.danceLeft = !1;
        Va.call(this);
        this.target = a;
        this.stopMusic = b;
      };
      g.LoadingState = Tb;
      Tb.__name__ = "LoadingState";
      Tb.getSongPath = function () {
        return "songs:assets/songs/" + G.SONG.song.toLowerCase() + "/Inst.mp3";
      };
      Tb.getVocalPath = function () {
        return (
          "songs:assets/songs/" + G.SONG.song.toLowerCase() + "/Voices.mp3"
        );
      };
      Tb.loadAndSwitchState = function (a, b) {
        null == b && (b = !1);
        a = Tb.getNextState(a, b);
        p.game._state.switchTo(a) && (p.game._requestedState = a);
      };
      Tb.getNextState = function (a, b) {
        null == b && (b = !1);
        M.setCurrentLevel("week" + G.storyWeek);
        if (
          !Tb.isSoundLoaded(Tb.getSongPath()) ||
          (G.SONG.needsVoices && !Tb.isSoundLoaded(Tb.getVocalPath())) ||
          !Tb.isLibraryLoaded("shared")
        )
          return new Tb(a, b);
        b &&
          null != p.sound.music &&
          ((b = p.sound.music), b.cleanup(b.autoDestroy, !0));
        return a;
      };
      Tb.isSoundLoaded = function (a) {
        return la.cache.hasSound(a);
      };
      Tb.isLibraryLoaded = function (a) {
        return null != la.getLibrary(a);
      };
      Tb.initSongsManifest = function () {
        var a = new Wc(),
          b = W.getLibrary("songs");
        if (null != b) return Ja.withValue(b);
        b = "songs";
        var c = null;
        c = W.libraryPaths;
        Object.prototype.hasOwnProperty.call(c.h, "songs")
          ? ((b = c.h.songs), (c = nf.directory(b)))
          : (K.endsWith(b, ".bundle")
              ? ((c = b), (b += "/library.json"))
              : (c = nf.directory(b)),
            (b = W.__cacheBreak(b)));
        ed.loadFromFile(b, c)
          .onComplete(function (b) {
            null == b
              ? a.error('Cannot parse asset manifest for library "songs"')
              : ((b = xb.fromManifest(b)),
                null == b
                  ? a.error('Cannot open library "songs"')
                  : ((W.libraries.h.songs = b),
                    b.onChange.add(((y = W.onChange), q(y, y.dispatch))),
                    a.completeWith(Ja.withValue(b))));
          })
          .onError(function (b) {
            a.error('There is no asset library with an ID of "songs"');
          });
        return a.future;
      };
      Tb.__super__ = Va;
      Tb.prototype = r(Va.prototype, {
        create: function () {
          var a = this,
            b = new H(-650, -250).loadGraphic(
              M.getPath("images/overwrite_bg.png", "IMAGE", null)
            );
          b.setGraphicSize((0.5 * b.get_width()) | 0);
          b.set_antialiasing(!0);
          this.add(b);
          b = new H(400, 0).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          b.setGraphicSize((0.5 * b.get_width()) | 0);
          b.set_antialiasing(!0);
          this.add(b);
          b = new H(600, 100).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          b.setGraphicSize((0.5 * b.get_width()) | 0);
          b.set_antialiasing(!0);
          this.add(b);
          b = new H(800, 0).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          b.setGraphicSize((0.5 * b.get_width()) | 0);
          b.set_antialiasing(!0);
          this.add(b);
          b = new H(1e3, 100).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          b.setGraphicSize((0.5 * b.get_width()) | 0);
          b.set_antialiasing(!0);
          this.add(b);
          this.logo = new H(-100, -80);
          b = null;
          this.logo.set_frames(
            Sa.fromSparrow(
              M.getPath("images/logoBumpin.png", "IMAGE", b),
              M.getPath("images/logoBumpin.xml", "TEXT", b)
            )
          );
          this.logo.setGraphicSize((0.9 * this.logo.get_width()) | 0);
          this.logo.set_antialiasing(!0);
          this.logo.animation.addByPrefix("bump", "logo bumpin", 24);
          this.logo.animation.play("bump");
          this.logo.updateHitbox();
          this.gfDance = new H(0.4 * p.width, -100);
          b = null;
          this.gfDance.set_frames(
            Sa.fromSparrow(
              M.getPath("images/xgastertitle.png", "IMAGE", b),
              M.getPath("images/xgastertitle.xml", "TEXT", b)
            )
          );
          this.gfDance.animation.addByPrefix("danceLeft", "LEFT", 24, !0);
          this.gfDance.animation.addByPrefix("danceRight", "IDLE", 24, !0);
          this.gfDance.setGraphicSize((0.7 * this.gfDance.get_width()) | 0);
          this.gfDance.set_antialiasing(!0);
          this.gfDance.set_flipX(!0);
          this.add(this.gfDance);
          this.add(this.logo);
          b = new H(this.logo.x + 450, this.logo.y + 400).loadGraphic(
            M.getPath("images/xevent.png", "IMAGE", null)
          );
          b.set_antialiasing(!0);
          this.add(b);
          Tb.initSongsManifest().onComplete(function (b) {
            a.callbacks = new al(q(a, a.onLoad));
            var c = a.callbacks.add("introComplete");
            a.checkLoadSong(Tb.getSongPath());
            G.SONG.needsVoices && a.checkLoadSong(Tb.getVocalPath());
            a.checkLibrary("shared");
            0 < G.storyWeek
              ? a.checkLibrary("week" + G.storyWeek)
              : a.checkLibrary("tutorial");
            p.camera.fade(p.camera.bgColor, 0.5, !0);
            new hc().start(1.5, function (a) {
              c();
            });
          });
        },
        checkLoadSong: function (a) {
          if (!la.cache.hasSound(a)) {
            la.getLibrary("songs");
            a.split(":").pop();
            var b = this.callbacks.add("song:" + a);
            la.loadSound(a).onComplete(function (a) {
              b();
            });
          }
        },
        checkLibrary: function (a) {
          Db.trace(la.hasLibrary(a), {
            fileName: "source/LoadingState.hx",
            lineNumber: 125,
            className: "LoadingState",
            methodName: "checkLibrary",
          });
          if (null == la.getLibrary(a)) {
            if (!Object.prototype.hasOwnProperty.call(W.libraryPaths.h, a))
              throw C.thrown("Missing library: " + a);
            var b = this.callbacks.add("library:" + a);
            la.loadLibrary(a).onComplete(function (a) {
              b();
            });
          }
        },
        beatHit: function () {
          Va.prototype.beatHit.call(this);
          this.logo.animation.play("bump");
          (this.danceLeft = !this.danceLeft)
            ? this.gfDance.animation.play("danceRight")
            : this.gfDance.animation.play("danceLeft");
        },
        update: function (a) {
          Va.prototype.update.call(this, a);
        },
        onLoad: function () {
          if (this.stopMusic && null != p.sound.music) {
            var a = p.sound.music;
            a.cleanup(a.autoDestroy, !0);
          }
          a = this.target;
          p.game._state.switchTo(a) && (p.game._requestedState = a);
        },
        destroy: function () {
          Va.prototype.destroy.call(this);
          this.callbacks = null;
        },
        __class__: Tb,
      });
      var al = function (a, b) {
        this.fired = [];
        this.unfired = new ea();
        this.length = this.numRemaining = 0;
        this.logId = null;
        this.callback = a;
        this.logId = b;
      };
      g.MultiCallback = al;
      al.__name__ = "MultiCallback";
      al.prototype = {
        add: function (a) {
          null == a && (a = "untitled");
          var b = this;
          a = "" + this.length + ":" + a;
          this.length++;
          this.numRemaining++;
          var c = null;
          c = function () {
            if (Object.prototype.hasOwnProperty.call(b.unfired.h, a)) {
              var c = b.unfired;
              Object.prototype.hasOwnProperty.call(c.h, a) && delete c.h[a];
              b.fired.push(a);
              b.numRemaining--;
              null != b.logId &&
                null != b.logId &&
                Db.trace(
                  "" +
                    b.logId +
                    ": fired " +
                    (a + ", " + b.numRemaining + " remaining"),
                  {
                    fileName: "source/LoadingState.hx",
                    lineNumber: 335,
                    className: "MultiCallback",
                    methodName: "log",
                  }
                );
              0 == b.numRemaining &&
                (null != b.logId &&
                  null != b.logId &&
                  Db.trace("" + b.logId + ": all callbacks fired", {
                    fileName: "source/LoadingState.hx",
                    lineNumber: 335,
                    className: "MultiCallback",
                    methodName: "log",
                  }),
                b.callback());
            } else
              null != b.logId &&
                Db.trace("" + b.logId + ": already fired " + a, {
                  fileName: "source/LoadingState.hx",
                  lineNumber: 335,
                  className: "MultiCallback",
                  methodName: "log",
                });
          };
          return (this.unfired.h[a] = c);
        },
        __class__: al,
      };
      var Sd = function (a, b) {
        this.selectedSomethin = !1;
        this.newInput = !0;
        this.optionShit = ["story mode", "freeplay", "donate", "options"];
        this.curSelected = 0;
        Va.call(this, a, b);
      };
      g.MainMenuState = Sd;
      Sd.__name__ = "MainMenuState";
      Sd.__super__ = Va;
      Sd.prototype = r(Va.prototype, {
        create: function () {
          null == p.sound.music._channel &&
            p.sound.playMusic(M.getPath("music/freakyMenu.mp3", "MUSIC", null));
          this.persistentUpdate = this.persistentDraw = !0;
          var a = new H(-80).loadGraphic(
            M.getPath("images/menuBG.png", "IMAGE", null)
          );
          a.scrollFactor.set_x(0);
          a.scrollFactor.set_y(0.1);
          a.setGraphicSize((1.1 * a.get_width()) | 0);
          a.updateHitbox();
          a.screenCenter();
          a.set_antialiasing(!0);
          this.add(a);
          this.camFollow = new L(0, 0, 1, 1);
          this.add(this.camFollow);
          this.magenta = new H(-80).loadGraphic(
            M.getPath("images/menuDesat.png", "IMAGE", null)
          );
          this.magenta.scrollFactor.set_x(0);
          this.magenta.scrollFactor.set_y(0.1);
          this.magenta.setGraphicSize((1.1 * this.magenta.get_width()) | 0);
          this.magenta.updateHitbox();
          this.magenta.screenCenter();
          this.magenta.set_visible(!1);
          this.magenta.set_antialiasing(!0);
          this.magenta.set_color(-167525);
          this.add(this.magenta);
          this.menuItems = new nb();
          this.add(this.menuItems);
          a = Sa.fromSparrow(
            M.getPath("images/FNF_main_menu_assets.png", "IMAGE", null),
            M.getPath("images/FNF_main_menu_assets.xml", "TEXT", null)
          );
          for (var b = 0, c = this.optionShit.length; b < c; ) {
            var d = b++,
              e = new H(0, 60 + 160 * d);
            e.set_frames(a);
            e.animation.addByPrefix("idle", this.optionShit[d] + " basic", 24);
            e.animation.addByPrefix(
              "selected",
              this.optionShit[d] + " white",
              24
            );
            e.animation.play("idle");
            e.ID = d;
            e.screenCenter(od.X);
            this.menuItems.add(e);
            e.scrollFactor.set();
            e.set_antialiasing(!0);
          }
          p.camera.follow(this.camFollow, null, 0.06);
          a = new ab(
            5,
            p.height - 18,
            0,
            Sd.gameVer + " - " + Sd.kadeEngineVer + " Kade Engine",
            12
          );
          a.scrollFactor.set();
          a.setFormat("VCR OSD Mono", 16, -1, "left", Vb.OUTLINE, -16777216);
          this.add(a);
          p.save.data.dfjk
            ? Ga.player1.controls.setKeyboardScheme(u.Solo, !0)
            : Ga.player1.controls.setKeyboardScheme(u.Duo(!0), !0);
          this.changeItem();
          Va.prototype.create.call(this);
        },
        update: function (a) {
          var b = this;
          if (0.8 > p.sound.music._volume) {
            var c = p.sound.music;
            c.set_volume(c._volume + 0.5 * p.elapsed);
          }
          if (!this.selectedSomethin) {
            this.back = this.accept = this.scrollDown = this.scrollUp = !1;
            c = 0;
            for (var d = p.swipes; c < d.length; ) {
              var e = d[c];
              ++c;
              var f = e.startPosition.x - e.endPosition.x,
                h = e.startPosition.y - e.endPosition.y;
              if (25 <= Math.sqrt(f * f + h * h)) {
                if (
                  (-45 <= e.startPosition.angleBetween(e.endPosition) &&
                    45 >= e.startPosition.angleBetween(e.endPosition) &&
                    (this.scrollDown = !0),
                  -135 < e.startPosition.angleBetween(e.endPosition) &&
                    -45 > e.startPosition.angleBetween(e.endPosition) &&
                    (this.back = !0),
                  (-180 <= e.startPosition.angleBetween(e.endPosition) &&
                    -135 >= e.startPosition.angleBetween(e.endPosition)) ||
                    (135 <= e.startPosition.angleBetween(e.endPosition) &&
                      180 >= e.startPosition.angleBetween(e.endPosition)))
                )
                  this.scrollUp = !0;
              } else this.accept = !0;
            }
            if (Ga.player1.controls._upP.check() || this.scrollUp)
              p.sound.play(M.sound("scrollMenu")), this.changeItem(-1);
            if (Ga.player1.controls._downP.check() || this.scrollDown)
              p.sound.play(M.sound("scrollMenu")), this.changeItem(1);
            if (Ga.player1.controls._back.check() || this.back)
              (c = new af()),
                p.game._state.switchTo(c) && (p.game._requestedState = c);
            if (Ga.player1.controls._accept.check() || this.accept)
              "donate" == this.optionShit[this.curSelected]
                ? ((c = ""),
                  new Ua("^https?://", "").match(
                    "https://ninja-muffin24.itch.io/funkin"
                  ) || (c = "http://"),
                  na.getURL(
                    new xh(c + "https://ninja-muffin24.itch.io/funkin"),
                    "_blank"
                  ))
                : ((this.selectedSomethin = !0),
                  p.sound.play(M.sound("confirmMenu")),
                  xc.flicker(this.magenta, 1.1, 0.15, !1),
                  this.menuItems.forEach(function (a) {
                    b.curSelected != a.ID
                      ? mb.tween(a, { alpha: 0 }, 1.3, {
                          ease: ac.quadOut,
                          onComplete: function (b) {
                            a.kill();
                          },
                        })
                      : xc.flicker(a, 1, 0.06, !1, !1, function (a) {
                          switch (b.optionShit[b.curSelected]) {
                            case "freeplay":
                              a = new Gg();
                              p.game._state.switchTo(a) &&
                                (p.game._requestedState = a);
                              Db.trace("Freeplay Menu Selected", {
                                fileName: "source/MainMenuState.hx",
                                lineNumber: 208,
                                className: "MainMenuState",
                                methodName: "update",
                              });
                              break;
                            case "options":
                              a = new wh();
                              p.game._state.switchTo(a) &&
                                (p.game._requestedState = a);
                              break;
                            case "story mode":
                              (a = new Nc()),
                                p.game._state.switchTo(a) &&
                                  (p.game._requestedState = a),
                                Db.trace("Story Menu Selected", {
                                  fileName: "source/MainMenuState.hx",
                                  lineNumber: 204,
                                  className: "MainMenuState",
                                  methodName: "update",
                                });
                          }
                        });
                  }));
          }
          Va.prototype.update.call(this, a);
          this.menuItems.forEach(function (a) {
            a.screenCenter(od.X);
          });
        },
        changeItem: function (a) {
          null == a && (a = 0);
          var b = this;
          this.curSelected += a;
          this.curSelected >= this.menuItems.length && (this.curSelected = 0);
          0 > this.curSelected &&
            (this.curSelected = this.menuItems.length - 1);
          this.menuItems.forEach(function (a) {
            a.animation.play("idle");
            a.ID == b.curSelected &&
              (a.animation.play("selected"),
              b.camFollow.setPosition(
                a.getGraphicMidpoint().x,
                a.getGraphicMidpoint().y
              ));
            a.updateHitbox();
          });
        },
        __class__: Sd,
      });
      var ic = function () {};
      g.ManifestResources = ic;
      ic.__name__ = "ManifestResources";
      ic.init = function (a) {
        ic.preloadLibraries = [];
        ic.preloadLibraryNames = [];
        ic.rootPath = null;
        null != a &&
          Object.prototype.hasOwnProperty.call(a, "rootPath") &&
          (ic.rootPath = ia.field(a, "rootPath"));
        null == ic.rootPath && (ic.rootPath = "./");
        bb.registerFont(Ai);
        bb.registerFont(Bi);
        bb.registerFont(Ci);
        bb.registerFont(Di);
        a = ic.rootPath + "manifest/songs.json";
        W.libraryPaths.h.songs = a;
        a = ic.rootPath + "manifest/shared.json";
        W.libraryPaths.h.shared = a;
        a = ic.rootPath + "manifest/tutorial.json";
        W.libraryPaths.h.tutorial = a;
        a = ic.rootPath + "manifest/week1.json";
        W.libraryPaths.h.week1 = a;
        a = ic.rootPath + "manifest/week2.json";
        W.libraryPaths.h.week2 = a;
        a = ic.rootPath + "manifest/week3.json";
        W.libraryPaths.h.week3 = a;
        a = ic.rootPath + "manifest/week4.json";
        W.libraryPaths.h.week4 = a;
        a = ic.rootPath + "manifest/week5.json";
        W.libraryPaths.h.week5 = a;
        a = ic.rootPath + "manifest/week6.json";
        W.libraryPaths.h.week6 = a;
        a = ed.parse(
          '{"name":null,"assets":"aoy4:pathy33:assets%2Fdata%2FcharacterList.txty4:sizei146y4:typey4:TEXTy2:idR1y7:preloadtgoR0y28:assets%2Fdata%2Fcontrols.txtR2i324R3R4R5R7R6tgoR0y34:assets%2Fdata%2Fdata-goes-here.txtR2zR3R4R5R8R6tgoR0y36:assets%2Fdata%2FfreeplaySonglist.txtR2zR3R4R5R9R6tgoR0y44:assets%2Fdata%2Finkingmistake%2Fdialogue.txtR2i136R3R4R5R10R6tgoR0y55:assets%2Fdata%2Finkingmistake%2Finkingmistake-easy.jsonR2i41340R3R4R5R11R6tgoR0y55:assets%2Fdata%2Finkingmistake%2Finkingmistake-hard.jsonR2i47981R3R4R5R12R6tgoR0y50:assets%2Fdata%2Finkingmistake%2Finkingmistake.jsonR2i42189R3R4R5R13R6tgoR0y29:assets%2Fdata%2FintroText.txtR2i1260R3R4R5R14R6tgoR0y29:assets%2Fdata%2Fmain-view.xmlR2i123R3R4R5R15R6tgoR0y40:assets%2Fdata%2Foverwrite%2Fdialogue.txtR2i188R3R4R5R16R6tgoR0y47:assets%2Fdata%2Foverwrite%2Foverwrite-easy.jsonR2i36139R3R4R5R17R6tgoR0y47:assets%2Fdata%2Foverwrite%2Foverwrite-hard.jsonR2i42523R3R4R5R18R6tgoR0y42:assets%2Fdata%2Foverwrite%2Foverwrite.jsonR2i40915R3R4R5R19R6tgoR0y40:assets%2Fdata%2Frelighted%2Fdialogue.txtR2i212R3R4R5R20R6tgoR0y47:assets%2Fdata%2Frelighted%2Frelighted-easy.jsonR2i50327R3R4R5R21R6tgoR0y53:assets%2Fdata%2Frelighted%2Frelighted-hard-final.jsonR2i54998R3R4R5R22R6tgoR0y47:assets%2Fdata%2Frelighted%2Frelighted-hard.jsonR2i54998R3R4R5R23R6tgoR0y42:assets%2Fdata%2Frelighted%2Frelighted.jsonR2i53051R3R4R5R24R6tgoR0y33:assets%2Fdata%2FspecialThanks.txtR2i300R3R4R5R25R6tgoR0y45:assets%2Fdata%2Ftutorial%2Ftutorial-easy.jsonR2i5739R3R4R5R26R6tgoR0y45:assets%2Fdata%2Ftutorial%2Ftutorial-hard.jsonR2i9504R3R4R5R27R6tgoR0y40:assets%2Fdata%2Ftutorial%2Ftutorial.jsonR2i5739R3R4R5R28R6tgoR0y47:assets%2Fdata%2Ftutorial%2FtutorialDialogue.txtR2i80R3R4R5R29R6tgoR0y30:assets%2Fimages%2Falphabet.pngR2i70177R3y5:IMAGER5R30R6tgoR0y30:assets%2Fimages%2Falphabet.xmlR2i39066R3R4R5R32R6tgoR0y31:assets%2Fimages%2FBOYFRIEND.pngR2i3919046R3R31R5R33R6tgoR0y31:assets%2Fimages%2FBOYFRIEND.xmlR2i67574R3R4R5R34R6tgoR0y45:assets%2Fimages%2Fcampaign_menu_UI_assets.pngR2i15402R3R31R5R35R6tgoR0y45:assets%2Fimages%2Fcampaign_menu_UI_assets.xmlR2i1890R3R4R5R36R6tgoR0y49:assets%2Fimages%2Fcampaign_menu_UI_characters.pngR2i2049630R3R31R5R37R6tgoR0y49:assets%2Fimages%2Fcampaign_menu_UI_characters.xmlR2i26540R3R4R5R38R6tgoR0y42:assets%2Fimages%2FFNF_main_menu_assets.pngR2i121473R3R31R5R39R6tgoR0y42:assets%2Fimages%2FFNF_main_menu_assets.xmlR2i4752R3R4R5R40R6tgoR0y31:assets%2Fimages%2FGF_assets.pngR2i1135862R3R31R5R41R6tgoR0y31:assets%2Fimages%2FGF_assets.xmlR2i10674R3R4R5R42R6tgoR0y30:assets%2Fimages%2FiconGrid.pngR2i179725R3R31R5R43R6tgoR0y26:assets%2Fimages%2Flogo.pngR2i56784R3R31R5R44R6tgoR0y32:assets%2Fimages%2FlogoBumpin.pngR2i592724R3R31R5R45R6tgoR0y32:assets%2Fimages%2FlogoBumpin.xmlR2i2197R3R4R5R46R6tgoR0y28:assets%2Fimages%2FmenuBG.pngR2i607390R3R31R5R47R6tgoR0y32:assets%2Fimages%2FmenuBGBlue.pngR2i610998R3R31R5R48R6tgoR0y35:assets%2Fimages%2FmenuBGMagenta.pngR2i592968R3R31R5R49R6tgoR0y31:assets%2Fimages%2FmenuDesat.pngR2i308261R3R31R5R50R6tgoR0y37:assets%2Fimages%2Fnewgrounds_logo.pngR2i40016R3R31R5R51R6tgoR0y26:assets%2Fimages%2Fnum0.pngR2i1816R3R31R5R52R6tgoR0y26:assets%2Fimages%2Fnum1.pngR2i1639R3R31R5R53R6tgoR0y26:assets%2Fimages%2Fnum2.pngR2i1985R3R31R5R54R6tgoR0y26:assets%2Fimages%2Fnum3.pngR2i1990R3R31R5R55R6tgoR0y26:assets%2Fimages%2Fnum4.pngR2i1955R3R31R5R56R6tgoR0y26:assets%2Fimages%2Fnum5.pngR2i2023R3R31R5R57R6tgoR0y26:assets%2Fimages%2Fnum6.pngR2i2082R3R31R5R58R6tgoR0y26:assets%2Fimages%2Fnum7.pngR2i1881R3R31R5R59R6tgoR0y26:assets%2Fimages%2Fnum8.pngR2i2024R3R31R5R60R6tgoR0y26:assets%2Fimages%2Fnum9.pngR2i1851R3R31R5R61R6tgoR0y34:assets%2Fimages%2Foverwrite_bg.pngR2i127353R3R31R5R62R6tgoR0y37:assets%2Fimages%2Foverwrite_light.pngR2i814043R3R31R5R63R6tgoR0y38:assets%2Fimages%2Foverwrite_square.pngR2i9154R3R31R5R64R6tgoR0y39:assets%2Fimages%2Fstorymenu%2Fweek0.pngR2i12370R3R31R5R65R6tgoR0y32:assets%2Fimages%2FtitleEnter.pngR2i1183566R3R31R5R66R6tgoR0y32:assets%2Fimages%2FtitleEnter.xmlR2i4872R3R4R5R67R6tgoR0y28:assets%2Fimages%2Fxevent.pngR2i4613R3R31R5R68R6tgoR0y30:assets%2Fimages%2Fxgaster1.pngR2i2517804R3R31R5R69R6tgoR0y30:assets%2Fimages%2Fxgaster1.xmlR2i8344R3R4R5R70R6tgoR0y34:assets%2Fimages%2Fxgastertitle.pngR2i1603707R3R31R5R71R6tgoR0y34:assets%2Fimages%2Fxgastertitle.xmlR2i3984R3R4R5R72R6tgoR2i4267789R3y5:MUSICR5y31:assets%2Fmusic%2FfreakyMenu.mp3y9:pathGroupaR74hR6tgoR2i14701R3R73R5y25:assets%2Fsounds%2Fbf1.mp3R75aR76hR6tgoR2i17762R3R73R5y32:assets%2Fsounds%2FcancelMenu.mp3R75aR77hR6tgoR2i91950R3R73R5y33:assets%2Fsounds%2FconfirmMenu.mp3R75aR78hR6tgoR2i17762R3R73R5y32:assets%2Fsounds%2FscrollMenu.mp3R75aR79hR6tgoR2i14701R3R73R5y29:assets%2Fsounds%2Fxchara1.mp3R75aR80hR6tgoR0y48:mods%2FintroMod%2F_append%2Fdata%2FintroText.txtR2i20R3R4R5R81goR0y18:mods%2FmodList.txtR2i8R3R4R5R82goR0y17:mods%2Freadme.txtR2i90R3R4R5R83goR0y21:do%20NOT%20readme.txtR2i4326R3R4R5R84R6tgoR0y13:changelog.txtR2i7730R3R4R5R85R6tgoR0y34:assets%2Ffonts%2Ffonts-go-here.txtR2zR3R4R5R86R6tgoR2i14656R3y4:FONTy9:classNamey31:__ASSET__assets_fonts_pixel_otfR5y26:assets%2Ffonts%2Fpixel.otfR6tgoR2i75864R3R87R88y29:__ASSET__assets_fonts_vcr_ttfR5y24:assets%2Ffonts%2Fvcr.ttfR6tgoR2i2114R3R73R5y26:flixel%2Fsounds%2Fbeep.mp3R75aR93y26:flixel%2Fsounds%2Fbeep.ogghR6tgoR2i39706R3R73R5y28:flixel%2Fsounds%2Fflixel.mp3R75aR95y28:flixel%2Fsounds%2Fflixel.ogghR6tgoR2i5794R3y5:SOUNDR5R94R75aR93R94hgoR2i33629R3R97R5R96R75aR95R96hgoR2i15744R3R87R88y35:__ASSET__flixel_fonts_nokiafc22_ttfR5y30:flixel%2Ffonts%2Fnokiafc22.ttfR6tgoR2i29724R3R87R88y36:__ASSET__flixel_fonts_monsterrat_ttfR5y31:flixel%2Ffonts%2Fmonsterrat.ttfR6tgoR0y33:flixel%2Fimages%2Fui%2Fbutton.pngR2i519R3R31R5R102R6tgoR0y36:flixel%2Fimages%2Flogo%2Fdefault.pngR2i3280R3R31R5R103R6tgoR0y34:flixel%2Fflixel-ui%2Fimg%2Fbox.pngR2i912R3R31R5R104R6tgoR0y37:flixel%2Fflixel-ui%2Fimg%2Fbutton.pngR2i433R3R31R5R105R6tgoR0y48:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_down.pngR2i446R3R31R5R106R6tgoR0y48:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_left.pngR2i459R3R31R5R107R6tgoR0y49:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_right.pngR2i511R3R31R5R108R6tgoR0y46:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_up.pngR2i493R3R31R5R109R6tgoR0y42:flixel%2Fflixel-ui%2Fimg%2Fbutton_thin.pngR2i247R3R31R5R110R6tgoR0y44:flixel%2Fflixel-ui%2Fimg%2Fbutton_toggle.pngR2i534R3R31R5R111R6tgoR0y40:flixel%2Fflixel-ui%2Fimg%2Fcheck_box.pngR2i922R3R31R5R112R6tgoR0y41:flixel%2Fflixel-ui%2Fimg%2Fcheck_mark.pngR2i946R3R31R5R113R6tgoR0y37:flixel%2Fflixel-ui%2Fimg%2Fchrome.pngR2i253R3R31R5R114R6tgoR0y42:flixel%2Fflixel-ui%2Fimg%2Fchrome_flat.pngR2i212R3R31R5R115R6tgoR0y43:flixel%2Fflixel-ui%2Fimg%2Fchrome_inset.pngR2i192R3R31R5R116R6tgoR0y43:flixel%2Fflixel-ui%2Fimg%2Fchrome_light.pngR2i214R3R31R5R117R6tgoR0y44:flixel%2Fflixel-ui%2Fimg%2Fdropdown_mark.pngR2i156R3R31R5R118R6tgoR0y41:flixel%2Fflixel-ui%2Fimg%2Ffinger_big.pngR2i1724R3R31R5R119R6tgoR0y43:flixel%2Fflixel-ui%2Fimg%2Ffinger_small.pngR2i294R3R31R5R120R6tgoR0y38:flixel%2Fflixel-ui%2Fimg%2Fhilight.pngR2i129R3R31R5R121R6tgoR0y36:flixel%2Fflixel-ui%2Fimg%2Finvis.pngR2i128R3R31R5R122R6tgoR0y41:flixel%2Fflixel-ui%2Fimg%2Fminus_mark.pngR2i136R3R31R5R123R6tgoR0y40:flixel%2Fflixel-ui%2Fimg%2Fplus_mark.pngR2i147R3R31R5R124R6tgoR0y36:flixel%2Fflixel-ui%2Fimg%2Fradio.pngR2i191R3R31R5R125R6tgoR0y40:flixel%2Fflixel-ui%2Fimg%2Fradio_dot.pngR2i153R3R31R5R126R6tgoR0y37:flixel%2Fflixel-ui%2Fimg%2Fswatch.pngR2i185R3R31R5R127R6tgoR0y34:flixel%2Fflixel-ui%2Fimg%2Ftab.pngR2i201R3R31R5R128R6tgoR0y39:flixel%2Fflixel-ui%2Fimg%2Ftab_back.pngR2i210R3R31R5R129R6tgoR0y44:flixel%2Fflixel-ui%2Fimg%2Ftooltip_arrow.pngR2i18509R3R31R5R130R6tgoR0y39:flixel%2Fflixel-ui%2Fxml%2Fdefaults.xmlR2i1263R3R4R5R131R6tgoR0y53:flixel%2Fflixel-ui%2Fxml%2Fdefault_loading_screen.xmlR2i1953R3R4R5R132R6tgoR0y44:flixel%2Fflixel-ui%2Fxml%2Fdefault_popup.xmlR2i1848R3R4R5R133R6tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
          ic.rootPath
        );
        a = xb.fromManifest(a);
        W.registerLibrary("default", a);
        a = W.getLibrary("default");
        null != a
          ? ic.preloadLibraries.push(a)
          : ic.preloadLibraryNames.push("default");
      };
      var tb = function (a) {
        null != a && (this.name = a);
        this.__init ||
          (void 0 == this.ascender && (this.ascender = 0),
          void 0 == this.descender && (this.descender = 0),
          void 0 == this.height && (this.height = 0),
          void 0 == this.numGlyphs && (this.numGlyphs = 0),
          void 0 == this.underlinePosition && (this.underlinePosition = 0),
          void 0 == this.underlineThickness && (this.underlineThickness = 0),
          void 0 == this.unitsPerEM && (this.unitsPerEM = 0),
          null != this.__fontID
            ? W.isLocal(this.__fontID) &&
              this.__fromBytes(W.getBytes(this.__fontID))
            : null != this.__fontPath && this.__fromFile(this.__fontPath));
      };
      g["lime.text.Font"] = tb;
      tb.__name__ = "lime.text.Font";
      tb.fromBytes = function (a) {
        if (null == a) return null;
        var b = new tb();
        b.__fromBytes(a);
        return b;
      };
      tb.fromFile = function (a) {
        if (null == a) return null;
        var b = new tb();
        b.__fromFile(a);
        return b;
      };
      tb.loadFromName = function (a) {
        return new tb().__loadFromName(a);
      };
      tb.__measureFontNode = function (a) {
        var b = window.document.createElement("span");
        b.setAttribute("aria-hidden", "true");
        var c = window.document.createTextNode("BESbswy");
        b.appendChild(c);
        c = b.style;
        c.display = "block";
        c.position = "absolute";
        c.top = "-9999px";
        c.left = "-9999px";
        c.fontSize = "300px";
        c.width = "auto";
        c.height = "auto";
        c.lineHeight = "normal";
        c.margin = "0";
        c.padding = "0";
        c.fontVariant = "normal";
        c.whiteSpace = "nowrap";
        c.fontFamily = a;
        window.document.body.appendChild(b);
        return b;
      };
      tb.prototype = {
        __copyFrom: function (a) {
          null != a &&
            ((this.ascender = a.ascender),
            (this.descender = a.descender),
            (this.height = a.height),
            (this.name = a.name),
            (this.numGlyphs = a.numGlyphs),
            (this.src = a.src),
            (this.underlinePosition = a.underlinePosition),
            (this.underlineThickness = a.underlineThickness),
            (this.unitsPerEM = a.unitsPerEM),
            (this.__fontID = a.__fontID),
            (this.__fontPath = a.__fontPath),
            (this.__init = !0));
        },
        __fromBytes: function (a) {
          this.__fontPath = null;
        },
        __fromFile: function (a) {
          this.__fontPath = a;
        },
        __loadFromName: function (a) {
          var b = this,
            c = new Wc();
          this.name = a;
          var d = E.navigator.userAgent.toLowerCase(),
            e = 0 <= d.indexOf(" safari/") && 0 > d.indexOf(" chrome/");
          d = new Ua("(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)", "i").match(
            d
          );
          if (
            !e &&
            !d &&
            window.document.fonts &&
            ((y = window.document.fonts), q(y, y.load))
          )
            window.document.fonts.load("1em '" + a + "'").then(
              function (a) {
                c.complete(b);
              },
              function (d) {
                Pa.warn('Could not load web font "' + a + '"', {
                  fileName: "lime/text/Font.hx",
                  lineNumber: 513,
                  className: "lime.text.Font",
                  methodName: "__loadFromName",
                });
                c.complete(b);
              }
            );
          else {
            var f = tb.__measureFontNode("'" + a + "', sans-serif"),
              h = tb.__measureFontNode("'" + a + "', serif"),
              m = f.offsetWidth,
              n = h.offsetWidth,
              da = -1,
              p = 0,
              k,
              g;
            da = window.setInterval(function () {
              p += 1;
              k = f.offsetWidth != m || h.offsetWidth != n;
              g = 3e3 <= 50 * p;
              if (k || g)
                window.clearInterval(da),
                  f.parentNode.removeChild(f),
                  h.parentNode.removeChild(h),
                  (h = f = null),
                  g &&
                    Pa.warn('Could not load web font "' + a + '"', {
                      fileName: "lime/text/Font.hx",
                      lineNumber: 548,
                      className: "lime.text.Font",
                      methodName: "__loadFromName",
                    }),
                  c.complete(b);
            }, 50);
          }
          return c.future;
        },
        __class__: tb,
      };
      var Ei = (t.__ASSET__assets_fonts_pixel_otf = function () {
        this.ascender = 1125;
        this.descender = -250;
        this.height = 1375;
        this.numGlyphs = 262;
        this.underlinePosition = -143;
        this.underlineThickness = 20;
        this.unitsPerEM = 1e3;
        this.name = "Pixel Arial 11 Bold";
        tb.call(this);
      });
      g.__ASSET__assets_fonts_pixel_otf = Ei;
      Ei.__name__ = "__ASSET__assets_fonts_pixel_otf";
      Ei.__super__ = tb;
      Ei.prototype = r(tb.prototype, { __class__: Ei });
      var Fi = (t.__ASSET__assets_fonts_vcr_ttf = function () {
        this.ascender = 1800;
        this.descender = 0;
        this.height = 2e3;
        this.numGlyphs = 204;
        this.underlinePosition = -292;
        this.underlineThickness = 150;
        this.unitsPerEM = 2048;
        this.name = "VCR OSD Mono";
        tb.call(this);
      });
      g.__ASSET__assets_fonts_vcr_ttf = Fi;
      Fi.__name__ = "__ASSET__assets_fonts_vcr_ttf";
      Fi.__super__ = tb;
      Fi.prototype = r(tb.prototype, { __class__: Fi });
      var Gi = (t.__ASSET__flixel_fonts_nokiafc22_ttf = function () {
        this.ascender = 2048;
        this.descender = -512;
        this.height = 2816;
        this.numGlyphs = 172;
        this.underlinePosition = -640;
        this.underlineThickness = 256;
        this.unitsPerEM = 2048;
        this.name = "Nokia Cellphone FC Small";
        tb.call(this);
      });
      g.__ASSET__flixel_fonts_nokiafc22_ttf = Gi;
      Gi.__name__ = "__ASSET__flixel_fonts_nokiafc22_ttf";
      Gi.__super__ = tb;
      Gi.prototype = r(tb.prototype, { __class__: Gi });
      var Hi = (t.__ASSET__flixel_fonts_monsterrat_ttf = function () {
        this.ascender = 968;
        this.descender = -251;
        this.height = 1219;
        this.numGlyphs = 263;
        this.underlinePosition = -150;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = "Monsterrat";
        tb.call(this);
      });
      g.__ASSET__flixel_fonts_monsterrat_ttf = Hi;
      Hi.__name__ = "__ASSET__flixel_fonts_monsterrat_ttf";
      Hi.__super__ = tb;
      Hi.prototype = r(tb.prototype, { __class__: Hi });
      var bb = function (a) {
        tb.call(this, a);
      };
      g["openfl.text.Font"] = bb;
      bb.__name__ = "openfl.text.Font";
      bb.fromBytes = function (a) {
        var b = new bb();
        b.__fromBytes(bl.toBytes(a));
        return b;
      };
      bb.fromFile = function (a) {
        var b = new bb();
        b.__fromFile(a);
        return b;
      };
      bb.loadFromName = function (a) {
        return tb.loadFromName(a).then(function (a) {
          var b = new bb();
          b.__fromLimeFont(a);
          return Ja.withValue(b);
        });
      };
      bb.registerFont = function (a) {
        a =
          null == pa.getClass(a)
            ? pa.__cast(Ya.createInstance(a, []), bb)
            : pa.__cast(a, bb);
        null != a &&
          (bb.__registeredFonts.push(a), (bb.__fontByName.h[a.name] = a));
      };
      bb.__super__ = tb;
      bb.prototype = r(tb.prototype, {
        __fromLimeFont: function (a) {
          this.__copyFrom(a);
        },
        __class__: bb,
      });
      var Ai = (t.__ASSET__OPENFL__assets_fonts_pixel_otf = function () {
        this.__fromLimeFont(new Ei());
        tb.call(this, void 0);
      });
      g.__ASSET__OPENFL__assets_fonts_pixel_otf = Ai;
      Ai.__name__ = "__ASSET__OPENFL__assets_fonts_pixel_otf";
      Ai.__super__ = bb;
      Ai.prototype = r(bb.prototype, { __class__: Ai });
      var Bi = (t.__ASSET__OPENFL__assets_fonts_vcr_ttf = function () {
        this.__fromLimeFont(new Fi());
        tb.call(this, void 0);
      });
      g.__ASSET__OPENFL__assets_fonts_vcr_ttf = Bi;
      Bi.__name__ = "__ASSET__OPENFL__assets_fonts_vcr_ttf";
      Bi.__super__ = bb;
      Bi.prototype = r(bb.prototype, { __class__: Bi });
      var Ci = (t.__ASSET__OPENFL__flixel_fonts_nokiafc22_ttf = function () {
        this.__fromLimeFont(new Gi());
        tb.call(this, void 0);
      });
      g.__ASSET__OPENFL__flixel_fonts_nokiafc22_ttf = Ci;
      Ci.__name__ = "__ASSET__OPENFL__flixel_fonts_nokiafc22_ttf";
      Ci.__super__ = bb;
      Ci.prototype = r(bb.prototype, { __class__: Ci });
      var Di = (t.__ASSET__OPENFL__flixel_fonts_monsterrat_ttf = function () {
        this.__fromLimeFont(new Hi());
        tb.call(this, void 0);
      });
      g.__ASSET__OPENFL__flixel_fonts_monsterrat_ttf = Di;
      Di.__name__ = "__ASSET__OPENFL__flixel_fonts_monsterrat_ttf";
      Di.__super__ = bb;
      Di.prototype = r(bb.prototype, { __class__: Di });
      Math.__name__ = "Math";
      var Ig = function (a, b) {
        null == b && (b = "bf");
        H.call(this, a);
        this.character = b;
        a = Sa.fromSparrow(
          M.getPath("images/campaign_menu_UI_characters.png", "IMAGE", null),
          M.getPath("images/campaign_menu_UI_characters.xml", "TEXT", null)
        );
        this.set_frames(a);
        this.animation.addByPrefix("bf", "BF idle dance white", 24);
        this.animation.addByPrefix("bfConfirm", "BF HEY!!", 24, !1);
        this.animation.addByPrefix("gf", "GF Dancing Beat WHITE", 24);
        this.animation.addByPrefix("dad", "Chara Idle BLACK LINES", 24);
        this.animation.addByPrefix(
          "spooky",
          "spooky dance idle BLACK LINES",
          24
        );
        this.animation.addByPrefix("pico", "Pico Idle Dance", 24);
        this.animation.addByPrefix("mom", "Mom Idle BLACK LINES", 24);
        this.animation.addByPrefix(
          "parents-christmas",
          "Parent Christmas Idle",
          24
        );
        this.animation.addByPrefix("senpai", "SENPAI idle Black Lines", 24);
        this.animation.play(b);
        this.updateHitbox();
      };
      g.MenuCharacter = Ig;
      Ig.__name__ = "MenuCharacter";
      Ig.__super__ = H;
      Ig.prototype = r(H.prototype, { __class__: Ig });
      var Ii = function (a, b, c) {
        null == c && (c = 0);
        this.fakeFramerate = Math.round(1 / p.elapsed / 10);
        this.isFlashing = !1;
        this.targetY = this.flashingInt = 0;
        Q.call(this, a, b);
        this.week = new H().loadGraphic(
          M.getPath("images/storymenu/week" + c + ".png", "IMAGE", null)
        );
        this.add(this.week);
      };
      g.MenuItem = Ii;
      Ii.__name__ = "MenuItem";
      Ii.__super__ = Q;
      Ii.prototype = r(Q.prototype, {
        startFlashing: function () {
          this.isFlashing = !0;
        },
        update: function (a) {
          Q.prototype.update.call(this, a);
          a = this.y;
          this.set_y(a + 0.17 * (120 * this.targetY + 480 - a));
          this.isFlashing && (this.flashingInt += 1);
          this.flashingInt % this.fakeFramerate >=
          Math.floor(this.fakeFramerate / 2)
            ? this.week.set_color(-13369345)
            : this.week.set_color(-1);
        },
        __class__: Ii,
      });
      var uh = function () {};
      g.NGio = uh;
      uh.__name__ = "NGio";
      var Gc = function (a, b, c, d) {
        null == d && (d = !1);
        this.isSustainNote = !1;
        this.sustainLength = 0;
        this.canBeHit = this.tooLate = this.wasGoodHit = !1;
        this.noteData = 0;
        this.mustPress = !1;
        this.strumTime = 0;
        H.call(this);
        null == c && (c = this);
        this.prevNote = c;
        this.isSustainNote = d;
        d = this;
        d.set_x(d.x + 50);
        d = this;
        d.set_y(d.y - 2e3);
        this.strumTime = a;
        this.noteData = b;
        switch (G.curStage) {
          case "school":
          case "schoolEvil":
            this.loadGraphic(
              M.getPath("images/weeb/pixelUI/arrows-pixels.png", "IMAGE", null),
              !0,
              17,
              17
            );
            this.animation.add("greenScroll", [6]);
            this.animation.add("redScroll", [7]);
            this.animation.add("blueScroll", [5]);
            this.animation.add("purpleScroll", [4]);
            this.isSustainNote &&
              (this.loadGraphic(
                M.getPath("images/weeb/pixelUI/arrowEnds.png", "IMAGE", null),
                !0,
                7,
                6
              ),
              this.animation.add("purpleholdend", [4]),
              this.animation.add("greenholdend", [6]),
              this.animation.add("redholdend", [7]),
              this.animation.add("blueholdend", [5]),
              this.animation.add("purplehold", [0]),
              this.animation.add("greenhold", [2]),
              this.animation.add("redhold", [3]),
              this.animation.add("bluehold", [1]));
            this.setGraphicSize((this.get_width() * G.daPixelZoom) | 0);
            this.updateHitbox();
            break;
          default:
            this.set_frames(
              Sa.fromSparrow(
                M.getPath("images/NOTE_assets.png", "IMAGE", null),
                M.getPath("images/NOTE_assets.xml", "TEXT", null)
              )
            ),
              this.animation.addByPrefix("greenScroll", "green0"),
              this.animation.addByPrefix("redScroll", "red0"),
              this.animation.addByPrefix("blueScroll", "blue0"),
              this.animation.addByPrefix("purpleScroll", "purple0"),
              this.animation.addByPrefix("purpleholdend", "pruple end hold"),
              this.animation.addByPrefix("greenholdend", "green hold end"),
              this.animation.addByPrefix("redholdend", "red hold end"),
              this.animation.addByPrefix("blueholdend", "blue hold end"),
              this.animation.addByPrefix("purplehold", "purple hold piece"),
              this.animation.addByPrefix("greenhold", "green hold piece"),
              this.animation.addByPrefix("redhold", "red hold piece"),
              this.animation.addByPrefix("bluehold", "blue hold piece"),
              this.setGraphicSize((0.7 * this.get_width()) | 0),
              this.updateHitbox(),
              this.set_antialiasing(!0);
        }
        switch (b) {
          case 0:
            d = this;
            d.set_x(d.x + 0 * Gc.swagWidth);
            this.animation.play("purpleScroll");
            break;
          case 1:
            d = this;
            d.set_x(d.x + Gc.swagWidth);
            this.animation.play("blueScroll");
            break;
          case 2:
            d = this;
            d.set_x(d.x + 2 * Gc.swagWidth);
            this.animation.play("greenScroll");
            break;
          case 3:
            (d = this),
              d.set_x(d.x + 3 * Gc.swagWidth),
              this.animation.play("redScroll");
        }
        if (this.isSustainNote && null != c) {
          this.set_alpha(0.6);
          d = this;
          d.set_x(d.x + this.get_width() / 2);
          switch (b) {
            case 0:
              this.animation.play("purpleholdend");
              break;
            case 1:
              this.animation.play("blueholdend");
              break;
            case 2:
              this.animation.play("greenholdend");
              break;
            case 3:
              this.animation.play("redholdend");
          }
          this.updateHitbox();
          d = this;
          d.set_x(d.x - this.get_width() / 2);
          K.startsWith(G.curStage, "school") && ((d = this), d.set_x(d.x + 30));
          if (c.isSustainNote) {
            switch (c.noteData) {
              case 0:
                c.animation.play("purplehold");
                break;
              case 1:
                c.animation.play("bluehold");
                break;
              case 2:
                c.animation.play("greenhold");
                break;
              case 3:
                c.animation.play("redhold");
            }
            d = c.scale;
            d.set_y((V.stepCrochet / 100) * d.y * 1.5 * G.SONG.speed);
            c.updateHitbox();
          }
        }
      };
      g.Note = Gc;
      Gc.__name__ = "Note";
      Gc.__super__ = H;
      Gc.prototype = r(H.prototype, {
        update: function (a) {
          H.prototype.update.call(this, a);
          this.mustPress
            ? ((this.canBeHit =
                this.strumTime > V.songPosition - V.safeZoneOffset &&
                this.strumTime < V.songPosition + 0.5 * V.safeZoneOffset
                  ? !0
                  : !1),
              this.strumTime < V.songPosition - V.safeZoneOffset &&
                !this.wasGoodHit &&
                (this.tooLate = !0))
            : ((this.canBeHit = !1),
              this.strumTime <= V.songPosition && (this.wasGoodHit = !0));
          this.tooLate && 0.3 < this.alpha && this.set_alpha(0.3);
        },
        __class__: Gc,
      });
      var wd = function () {
        this.display = this.updateDisplay();
      };
      g.Option = wd;
      wd.__name__ = "Option";
      wd.prototype = {
        getDisplay: function () {
          return this.display;
        },
        press: function () {
          throw C.thrown("stub!");
        },
        updateDisplay: function () {
          throw C.thrown("stub!");
        },
        __class__: wd,
      };
      var Ji = function (a) {
        wd.call(this);
        this.controls = a;
      };
      g.DFJKOption = Ji;
      Ji.__name__ = "DFJKOption";
      Ji.__super__ = wd;
      Ji.prototype = r(wd.prototype, {
        press: function () {
          p.save.data.dfjk = !p.save.data.dfjk;
          p.save.data.dfjk
            ? this.controls.setKeyboardScheme(u.Solo, !0)
            : this.controls.setKeyboardScheme(u.Duo(!0), !0);
          this.display = this.updateDisplay();
          return !0;
        },
        updateDisplay: function () {
          return p.save.data.dfjk ? "DFJK" : "WASD";
        },
        __class__: Ji,
      });
      var Ki = function () {
        wd.call(this);
      };
      g.NewInputOption = Ki;
      Ki.__name__ = "NewInputOption";
      Ki.__super__ = wd;
      Ki.prototype = r(wd.prototype, {
        press: function () {
          p.save.data.newInput = !p.save.data.newInput;
          this.display = this.updateDisplay();
          return !0;
        },
        updateDisplay: function () {
          return p.save.data.newInput ? "New input" : "Old Input";
        },
        __class__: Ki,
      });
      var Li = function () {
        wd.call(this);
      };
      g.DownscrollOption = Li;
      Li.__name__ = "DownscrollOption";
      Li.__super__ = wd;
      Li.prototype = r(wd.prototype, {
        press: function () {
          p.save.data.downscroll = !p.save.data.downscroll;
          this.display = this.updateDisplay();
          return !0;
        },
        updateDisplay: function () {
          return p.save.data.downscroll ? "Downscroll" : "Upscroll";
        },
        __class__: Li,
      });
      var Mi = function () {
        wd.call(this);
      };
      g.ReplayOption = Mi;
      Mi.__name__ = "ReplayOption";
      Mi.__super__ = wd;
      Mi.prototype = r(wd.prototype, {
        press: function () {
          Db.trace("switch", {
            fileName: "source/Options.hx",
            lineNumber: 89,
            className: "ReplayOption",
            methodName: "press",
          });
          var a = new zi();
          p.game._state.switchTo(a) && (p.game._requestedState = a);
          return !1;
        },
        updateDisplay: function () {
          return "Load replays";
        },
        __class__: Mi,
      });
      var wh = function (a, b) {
        this.isSettingControl = !1;
        this.options = [
          new Ji(Ga.player1.controls),
          new Ki(),
          new Li(),
          new Mi(),
        ];
        this.curSelected = 0;
        Va.call(this, a, b);
      };
      g.OptionsMenu = wh;
      wh.__name__ = "OptionsMenu";
      wh.__super__ = Va;
      wh.prototype = r(Va.prototype, {
        create: function () {
          var a = new H().loadGraphic(
            M.getPath("images/menuDesat.png", "IMAGE", null)
          );
          a.set_color(-1412611);
          a.setGraphicSize((1.1 * a.get_width()) | 0);
          a.updateHitbox();
          a.screenCenter();
          a.set_antialiasing(!0);
          this.add(a);
          this.grpControls = new nb();
          this.add(this.grpControls);
          a = 0;
          for (var b = this.options.length; a < b; ) {
            var c = a++,
              d = new za(0, 70 * c + 30, this.options[c].getDisplay(), !0, !1);
            d.isMenuItem = !0;
            d.targetY = c;
            this.grpControls.add(d);
          }
          this.versionShit = new ab(
            5,
            p.height - 18,
            0,
            "Offset (Left, Right): " + I.string(p.save.data.offset),
            12
          );
          this.versionShit.scrollFactor.set();
          this.versionShit.setFormat(
            "VCR OSD Mono",
            16,
            -1,
            "left",
            Vb.OUTLINE,
            -16777216
          );
          this.add(this.versionShit);
          Va.prototype.create.call(this);
        },
        update: function (a) {
          Va.prototype.update.call(this, a);
          this.upP = Ga.player1.controls._upP.check();
          this.downP = Ga.player1.controls._downP.check();
          this.accepted = Ga.player1.controls._accept.check();
          this.back =
            this.accept =
            this.scrollRight =
            this.scrollDown =
            this.scrollUp =
              !1;
          a = 0;
          for (var b = p.swipes; a < b.length; ) {
            var c = b[a];
            ++a;
            var d = c.startPosition.x - c.endPosition.x,
              e = c.startPosition.y - c.endPosition.y;
            if (25 <= Math.sqrt(d * d + e * e)) {
              if (
                (-45 <= c.startPosition.angleBetween(c.endPosition) &&
                  45 >= c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollDown = !0),
                -135 < c.startPosition.angleBetween(c.endPosition) &&
                  -45 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.back = !0),
                45 < c.startPosition.angleBetween(c.endPosition) &&
                  135 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollRight = !0),
                (-180 <= c.startPosition.angleBetween(c.endPosition) &&
                  -135 >= c.startPosition.angleBetween(c.endPosition)) ||
                  (135 <= c.startPosition.angleBetween(c.endPosition) &&
                    180 >= c.startPosition.angleBetween(c.endPosition)))
              )
                this.scrollUp = !0;
            } else this.accept = !0;
          }
          if (Ga.player1.controls._back.check() || this.back)
            (a = new Sd()),
              p.game._state.switchTo(a) && (p.game._requestedState = a);
          (Ga.player1.controls._upP.check() || this.scrollUp) &&
            this.changeSelection(-1);
          (Ga.player1.controls._downP.check() || this.scrollDown) &&
            this.changeSelection(1);
          if (Ga.player1.controls._rightR.check() || this.scrollRight)
            p.save.data.offset++,
              this.versionShit.set_text(
                "Offset (Left, Right): " + I.string(p.save.data.offset)
              );
          Ga.player1.controls._leftR.check() &&
            (p.save.data.offset--,
            this.versionShit.set_text(
              "Offset (Left, Right): " + I.string(p.save.data.offset)
            ));
          (Ga.player1.controls._accept.check() || this.accept) &&
            this.options[this.curSelected].press() &&
            (this.grpControls.remove(
              this.grpControls.members[this.curSelected]
            ),
            (a = new za(
              0,
              70 * this.curSelected + 30,
              this.options[this.curSelected].getDisplay(),
              !0,
              !1
            )),
            (a.isMenuItem = !0),
            this.grpControls.add(a));
          p.save.flush();
        },
        changeSelection: function (a) {
          null == a && (a = 0);
          p.sound.play(M.sound("scrollMenu"), 0.4);
          this.curSelected += a;
          0 > this.curSelected &&
            (this.curSelected = this.grpControls.length - 1);
          this.curSelected >= this.grpControls.length && (this.curSelected = 0);
          for (var b = (a = 0), c = this.grpControls.members; b < c.length; ) {
            var d = c[b];
            ++b;
            d.targetY = a - this.curSelected;
            ++a;
            d.set_alpha(0.6);
            0 == d.targetY && d.set_alpha(1);
          }
        },
        __class__: wh,
      });
      var M = function () {};
      g.Paths = M;
      M.__name__ = "Paths";
      M.setCurrentLevel = function (a) {
        M.currentLevel = a.toLowerCase();
      };
      M.getPath = function (a, b, c) {
        if (null != c) return M.getLibraryPath(a, c);
        if (null != M.currentLevel) {
          c = M.currentLevel;
          c = "" + c + ":assets/" + c + "/" + a;
          if (la.exists(c, b)) return c;
          c = "shared:assets/shared/" + a;
          if (la.exists(c, b)) return c;
        }
        return "assets/" + a;
      };
      M.getLibraryPath = function (a, b) {
        null == b && (b = "preload");
        return "preload" == b || "default" == b
          ? "assets/" + a
          : "" + b + ":assets/" + b + "/" + a;
      };
      M.sound = function (a, b) {
        return M.getPath("sounds/" + a + ".mp3", "SOUND", b);
      };
      var Ni = function (a, b) {
        this.curSelected = 0;
        this.menuItems = ["Resume", "Restart Song", "Exit to menu"];
        Hd.call(this);
        this.pauseMusic = new of().loadEmbedded(
          M.getPath("music/breakfast.mp3", "MUSIC", null),
          !0,
          !0
        );
        this.pauseMusic.set_volume(0);
        this.pauseMusic.play(
          !1,
          p.random.int(0, (this.pauseMusic._length / 2) | 0)
        );
        p.sound.list.add(this.pauseMusic);
        b = new H().makeGraphic(p.width, p.height, -16777216);
        b.set_alpha(0);
        b.scrollFactor.set();
        this.add(b);
        var c = new ab(20, 15, 0, "", 32);
        a = c;
        a.set_text(a.text + G.SONG.song);
        c.scrollFactor.set();
        c.setFormat("assets/fonts/vcr.ttf", 32);
        c.updateHitbox();
        this.add(c);
        var d = new ab(20, 47, 0, "", 32);
        a = d;
        a.set_text(a.text + v.difficultyString());
        d.scrollFactor.set();
        d.setFormat("assets/fonts/vcr.ttf", 32);
        d.updateHitbox();
        this.add(d);
        d.set_alpha(0);
        c.set_alpha(0);
        c.set_x(p.width - (c.get_width() + 20));
        d.set_x(p.width - (d.get_width() + 20));
        mb.tween(b, { alpha: 0.6 }, 0.4, { ease: ac.quartInOut });
        mb.tween(c, { alpha: 1, y: 20 }, 0.4, {
          ease: ac.quartInOut,
          startDelay: 0.3,
        });
        mb.tween(d, { alpha: 1, y: d.y + 5 }, 0.4, {
          ease: ac.quartInOut,
          startDelay: 0.5,
        });
        this.grpMenuShit = new nb();
        this.add(this.grpMenuShit);
        a = 0;
        for (b = this.menuItems.length; a < b; )
          (c = a++),
            (d = new za(0, 70 * c + 30, this.menuItems[c], !0, !1)),
            (d.isMenuItem = !0),
            (d.targetY = c),
            this.grpMenuShit.add(d);
        this.changeSelection();
        this.set_cameras([p.cameras.list[p.cameras.list.length - 1]]);
      };
      g.PauseSubState = Ni;
      Ni.__name__ = "PauseSubState";
      Ni.__super__ = Hd;
      Ni.prototype = r(Hd.prototype, {
        update: function (a) {
          if (0.5 > this.pauseMusic._volume) {
            var b = this.pauseMusic;
            b.set_volume(b._volume + 0.01 * a);
          }
          Hd.prototype.update.call(this, a);
          this.upP = Ga.player1.controls._upP.check();
          this.downP = Ga.player1.controls._downP.check();
          this.accepted = Ga.player1.controls._accept.check();
          this.back =
            this.accept =
            this.scrollRight =
            this.scrollDown =
            this.scrollUp =
              !1;
          b = 0;
          for (a = p.swipes; b < a.length; ) {
            var c = a[b];
            ++b;
            var d = c.startPosition.x - c.endPosition.x,
              e = c.startPosition.y - c.endPosition.y;
            if (25 <= Math.sqrt(d * d + e * e)) {
              if (
                (-45 <= c.startPosition.angleBetween(c.endPosition) &&
                  45 >= c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollDown = !0),
                -135 < c.startPosition.angleBetween(c.endPosition) &&
                  -45 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.back = !0),
                45 < c.startPosition.angleBetween(c.endPosition) &&
                  135 > c.startPosition.angleBetween(c.endPosition) &&
                  (this.scrollRight = !0),
                (-180 <= c.startPosition.angleBetween(c.endPosition) &&
                  -135 >= c.startPosition.angleBetween(c.endPosition)) ||
                  (135 <= c.startPosition.angleBetween(c.endPosition) &&
                    180 >= c.startPosition.angleBetween(c.endPosition)))
              )
                this.scrollUp = !0;
            } else this.accept = !0;
          }
          (this.upP || this.scrollUp) && this.changeSelection(-1);
          (this.downP || this.scrollDown) && this.changeSelection(1);
          if (this.accepted || this.accept)
            switch (this.menuItems[this.curSelected]) {
              case "Exit to menu":
                G.loadRep = !1;
                b = new Sd();
                p.game._state.switchTo(b) && (p.game._requestedState = b);
                break;
              case "Restart Song":
                b = Ya.createInstance(pa.getClass(p.game._state), []);
                p.game._state.switchTo(b) && (p.game._requestedState = b);
                break;
              case "Resume":
                this.close();
            }
          b = p.keys.justPressed;
          b.keyManager.checkStatus(74, b.status);
        },
        destroy: function () {
          this.pauseMusic.destroy();
          Hd.prototype.destroy.call(this);
        },
        changeSelection: function (a) {
          null == a && (a = 0);
          this.curSelected += a;
          0 > this.curSelected &&
            (this.curSelected = this.menuItems.length - 1);
          this.curSelected >= this.menuItems.length && (this.curSelected = 0);
          for (var b = (a = 0), c = this.grpMenuShit.members; b < c.length; ) {
            var d = c[b];
            ++b;
            d.targetY = a - this.curSelected;
            ++a;
            d.set_alpha(0.6);
            0 == d.targetY && d.set_alpha(1);
          }
        },
        __class__: Ni,
      });
      var G = function (a, b) {
        this.curLight = 0;
        this.lightningOffset = 8;
        this.lightningStrikeBeat = 0;
        this.startedMoving = !1;
        this.trainCooldown = 0;
        this.trainFinishing = !1;
        this.trainCars = 8;
        this.trainFrameTiming = 0;
        this.trainMoving = !1;
        this.fastCarCanDrive = !0;
        this.endingSong =
          this.upHold =
          this.downHold =
          this.rightHold =
          this.leftHold =
            !1;
        this.canPause = !0;
        this.paused = this.startedCountdown = !1;
        this.previousFrameTime =
          this.lastReportedPlayheadPosition =
          this.songTime =
          this.debugNum =
            0;
        this.inCutscene = this.perfectMode = !1;
        this.defaultCamZoom = 1.05;
        this.resizeFactor = 2;
        this.songScore = 0;
        this.talking = !0;
        this.wiggleShit = new cl();
        this.fc = !0;
        this.isHalloween = !1;
        this.dialogue = ["blah blah blah", "coolswag"];
        this.ss = this.generatedMusic = this.startingSong = !1;
        this.combo = this.accuracy = this.totalNotesHit = this.totalPlayed = 0;
        this.gfSpeed = this.health = 1;
        this.curSong = "";
        this.camZooming = !1;
        this.curSection = 0;
        this.unspawnNotes = [];
        this.halloweenLevel = !1;
        this.songPositionBar = this.songLength = this.etternaModeScore = 0;
        Va.call(this, a, b);
      };
      g.PlayState = G;
      G.__name__ = "PlayState";
      G.__super__ = Va;
      G.prototype = r(Va.prototype, {
        create: function () {
          V.safeFrames = p.save.data.etternaMode ? 5 : 10;
          G.theFunne = p.save.data.newInput;
          if (null != p.sound.music) {
            var a = p.sound.music;
            a.cleanup(a.autoDestroy, !0);
          }
          G.sicks = 0;
          G.bads = 0;
          G.shits = 0;
          G.goods = 0;
          G.misses = 0;
          G.repPresses = 0;
          G.repReleases = 0;
          this.camGame = new Zb();
          this.camHUD = new Zb();
          this.camHUD.bgColor &= 16777215;
          this.camHUD.bgColor |= 0;
          p.cameras.reset(this.camGame);
          p.cameras.add(this.camHUD);
          Zb.defaultCameras = [this.camGame];
          this.persistentDraw = this.persistentUpdate = !0;
          null == G.SONG && (G.SONG = Ef.loadFromJson("tutorial"));
          V.mapBPMChanges(G.SONG);
          V.changeBPM(G.SONG.bpm);
          switch (G.SONG.song.toLowerCase()) {
            case "inkingmistake":
              this.dialogue = v.coolTextFile(
                M.getPath("data/inkingmistake/dialogue.txt", "TEXT", null)
              );
              break;
            case "overwrite":
              this.dialogue = v.coolTextFile(
                M.getPath("data/overwrite/dialogue.txt", "TEXT", null)
              );
              break;
            case "relighted":
              this.dialogue = v.coolTextFile(
                M.getPath("data/relighted/dialogue.txt", "TEXT", null)
              );
          }
          if ("overwrite" == G.SONG.song.toLowerCase()) {
            this.defaultCamZoom = 0.7;
            G.curStage = "overwrite";
            var b = new H(-800, -180).loadGraphic(
              M.getPath("images/overwrite_bg.png", "IMAGE", null)
            );
            b.set_antialiasing(!0);
            this.add(b);
            b = new H(0, -100).loadGraphic(
              M.getPath("images/overwrite_square.png", "IMAGE", null)
            );
            b.set_antialiasing(!0);
            this.add(b);
            b = new H(400, -150).loadGraphic(
              M.getPath("images/overwrite_square.png", "IMAGE", null)
            );
            b.set_antialiasing(!0);
            this.add(b);
            b = new H(800, -90).loadGraphic(
              M.getPath("images/overwrite_square.png", "IMAGE", null)
            );
            b.set_antialiasing(!0);
            this.add(b);
            this.light = new H(-800, -200).loadGraphic(
              M.getPath("images/overwrite_light.png", "IMAGE", null)
            );
          } else
            "inkingmistake" == G.SONG.song.toLowerCase()
              ? ((this.defaultCamZoom = 0.7),
                (G.curStage = "inkingmistake"),
                (b = new H(-830, -230).loadGraphic(
                  M.getPath("images/inkingmistake/bg0.png", "IMAGE", null)
                )),
                b.setGraphicSize(b.get_width() | 0),
                b.updateHitbox(),
                b.set_antialiasing(!0),
                this.add(b),
                (a = new H(b.x, b.y).loadGraphic(
                  M.getPath("images/inkingmistake/bg1.png", "IMAGE", null)
                )),
                a.setGraphicSize(a.get_width() | 0),
                a.updateHitbox(),
                a.set_antialiasing(!0),
                this.add(a),
                (b = new H(b.x, b.y).loadGraphic(
                  M.getPath("images/inkingmistake/ground.png", "IMAGE", null)
                )),
                b.setGraphicSize(b.get_width() | 0),
                b.updateHitbox(),
                b.set_antialiasing(!0),
                this.add(b),
                (this.xgasterink = new H(-550, 0.05 * p.height)),
                (b = null),
                this.xgasterink.set_frames(
                  Sa.fromSparrow(
                    M.getPath("images/xgasterink.png", "IMAGE", b),
                    M.getPath("images/xgasterink.xml", "TEXT", b)
                  )
                ),
                this.xgasterink.animation.addByPrefix(
                  "idle",
                  "Xgasterink idle dance instance",
                  12,
                  !0
                ),
                this.xgasterink.set_alpha(0.5),
                this.xgasterink.set_antialiasing(!0),
                this.add(this.xgasterink),
                (this.light = new H(-800, 0).loadGraphic(
                  M.getPath("images/inkingmistake/fg.png", "IMAGE", null)
                )))
              : ((this.defaultCamZoom = 0.7),
                (G.curStage = "relighted"),
                (b = new H(-800, -180).loadGraphic(
                  M.getPath("images/overwrite_bg.png", "IMAGE", null)
                )),
                b.setGraphicSize(b.get_width() | 0),
                b.updateHitbox(),
                b.set_antialiasing(!0),
                this.add(b),
                (a = new H(-300, 410)),
                (b = null),
                a.set_frames(
                  Sa.fromSparrow(
                    M.getPath("images/rpgfire.png", "IMAGE", b),
                    M.getPath("images/rpgfire.xml", "TEXT", b)
                  )
                ),
                a.animation.addByPrefix("idle", "fire_iddle", 24, !0),
                a.setGraphicSize((0.6 * a.get_width()) | 0),
                a.updateHitbox(),
                a.set_antialiasing(!0),
                this.add(a),
                a.animation.play("idle"),
                (a = new H(100, 230)),
                (b = null),
                a.set_frames(
                  Sa.fromSparrow(
                    M.getPath("images/rpgfire.png", "IMAGE", b),
                    M.getPath("images/rpgfire.xml", "TEXT", b)
                  )
                ),
                a.animation.addByPrefix("idle", "fire_iddle", 24, !0),
                a.setGraphicSize((0.6 * a.get_width()) | 0),
                a.set_antialiasing(!0),
                this.add(a),
                a.animation.play("idle"),
                (a = new H(600, 230)),
                (b = null),
                a.set_frames(
                  Sa.fromSparrow(
                    M.getPath("images/rpgfire.png", "IMAGE", b),
                    M.getPath("images/rpgfire.xml", "TEXT", b)
                  )
                ),
                a.animation.addByPrefix("idle", "fire_iddle", 24, !0),
                a.setGraphicSize((0.6 * a.get_width()) | 0),
                a.set_antialiasing(!0),
                this.add(a),
                a.animation.play("idle"),
                (a = new H(1e3, 330)),
                (b = null),
                a.set_frames(
                  Sa.fromSparrow(
                    M.getPath("images/rpgfire.png", "IMAGE", b),
                    M.getPath("images/rpgfire.xml", "TEXT", b)
                  )
                ),
                a.animation.addByPrefix("idle", "fire_iddle", 24, !0),
                a.setGraphicSize((0.6 * a.get_width()) | 0),
                a.set_antialiasing(!0),
                this.add(a),
                a.animation.play("idle"),
                (this.light = new H(-800, -150).loadGraphic(
                  M.getPath("images/overwrite_light.png", "IMAGE", null)
                )));
          this.light.setGraphicSize(this.light.get_width() | 0);
          this.light.updateHitbox();
          this.gf = new dc(120, 80, "gf");
          this.gf.scrollFactor.set(0.95, 0.95);
          this.gf.set_antialiasing(!0);
          this.boyfriend = new Fa(700, 450, G.SONG.player1);
          this.dad = new dc(-180, 320, G.SONG.player2);
          switch (G.curStage) {
            case "inkingmistake":
              this.gf.setGraphicSize((0.5 * this.gf.get_width()) | 0);
              a = this.gf;
              a.set_y(a.y + 190);
              a = this.dad;
              a.set_x(a.x - 50);
              this.xgasterink.animation.play("idle");
              break;
            case "relighted":
              this.gf.setGraphicSize((0.5 * this.gf.get_width()) | 0);
              a = this.gf;
              a.set_y(a.y);
              a = this.gf;
              a.set_x(a.x + 20);
              this.boyfriend.setGraphicSize(
                (0.8 * this.boyfriend.get_width()) | 0
              );
              a = this.boyfriend;
              a.set_y(a.y + 40);
              a = this.dad;
              a.set_x(a.x - 150);
              a = this.dad;
              a.set_y(a.y - 250);
              break;
            default:
              this.gf.setGraphicSize((0.7 * this.gf.get_width()) | 0);
          }
          a = new U(
            this.dad.getGraphicMidpoint().x + 500,
            this.dad.getGraphicMidpoint().y - 200
          );
          this.add(this.gf);
          this.add(this.dad);
          this.add(this.boyfriend);
          this.add(this.light);
          b = new bd(!1, this.dialogue);
          b.scrollFactor.set();
          b.finishThing = q(this, this.startCountdown);
          V.songPosition = -5e3;
          this.strumLine = new H(0, 50).makeGraphic(p.width, 10);
          this.strumLine.scrollFactor.set();
          p.save.data.downscroll && this.strumLine.set_y(p.height - 165);
          this.strumLineNotes = new nb();
          this.add(this.strumLineNotes);
          this.playerStrums = new nb();
          this.generateSong(G.SONG.song);
          this.camFollow = new L(0, 0, 1, 1);
          this.camFollow.setPosition(a.x, a.y);
          null != G.prevCamFollow &&
            ((this.camFollow = G.prevCamFollow), (G.prevCamFollow = null));
          this.add(this.camFollow);
          p.camera.follow(this.camFollow, Cm.LOCKON, 0.01);
          p.camera.set_zoom(this.defaultCamZoom);
          a = p.camera;
          var c = this.camFollow.getPosition();
          a.scroll.set(c.x - 0.5 * a.width, c.y - 0.5 * a.height);
          c._weak && c.put();
          a = p.worldBounds;
          var d = (c = 0),
            e = p.width,
            f = p.height;
          null == f && (f = 0);
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          a.x = c;
          a.y = d;
          a.width = e;
          a.height = f;
          p.fixedTimestep = !1;
          p.save.data.songPosition &&
            ((G.songPosBG = new H(0, 10).loadGraphic(
              M.getPath("images/healthBar.png", "IMAGE", null)
            )),
            p.save.data.downscroll && G.songPosBG.set_y(0.9 * p.height + 45),
            G.songPosBG.screenCenter(od.X),
            G.songPosBG.scrollFactor.set(),
            this.add(G.songPosBG),
            (G.songPosBar = new bf(
              G.songPosBG.x + 4,
              G.songPosBG.y + 4,
              xe.LEFT_TO_RIGHT,
              (G.songPosBG.get_width() - 8) | 0,
              (G.songPosBG.get_height() - 8) | 0,
              this,
              "songPositionBar",
              0,
              9e4
            )),
            G.songPosBar.scrollFactor.set(),
            G.songPosBar.createFilledBar(-8355712, -16711936),
            this.add(G.songPosBar),
            (c = new ab(
              G.songPosBG.x + G.songPosBG.get_width() / 2 - 20,
              G.songPosBG.y,
              0,
              G.SONG.song,
              16
            )),
            p.save.data.downscroll && ((a = c), a.set_y(a.y - 3)),
            c.setFormat(
              "assets/fonts/vcr.ttf",
              16,
              -1,
              "right",
              Vb.OUTLINE,
              -16777216
            ),
            c.scrollFactor.set(),
            this.add(c),
            c.set_cameras([this.camHUD]));
          this.healthBarBG = new H(0, 0.9 * p.height).loadGraphic(
            M.getPath("images/healthBar.png", "IMAGE", null)
          );
          p.save.data.downscroll && this.healthBarBG.set_y(50);
          this.healthBarBG.screenCenter(od.X);
          this.healthBarBG.scrollFactor.set();
          this.add(this.healthBarBG);
          this.healthBar = new bf(
            this.healthBarBG.x + 4,
            this.healthBarBG.y + 4,
            xe.RIGHT_TO_LEFT,
            (this.healthBarBG.get_width() - 8) | 0,
            (this.healthBarBG.get_height() - 8) | 0,
            this,
            "health",
            0,
            2
          );
          this.healthBar.scrollFactor.set();
          this.healthBar.createFilledBar(-65536, -10027213);
          this.add(this.healthBar);
          this.scoreTxt = new ab(
            p.width / 2 - 235,
            this.healthBarBG.y + 50,
            0,
            "",
            20
          );
          p.save.data.accuracyDisplay ||
            (this.scoreTxt = new ab(
              this.healthBarBG.x + this.healthBarBG.get_width() / 2 - 150,
              this.healthBarBG.y + 50,
              0,
              "",
              20
            ));
          this.scoreTxt.setFormat(
            "assets/fonts/vcr.ttf",
            16,
            -1,
            "right",
            Vb.OUTLINE,
            -16777216
          );
          this.scoreTxt.scrollFactor.set();
          this.add(this.scoreTxt);
          this.replayTxt = new ab(
            this.healthBarBG.x + this.healthBarBG.get_width() / 2 - 75,
            this.healthBarBG.y + (p.save.data.downscroll ? 100 : -100),
            0,
            "REPLAY",
            20
          );
          this.replayTxt.setFormat(
            "assets/fonts/vcr.ttf",
            42,
            -1,
            "right",
            Vb.OUTLINE,
            -16777216
          );
          this.replayTxt.scrollFactor.set();
          G.loadRep && this.add(this.replayTxt);
          this.iconP1 = new Hg(G.SONG.player1, !0);
          this.iconP1.set_y(this.healthBar.y - this.iconP1.get_height() / 2);
          this.add(this.iconP1);
          this.iconP2 = new Hg(G.SONG.player2, !1);
          this.iconP2.set_y(this.healthBar.y - this.iconP2.get_height() / 2);
          this.add(this.iconP2);
          this.strumLineNotes.set_cameras([this.camHUD]);
          this.notes.set_cameras([this.camHUD]);
          this.healthBar.set_cameras([this.camHUD]);
          this.healthBarBG.set_cameras([this.camHUD]);
          this.iconP1.set_cameras([this.camHUD]);
          this.iconP2.set_cameras([this.camHUD]);
          this.scoreTxt.set_cameras([this.camHUD]);
          b.set_cameras([this.camHUD]);
          p.save.data.songPosition &&
            (G.songPosBG.set_cameras([this.camHUD]),
            G.songPosBar.set_cameras([this.camHUD]));
          G.loadRep && this.replayTxt.set_cameras([this.camHUD]);
          this.startingSong = !0;
          G.isStoryMode
            ? "senpai" == this.curSong.toLowerCase()
              ? this.schoolIntro(b)
              : this.add(b)
            : (this.curSong.toLowerCase(), this.startCountdown());
          G.loadRep || (G.rep = new Td("na"));
          Va.prototype.create.call(this);
        },
        schoolIntro: function (a) {
          var b = this,
            c = new H(-100, -100).makeGraphic(
              2 * p.width,
              2 * p.height,
              -16777216
            );
          c.scrollFactor.set();
          this.add(c);
          var d = new H(-100, -100).makeGraphic(
            2 * p.width,
            2 * p.height,
            -58575
          );
          d.scrollFactor.set();
          var e = new H();
          e.set_frames(
            Sa.fromSparrow(
              M.getPath("images/weeb/senpaiCrazy.png", "IMAGE", null),
              M.getPath("images/weeb/senpaiCrazy.xml", "TEXT", null)
            )
          );
          e.animation.addByPrefix("idle", "Senpai Pre Explosion", 24, !1);
          e.setGraphicSize((6 * e.get_width()) | 0);
          e.scrollFactor.set();
          e.updateHitbox();
          e.screenCenter();
          if (
            "roses" == G.SONG.song.toLowerCase() ||
            "thorns" == G.SONG.song.toLowerCase()
          )
            this.remove(c),
              "thorns" == G.SONG.song.toLowerCase() && this.add(d);
          new hc().start(0.3, function (f) {
            c.set_alpha(c.alpha - 0.15);
            0 < c.alpha
              ? f.reset(0.3)
              : (null != a
                  ? ((b.inCutscene = !0),
                    "thorns" == G.SONG.song.toLowerCase()
                      ? (b.add(e),
                        e.set_alpha(0),
                        new hc().start(0.3, function (c) {
                          e.set_alpha(e.alpha + 0.15);
                          1 > e.alpha
                            ? c.reset()
                            : (e.animation.play("idle"),
                              p.sound.play(
                                M.sound("Senpai_Dies"),
                                1,
                                !1,
                                null,
                                !0,
                                function () {
                                  b.remove(e);
                                  b.remove(d);
                                  p.camera.fade(
                                    -1,
                                    0.01,
                                    !0,
                                    function () {
                                      b.add(a);
                                    },
                                    !0
                                  );
                                }
                              ),
                              new hc().start(3.2, function (a) {
                                p.camera.fade(-1, 1.6, !1);
                              }));
                        }))
                      : b.add(a))
                  : b.startCountdown(),
                b.remove(c));
          });
        },
        startCountdown: function () {
          var a = this;
          this.inCutscene = !1;
          this.generateStaticArrows(0);
          this.generateStaticArrows(1);
          this.talking = !1;
          this.startedCountdown = !0;
          V.songPosition = 0;
          V.songPosition -= 5 * V.crochet;
          var b = 0;
          this.startTimer = new hc().start(
            V.crochet / 1e3,
            function (c) {
              a.dad.dance();
              a.gf.dance();
              a.boyfriend.playAnim("idle");
              c = Object.create(null);
              c["default"] = ["ready", "set", "go"];
              c.school = [
                "weeb/pixelUI/ready-pixel",
                "weeb/pixelUI/set-pixel",
                "weeb/pixelUI/date-pixel",
              ];
              c.schoolEvil = [
                "weeb/pixelUI/ready-pixel",
                "weeb/pixelUI/set-pixel",
                "weeb/pixelUI/date-pixel",
              ];
              for (
                var d = c["default"], e = ea.keysIterator(c);
                e.hasNext();

              ) {
                var f = e.next();
                f == G.curStage && (d = c[f]);
              }
              switch (b) {
                case 0:
                  p.sound.play(M.sound("intro3"), 0.6);
                  break;
                case 1:
                  var h = new H().loadGraphic(
                    M.getPath("images/" + d[0] + ".png", "IMAGE", null)
                  );
                  h.scrollFactor.set();
                  h.updateHitbox();
                  K.startsWith(G.curStage, "school") &&
                    h.setGraphicSize((h.get_width() * G.daPixelZoom) | 0);
                  h.screenCenter();
                  a.add(h);
                  c = h;
                  mb.tween(
                    h,
                    { y: c.set_y(c.y + 100), alpha: 0 },
                    V.crochet / 1e3,
                    {
                      ease: ac.cubeInOut,
                      onComplete: function (a) {
                        h.destroy();
                      },
                    }
                  );
                  p.sound.play(M.sound("intro2"), 0.6);
                  break;
                case 2:
                  var m = new H().loadGraphic(
                    M.getPath("images/" + d[1] + ".png", "IMAGE", null)
                  );
                  m.scrollFactor.set();
                  K.startsWith(G.curStage, "school") &&
                    m.setGraphicSize((m.get_width() * G.daPixelZoom) | 0);
                  m.screenCenter();
                  a.add(m);
                  c = m;
                  mb.tween(
                    m,
                    { y: c.set_y(c.y + 100), alpha: 0 },
                    V.crochet / 1e3,
                    {
                      ease: ac.cubeInOut,
                      onComplete: function (a) {
                        m.destroy();
                      },
                    }
                  );
                  p.sound.play(M.sound("intro1"), 0.6);
                  break;
                case 3:
                  var n = new H().loadGraphic(
                    M.getPath("images/" + d[2] + ".png", "IMAGE", null)
                  );
                  n.scrollFactor.set();
                  K.startsWith(G.curStage, "school") &&
                    n.setGraphicSize((n.get_width() * G.daPixelZoom) | 0);
                  n.updateHitbox();
                  n.screenCenter();
                  a.add(n);
                  c = n;
                  mb.tween(
                    n,
                    { y: c.set_y(c.y + 100), alpha: 0 },
                    V.crochet / 1e3,
                    {
                      ease: ac.cubeInOut,
                      onComplete: function (a) {
                        n.destroy();
                      },
                    }
                  );
                  p.sound.play(M.sound("introGo"), 0.6);
              }
              b += 1;
            },
            5
          );
        },
        startSong: function () {
          this.startingSong = !1;
          this.previousFrameTime = p.game.ticks;
          this.lastReportedPlayheadPosition = 0;
          this.paused ||
            p.sound.playMusic(
              "songs:assets/songs/" + G.SONG.song.toLowerCase() + "/Inst.mp3",
              1,
              !1
            );
          p.sound.music.onComplete = q(this, this.endSong);
          this.vocals.play();
          this.songLength = p.sound.music._length;
          if (p.save.data.songPosition) {
            this.remove(G.songPosBG);
            this.remove(G.songPosBar);
            this.remove(this.songName);
            G.songPosBG = new H(0, 10).loadGraphic(
              M.getPath("images/healthBar.png", "IMAGE", null)
            );
            p.save.data.downscroll && G.songPosBG.set_y(0.9 * p.height + 45);
            G.songPosBG.screenCenter(od.X);
            G.songPosBG.scrollFactor.set();
            this.add(G.songPosBG);
            G.songPosBar = new bf(
              G.songPosBG.x + 4,
              G.songPosBG.y + 4,
              xe.LEFT_TO_RIGHT,
              (G.songPosBG.get_width() - 8) | 0,
              (G.songPosBG.get_height() - 8) | 0,
              this,
              "songPositionBar",
              0,
              this.songLength - 1e3
            );
            G.songPosBar.set_numDivisions(1e3);
            G.songPosBar.scrollFactor.set();
            G.songPosBar.createFilledBar(-8355712, -16711936);
            this.add(G.songPosBar);
            var a = new ab(
              G.songPosBG.x + G.songPosBG.get_width() / 2 - 20,
              G.songPosBG.y,
              0,
              G.SONG.song,
              16
            );
            p.save.data.downscroll && a.set_y(a.y - 3);
            a.setFormat(
              "assets/fonts/vcr.ttf",
              16,
              -1,
              "right",
              Vb.OUTLINE,
              -16777216
            );
            a.scrollFactor.set();
            this.add(a);
            G.songPosBG.set_cameras([this.camHUD]);
            G.songPosBar.set_cameras([this.camHUD]);
            a.set_cameras([this.camHUD]);
          }
        },
        generateSong: function (a) {
          a = G.SONG;
          V.changeBPM(a.bpm);
          this.curSong = a.song;
          if (G.SONG.needsVoices) {
            var b =
              "songs:assets/songs/" + G.SONG.song.toLowerCase() + "/Voices.mp3";
            this.vocals = new of().loadEmbedded(b);
          } else this.vocals = new of();
          p.sound.list.add(this.vocals);
          this.notes = new nb();
          this.add(this.notes);
          a = a.notes;
          for (var c = (b = 0); c < a.length; ) {
            var d = a[c];
            ++c;
            for (var e = 0, f = d.sectionNotes; e < f.length; ) {
              var h = f[e];
              ++e;
              var m = h[0],
                n = h[1] % 4 | 0,
                da = d.mustHitSection;
              3 < h[1] && (da = !d.mustHitSection);
              var g =
                0 < this.unspawnNotes.length
                  ? this.unspawnNotes[(this.unspawnNotes.length - 1) | 0]
                  : null;
              var k = new Gc(m, n, g);
              k.sustainLength = h[2];
              k.scrollFactor.set(0, 0);
              var l = k.sustainLength;
              l /= V.stepCrochet;
              this.unspawnNotes.push(k);
              h = 0;
              for (l = Math.floor(l); h < l; ) {
                var r = h++;
                g = this.unspawnNotes[(this.unspawnNotes.length - 1) | 0];
                g = new Gc(m + V.stepCrochet * r + V.stepCrochet, n, g, !0);
                g.scrollFactor.set();
                this.unspawnNotes.push(g);
                g.mustPress = da;
                g.mustPress && g.set_x(g.x + p.width / 2);
              }
              k.mustPress = da;
              k.mustPress && ((m = k), m.set_x(m.x + p.width / 2));
            }
            ++b;
          }
          this.unspawnNotes.sort(q(this, this.sortByShit));
          this.generatedMusic = !0;
        },
        sortByShit: function (a, b) {
          a = a.strumTime;
          b = b.strumTime;
          var c = 0;
          a < b ? (c = -1) : a > b && (c = 1);
          return c;
        },
        generateStaticArrows: function (a) {
          for (var b = 0; 4 > b; ) {
            var c = b++,
              d = new H(0, this.strumLine.y);
            switch (G.curStage) {
              case "school":
              case "schoolEvil":
                d.loadGraphic(
                  M.getPath(
                    "images/weeb/pixelUI/arrows-pixels.png",
                    "IMAGE",
                    null
                  ),
                  !0,
                  17,
                  17
                );
                d.animation.add("green", [6]);
                d.animation.add("red", [7]);
                d.animation.add("blue", [5]);
                d.animation.add("purplel", [4]);
                d.setGraphicSize((d.get_width() * G.daPixelZoom) | 0);
                d.updateHitbox();
                d.set_antialiasing(!1);
                switch (Math.abs(c)) {
                  case 0:
                    var e = d;
                    e.set_x(e.x + 0 * Gc.swagWidth);
                    d.animation.add("static", [0]);
                    d.animation.add("pressed", [4, 8], 12, !1);
                    d.animation.add("confirm", [12, 16], 24, !1);
                    break;
                  case 1:
                    e = d;
                    e.set_x(e.x + Gc.swagWidth);
                    d.animation.add("static", [1]);
                    d.animation.add("pressed", [5, 9], 12, !1);
                    d.animation.add("confirm", [13, 17], 24, !1);
                    break;
                  case 2:
                    e = d;
                    e.set_x(e.x + 2 * Gc.swagWidth);
                    d.animation.add("static", [2]);
                    d.animation.add("pressed", [6, 10], 12, !1);
                    d.animation.add("confirm", [14, 18], 12, !1);
                    break;
                  case 3:
                    (e = d),
                      e.set_x(e.x + 3 * Gc.swagWidth),
                      d.animation.add("static", [3]),
                      d.animation.add("pressed", [7, 11], 12, !1),
                      d.animation.add("confirm", [15, 19], 24, !1);
                }
                break;
              default:
                switch (
                  (d.set_frames(
                    Sa.fromSparrow(
                      M.getPath("images/NOTE_assets.png", "IMAGE", null),
                      M.getPath("images/NOTE_assets.xml", "TEXT", null)
                    )
                  ),
                  d.animation.addByPrefix("green", "arrowUP"),
                  d.animation.addByPrefix("blue", "arrowDOWN"),
                  d.animation.addByPrefix("purple", "arrowLEFT"),
                  d.animation.addByPrefix("red", "arrowRIGHT"),
                  d.set_antialiasing(!0),
                  d.setGraphicSize((0.7 * d.get_width()) | 0),
                  Math.abs(c))
                ) {
                  case 0:
                    e = d;
                    e.set_x(e.x + 0 * Gc.swagWidth);
                    d.animation.addByPrefix("static", "arrowLEFT");
                    d.animation.addByPrefix("pressed", "left press", 24, !1);
                    d.animation.addByPrefix("confirm", "left confirm", 24, !1);
                    break;
                  case 1:
                    e = d;
                    e.set_x(e.x + Gc.swagWidth);
                    d.animation.addByPrefix("static", "arrowDOWN");
                    d.animation.addByPrefix("pressed", "down press", 24, !1);
                    d.animation.addByPrefix("confirm", "down confirm", 24, !1);
                    break;
                  case 2:
                    e = d;
                    e.set_x(e.x + 2 * Gc.swagWidth);
                    d.animation.addByPrefix("static", "arrowUP");
                    d.animation.addByPrefix("pressed", "up press", 24, !1);
                    d.animation.addByPrefix("confirm", "up confirm", 24, !1);
                    break;
                  case 3:
                    (e = d),
                      e.set_x(e.x + 3 * Gc.swagWidth),
                      d.animation.addByPrefix("static", "arrowRIGHT"),
                      d.animation.addByPrefix("pressed", "right press", 24, !1),
                      d.animation.addByPrefix(
                        "confirm",
                        "right confirm",
                        24,
                        !1
                      );
                }
            }
            d.updateHitbox();
            d.scrollFactor.set();
            G.isStoryMode ||
              ((e = d),
              e.set_y(e.y - 10),
              d.set_alpha(0),
              mb.tween(d, { y: d.y + 10, alpha: 1 }, 1, {
                ease: ac.circOut,
                startDelay: 0.5 + 0.2 * c,
              }));
            d.ID = c;
            1 == a && this.playerStrums.add(d);
            d.animation.play("static");
            c = d;
            c.set_x(c.x + 50);
            c = d;
            c.set_x(c.x + (p.width / 2) * a);
            this.strumLineNotes.add(d);
          }
        },
        tweenCamIn: function () {
          mb.tween(p.camera, { zoom: 1.3 }, (4 * V.stepCrochet) / 1e3, {
            ease: ac.elasticInOut,
          });
        },
        openSubState: function (a) {
          this.paused &&
            (null != p.sound.music &&
              (p.sound.music.pause(), this.vocals.pause()),
            this.startTimer.finished || (this.startTimer.active = !1));
          Va.prototype.openSubState.call(this, a);
        },
        closeSubState: function () {
          this.paused &&
            (null == p.sound.music || this.startingSong || this.resyncVocals(),
            this.startTimer.finished || (this.startTimer.active = !0),
            (this.paused = !1));
          Va.prototype.closeSubState.call(this);
        },
        resyncVocals: function () {
          this.vocals.pause();
          p.sound.music.play();
          V.songPosition = p.sound.music._time;
          this.vocals.set_time(V.songPosition);
          this.vocals.play();
        },
        generateRanking: function () {
          var a =
            0 == G.misses && 0 == G.bads && 0 == G.shits && 0 == G.goods
              ? "(MFC)"
              : 0 == G.misses && 0 == G.bads && 0 == G.shits && 1 <= G.goods
              ? "(GFC)"
              : ((10 > G.shits && 0 != G.shits) ||
                  (10 > G.bads && 0 != G.bads)) &&
                0 == G.misses
              ? "(SDCB)"
              : 0 == G.misses && (10 <= G.shits || 10 <= G.bads)
              ? "(FC)"
              : 10 <= G.misses || 10 <= G.shits || 10 <= G.bads
              ? "(CB)"
              : "";
          for (
            var b = [
                99.9935 <= this.accuracy,
                99.98 <= this.accuracy,
                99.97 <= this.accuracy,
                99.955 <= this.accuracy,
                99.9 <= this.accuracy,
                99.8 <= this.accuracy,
                99.7 <= this.accuracy,
                99 <= this.accuracy,
                96.5 <= this.accuracy,
                93 <= this.accuracy,
                90 <= this.accuracy,
                85 <= this.accuracy,
                80 <= this.accuracy,
                70 <= this.accuracy,
                60 <= this.accuracy,
                60 > this.accuracy,
              ],
              c = 0,
              d = b.length;
            c < d;

          ) {
            var e = c++;
            if (b[e]) {
              switch (e) {
                case 0:
                  a += " AAAAA";
                  break;
                case 1:
                  a += " AAAA:";
                  break;
                case 2:
                  a += " AAAA.";
                  break;
                case 3:
                  a += " AAAA";
                  break;
                case 4:
                  a += " AAA:";
                  break;
                case 5:
                  a += " AAA.";
                  break;
                case 6:
                  a += " AAA";
                  break;
                case 7:
                  a += " AA:";
                  break;
                case 8:
                  a += " AA.";
                  break;
                case 9:
                  a += " AA";
                  break;
                case 10:
                  a += " A:";
                  break;
                case 11:
                  a += " A.";
                  break;
                case 12:
                  a += " A";
                  break;
                case 13:
                  a += " B";
                  break;
                case 14:
                  a += " C";
                  break;
                case 15:
                  a += " D";
              }
              break;
            }
          }
          0 == this.accuracy && (a = "N/A");
          return a;
        },
        truncateFloat: function (a, b) {
          a *= Math.pow(10, b);
          return (a = Math.round(a) / Math.pow(10, b));
        },
        update: function (a) {
          var b = this;
          this.perfectMode = !1;
          var c = p.keys.justPressed;
          c.keyManager.checkStatus(57, c.status) &&
            ("bf-old" == this.iconP1.animation._curAnim.name
              ? this.iconP1.animation.play(G.SONG.player1)
              : this.iconP1.animation.play("bf-old"));
          "philly" == G.curStage &&
            this.trainMoving &&
            ((this.trainFrameTiming += a),
            0.041666666666666664 <= this.trainFrameTiming &&
              (this.updateTrainPos(), (this.trainFrameTiming = 0)));
          Va.prototype.update.call(this, a);
          p.save.data.accuracyDisplay
            ? this.scoreTxt.set_text(
                "Score:" +
                  (p.save.data.etternaMode
                    ? Math.max(0, this.etternaModeScore) +
                      " (" +
                      this.songScore +
                      ")"
                    : "" + this.songScore) +
                  " | Combo Breaks:" +
                  G.misses +
                  " | Accuracy:" +
                  this.truncateFloat(this.accuracy, 2) +
                  "% | " +
                  this.generateRanking()
              )
            : this.scoreTxt.set_text("Score:" + this.songScore);
          this.scoreTxt.set_text(
            "Score:" +
              this.songScore +
              " | Misses:" +
              G.misses +
              " | Accuracy:" +
              this.truncateFloat(this.accuracy, 2) +
              "% " +
              (this.fc
                ? "| FC"
                : 0 == G.misses
                ? "| A"
                : 75 >= this.accuracy
                ? "| BAD"
                : "")
          );
          this.iconP1.setGraphicSize(
            (150 + 0.5 * (this.iconP1.get_width() - 150)) | 0
          );
          this.iconP2.setGraphicSize(
            (150 + 0.5 * (this.iconP2.get_width() - 150)) | 0
          );
          this.iconP1.updateHitbox();
          this.iconP2.updateHitbox();
          this.iconP1.set_x(
            this.healthBar.x +
              (0.01 *
                this.healthBar.get_width() *
                Ye.remapToRange(this.healthBar.get_percent(), 0, 100, 100, 0) -
                26)
          );
          this.iconP2.set_x(
            this.healthBar.x +
              0.01 *
                this.healthBar.get_width() *
                Ye.remapToRange(this.healthBar.get_percent(), 0, 100, 100, 0) -
              (this.iconP2.get_width() - 26)
          );
          2 < this.health && (this.health = 2);
          20 > this.healthBar.get_percent()
            ? this.iconP1.animation._curAnim.set_curFrame(1)
            : this.iconP1.animation._curAnim.set_curFrame(0);
          80 < this.healthBar.get_percent()
            ? this.iconP2.animation._curAnim.set_curFrame(1)
            : this.iconP2.animation._curAnim.set_curFrame(0);
          this.startingSong
            ? this.startedCountdown &&
              ((V.songPosition += 1e3 * p.elapsed),
              0 <= V.songPosition && this.startSong())
            : ((V.songPosition += 1e3 * p.elapsed),
              this.paused ||
                ((this.songTime += p.game.ticks - this.previousFrameTime),
                (this.previousFrameTime = p.game.ticks),
                V.lastSongPos != V.songPosition &&
                  ((this.songTime = (this.songTime + V.songPosition) / 2),
                  (V.lastSongPos = V.songPosition))));
          this.generatedMusic &&
            null != G.SONG.notes[(this.curStep / 16) | 0] &&
            (this.camFollow.x == this.dad.getMidpoint().x + 300 ||
              G.SONG.notes[(this.curStep / 16) | 0].mustHitSection ||
              (this.camFollow.setPosition(
                this.dad.getMidpoint().x + 300,
                this.boyfriend.getMidpoint().y - 150
              ),
              "relighted" == G.curStage &&
                (this.camFollow.set_x(this.dad.getMidpoint().x + 100),
                this.camFollow.set_y(this.dad.getMidpoint().y - 100))),
            G.SONG.notes[(this.curStep / 16) | 0].mustHitSection &&
              this.camFollow.x != this.boyfriend.getMidpoint().x - 300 &&
              (this.camFollow.setPosition(
                this.boyfriend.getMidpoint().x - 300,
                this.boyfriend.getMidpoint().y - 150
              ),
              "relighted" == G.curStage &&
                this.camFollow.set_y(this.boyfriend.getMidpoint().y - 100),
              "tutorial" == G.SONG.song.toLowerCase() &&
                mb.tween(p.camera, { zoom: 1 }, (4 * V.stepCrochet) / 1e3, {
                  ease: ac.elasticInOut,
                })));
          this.camZooming &&
            ((a = this.defaultCamZoom),
            p.camera.set_zoom(a + 0.95 * (p.camera.zoom - a)),
            this.camHUD.set_zoom(1 + 0.95 * (this.camHUD.zoom - 1)));
          if ("Fresh" == this.curSong)
            switch (this.curBeat) {
              case 16:
                this.camZooming = !0;
                this.gfSpeed = 2;
                break;
              case 48:
                this.gfSpeed = 1;
                break;
              case 80:
                this.gfSpeed = 2;
                break;
              case 112:
                this.gfSpeed = 1;
            }
          if ("Bopeebo" == this.curSong)
            switch (this.curBeat) {
              case 128:
              case 129:
              case 130:
                this.vocals.set_volume(0);
            }
          Ga.player1.controls._reset.check() &&
            ((this.health = 0),
            Db.trace("RESET = True", {
              fileName: "source/PlayState.hx",
              lineNumber: 1349,
              className: "PlayState",
              methodName: "update",
            }));
          Ga.player1.controls._cheat.check() &&
            ((this.health += 1),
            Db.trace("User is cheating!", {
              fileName: "source/PlayState.hx",
              lineNumber: 1356,
              className: "PlayState",
              methodName: "update",
            }));
          0 >= this.health &&
            ((this.boyfriend.stunned = !0),
            (this.persistentDraw = this.persistentUpdate = !1),
            (this.paused = !0),
            (c = this.vocals),
            c.cleanup(c.autoDestroy, !0),
            (c = p.sound.music),
            c.cleanup(c.autoDestroy, !0),
            this.openSubState(
              new yi(
                this.boyfriend.getScreenPosition().x,
                this.boyfriend.getScreenPosition().y
              )
            ));
          null != this.unspawnNotes[0] &&
            1500 > this.unspawnNotes[0].strumTime - V.songPosition &&
            ((a = this.unspawnNotes[0]),
            this.notes.add(a),
            (a = this.unspawnNotes.indexOf(a)),
            this.unspawnNotes.splice(a, 1));
          this.generatedMusic &&
            this.notes.forEachAlive(function (a) {
              a.y > p.height
                ? (a.set_active(!1), a.set_visible(!1))
                : (a.set_visible(!0), a.set_active(!0));
              if (!a.mustPress && a.wasGoodHit) {
                "Tutorial" != G.SONG.song && (b.camZooming = !0);
                var c = "";
                null != G.SONG.notes[Math.floor(b.curStep / 16)] &&
                  G.SONG.notes[Math.floor(b.curStep / 16)].altAnim &&
                  (c = "-alt");
                switch (Math.abs(a.noteData)) {
                  case 0:
                    b.dad.playAnim("singLEFT" + c, !0);
                    break;
                  case 1:
                    b.dad.playAnim("singDOWN" + c, !0);
                    break;
                  case 2:
                    b.dad.playAnim("singUP" + c, !0);
                    break;
                  case 3:
                    b.dad.playAnim("singRIGHT" + c, !0);
                }
                b.dad.holdTimer = 0;
                G.SONG.needsVoices && b.vocals.set_volume(1);
                a.kill();
                b.notes.remove(a, !0);
                a.destroy();
              }
              p.save.data.downscroll
                ? a.set_y(
                    b.strumLine.y -
                      -0.45 *
                        (V.songPosition - a.strumTime) *
                        Ye.roundDecimal(G.SONG.speed, 2)
                  )
                : a.set_y(
                    b.strumLine.y -
                      0.45 *
                        (V.songPosition - a.strumTime) *
                        Ye.roundDecimal(G.SONG.speed, 2)
                  );
              ((a.y < -a.get_height() && !p.save.data.downscroll) ||
                (a.y >= b.strumLine.y + 106 && p.save.data.downscroll)) &&
                a.mustPress &&
                (a.isSustainNote && a.wasGoodHit
                  ? (a.kill(), b.notes.remove(a, !0), a.destroy())
                  : ((b.health -= 0.075),
                    b.vocals.set_volume(0),
                    G.theFunne && b.noteMiss(a.noteData)),
                a.set_active(!1),
                a.set_visible(!1),
                a.kill(),
                b.notes.remove(a, !0),
                a.destroy());
            });
          this.inCutscene || this.keyShit();
        },
        endSong: function () {
          G.loadRep || G.rep.SaveReplay();
          this.canPause = !1;
          p.sound.music.set_volume(0);
          this.vocals.set_volume(0);
          G.SONG.validScore &&
            db.saveScore(G.SONG.song, this.songScore, G.storyDifficulty);
          if (G.isStoryMode)
            if (
              ((G.campaignScore += this.songScore),
              ba.remove(G.storyPlaylist, G.storyPlaylist[0]),
              0 >= G.storyPlaylist.length)
            ) {
              p.sound.playMusic(
                M.getPath("music/freakyMenu.mp3", "MUSIC", null)
              );
              this.transIn = ib.defaultTransIn;
              this.transOut = ib.defaultTransOut;
              var a = new Nc();
              p.game._state.switchTo(a) && (p.game._requestedState = a);
              Nc.weekUnlocked[
                Math.min(G.storyWeek + 1, Nc.weekUnlocked.length - 1) | 0
              ] = !0;
              G.SONG.validScore &&
                db.saveWeekScore(
                  G.storyWeek,
                  G.campaignScore,
                  G.storyDifficulty
                );
              p.save.data.weekUnlocked = Nc.weekUnlocked;
              p.save.flush();
            } else {
              a = "";
              0 == G.storyDifficulty && (a = "-easy");
              2 == G.storyDifficulty && (a = "-hard");
              Db.trace("LOADING NEXT SONG", {
                fileName: "source/PlayState.hx",
                lineNumber: 1533,
                className: "PlayState",
                methodName: "endSong",
              });
              Db.trace(G.storyPlaylist[0].toLowerCase() + a, {
                fileName: "source/PlayState.hx",
                lineNumber: 1534,
                className: "PlayState",
                methodName: "endSong",
              });
              if ("eggnog" == G.SONG.song.toLowerCase()) {
                var b = new H(
                  -p.width * p.camera.zoom,
                  -p.height * p.camera.zoom
                ).makeGraphic(3 * p.width, 3 * p.height, -16777216);
                b.scrollFactor.set();
                this.add(b);
                this.camHUD.set_visible(!1);
                p.sound.play(M.sound("Lights_Shut_off"));
              }
              ib.skipNextTransIn = !0;
              ib.skipNextTransOut = !0;
              G.prevCamFollow = this.camFollow;
              G.SONG = Ef.loadFromJson(
                G.storyPlaylist[0].toLowerCase() + a,
                G.storyPlaylist[0]
              );
              a = p.sound.music;
              a.cleanup(a.autoDestroy, !0);
              a = Tb.getNextState(new G(), !1);
              p.game._state.switchTo(a) && (p.game._requestedState = a);
            }
          else
            Db.trace("WENT BACK TO FREEPLAY??", {
              fileName: "source/PlayState.hx",
              lineNumber: 1559,
              className: "PlayState",
              methodName: "endSong",
            }),
              (a = new Gg()),
              p.game._state.switchTo(a) && (p.game._requestedState = a);
        },
        popUpScore: function (a) {
          a = Math.abs(a - V.songPosition);
          var b = Lc.wife3(a, p.save.data.etternaMode ? 1 : 1.7);
          this.vocals.set_volume(1);
          var c = I.string(this.combo),
            d = new ab(0, 0, 0, c, 32);
          switch (G.curStage) {
            case "inkingmistake":
              d.set_x(this.gf.x + 300);
              d.set_y(this.gf.y + 100);
              break;
            case "relighted":
              d.set_x(this.gf.x + 300);
              d.set_y(this.gf.y + 100);
              break;
            default:
              d.set_x(this.gf.x + 300), d.set_y(this.gf.y);
          }
          var e = new H(),
            f = 350;
          c = "sick";
          a > 0.9 * V.safeZoneOffset
            ? ((c = "shit"), (f = 50), --this.totalNotesHit)
            : a > 0.75 * V.safeZoneOffset
            ? ((c = "bad"), (f = 100), --this.totalNotesHit)
            : a > 0.2 * V.safeZoneOffset && ((c = "good"), (f = 200));
          this.songScore += f;
          p.save.data.etternaMode &&
            (this.etternaModeScore += Math.round(f / b));
          b = a = "";
          K.startsWith(G.curStage, "school") &&
            ((a = "weeb/pixelUI/"), (b = "-pixel"));
          e.loadGraphic(
            M.getPath("images/" + (a + c + b) + ".png", "IMAGE", null)
          );
          e.set_x(d.x - 40);
          e.set_y(d.y + 100);
          e.acceleration.set_y(550);
          c = e.velocity;
          c.set_y(c.y - p.random.int(140, 175));
          c = e.velocity;
          c.set_x(c.x - p.random.int(0, 10));
          var h = new H().loadGraphic(
            M.getPath("images/" + (a + "combo" + b) + ".png", "IMAGE", null)
          );
          h.set_x(d.x);
          h.set_y(d.y);
          h.acceleration.set_y(600);
          c = h.velocity;
          c.set_y(c.y - 150);
          c = h.velocity;
          c.set_x(c.x + p.random.int(1, 10));
          this.add(e);
          e.setGraphicSize((0.5 * e.get_width()) | 0);
          e.set_antialiasing(!0);
          h.setGraphicSize((0.5 * h.get_width()) | 0);
          h.set_antialiasing(!0);
          h.updateHitbox();
          e.updateHitbox();
          f = [];
          var m = this.combo + "";
          2 == m.length && f.push(0);
          c = 0;
          for (var n = m.length; c < n; ) {
            var da = c++;
            f.push(I.parseInt(m.charAt(da)));
          }
          for (c = m = 0; c < f.length; )
            (da = f[c]),
              ++c,
              (da = [
                new H().loadGraphic(
                  M.getPath(
                    "images/" + (a + "num" + (da | 0) + b) + ".png",
                    "IMAGE",
                    null
                  )
                ),
              ]),
              da[0].set_x(d.x + 43 * m - 90),
              da[0].set_y(d.y + 180),
              K.startsWith(G.curStage, "school")
                ? da[0].setGraphicSize((da[0].get_width() * G.daPixelZoom) | 0)
                : (da[0].set_antialiasing(!0),
                  da[0].setGraphicSize((0.4 * da[0].get_width()) | 0)),
              da[0].updateHitbox(),
              da[0].acceleration.set_y(p.random.int(200, 300)),
              (n = da[0].velocity),
              n.set_y(n.y - p.random.int(140, 160)),
              da[0].velocity.set_x(p.random.float(-5, 5)),
              (10 <= this.combo || 0 == this.combo) && this.add(da[0]),
              mb.tween(da[0], { alpha: 0 }, 0.2, {
                onComplete: (function (a) {
                  return function (b) {
                    a[0].destroy();
                  };
                })(da),
                startDelay: 0.002 * V.crochet,
              }),
              ++m;
          d.set_text(I.string(f));
          mb.tween(e, { alpha: 0 }, 0.2, { startDelay: 0.001 * V.crochet });
          mb.tween(h, { alpha: 0 }, 0.2, {
            onComplete: function (a) {
              d.destroy();
              h.destroy();
              e.destroy();
            },
            startDelay: 0.001 * V.crochet,
          });
          this.curSection += 1;
        },
        NearlyEquals: function (a, b, c) {
          null == c && (c = 10);
          return Math.abs(Ye.roundDecimal(a, 1) - Ye.roundDecimal(b, 1)) < c;
        },
        keyShit: function () {
          var a = this;
          this.up = Ga.player1.controls._up.check();
          this.right = Ga.player1.controls._right.check();
          this.down = Ga.player1.controls._down.check();
          this.left = Ga.player1.controls._left.check();
          this.upP = Ga.player1.controls._upP.check();
          this.rightP = Ga.player1.controls._rightP.check();
          this.downP = Ga.player1.controls._downP.check();
          this.leftP = Ga.player1.controls._leftP.check();
          this.upR = Ga.player1.controls._upR.check();
          this.rightR = Ga.player1.controls._rightR.check();
          this.downR = Ga.player1.controls._downR.check();
          this.leftR = Ga.player1.controls._leftR.check();
          this.pauseKey = !1;
          this.noteWidth = Gc.swagWidth;
          this.pauseBorderX = p.width / 4;
          this.pauseBorderY = p.height / 4;
          this.arrowStart = p.width / 2 + 50;
          this.leftDownBorder = this.arrowStart + this.noteWidth;
          this.downUpBorder = this.leftDownBorder + this.noteWidth;
          this.upRightBorder = this.downUpBorder + this.noteWidth;
          this.arrowEnd = this.upRightBorder + this.noteWidth;
          for (var b = 0, c = p.touches.list; b < c.length; ) {
            var d = c[b];
            ++b;
            var e = d.input;
            if (1 == e.current || 2 == e.current)
              d.screenX >= this.arrowStart &&
                d.screenX < this.leftDownBorder &&
                (this.left = !0),
                d.screenX >= this.leftDownBorder &&
                  d.screenX < this.downUpBorder &&
                  (this.down = !0),
                d.screenX >= this.downUpBorder &&
                  d.screenX < this.upRightBorder &&
                  (this.up = !0),
                d.screenX >= this.upRightBorder &&
                  d.screenX <= this.arrowEnd &&
                  (this.right = !0);
            2 == d.input.current &&
              (d.screenX <= this.pauseBorderX &&
                d.screenY <= this.pauseBorderY &&
                (this.pauseKey = !0),
              d.screenX >= this.arrowStart &&
                d.screenX < this.leftDownBorder &&
                (this.leftP = !0),
              d.screenX >= this.leftDownBorder &&
                d.screenX < this.downUpBorder &&
                (this.downP = !0),
              d.screenX >= this.downUpBorder &&
                d.screenX < this.upRightBorder &&
                (this.upP = !0),
              d.screenX >= this.upRightBorder &&
                d.screenX <= this.arrowEnd &&
                (this.rightP = !0));
            -1 == d.input.current &&
              (d.screenX >= this.arrowStart &&
                d.screenX < this.leftDownBorder &&
                (this.leftR = !0),
              d.screenX >= this.leftDownBorder &&
                d.screenX < this.downUpBorder &&
                (this.downR = !0),
              d.screenX >= this.downUpBorder &&
                d.screenX < this.upRightBorder &&
                (this.upR = !0),
              d.screenX >= this.upRightBorder &&
                d.screenX <= this.arrowEnd &&
                (this.rightR = !0));
          }
          e = p.keys.justPressed;
          (e.keyManager.checkStatus(13, e.status) || this.pauseKey) &&
            this.startedCountdown &&
            this.canPause &&
            ((this.persistentUpdate = !1),
            (this.paused = this.persistentDraw = !0),
            this.openSubState(
              new Ni(
                this.boyfriend.getScreenPosition().x,
                this.boyfriend.getScreenPosition().y
              )
            ));
          G.loadRep
            ? ((this.left = this.right = this.down = this.up = !1),
              G.repPresses < G.rep.replay.keyPresses.length &&
                G.repReleases < G.rep.replay.keyReleases.length &&
                ((this.upP =
                  this.NearlyEquals(
                    G.rep.replay.keyPresses[G.repPresses].time,
                    V.songPosition
                  ) && "up" == G.rep.replay.keyPresses[G.repPresses].key),
                (this.rightP =
                  this.NearlyEquals(
                    G.rep.replay.keyPresses[G.repPresses].time,
                    V.songPosition
                  ) && "right" == G.rep.replay.keyPresses[G.repPresses].key),
                (this.downP =
                  this.NearlyEquals(
                    G.rep.replay.keyPresses[G.repPresses].time,
                    V.songPosition
                  ) && "down" == G.rep.replay.keyPresses[G.repPresses].key),
                (this.leftP =
                  this.NearlyEquals(
                    G.rep.replay.keyPresses[G.repPresses].time,
                    V.songPosition
                  ) && "left" == G.rep.replay.keyPresses[G.repPresses].key),
                (this.upR =
                  this.NearlyEquals(
                    G.rep.replay.keyReleases[G.repReleases].time,
                    V.songPosition
                  ) && "up" == G.rep.replay.keyReleases[G.repReleases].key),
                (this.rightR =
                  this.NearlyEquals(
                    G.rep.replay.keyReleases[G.repReleases].time,
                    V.songPosition
                  ) && "right" == G.rep.replay.keyReleases[G.repReleases].key),
                (this.downR =
                  this.NearlyEquals(
                    G.rep.replay.keyReleases[G.repReleases].time,
                    V.songPosition
                  ) && "down" == G.rep.replay.keyReleases[G.repReleases].key),
                (this.leftR =
                  this.NearlyEquals(
                    G.rep.replay.keyReleases[G.repReleases].time,
                    V.songPosition
                  ) && "left" == G.rep.replay.keyReleases[G.repReleases].key),
                (this.upHold = this.upP ? !0 : this.upR ? !1 : !0),
                (this.rightHold = this.rightP ? !0 : this.rightR ? !1 : !0),
                (this.downHold = this.downP ? !0 : this.downR ? !1 : !0),
                (this.leftHold = this.leftP ? !0 : this.leftR ? !1 : !0)))
            : G.loadRep ||
              (this.upP &&
                G.rep.replay.keyPresses.push({
                  time: V.songPosition,
                  key: "up",
                }),
              this.rightP &&
                G.rep.replay.keyPresses.push({
                  time: V.songPosition,
                  key: "right",
                }),
              this.downP &&
                G.rep.replay.keyPresses.push({
                  time: V.songPosition,
                  key: "down",
                }),
              this.leftP &&
                G.rep.replay.keyPresses.push({
                  time: V.songPosition,
                  key: "left",
                }),
              this.upR &&
                G.rep.replay.keyReleases.push({
                  time: V.songPosition,
                  key: "up",
                }),
              this.rightR &&
                G.rep.replay.keyReleases.push({
                  time: V.songPosition,
                  key: "right",
                }),
              this.downR &&
                G.rep.replay.keyReleases.push({
                  time: V.songPosition,
                  key: "down",
                }),
              this.leftR &&
                G.rep.replay.keyReleases.push({
                  time: V.songPosition,
                  key: "left",
                }));
          d = [this.leftP, this.downP, this.upP, this.rightP];
          if (
            (this.upP || this.rightP || this.downP || this.leftP) &&
            !this.boyfriend.stunned &&
            this.generatedMusic
          ) {
            G.repPresses++;
            this.boyfriend.holdTimer = 0;
            var f = [],
              h = [];
            this.notes.forEachAlive(function (a) {
              a.canBeHit &&
                a.mustPress &&
                !a.tooLate &&
                (f.push(a),
                f.sort(function (a, b) {
                  return (a.strumTime - b.strumTime) | 0;
                }),
                h.push(a.noteData));
            });
            if (0 < f.length) {
              e = f[0];
              this.perfectMode && this.noteCheck(!0, e);
              if (2 <= f.length)
                if (f[0].strumTime == f[1].strumTime)
                  for (b = 0; b < f.length; )
                    if (((c = f[b]), ++b, d[c.noteData])) this.goodNoteHit(c);
                    else {
                      var m = !1;
                      c = 0;
                      for (var n = h.length; c < n; ) {
                        var da = c++;
                        d[h[da]] && (m = !0);
                      }
                      m || G.theFunne || this.badNoteCheck();
                    }
                else if (f[0].noteData == f[1].noteData)
                  G.loadRep
                    ? this.NearlyEquals(
                        e.strumTime,
                        G.rep.replay.keyPresses[G.repPresses].time,
                        30
                      )
                      ? (this.goodNoteHit(e),
                        Db.trace("force note hit", {
                          fileName: "source/PlayState.hx",
                          lineNumber: 1935,
                          className: "PlayState",
                          methodName: "keyShit",
                        }))
                      : this.noteCheck(d[e.noteData], e)
                    : this.noteCheck(d[e.noteData], e);
                else
                  for (b = 0; b < f.length; )
                    (c = f[b]),
                      ++b,
                      G.loadRep
                        ? this.NearlyEquals(
                            c.strumTime,
                            G.rep.replay.keyPresses[G.repPresses].time,
                            30
                          )
                          ? (this.goodNoteHit(c),
                            Db.trace("force note hit", {
                              fileName: "source/PlayState.hx",
                              lineNumber: 1952,
                              className: "PlayState",
                              methodName: "keyShit",
                            }))
                          : this.noteCheck(d[e.noteData], e)
                        : this.noteCheck(d[c.noteData], c);
              else
                G.loadRep
                  ? this.NearlyEquals(
                      e.strumTime,
                      G.rep.replay.keyPresses[G.repPresses].time,
                      30
                    )
                    ? (this.goodNoteHit(e),
                      Db.trace("force note hit", {
                        fileName: "source/PlayState.hx",
                        lineNumber: 1969,
                        className: "PlayState",
                        methodName: "keyShit",
                      }))
                    : this.noteCheck(d[e.noteData], e)
                  : this.noteCheck(d[e.noteData], e);
              e.wasGoodHit && (e.kill(), this.notes.remove(e, !0), e.destroy());
            } else G.theFunne || this.badNoteCheck();
          }
          (((this.up || this.right || this.down || this.left) &&
            this.generatedMusic) ||
            ((this.upHold ||
              this.downHold ||
              this.leftHold ||
              this.rightHold) &&
              G.loadRep &&
              this.generatedMusic)) &&
            this.notes.forEachAlive(function (b) {
              if (b.canBeHit && b.mustPress && b.isSustainNote)
                switch (b.noteData) {
                  case 0:
                    (a.left || a.leftHold) && a.goodNoteHit(b);
                    break;
                  case 1:
                    (a.down || a.downHold) && a.goodNoteHit(b);
                    break;
                  case 2:
                    (a.up || a.upHold) && a.goodNoteHit(b);
                    break;
                  case 3:
                    (a.right || a.rightHold) && a.goodNoteHit(b);
                }
            });
          !(this.boyfriend.holdTimer > 0.004 * V.stepCrochet) ||
            this.up ||
            this.down ||
            this.right ||
            this.left ||
            (K.startsWith(this.boyfriend.animation._curAnim.name, "sing") &&
              !K.endsWith(this.boyfriend.animation._curAnim.name, "miss") &&
              this.boyfriend.playAnim("idle"));
          this.playerStrums.forEach(function (b) {
            switch (b.ID) {
              case 0:
                a.leftP &&
                  "confirm" != b.animation._curAnim.name &&
                  b.animation.play("pressed");
                a.leftR && (b.animation.play("static"), G.repReleases++);
                break;
              case 1:
                a.downP &&
                  "confirm" != b.animation._curAnim.name &&
                  b.animation.play("pressed");
                a.downR && (b.animation.play("static"), G.repReleases++);
                break;
              case 2:
                a.upP &&
                  "confirm" != b.animation._curAnim.name &&
                  (b.animation.play("pressed"),
                  Db.trace("play", {
                    fileName: "source/PlayState.hx",
                    lineNumber: 2054,
                    className: "PlayState",
                    methodName: "keyShit",
                  }));
                a.upR && (b.animation.play("static"), G.repReleases++);
                break;
              case 3:
                a.rightP &&
                  "confirm" != b.animation._curAnim.name &&
                  b.animation.play("pressed"),
                  a.rightR && (b.animation.play("static"), G.repReleases++);
            }
            if (
              "confirm" != b.animation._curAnim.name ||
              K.startsWith(G.curStage, "school")
            )
              b.centerOffsets();
            else {
              b.centerOffsets();
              var c = b.offset;
              c.set_x(c.x - 13);
              c = b.offset;
              c.set_y(c.y - 13);
            }
          });
        },
        noteMiss: function (a) {
          null == a && (a = 1);
          if (!this.boyfriend.stunned) {
            this.health -= 0.04;
            5 < this.combo &&
              Object.prototype.hasOwnProperty.call(
                this.gf.animOffsets.h,
                "sad"
              ) &&
              this.gf.playAnim("sad");
            this.combo = 0;
            G.misses++;
            this.songScore -= 10;
            p.sound.play(
              M.sound("missnote" + p.random.int(1, 3), null),
              p.random.float(0.1, 0.2)
            );
            switch (a) {
              case 0:
                this.boyfriend.playAnim("singLEFTmiss", !0);
                break;
              case 1:
                this.boyfriend.playAnim("singDOWNmiss", !0);
                break;
              case 2:
                this.boyfriend.playAnim("singUPmiss", !0);
                break;
              case 3:
                this.boyfriend.playAnim("singRIGHTmiss", !0);
            }
            this.updateAccuracy();
          }
        },
        badNoteCheck: function () {
          this.leftP && this.noteMiss(0);
          this.upP && this.noteMiss(2);
          this.rightP && this.noteMiss(3);
          this.downP && this.noteMiss(1);
        },
        updateAccuracy: function () {
          this.fc = 0 < G.misses || 96 > this.accuracy ? !1 : !0;
          this.totalPlayed += 1;
          this.accuracy = Math.max(
            0,
            (this.totalNotesHit / this.totalPlayed) * 100
          );
        },
        noteCheck: function (a, b) {
          G.loadRep
            ? a
              ? this.goodNoteHit(b)
              : G.theFunne
              ? G.rep.replay.keyPresses.length > G.repPresses &&
                !a &&
                (this.NearlyEquals(
                  b.strumTime,
                  G.rep.replay.keyPresses[G.repPresses].time,
                  4
                )
                  ? this.goodNoteHit(b)
                  : G.theFunne || this.badNoteCheck())
              : this.badNoteCheck()
            : a
            ? this.goodNoteHit(b)
            : G.theFunne || this.badNoteCheck();
        },
        goodNoteHit: function (a) {
          if (!a.wasGoodHit) {
            a.isSustainNote ||
              (this.popUpScore(a.strumTime), (this.combo += 1));
            this.health =
              0 <= a.noteData ? this.health + 0.023 : this.health + 0.004;
            switch (a.noteData) {
              case 0:
                this.boyfriend.playAnim("singLEFT", !0);
                break;
              case 1:
                this.boyfriend.playAnim("singDOWN", !0);
                break;
              case 2:
                this.boyfriend.playAnim("singUP", !0);
                break;
              case 3:
                this.boyfriend.playAnim("singRIGHT", !0);
            }
            this.playerStrums.forEach(function (b) {
              Math.abs(a.noteData) == b.ID && b.animation.play("confirm", !0);
            });
            a.wasGoodHit = !0;
            this.vocals.set_volume(1);
            a.kill();
            this.notes.remove(a, !0);
            a.destroy();
            this.totalNotesHit += 1;
            this.updateAccuracy();
          }
        },
        resetFastCar: function () {
          this.fastCar.set_x(-12600);
          this.fastCar.set_y(p.random.int(140, 250));
          this.fastCar.velocity.set_x(0);
          this.fastCarCanDrive = !0;
        },
        fastCarDrive: function () {
          var a = this;
          p.sound.play(M.sound("carPass" + p.random.int(0, 1), null), 0.7);
          this.fastCar.velocity.set_x((p.random.int(170, 220) / p.elapsed) * 3);
          this.fastCarCanDrive = !1;
          new hc().start(2, function (b) {
            a.resetFastCar();
          });
        },
        trainStart: function () {
          this.trainMoving = !0;
          null == this.trainSound._channel && this.trainSound.play(!0);
        },
        updateTrainPos: function () {
          4700 <= this.trainSound._time &&
            ((this.startedMoving = !0), this.gf.playAnim("hairBlow"));
          if (this.startedMoving) {
            var a = this.phillyTrain;
            a.set_x(a.x - 400);
            -2e3 > this.phillyTrain.x &&
              !this.trainFinishing &&
              (this.phillyTrain.set_x(-1150),
              --this.trainCars,
              0 >= this.trainCars && (this.trainFinishing = !0));
            -4e3 > this.phillyTrain.x &&
              this.trainFinishing &&
              this.trainReset();
          }
        },
        trainReset: function () {
          this.gf.playAnim("hairFall");
          this.phillyTrain.set_x(p.width + 200);
          this.trainMoving = !1;
          this.trainCars = 8;
          this.startedMoving = this.trainFinishing = !1;
        },
        lightningStrikeShit: function () {
          p.sound.play(M.sound("thunder_" + p.random.int(1, 2), null));
          this.halloweenBG.animation.play("lightning");
          this.lightningStrikeBeat = this.curBeat;
          this.lightningOffset = p.random.int(8, 24);
          this.boyfriend.playAnim("scared", !0);
          this.gf.playAnim("scared", !0);
        },
        stepHit: function () {
          Va.prototype.stepHit.call(this);
          (p.sound.music._time > V.songPosition + 20 ||
            p.sound.music._time < V.songPosition - 20) &&
            this.resyncVocals();
        },
        beatHit: function () {
          Va.prototype.beatHit.call(this);
          if (this.generatedMusic) {
            var a = 1;
            null == a && (a = -1);
            var b = Fm.byY,
              c = a;
            a = function (a, e) {
              return b(c, a, e);
            };
            this.notes.members.sort(a);
          }
          null != G.SONG.notes[Math.floor(this.curStep / 16)] &&
            (G.SONG.notes[Math.floor(this.curStep / 16)].changeBPM &&
              V.changeBPM(G.SONG.notes[Math.floor(this.curStep / 16)].bpm),
            G.SONG.notes[Math.floor(this.curStep / 16)].mustHitSection &&
              this.dad.dance());
          this.wiggleShit.update(V.crochet);
          "milf" == this.curSong.toLowerCase() &&
            168 <= this.curBeat &&
            200 > this.curBeat &&
            this.camZooming &&
            1.35 > p.camera.zoom &&
            ((a = p.camera),
            a.set_zoom(a.zoom + 0.015),
            (a = this.camHUD),
            a.set_zoom(a.zoom + 0.03));
          this.iconP1.setGraphicSize((this.iconP1.get_width() + 30) | 0);
          this.iconP2.setGraphicSize((this.iconP2.get_width() + 30) | 0);
          this.iconP1.updateHitbox();
          this.iconP2.updateHitbox();
          0 == this.curBeat % this.gfSpeed && this.gf.dance();
          K.startsWith(this.boyfriend.animation._curAnim.name, "sing") ||
            this.boyfriend.playAnim("idle");
          7 == this.curBeat % 8 &&
            "Bopeebo" == this.curSong &&
            (this.boyfriend.playAnim("hey", !0),
            "Tutorial" == G.SONG.song &&
              "gf" == this.dad.curCharacter &&
              this.dad.playAnim("cheer", !0));
          switch (G.curStage) {
            case "limo":
              this.grpLimoDancers.forEach(function (a) {
                a.dance();
              });
              a = 10;
              null == a && (a = 50);
              p.random.float(0, 100) < a &&
                this.fastCarCanDrive &&
                this.fastCarDrive();
              break;
            case "mall":
              this.upperBoppers.animation.play("bop", !0);
              this.bottomBoppers.animation.play("bop", !0);
              this.santa.animation.play("idle", !0);
              break;
            case "philly":
              this.trainMoving || (this.trainCooldown += 1);
              0 == this.curBeat % 4 &&
                (this.phillyCityLights.forEach(function (a) {
                  a.set_visible(!1);
                }),
                (this.curLight = p.random.int(
                  0,
                  this.phillyCityLights.length - 1
                )),
                this.phillyCityLights.members[this.curLight].set_visible(!0));
              4 == this.curBeat % 8
                ? ((a = 30),
                  null == a && (a = 50),
                  (a = p.random.float(0, 100) < a))
                : (a = !1);
              a &&
                !this.trainMoving &&
                8 < this.trainCooldown &&
                ((this.trainCooldown = p.random.int(-4, 0)), this.trainStart());
              break;
            case "school":
              this.bgGirls.dance();
          }
          this.isHalloween
            ? ((a = 10),
              null == a && (a = 50),
              (a = p.random.float(0, 100) < a))
            : (a = !1);
          a &&
            this.curBeat > this.lightningStrikeBeat + this.lightningOffset &&
            this.lightningStrikeShit();
        },
        __class__: G,
      });
      var Ga = function (a, b) {
        this.id = a;
        this.controls = new O("player" + a, b);
      };
      g.PlayerSettings = Ga;
      Ga.__name__ = "PlayerSettings";
      Ga.init = function () {
        null == Ga.player1 &&
          ((Ga.player1 = new Ga(0, u.Solo)), ++Ga.numPlayers);
        var a = p.gamepads.get_numActiveGamepads();
        if (0 < a) {
          var b = p.gamepads._activeGamepads[0];
          if (null == b) throw C.thrown("Unexpected null gamepad. id:0");
          Ga.player1.controls.addDefaultGamepad(0);
        }
        if (1 < a) {
          null == Ga.player2 &&
            ((Ga.player2 = new Ga(1, u.None)), ++Ga.numPlayers);
          b = p.gamepads._activeGamepads[1];
          if (null == b) throw C.thrown("Unexpected null gamepad. id:0");
          Ga.player2.controls.addDefaultGamepad(1);
        }
      };
      Ga.prototype = { __class__: Ga };
      var ia = function () {};
      g.Reflect = ia;
      ia.__name__ = "Reflect";
      ia.field = function (a, b) {
        try {
          return a[b];
        } catch (c) {
          return (Ba.lastError = c), null;
        }
      };
      ia.getProperty = function (a, b) {
        var c;
        if (null == a) return null;
        var d = a.__properties__ ? (c = a.__properties__["get_" + b]) : !1;
        return d ? a[c]() : a[b];
      };
      ia.setProperty = function (a, b, c) {
        var d;
        var e = a.__properties__ ? (d = a.__properties__["set_" + b]) : !1;
        if (e) a[d](c);
        else a[b] = c;
      };
      ia.fields = function (a) {
        var b = [];
        if (null != a) {
          var c = Object.prototype.hasOwnProperty,
            d;
          for (d in a)
            "__id__" != d && "hx__closures__" != d && c.call(a, d) && b.push(d);
        }
        return b;
      };
      ia.isFunction = function (a) {
        return "function" == typeof a ? !(a.__name__ || a.__ename__) : !1;
      };
      ia.compare = function (a, b) {
        return a == b ? 0 : a > b ? 1 : -1;
      };
      ia.compareMethods = function (a, b) {
        return a == b
          ? !0
          : ia.isFunction(a) && ia.isFunction(b)
          ? a.scope == b.scope && a.method == b.method
            ? null != a.method
            : !1
          : !1;
      };
      ia.isObject = function (a) {
        if (null == a) return !1;
        var b = typeof a;
        return "string" == b || ("object" == b && null == a.__enum__)
          ? !0
          : "function" == b
          ? null != (a.__name__ || a.__ename__)
          : !1;
      };
      ia.isEnumValue = function (a) {
        return null != a ? null != a.__enum__ : !1;
      };
      ia.deleteField = function (a, b) {
        if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
        delete a[b];
        return !0;
      };
      var Td = function (a) {
        this.path = "";
        this.path = a;
        this.replay = {
          songName: "Tutorial",
          songDiff: 1,
          keyPresses: [],
          keyReleases: [],
          replayGameVer: Td.version,
          timestamp: new Date(),
        };
      };
      g.Replay = Td;
      Td.__name__ = "Replay";
      Td.LoadReplay = function (a) {
        a = new Td(a);
        a.LoadFromJSON();
        Db.trace(
          "basic replay data:\nSong Name: " +
            a.replay.songName +
            "\nSong Diff: " +
            a.replay.songDiff +
            "\nKeys Length: " +
            a.replay.keyPresses.length,
          {
            fileName: "source/Replay.hx",
            lineNumber: 61,
            className: "Replay",
            methodName: "LoadReplay",
          }
        );
        return a;
      };
      Td.prototype = {
        SaveReplay: function () {
          var a = {
            songName: G.SONG.song.toLowerCase(),
            songDiff: G.storyDifficulty,
            keyPresses: this.replay.keyPresses,
            keyReleases: this.replay.keyReleases,
            timestamp: new Date(),
            replayGameVer: Td.version,
          };
          JSON.stringify(a);
        },
        LoadFromJSON: function () {},
        __class__: Td,
      };
      var Ef = function () {};
      g.Song = Ef;
      Ef.__name__ = "Song";
      Ef.loadFromJson = function (a, b) {
        for (
          a = K.trim(
            W.getText(
              M.getPath(
                "data/" + (b.toLowerCase() + "/" + a.toLowerCase()) + ".json",
                "TEXT",
                null
              )
            )
          );
          !K.endsWith(a, "}");

        )
          a = ba.substr(a, 0, a.length - 1);
        return Ef.parseJSONshit(a);
      };
      Ef.parseJSONshit = function (a) {
        a = JSON.parse(a).song;
        a.validScore = !0;
        return a;
      };
      var I = function () {};
      g.Std = I;
      I.__name__ = "Std";
      I.string = function (a) {
        return pa.__string_rec(a, "");
      };
      I.parseInt = function (a) {
        if (null != a)
          for (var b = 0, c = a.length; b < c; ) {
            var d = b++,
              e = a.charCodeAt(d);
            if (8 >= e || (14 <= e && 32 != e && 45 != e))
              if (
                ((b = a.charCodeAt(d + 1)),
                (a = parseInt(a, 120 == b || 88 == b ? 16 : 10)),
                isNaN(a))
              )
                break;
              else return a;
          }
        return null;
      };
      var Nc = function (a, b) {
        this.lerpScore = this.intendedScore = 0;
        this.movedBack = this.selectedWeek = this.stopspamming = !1;
        this.resizeFactor = 1;
        this.curWeek = 0;
        this.weekNames = ["The X!Event"];
        this.weekCharacters = [["dad", "gf", "bf"]];
        this.curDifficulty = 1;
        this.weekData = [["overwrite", "inkingmistake", "relighted"]];
        Va.call(this, a, b);
      };
      g.StoryMenuState = Nc;
      Nc.__name__ = "StoryMenuState";
      Nc.__super__ = Va;
      Nc.prototype = r(Va.prototype, {
        create: function () {
          this.transIn = ib.defaultTransIn;
          this.transOut = ib.defaultTransOut;
          null != p.sound.music &&
            null == p.sound.music._channel &&
            p.sound.playMusic(M.getPath("music/freakyMenu.mp3", "MUSIC", null));
          this.persistentUpdate = this.persistentDraw = !0;
          this.scoreText = new ab(10, 10, 0, "SCORE: 49324858", 36);
          this.scoreText.setFormat("VCR OSD Mono", 32);
          this.txtWeekTitle = new ab(0.7 * p.width, 10, 0, "", 32);
          this.txtWeekTitle.setFormat("VCR OSD Mono", 32, -1, "right");
          this.txtWeekTitle.set_alpha(0.7);
          var a = new ab(0, 10);
          a.set_text("RANK: GREAT");
          a.setFormat("assets/fonts/vcr.ttf", 32);
          a.set_size(this.scoreText._defaultFormat.size | 0);
          a.screenCenter(od.X);
          var b = Sa.fromSparrow(
              M.getPath("images/campaign_menu_UI_assets.png", "IMAGE", null),
              M.getPath("images/campaign_menu_UI_assets.xml", "TEXT", null)
            ),
            c = new H(0, 56).makeGraphic(p.width, 400, -405679);
          this.grpWeekText = new nb();
          this.add(this.grpWeekText);
          var d = new H().makeGraphic(p.width, 56, -16777216);
          this.add(d);
          this.grpWeekCharacters = new nb();
          this.grpLocks = new nb();
          this.add(this.grpLocks);
          Db.trace("Line 70", {
            fileName: "source/StoryMenuState.hx",
            lineNumber: 101,
            className: "StoryMenuState",
            methodName: "create",
          });
          d = 0;
          for (var e = this.weekData.length; d < e; ) {
            var f = d++,
              h = new Ii(0, c.y + c.get_height() + 10, f),
              m = h;
            m.set_y(m.y + (h.get_height() + 20) * f);
            h.targetY = f;
            this.grpWeekText.add(h);
            h.screenCenter(od.X);
            h.set_antialiasing(!0);
            Nc.weekUnlocked[f] ||
              ((h = new H(h.get_width() + 10 + h.x)),
              h.set_frames(b),
              h.animation.addByPrefix("lock", "lock"),
              h.animation.play("lock"),
              (h.ID = f),
              h.set_antialiasing(!0),
              this.grpLocks.add(h));
          }
          Db.trace("Line 96", {
            fileName: "source/StoryMenuState.hx",
            lineNumber: 127,
            className: "StoryMenuState",
            methodName: "create",
          });
          this.weekCharacterThing = new Ig(
            (0 * p.width) / 4,
            this.weekCharacters[0][0]
          );
          this.weekCharacterThing.set_antialiasing(!0);
          this.weekCharacterThing.setGraphicSize(
            (this.weekCharacterThing.get_width() * this.resizeFactor) | 0
          );
          this.weekCharacterThing.updateHitbox();
          this.grpWeekCharacters.add(this.weekCharacterThing);
          this.weekCharacterThing = new Ig(
            p.width / 4,
            this.weekCharacters[0][1]
          );
          this.weekCharacterThing.set_antialiasing(!0);
          this.weekCharacterThing.setGraphicSize(
            (this.weekCharacterThing.get_width() * this.resizeFactor) | 0
          );
          this.weekCharacterThing.updateHitbox();
          this.grpWeekCharacters.add(this.weekCharacterThing);
          this.weekCharacterThing = new Ig(
            (2 * p.width) / 4,
            this.weekCharacters[0][2]
          );
          this.weekCharacterThing.set_antialiasing(!0);
          this.weekCharacterThing.setGraphicSize(
            (this.weekCharacterThing.get_width() * this.resizeFactor) | 0
          );
          this.weekCharacterThing.updateHitbox();
          this.grpWeekCharacters.add(this.weekCharacterThing);
          this.grpWeekCharacters.members[0].set_visible(!1);
          this.grpWeekCharacters.members[0].offset.set(-100, -75);
          this.grpWeekCharacters.members[1].offset.set(-150, -100);
          this.grpWeekCharacters.members[2].offset.set(-300, -200);
          this.difficultySelectors = new nb();
          this.add(this.difficultySelectors);
          Db.trace("Line 124", {
            fileName: "source/StoryMenuState.hx",
            lineNumber: 150,
            className: "StoryMenuState",
            methodName: "create",
          });
          this.leftArrow = new H(
            this.grpWeekText.members[0].x +
              this.grpWeekText.members[0].get_width() +
              10,
            this.grpWeekText.members[0].y + 10
          );
          this.leftArrow.set_frames(b);
          this.leftArrow.animation.addByPrefix("idle", "arrow left");
          this.leftArrow.animation.addByPrefix("press", "arrow push left");
          this.leftArrow.animation.play("idle");
          this.difficultySelectors.add(this.leftArrow);
          this.sprDifficulty = new H(this.leftArrow.x + 130, this.leftArrow.y);
          this.sprDifficulty.set_frames(b);
          this.sprDifficulty.animation.addByPrefix("easy", "EASY");
          this.sprDifficulty.animation.addByPrefix("normal", "NORMAL");
          this.sprDifficulty.animation.addByPrefix("hard", "HARD");
          this.sprDifficulty.animation.play("easy");
          this.changeDifficulty();
          this.difficultySelectors.add(this.sprDifficulty);
          this.rightArrow = new H(
            this.sprDifficulty.x + this.sprDifficulty.get_width() + 50,
            this.leftArrow.y
          );
          this.rightArrow.set_frames(b);
          this.rightArrow.animation.addByPrefix("idle", "arrow right");
          this.rightArrow.animation.addByPrefix(
            "press",
            "arrow push right",
            24,
            !1
          );
          this.rightArrow.animation.play("idle");
          this.difficultySelectors.add(this.rightArrow);
          Db.trace("Line 150", {
            fileName: "source/StoryMenuState.hx",
            lineNumber: 176,
            className: "StoryMenuState",
            methodName: "create",
          });
          this.add(c);
          this.add(this.grpWeekCharacters);
          this.txtTracklist = new ab(
            0.05 * p.width,
            c.x + c.get_height() + 100,
            0,
            "Tracks",
            32
          );
          this.txtTracklist.set_alignment("center");
          this.txtTracklist.set_font(a._font);
          this.txtTracklist.set_color(-1747081);
          this.add(this.txtTracklist);
          this.add(this.scoreText);
          this.add(this.txtWeekTitle);
          this.updateText();
          Db.trace("Line 165", {
            fileName: "source/StoryMenuState.hx",
            lineNumber: 192,
            className: "StoryMenuState",
            methodName: "create",
          });
          Va.prototype.create.call(this);
        },
        update: function (a) {
          var b = this,
            c = this.lerpScore;
          this.lerpScore = Math.floor(c + 0.5 * (this.intendedScore - c));
          this.scoreText.set_text("WEEK SCORE:" + this.lerpScore);
          this.txtWeekTitle.set_text(
            this.weekNames[this.curWeek].toUpperCase()
          );
          this.txtWeekTitle.set_x(
            p.width - (this.txtWeekTitle.get_width() + 10)
          );
          this.difficultySelectors.set_visible(Nc.weekUnlocked[this.curWeek]);
          this.grpLocks.forEach(function (a) {
            a.set_y(b.grpWeekText.members[a.ID].y);
          });
          if (!this.movedBack) {
            if (!this.selectedWeek) {
              this.back =
                this.accept =
                this.scrollRight =
                this.scrollDown =
                this.scrollUp =
                  !1;
              c = 0;
              for (var d = p.swipes; c < d.length; ) {
                var e = d[c];
                ++c;
                var f = e.startPosition.x - e.endPosition.x,
                  h = e.startPosition.y - e.endPosition.y;
                if (25 <= Math.sqrt(f * f + h * h)) {
                  if (
                    (-45 <= e.startPosition.angleBetween(e.endPosition) &&
                      45 >= e.startPosition.angleBetween(e.endPosition) &&
                      (this.scrollDown = !0),
                    -135 < e.startPosition.angleBetween(e.endPosition) &&
                      -45 > e.startPosition.angleBetween(e.endPosition) &&
                      (this.back = !0),
                    45 < e.startPosition.angleBetween(e.endPosition) &&
                      135 > e.startPosition.angleBetween(e.endPosition) &&
                      (this.scrollRight = !0),
                    (-180 <= e.startPosition.angleBetween(e.endPosition) &&
                      -135 >= e.startPosition.angleBetween(e.endPosition)) ||
                      (135 <= e.startPosition.angleBetween(e.endPosition) &&
                        180 >= e.startPosition.angleBetween(e.endPosition)))
                  )
                    this.scrollUp = !0;
                } else this.accept = !0;
              }
              (Ga.player1.controls._upP.check() || this.scrollUp) &&
                this.changeWeek(-1);
              (Ga.player1.controls._downP.check() || this.scrollDown) &&
                this.changeWeek(1);
              Ga.player1.controls._right.check()
                ? this.rightArrow.animation.play("press")
                : this.rightArrow.animation.play("idle");
              Ga.player1.controls._left.check()
                ? this.leftArrow.animation.play("press")
                : this.leftArrow.animation.play("idle");
              (Ga.player1.controls._rightP.check() || this.scrollRight) &&
                this.changeDifficulty(1);
              Ga.player1.controls._leftP.check() && this.changeDifficulty(-1);
            }
            (Ga.player1.controls._accept.check() || this.accept) &&
              this.selectWeek();
          }
          (!Ga.player1.controls._back.check() && !this.back) ||
            this.movedBack ||
            this.selectedWeek ||
            (p.sound.play(M.sound("cancelMenu")),
            (this.movedBack = !0),
            (c = new Sd()),
            p.game._state.switchTo(c) && (p.game._requestedState = c));
          Va.prototype.update.call(this, a);
        },
        selectWeek: function () {
          if (Nc.weekUnlocked[this.curWeek]) {
            0 == this.stopspamming &&
              (p.sound.play(M.sound("confirmMenu")),
              this.grpWeekText.members[this.curWeek].startFlashing(),
              this.grpWeekCharacters.members[2].animation.play("bfConfirm"),
              (this.stopspamming = !0));
            G.storyPlaylist = this.weekData[this.curWeek];
            this.selectedWeek = G.isStoryMode = !0;
            var a = "";
            switch (this.curDifficulty) {
              case 0:
                a = "-easy";
                break;
              case 2:
                a = "-hard";
            }
            G.storyDifficulty = this.curDifficulty;
            G.SONG = Ef.loadFromJson(
              G.storyPlaylist[0].toLowerCase() + a,
              G.storyPlaylist[0].toLowerCase()
            );
            G.storyWeek = this.curWeek;
            G.campaignScore = 0;
            new hc().start(1, function (a) {
              a = new G();
              var b = !0;
              null == b && (b = !1);
              a = Tb.getNextState(a, b);
              p.game._state.switchTo(a) && (p.game._requestedState = a);
            });
          }
        },
        changeDifficulty: function (a) {
          null == a && (a = 0);
          this.curDifficulty += a;
          0 > this.curDifficulty && (this.curDifficulty = 2);
          2 < this.curDifficulty && (this.curDifficulty = 0);
          this.sprDifficulty.offset.set_x(0);
          switch (this.curDifficulty) {
            case 0:
              this.sprDifficulty.animation.play("easy");
              this.sprDifficulty.offset.set_x(20);
              break;
            case 1:
              this.sprDifficulty.animation.play("normal");
              this.sprDifficulty.offset.set_x(70);
              break;
            case 2:
              this.sprDifficulty.animation.play("hard"),
                this.sprDifficulty.offset.set_x(20);
          }
          this.sprDifficulty.set_alpha(0);
          this.sprDifficulty.set_y(this.leftArrow.y - 15);
          this.intendedScore = db.getWeekScore(
            this.curWeek,
            this.curDifficulty
          );
          this.intendedScore = db.getWeekScore(
            this.curWeek,
            this.curDifficulty
          );
          mb.tween(
            this.sprDifficulty,
            { y: this.leftArrow.y + 15, alpha: 1 },
            0.07
          );
        },
        changeWeek: function (a) {
          null == a && (a = 0);
          this.curWeek += a;
          this.curWeek >= this.weekData.length && (this.curWeek = 0);
          0 > this.curWeek && (this.curWeek = this.weekData.length - 1);
          for (var b = (a = 0), c = this.grpWeekText.members; b < c.length; ) {
            var d = c[b];
            ++b;
            d.targetY = a - this.curWeek;
            0 == d.targetY && Nc.weekUnlocked[this.curWeek]
              ? d.set_alpha(1)
              : d.set_alpha(0.6);
            ++a;
          }
          p.sound.play(M.sound("scrollMenu"));
          this.updateText();
        },
        updateText: function () {
          this.grpWeekCharacters.members[0].set_flipX(!1);
          this.grpWeekCharacters.members[0].set_visible(!0);
          this.grpWeekCharacters.members[0].animation.play(
            this.weekCharacters[this.curWeek][0]
          );
          this.grpWeekCharacters.members[1].animation.play(
            this.weekCharacters[this.curWeek][1]
          );
          this.grpWeekCharacters.members[2].animation.play(
            this.weekCharacters[this.curWeek][2]
          );
          this.txtTracklist.set_text("Tracks\n");
          switch (this.grpWeekCharacters.members[0].animation._curAnim.name) {
            case "bfConfirm":
              this.grpWeekCharacters.members[0].set_visible(!1);
              this.grpWeekCharacters.members[0].setGraphicSize(
                (this.grpWeekCharacters.members[0].get_width() *
                  this.resizeFactor) |
                  0
              );
              break;
            case "dad":
              this.grpWeekCharacters.members[0].offset.set(-130, -140);
              this.grpWeekCharacters.members[0].setGraphicSize(
                (0.95 *
                  this.grpWeekCharacters.members[0].get_width() *
                  this.resizeFactor) |
                  0
              );
              break;
            case "mom":
              this.grpWeekCharacters.members[0].offset.set(-100, -50);
              this.grpWeekCharacters.members[0].setGraphicSize(
                (0.8 *
                  this.grpWeekCharacters.members[0].get_width() *
                  this.resizeFactor) |
                  0
              );
              break;
            case "parents-christmas":
              this.grpWeekCharacters.members[0].offset.set(0, -50);
              this.grpWeekCharacters.members[0].setGraphicSize(
                (1.5 *
                  this.grpWeekCharacters.members[0].get_width() *
                  this.resizeFactor) |
                  0
              );
              break;
            case "pico":
              this.grpWeekCharacters.members[0].offset.set(-100, -175);
              this.grpWeekCharacters.members[0].setGraphicSize(
                (this.grpWeekCharacters.members[0].get_width() *
                  this.resizeFactor) |
                  0
              );
              this.grpWeekCharacters.members[0].set_flipX(!0);
              break;
            case "senpai":
              this.grpWeekCharacters.members[0].offset.set(-150, -250);
              this.grpWeekCharacters.members[0].setGraphicSize(
                (1.25 *
                  this.grpWeekCharacters.members[0].get_width() *
                  this.resizeFactor) |
                  0
              );
              break;
            case "spooky":
              this.grpWeekCharacters.members[0].offset.set(-75, -100);
              this.grpWeekCharacters.members[0].setGraphicSize(
                (this.grpWeekCharacters.members[0].get_width() *
                  this.resizeFactor) |
                  0
              );
              break;
            default:
              this.grpWeekCharacters.members[0].offset.set(0, 0),
                this.grpWeekCharacters.members[0].setGraphicSize(
                  (this.grpWeekCharacters.members[0].get_width() *
                    this.resizeFactor) |
                    0
                );
          }
          for (var a = this.weekData[this.curWeek], b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            var d = this.txtTracklist;
            d.set_text(d.text + ("\n" + c));
          }
          this.txtTracklist.set_text(this.txtTracklist.text.toUpperCase());
          this.txtTracklist.screenCenter(od.X);
          b = this.txtTracklist;
          b.set_x(b.x - 0.35 * p.width);
          this.intendedScore = db.getWeekScore(
            this.curWeek,
            this.curDifficulty
          );
        },
        __class__: Nc,
      });
      var Gm = function () {};
      g["_String.String_Impl_"] = Gm;
      Gm.__name__ = "_String.String_Impl_";
      Gm.fromCharCode = function (a) {
        return String.fromCodePoint(a);
      };
      var cf = function () {
        this.b = "";
      };
      g.StringBuf = cf;
      cf.__name__ = "StringBuf";
      cf.prototype = { __class__: cf };
      var K = function () {};
      g.StringTools = K;
      K.__name__ = "StringTools";
      K.htmlEscape = function (a, b) {
        for (var c = "", d = 0, e = a; d < e.length; ) {
          a = e;
          var f = d++,
            h = a.charCodeAt(f);
          55296 <= h &&
            56319 >= h &&
            (h = ((h - 55232) << 10) | (a.charCodeAt(f + 1) & 1023));
          a = h;
          65536 <= a && ++d;
          switch (a) {
            case 34:
              c = b ? c + "&quot;" : c + String.fromCodePoint(a);
              break;
            case 38:
              c += "&amp;";
              break;
            case 39:
              c = b ? c + "&#039;" : c + String.fromCodePoint(a);
              break;
            case 60:
              c += "&lt;";
              break;
            case 62:
              c += "&gt;";
              break;
            default:
              c += String.fromCodePoint(a);
          }
        }
        return c;
      };
      K.startsWith = function (a, b) {
        return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1;
      };
      K.endsWith = function (a, b) {
        var c = b.length,
          d = a.length;
        return d >= c ? a.indexOf(b, d - c) == d - c : !1;
      };
      K.isSpace = function (a, b) {
        a = ba.cca(a, b);
        return 8 < a && 14 > a ? !0 : 32 == a;
      };
      K.ltrim = function (a) {
        for (var b = a.length, c = 0; c < b && K.isSpace(a, c); ) ++c;
        return 0 < c ? ba.substr(a, c, b - c) : a;
      };
      K.rtrim = function (a) {
        for (var b = a.length, c = 0; c < b && K.isSpace(a, b - c - 1); ) ++c;
        return 0 < c ? ba.substr(a, 0, b - c) : a;
      };
      K.trim = function (a) {
        return K.ltrim(K.rtrim(a));
      };
      K.replace = function (a, b, c) {
        return a.split(b).join(c);
      };
      K.hex = function (a, b) {
        for (
          var c = "";
          (c = "0123456789ABCDEF".charAt(a & 15) + c), (a >>>= 4), 0 < a;

        );
        if (null != b) for (; c.length < b; ) c = "0" + c;
        return c;
      };
      var af = function (a, b) {
        this.danceLeft = this.transitioning = this.skippedIntro = !1;
        this.curWacky = [];
        Va.call(this, a, b);
      };
      g.TitleState = af;
      af.__name__ = "TitleState";
      af.__super__ = Va;
      af.prototype = r(Va.prototype, {
        create: function () {
          Za.init({ modRoot: "mods", dirs: ["introMod"] });
          Ga.init();
          this.curWacky = p.random.getObject_Array_String(
            this.getIntroTextShit()
          );
          Va.prototype.create.call(this);
          p.save.bind("funkin", "xevent");
          Em.initSave();
          db.load();
          null != p.save.data.weekUnlocked &&
            (4 > Nc.weekUnlocked.length && Nc.weekUnlocked.splice(0, 0, !0),
            Nc.weekUnlocked[0] || (Nc.weekUnlocked[0] = !0));
          this.startIntro();
        },
        startIntro: function () {
          if (!af.initialized) {
            var a = Eb.fromClass(Id);
            a.persist = !0;
            a.set_destroyOnNoUse(!1);
            ib.defaultTransIn = new yh(
              "fade",
              -16777216,
              1,
              new U(0, -1),
              { asset: a, width: 32, height: 32 },
              new ya(-200, -200, 1.4 * p.width, 1.4 * p.height)
            );
            ib.defaultTransOut = new yh(
              "fade",
              -16777216,
              0.7,
              new U(0, 1),
              { asset: a, width: 32, height: 32 },
              new ya(-200, -200, 1.4 * p.width, 1.4 * p.height)
            );
            this.transIn = ib.defaultTransIn;
            this.transOut = ib.defaultTransOut;
            p.sound.playMusic(
              M.getPath("music/freakyMenu.mp3", "MUSIC", null),
              0
            );
            a = p.sound.music;
            var b = 4,
              c = 0,
              d = 0.7;
            null == d && (d = 1);
            null == c && (c = 0);
            null == b && (b = 1);
            null == a._channel && a.play();
            null != a.fadeTween && a.fadeTween.cancel();
            a.fadeTween = mb.num(
              c,
              d,
              b,
              { onComplete: null },
              q(a, a.volumeTween)
            );
          }
          V.changeBPM(102);
          this.persistentUpdate = !0;
          a = new H().makeGraphic(p.width, p.height, -16777216);
          this.add(a);
          a = new H(-650, -250).loadGraphic(
            M.getPath("images/overwrite_bg.png", "IMAGE", null)
          );
          a.setGraphicSize((0.5 * a.get_width()) | 0);
          a.set_antialiasing(!0);
          this.add(a);
          a = new H(400, 0).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          a.setGraphicSize((0.5 * a.get_width()) | 0);
          a.set_antialiasing(!0);
          this.add(a);
          a = new H(600, 100).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          a.setGraphicSize((0.5 * a.get_width()) | 0);
          a.set_antialiasing(!0);
          this.add(a);
          a = new H(800, 0).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          a.setGraphicSize((0.5 * a.get_width()) | 0);
          a.set_antialiasing(!0);
          this.add(a);
          a = new H(1e3, 100).loadGraphic(
            M.getPath("images/overwrite_square.png", "IMAGE", null)
          );
          a.setGraphicSize((0.5 * a.get_width()) | 0);
          a.set_antialiasing(!0);
          this.add(a);
          this.logoBl = new H(-100, -80);
          a = null;
          this.logoBl.set_frames(
            Sa.fromSparrow(
              M.getPath("images/logoBumpin.png", "IMAGE", a),
              M.getPath("images/logoBumpin.xml", "TEXT", a)
            )
          );
          this.logoBl.setGraphicSize((0.9 * this.logoBl.get_width()) | 0);
          this.logoBl.set_antialiasing(!0);
          this.logoBl.animation.addByPrefix("bump", "logo bumpin", 24);
          this.logoBl.animation.play("bump");
          this.logoBl.updateHitbox();
          this.gfDance = new H(0.4 * p.width, -100);
          a = null;
          this.gfDance.set_frames(
            Sa.fromSparrow(
              M.getPath("images/xgastertitle.png", "IMAGE", a),
              M.getPath("images/xgastertitle.xml", "TEXT", a)
            )
          );
          this.gfDance.animation.addByPrefix("danceLeft", "LEFT", 24, !0);
          this.gfDance.animation.addByPrefix("danceRight", "IDLE", 24, !0);
          this.gfDance.setGraphicSize((0.7 * this.gfDance.get_width()) | 0);
          this.gfDance.set_antialiasing(!0);
          this.gfDance.set_flipX(!0);
          this.add(this.gfDance);
          this.add(this.logoBl);
          a = new H(this.logoBl.x + 450, this.logoBl.y + 400).loadGraphic(
            M.getPath("images/xevent.png", "IMAGE", null)
          );
          a.set_antialiasing(!0);
          this.add(a);
          this.titleText = new H(100, 0.8 * p.height);
          a = null;
          this.titleText.set_frames(
            Sa.fromSparrow(
              M.getPath("images/titleEnter.png", "IMAGE", a),
              M.getPath("images/titleEnter.xml", "TEXT", a)
            )
          );
          this.titleText.animation.addByPrefix(
            "idle",
            "Press Enter to Begin",
            24
          );
          this.titleText.animation.addByPrefix("press", "ENTER PRESSED", 24);
          this.titleText.set_antialiasing(!0);
          this.titleText.animation.play("idle");
          this.titleText.updateHitbox();
          this.add(this.titleText);
          this.light = new H(-700, -350).loadGraphic(
            M.getPath("images/overwrite_light.png", "IMAGE", null)
          );
          this.light.setGraphicSize((0.5 * this.light.get_width()) | 0);
          this.add(this.light);
          a = new H().loadGraphic(M.getPath("images/logo.png", "IMAGE", null));
          a.screenCenter();
          a.set_antialiasing(!0);
          this.credGroup = new nb();
          this.add(this.credGroup);
          this.textGroup = new nb();
          this.blackScreen = new H().makeGraphic(p.width, p.height, -16777216);
          this.credGroup.add(this.blackScreen);
          this.credTextShit = new za(
            0,
            0,
            "ninjamuffin99\nPhantomArcade\nkawaisprite\nevilsk8er",
            !0
          );
          this.credTextShit.screenCenter();
          this.credTextShit.set_visible(!1);
          this.ngSpr = new H(0, 0.52 * p.height).loadGraphic(
            M.getPath("images/newgrounds_logo.png", "IMAGE", null)
          );
          this.add(this.ngSpr);
          this.ngSpr.set_visible(!1);
          this.ngSpr.setGraphicSize((0.8 * this.ngSpr.get_width()) | 0);
          this.ngSpr.updateHitbox();
          this.ngSpr.screenCenter(od.X);
          this.ngSpr.set_antialiasing(!0);
          mb.tween(this.credTextShit, { y: this.credTextShit.y + 20 }, 2.9, {
            ease: ac.quadInOut,
            type: 4,
          });
          p.mouse.set_visible(!1);
          af.initialized ? this.skipIntro() : (af.initialized = !0);
        },
        getIntroTextShit: function () {
          for (
            var a = la
                .getText(M.getPath("data/introText.txt", "TEXT", null))
                .split("\n"),
              b = [],
              c = 0;
            c < a.length;

          ) {
            var d = a[c];
            ++c;
            b.push(d.split("--"));
          }
          return b;
        },
        update: function (a) {
          null != p.sound.music && (V.songPosition = p.sound.music._time);
          var b = p.keys.justPressed;
          b.keyManager.checkStatus(70, b.status) &&
            p.set_fullscreen(!p.get_fullscreen());
          b = p.keys.justPressed;
          var c = b.keyManager.checkStatus(13, b.status),
            d = p.gamepads.lastActive;
          if (null != d) {
            b = d.justPressed;
            d = b.gamepad;
            b = b.status;
            var e = d.mapping.getRawID(7);
            d = d.buttons[e];
            null != d && d.hasState(b) && (c = !0);
          }
          d = 0;
          for (b = p.touches.list; d < b.length; )
            (e = b[d]), ++d, 2 == e.input.current && (c = !0);
          c &&
            !this.transitioning &&
            this.skippedIntro &&
            (uh.isLoggedIn &&
              ((d = dd.core.medals.h[60960]),
              d._data.unlocked || d.sendUnlock()),
            5 == new Date().getDay() &&
              uh.isLoggedIn &&
              ((d = dd.core.medals.h[61034]),
              d._data.unlocked || d.sendUnlock()),
            this.titleText.animation.play("press"),
            p.camera.flash(-1, 1),
            p.sound.play(M.sound("confirmMenu"), 0.7),
            (this.transitioning = !0),
            (d = new Sd()),
            p.game._state.switchTo(d) && (p.game._requestedState = d));
          c && !this.skippedIntro && this.skipIntro();
          Va.prototype.update.call(this, a);
        },
        createCoolText: function (a) {
          for (var b = 0, c = a.length; b < c; ) {
            var d = b++,
              e = new za(0, 0, a[d], !0, !1);
            e.screenCenter(od.X);
            var f = e;
            f.set_y(f.y + (60 * d + 200));
            this.credGroup.add(e);
            this.textGroup.add(e);
          }
        },
        addMoreText: function (a) {
          a = new za(0, 0, a, !0, !1);
          a.screenCenter(od.X);
          a.set_y(a.y + (60 * this.textGroup.length + 200));
          this.credGroup.add(a);
          this.textGroup.add(a);
        },
        deleteCoolText: function () {
          for (; 0 < this.textGroup.members.length; )
            this.credGroup.remove(this.textGroup.members[0], !0),
              this.textGroup.remove(this.textGroup.members[0], !0);
        },
        beatHit: function () {
          Va.prototype.beatHit.call(this);
          this.logoBl.animation.play("bump");
          (this.danceLeft = !this.danceLeft)
            ? this.gfDance.animation.play("danceRight")
            : this.gfDance.animation.play("danceLeft");
          switch (this.curBeat) {
            case 1:
              this.createCoolText([
                "ninjamuffin99",
                "phantomArcade",
                "kawaisprite",
                "evilsk8er",
              ]);
              break;
            case 3:
              this.addMoreText("present");
              break;
            case 4:
              this.deleteCoolText();
              break;
            case 5:
              this.createCoolText(["Kade Engine", "by"]);
              break;
            case 7:
              this.addMoreText("KadeDeveloper");
              break;
            case 8:
              this.deleteCoolText();
              this.ngSpr.set_visible(!1);
              break;
            case 9:
              this.createCoolText(["Web Version", "by"]);
              break;
            case 11:
              this.addMoreText("Snokido");
              break;
            case 12:
              this.deleteCoolText();
              break;
            case 13:
              this.addMoreText("Friday");
              break;
            case 14:
              this.addMoreText("Night");
              break;
            case 15:
              this.addMoreText("Funkin");
              break;
            case 16:
              this.skipIntro();
          }
        },
        skipIntro: function () {
          this.skippedIntro ||
            (this.remove(this.ngSpr),
            p.camera.flash(-1, 4),
            this.remove(this.credGroup),
            (this.skippedIntro = !0));
        },
        __class__: af,
      });
      var Ud = (z.ValueType = {
          __ename__: "ValueType",
          __constructs__:
            "TNull TInt TFloat TBool TObject TFunction TClass TEnum TUnknown".split(
              " "
            ),
          TNull: { _hx_index: 0, __enum__: "ValueType", toString: l },
          TInt: { _hx_index: 1, __enum__: "ValueType", toString: l },
          TFloat: { _hx_index: 2, __enum__: "ValueType", toString: l },
          TBool: { _hx_index: 3, __enum__: "ValueType", toString: l },
          TObject: { _hx_index: 4, __enum__: "ValueType", toString: l },
          TFunction: { _hx_index: 5, __enum__: "ValueType", toString: l },
          TClass:
            ((y = function (a) {
              return { _hx_index: 6, c: a, __enum__: "ValueType", toString: l };
            }),
            (y.__params__ = ["c"]),
            y),
          TEnum:
            ((y = function (a) {
              return { _hx_index: 7, e: a, __enum__: "ValueType", toString: l };
            }),
            (y.__params__ = ["e"]),
            y),
          TUnknown: { _hx_index: 8, __enum__: "ValueType", toString: l },
        }),
        Ya = function () {};
      g.Type = Ya;
      Ya.__name__ = "Type";
      Ya.resolveEnum = function (a) {
        return z[a];
      };
      Ya.createInstance = function (a, b) {
        return new (Function.prototype.bind.apply(a, [null].concat(b)))();
      };
      Ya.createEnum = function (a, b, c) {
        var d = ia.field(a, b);
        if (null == d) throw C.thrown("No such constructor " + b);
        if (ia.isFunction(d)) {
          if (null == c)
            throw C.thrown("Constructor " + b + " need parameters");
          return d.apply(a, c);
        }
        if (null != c && 0 != c.length)
          throw C.thrown("Constructor " + b + " does not need parameters");
        return d;
      };
      Ya.typeof = function (a) {
        switch (typeof a) {
          case "boolean":
            return Ud.TBool;
          case "function":
            return a.__name__ || a.__ename__ ? Ud.TObject : Ud.TFunction;
          case "number":
            return Math.ceil(a) == a % 2147483648 ? Ud.TInt : Ud.TFloat;
          case "object":
            if (null == a) return Ud.TNull;
            var b = a.__enum__;
            if (null != b) return Ud.TEnum(z[b]);
            a = pa.getClass(a);
            return null != a ? Ud.TClass(a) : Ud.TObject;
          case "string":
            return Ud.TClass(String);
          case "undefined":
            return Ud.TNull;
          default:
            return Ud.TUnknown;
        }
      };
      Ya.enumParameters = function (a) {
        var b = z[a.__enum__];
        b = b[b.__constructs__[a._hx_index]].__params__;
        if (null != b) {
          for (var c = [], d = 0; d < b.length; ) {
            var e = b[d];
            ++d;
            c.push(a[e]);
          }
          return c;
        }
        return [];
      };
      var Hc = {
          gt: function (a, b) {
            var c = 0 > a;
            return c != 0 > b ? c : a > b;
          },
          toFloat: function (a) {
            return 0 > a ? 4294967296 + a : a + 0;
          },
        },
        cl = function () {
          this.shader = new Oi();
          this.shader.uTime.value = [0];
        };
      g.WiggleEffect = cl;
      cl.__name__ = "WiggleEffect";
      cl.prototype = {
        update: function (a) {
          this.shader.uTime.value[0] += a;
        },
        __class__: cl,
      };
      var Vd = function (a) {
        this.byteCode = a;
        this.precisionHint = 1;
        this.__glSourceDirty = !0;
        this.__numPasses = 1;
        this.__data = mn._new(a);
      };
      g["openfl.display.Shader"] = Vd;
      Vd.__name__ = "openfl.display.Shader";
      Vd.prototype = {
        __clearUseArray: function () {
          for (var a = 0, b = this.__paramBool; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__useArray = !1;
          }
          a = 0;
          for (b = this.__paramFloat; a < b.length; )
            (c = b[a]), ++a, (c.__useArray = !1);
          a = 0;
          for (b = this.__paramInt; a < b.length; )
            (c = b[a]), ++a, (c.__useArray = !1);
        },
        __createGLShader: function (a, b) {
          var c = this.__context.gl,
            d = c.createShader(b);
          c.shaderSource(d, a);
          c.compileShader(d);
          0 == c.getShaderParameter(d, c.COMPILE_STATUS) &&
            ((b =
              b == c.VERTEX_SHADER
                ? "Error compiling vertex shader"
                : "Error compiling fragment shader"),
            (b += "\n" + c.getShaderInfoLog(d)),
            Pa.error(b + ("\n" + a), {
              fileName: "openfl/display/Shader.hx",
              lineNumber: 329,
              className: "openfl.display.Shader",
              methodName: "__createGLShader",
            }));
          return d;
        },
        __createGLProgram: function (a, b) {
          var c = this.__context.gl;
          a = this.__createGLShader(a, c.VERTEX_SHADER);
          var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
          b = c.createProgram();
          for (var e = 0, f = this.__paramFloat; e < f.length; ) {
            var h = f[e];
            ++e;
            if (
              -1 < h.name.indexOf("Position") &&
              K.startsWith(h.name, "openfl_")
            ) {
              c.bindAttribLocation(b, 0, h.name);
              break;
            }
          }
          c.attachShader(b, a);
          c.attachShader(b, d);
          c.linkProgram(b);
          0 == c.getProgramParameter(b, c.LINK_STATUS) &&
            ((c =
              "Unable to initialize the shader program\n" +
              c.getProgramInfoLog(b)),
            Pa.error(c, {
              fileName: "openfl/display/Shader.hx",
              lineNumber: 362,
              className: "openfl.display.Shader",
              methodName: "__createGLProgram",
            }));
          return b;
        },
        __disable: function () {
          null != this.program && this.__disableGL();
        },
        __disableGL: function () {
          for (
            var a = this.__context.gl, b = 0, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var e = d[c];
            ++c;
            e.__disableGL(this.__context, b);
            ++b;
          }
          c = 0;
          for (d = this.__paramBool; c < d.length; )
            (b = d[c]), ++c, b.__disableGL(this.__context);
          c = 0;
          for (d = this.__paramFloat; c < d.length; )
            (b = d[c]), ++c, b.__disableGL(this.__context);
          c = 0;
          for (d = this.__paramInt; c < d.length; )
            (b = d[c]), ++c, b.__disableGL(this.__context);
          this.__context.__bindGLArrayBuffer(null);
          "opengl" == this.__context.__context.type && a.disable(a.TEXTURE_2D);
        },
        __enable: function () {
          this.__init();
          null != this.program && this.__enableGL();
        },
        __enableGL: function () {
          for (
            var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var e = d[c];
            ++c;
            b.uniform1i(e.index, a);
            ++a;
          }
          "opengl" == this.__context.__context.type &&
            0 < a &&
            b.enable(b.TEXTURE_2D);
        },
        __init: function () {
          null == this.__data && (this.__data = mn._new(null));
          null == this.__glFragmentSource ||
            null == this.__glVertexSource ||
            (null != this.program && !this.__glSourceDirty) ||
            this.__initGL();
        },
        __initGL: function () {
          if (this.__glSourceDirty || null == this.__paramBool)
            (this.__glSourceDirty = !1),
              (this.program = null),
              (this.__inputBitmapData = []),
              (this.__paramBool = []),
              (this.__paramFloat = []),
              (this.__paramInt = []),
              this.__processGLData(this.get_glVertexSource(), "attribute"),
              this.__processGLData(this.get_glVertexSource(), "uniform"),
              this.__processGLData(this.get_glFragmentSource(), "uniform");
          if (null != this.__context && null == this.program) {
            var a = this.__context.gl,
              b =
                "#ifdef GL_ES\n\t\t\t\t" +
                (1 == this.precisionHint
                  ? "#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\t\tprecision highp float;\n\t\t\t\t#else\n\t\t\t\tprecision mediump float;\n\t\t\t\t#endif"
                  : "precision lowp float;") +
                "\n\t\t\t\t#endif\n\t\t\t\t",
              c = b + this.get_glVertexSource();
            b += this.get_glFragmentSource();
            var d = c + b;
            Object.prototype.hasOwnProperty.call(this.__context.__programs.h, d)
              ? (this.program = this.__context.__programs.h[d])
              : ((this.program = this.__context.createProgram(1)),
                (this.program.__glProgram = this.__createGLProgram(c, b)),
                (this.__context.__programs.h[d] = this.program));
            if (null != this.program) {
              this.glProgram = this.program.__glProgram;
              c = 0;
              for (b = this.__inputBitmapData; c < b.length; )
                (d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name));
              c = 0;
              for (b = this.__paramBool; c < b.length; )
                (d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name));
              c = 0;
              for (b = this.__paramFloat; c < b.length; )
                (d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name));
              c = 0;
              for (b = this.__paramInt; c < b.length; )
                (d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name));
            }
          }
        },
        __processGLData: function (a, b) {
          var c = 0,
            d;
          for (
            d =
              "uniform" == b
                ? new Ua("uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "")
                : new Ua("attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "");
            d.matchSub(a, c);

          ) {
            var e = d.matched(1);
            var f = d.matched(2);
            if (!K.startsWith(f, "gl_")) {
              c = "uniform" == b;
              if (K.startsWith(e, "sampler")) {
                e = new Pi();
                e.name = f;
                e.__isUniform = c;
                this.__inputBitmapData.push(e);
                switch (f) {
                  case "bitmap":
                    this.__bitmap = e;
                    break;
                  case "openfl_Texture":
                    this.__texture = e;
                }
                this.__data[f] = e;
                this.__isGenerated && (this[f] = e);
              } else if (
                !Object.prototype.hasOwnProperty.call(this.__data, f) ||
                null == ia.field(this.__data, f)
              ) {
                switch (e) {
                  case "bool":
                    var h = 0;
                    break;
                  case "bvec2":
                    h = 1;
                    break;
                  case "bvec3":
                    h = 2;
                    break;
                  case "bvec4":
                    h = 3;
                    break;
                  case "dvec2":
                  case "vec2":
                    h = 5;
                    break;
                  case "dvec3":
                  case "vec3":
                    h = 6;
                    break;
                  case "double":
                  case "float":
                    h = 4;
                    break;
                  case "ivec3":
                  case "uvec3":
                    h = 10;
                    break;
                  case "ivec4":
                  case "uvec4":
                    h = 11;
                    break;
                  case "mat2":
                  case "mat2x2":
                    h = 12;
                    break;
                  case "mat2x3":
                    h = 13;
                    break;
                  case "mat2x4":
                    h = 14;
                    break;
                  case "mat3x2":
                    h = 15;
                    break;
                  case "mat3":
                  case "mat3x3":
                    h = 16;
                    break;
                  case "mat3x4":
                    h = 17;
                    break;
                  case "mat4":
                  case "mat4x4":
                    h = 20;
                    break;
                  case "mat4x2":
                    h = 18;
                    break;
                  case "mat4x3":
                    h = 19;
                    break;
                  case "int":
                  case "uint":
                    h = 8;
                    break;
                  case "ivec2":
                  case "uvec2":
                    h = 9;
                    break;
                  case "dvec4":
                  case "vec4":
                    h = 7;
                    break;
                  default:
                    h = null;
                }
                switch (h) {
                  case 1:
                  case 5:
                  case 9:
                    e = 2;
                    break;
                  case 3:
                  case 7:
                  case 11:
                  case 12:
                    e = 4;
                    break;
                  case 2:
                  case 6:
                  case 10:
                    e = 3;
                    break;
                  case 16:
                    e = 9;
                    break;
                  case 20:
                    e = 16;
                    break;
                  default:
                    e = 1;
                }
                switch (h) {
                  case 12:
                    var m = 2;
                    break;
                  case 16:
                    m = 3;
                    break;
                  case 20:
                    m = 4;
                    break;
                  default:
                    m = 1;
                }
                switch (h) {
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                    var n = new Jg();
                    n.set_name(f);
                    n.type = h;
                    n.__arrayLength = m;
                    n.__isBool = !0;
                    n.__isUniform = c;
                    n.__length = e;
                    this.__paramBool.push(n);
                    "openfl_HasColorTransform" == f &&
                      (this.__hasColorTransform = n);
                    this.__data[f] = n;
                    this.__isGenerated && (this[f] = n);
                    break;
                  case 8:
                  case 9:
                  case 10:
                  case 11:
                    n = new Jg();
                    n.set_name(f);
                    n.type = h;
                    n.__arrayLength = m;
                    n.__isInt = !0;
                    n.__isUniform = c;
                    n.__length = e;
                    this.__paramInt.push(n);
                    this.__data[f] = n;
                    this.__isGenerated && (this[f] = n);
                    break;
                  default:
                    n = new Jg();
                    n.set_name(f);
                    n.type = h;
                    n.__arrayLength = m;
                    0 < m &&
                      ((h = m * m),
                      (h = null != h ? new Float32Array(h) : null),
                      (n.__uniformMatrix = h));
                    n.__isFloat = !0;
                    n.__isUniform = c;
                    n.__length = e;
                    this.__paramFloat.push(n);
                    if (K.startsWith(f, "openfl_"))
                      switch (f) {
                        case "openfl_Alpha":
                          this.__alpha = n;
                          break;
                        case "openfl_ColorMultiplier":
                          this.__colorMultiplier = n;
                          break;
                        case "openfl_ColorOffset":
                          this.__colorOffset = n;
                          break;
                        case "openfl_Matrix":
                          this.__matrix = n;
                          break;
                        case "openfl_Position":
                          this.__position = n;
                          break;
                        case "openfl_TextureCoord":
                          this.__textureCoord = n;
                          break;
                        case "openfl_TextureSize":
                          this.__textureSize = n;
                      }
                    this.__data[f] = n;
                    this.__isGenerated && (this[f] = n);
                }
              }
              f = d.matchedPos();
              c = f.pos + f.len;
            }
          }
        },
        __update: function () {
          null != this.program && this.__updateGL();
        },
        __updateFromBuffer: function (a, b) {
          null != this.program && this.__updateGLFromBuffer(a, b);
        },
        __updateGL: function () {
          for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__updateGL(this.__context, a);
            ++a;
          }
          b = 0;
          for (c = this.__paramBool; b < c.length; )
            (a = c[b]), ++b, a.__updateGL(this.__context);
          b = 0;
          for (c = this.__paramFloat; b < c.length; )
            (a = c[b]), ++b, a.__updateGL(this.__context);
          b = 0;
          for (c = this.__paramInt; b < c.length; )
            (a = c[b]), ++b, a.__updateGL(this.__context);
        },
        __updateGLFromBuffer: function (a, b) {
          for (var c = 0, d, e, f, h, m, n = 0, p = a.inputCount; n < p; )
            (m = n++),
              (d = a.inputRefs[m]),
              (e = a.inputs[m]),
              (f = a.inputFilter[m]),
              (h = a.inputMipFilter[m]),
              (m = a.inputWrap[m]),
              null != e && (d.__updateGL(this.__context, c, e, f, h, m), ++c);
          n = this.__context.gl;
          0 < a.paramDataLength
            ? (null == a.paramDataBuffer &&
                (a.paramDataBuffer = n.createBuffer()),
              this.__context.__bindGLArrayBuffer(a.paramDataBuffer),
              yc.bufferData(n, n.ARRAY_BUFFER, a.paramData, n.DYNAMIC_DRAW))
            : this.__context.__bindGLArrayBuffer(null);
          e = d = c = 0;
          f = a.paramBoolCount;
          h = a.paramFloatCount;
          var g = a.paramData,
            k = null,
            l = null,
            q = null;
          n = 0;
          for (p = a.paramCount; n < p; ) {
            m = n++;
            var r = !1;
            if (m < f) {
              var u = a.paramRefs_Bool[c];
              for (var z = 0, y = a.overrideBoolCount; z < y; ) {
                var v = z++;
                if (u.name == a.overrideBoolNames[v]) {
                  k = a.overrideBoolValues[v];
                  r = !0;
                  break;
                }
              }
              r
                ? u.__updateGL(this.__context, k)
                : u.__updateGLFromBuffer(
                    this.__context,
                    g,
                    a.paramPositions[m],
                    a.paramLengths[m],
                    b
                  );
              ++c;
            } else if (m < f + h) {
              u = a.paramRefs_Float[d];
              z = 0;
              for (y = a.overrideFloatCount; z < y; )
                if (((v = z++), u.name == a.overrideFloatNames[v])) {
                  l = a.overrideFloatValues[v];
                  r = !0;
                  break;
                }
              r
                ? u.__updateGL(this.__context, l)
                : u.__updateGLFromBuffer(
                    this.__context,
                    g,
                    a.paramPositions[m],
                    a.paramLengths[m],
                    b
                  );
              ++d;
            } else {
              u = a.paramRefs_Int[e];
              z = 0;
              for (y = a.overrideIntCount; z < y; )
                if (((v = z++), u.name == a.overrideIntNames[v])) {
                  q = a.overrideIntValues[v];
                  r = !0;
                  break;
                }
              r
                ? u.__updateGL(this.__context, q)
                : u.__updateGLFromBuffer(
                    this.__context,
                    g,
                    a.paramPositions[m],
                    a.paramLengths[m],
                    b
                  );
              ++e;
            }
          }
        },
        get_glFragmentSource: function () {
          return this.__glFragmentSource;
        },
        get_glVertexSource: function () {
          return this.__glVertexSource;
        },
        __class__: Vd,
        __properties__: {
          get_glVertexSource: "get_glVertexSource",
          get_glFragmentSource: "get_glFragmentSource",
        },
      };
      var gg = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
        Vd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g["openfl.display.GraphicsShader"] = gg;
      gg.__name__ = "openfl.display.GraphicsShader";
      gg.__super__ = Vd;
      gg.prototype = r(Vd.prototype, { __class__: gg });
      var hg = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            "\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tuniform bool hasTransform;\n\t\tuniform bool hasColorTransform;\n\n\t\tvec4 flixel_texture2D(sampler2D bitmap, vec2 coord)\n\t\t{\n\t\t\tvec4 color = texture2D(bitmap, coord);\n\t\t\tif (!hasTransform)\n\t\t\t{\n\t\t\t\treturn color;\n\t\t\t}\n\n\t\t\tif (color.a == 0.0)\n\t\t\t{\n\t\t\t\treturn vec4(0.0, 0.0, 0.0, 0.0);\n\t\t\t}\n\n\t\t\tif (!hasColorTransform)\n\t\t\t{\n\t\t\t\treturn color * openfl_Alphav;\n\t\t\t}\n\n\t\t\tcolor = vec4(color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4(0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp(openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0)\n\t\t\t{\n\t\t\t\treturn vec4(color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\t\t\t}\n\t\t\treturn vec4(0.0, 0.0, 0.0, 0.0);\n\t\t}\n\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_FragColor = flixel_texture2D(bitmap, openfl_TextureCoordv);\n\t\t}");
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            "\n\t\tattribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\t\n\t\tattribute float alpha;\n\t\tattribute vec4 colorMultiplier;\n\t\tattribute vec4 colorOffset;\n\t\tuniform bool hasColorTransform;\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t\t\n\t\t\topenfl_Alphav = openfl_Alpha * alpha;\n\t\t\t\n\t\t\tif (hasColorTransform)\n\t\t\t{\n\t\t\t\topenfl_ColorOffsetv = colorOffset / 255.0;\n\t\t\t\topenfl_ColorMultiplierv = colorMultiplier;\n\t\t\t}\n\t\t}");
        gg.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g["flixel.graphics.tile.FlxGraphicsShader"] = hg;
      hg.__name__ = "flixel.graphics.tile.FlxGraphicsShader";
      hg.__super__ = gg;
      hg.prototype = r(gg.prototype, { __class__: hg });
      var Oi = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            "\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tuniform bool hasTransform;\n\t\tuniform bool hasColorTransform;\n\n\t\tvec4 flixel_texture2D(sampler2D bitmap, vec2 coord)\n\t\t{\n\t\t\tvec4 color = texture2D(bitmap, coord);\n\t\t\tif (!hasTransform)\n\t\t\t{\n\t\t\t\treturn color;\n\t\t\t}\n\n\t\t\tif (color.a == 0.0)\n\t\t\t{\n\t\t\t\treturn vec4(0.0, 0.0, 0.0, 0.0);\n\t\t\t}\n\n\t\t\tif (!hasColorTransform)\n\t\t\t{\n\t\t\t\treturn color * openfl_Alphav;\n\t\t\t}\n\n\t\t\tcolor = vec4(color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4(0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp(openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0)\n\t\t\t{\n\t\t\t\treturn vec4(color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\t\t\t}\n\t\t\treturn vec4(0.0, 0.0, 0.0, 0.0);\n\t\t}\n\t\n\n\t\t//uniform float tx, ty; // x,y waves phase\n\t\tuniform float uTime;\n\t\t\n\t\tconst int EFFECT_TYPE_DREAMY = 0;\n\t\tconst int EFFECT_TYPE_WAVY = 1;\n\t\tconst int EFFECT_TYPE_HEAT_WAVE_HORIZONTAL = 2;\n\t\tconst int EFFECT_TYPE_HEAT_WAVE_VERTICAL = 3;\n\t\tconst int EFFECT_TYPE_FLAG = 4;\n\t\t\n\t\tuniform int effectType;\n\t\t\n\t\t/**\n\t\t * How fast the waves move over time\n\t\t */\n\t\tuniform float uSpeed;\n\t\t\n\t\t/**\n\t\t * Number of waves over time\n\t\t */\n\t\tuniform float uFrequency;\n\t\t\n\t\t/**\n\t\t * How much the pixels are going to stretch over the waves\n\t\t */\n\t\tuniform float uWaveAmplitude;\n\n\t\tvec2 sineWave(vec2 pt)\n\t\t{\n\t\t\tfloat x = 0.0;\n\t\t\tfloat y = 0.0;\n\t\t\t\n\t\t\tif (effectType == EFFECT_TYPE_DREAMY) \n\t\t\t{\n\t\t\t\tfloat offsetX = sin(pt.y * uFrequency + uTime * uSpeed) * uWaveAmplitude;\n                pt.x += offsetX; // * (pt.y - 1.0); // <- Uncomment to stop bottom part of the screen from moving\n\t\t\t}\n\t\t\telse if (effectType == EFFECT_TYPE_WAVY) \n\t\t\t{\n\t\t\t\tfloat offsetY = sin(pt.x * uFrequency + uTime * uSpeed) * uWaveAmplitude;\n\t\t\t\tpt.y += offsetY; // * (pt.y - 1.0); // <- Uncomment to stop bottom part of the screen from moving\n\t\t\t}\n\t\t\telse if (effectType == EFFECT_TYPE_HEAT_WAVE_HORIZONTAL)\n\t\t\t{\n\t\t\t\tx = sin(pt.x * uFrequency + uTime * uSpeed) * uWaveAmplitude;\n\t\t\t}\n\t\t\telse if (effectType == EFFECT_TYPE_HEAT_WAVE_VERTICAL)\n\t\t\t{\n\t\t\t\ty = sin(pt.y * uFrequency + uTime * uSpeed) * uWaveAmplitude;\n\t\t\t}\n\t\t\telse if (effectType == EFFECT_TYPE_FLAG)\n\t\t\t{\n\t\t\t\ty = sin(pt.y * uFrequency + 10.0 * pt.x + uTime * uSpeed) * uWaveAmplitude;\n\t\t\t\tx = sin(pt.x * uFrequency + 5.0 * pt.y + uTime * uSpeed) * uWaveAmplitude;\n\t\t\t}\n\t\t\t\n\t\t\treturn vec2(pt.x + x, pt.y + y);\n\t\t}\n\n\t\tvoid main()\n\t\t{\n\t\t\tvec2 uv = sineWave(openfl_TextureCoordv);\n\t\t\tgl_FragColor = texture2D(bitmap, uv);\n\t\t}");
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            "\n\t\tattribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\t\n\t\tattribute float alpha;\n\t\tattribute vec4 colorMultiplier;\n\t\tattribute vec4 colorOffset;\n\t\tuniform bool hasColorTransform;\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t\t\n\t\t\topenfl_Alphav = openfl_Alpha * alpha;\n\t\t\t\n\t\t\tif (hasColorTransform)\n\t\t\t{\n\t\t\t\topenfl_ColorOffsetv = colorOffset / 255.0;\n\t\t\t\topenfl_ColorMultiplierv = colorMultiplier;\n\t\t\t}\n\t\t}");
        hg.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g.WiggleShader = Oi;
      Oi.__name__ = "WiggleShader";
      Oi.__super__ = hg;
      Oi.prototype = r(hg.prototype, { __class__: Oi });
      var ha = {
          toString: function (a) {
            switch (a) {
              case 0:
                return "Element";
              case 1:
                return "PCData";
              case 2:
                return "CData";
              case 3:
                return "Comment";
              case 4:
                return "DocType";
              case 5:
                return "ProcessingInstruction";
              case 6:
                return "Document";
            }
          },
        },
        D = function (a) {
          this.nodeType = a;
          this.children = [];
          this.attributeMap = new ea();
        };
      g.Xml = D;
      D.__name__ = "Xml";
      D.parse = function (a) {
        return Ff.parse(a);
      };
      D.createElement = function (a) {
        var b = new D(D.Element);
        if (b.nodeType != D.Element)
          throw C.thrown(
            "Bad node type, expected Element but found " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        b.nodeName = a;
        return b;
      };
      D.createPCData = function (a) {
        var b = new D(D.PCData);
        if (b.nodeType == D.Document || b.nodeType == D.Element)
          throw C.thrown(
            "Bad node type, unexpected " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        b.nodeValue = a;
        return b;
      };
      D.createCData = function (a) {
        var b = new D(D.CData);
        if (b.nodeType == D.Document || b.nodeType == D.Element)
          throw C.thrown(
            "Bad node type, unexpected " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        b.nodeValue = a;
        return b;
      };
      D.createComment = function (a) {
        var b = new D(D.Comment);
        if (b.nodeType == D.Document || b.nodeType == D.Element)
          throw C.thrown(
            "Bad node type, unexpected " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        b.nodeValue = a;
        return b;
      };
      D.createDocType = function (a) {
        var b = new D(D.DocType);
        if (b.nodeType == D.Document || b.nodeType == D.Element)
          throw C.thrown(
            "Bad node type, unexpected " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        b.nodeValue = a;
        return b;
      };
      D.createProcessingInstruction = function (a) {
        var b = new D(D.ProcessingInstruction);
        if (b.nodeType == D.Document || b.nodeType == D.Element)
          throw C.thrown(
            "Bad node type, unexpected " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        b.nodeValue = a;
        return b;
      };
      D.createDocument = function () {
        return new D(D.Document);
      };
      D.prototype = {
        get: function (a) {
          if (this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          return this.attributeMap.h[a];
        },
        set: function (a, b) {
          if (this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          this.attributeMap.h[a] = b;
        },
        exists: function (a) {
          if (this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          return Object.prototype.hasOwnProperty.call(this.attributeMap.h, a);
        },
        attributes: function () {
          if (this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          return ea.keysIterator(this.attributeMap.h);
        },
        elements: function () {
          if (this.nodeType != D.Document && this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element or Document but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          for (var a = [], b = 0, c = this.children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.nodeType == D.Element && a.push(d);
          }
          return new Xe(a);
        },
        elementsNamed: function (a) {
          if (this.nodeType != D.Document && this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element or Document but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          for (var b = [], c = 0, d = this.children; c < d.length; ) {
            var e = d[c];
            ++c;
            if (e.nodeType == D.Element) {
              if (e.nodeType != D.Element)
                throw C.thrown(
                  "Bad node type, expected Element but found " +
                    (null == e.nodeType ? "null" : ha.toString(e.nodeType))
                );
              var f = e.nodeName == a;
            } else f = !1;
            f && b.push(e);
          }
          return new Xe(b);
        },
        firstElement: function () {
          if (this.nodeType != D.Document && this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element or Document but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          for (var a = 0, b = this.children; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.nodeType == D.Element) return c;
          }
          return null;
        },
        addChild: function (a) {
          if (this.nodeType != D.Document && this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element or Document but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          null != a.parent && a.parent.removeChild(a);
          this.children.push(a);
          a.parent = this;
        },
        removeChild: function (a) {
          if (this.nodeType != D.Document && this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element or Document but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          return ba.remove(this.children, a) ? ((a.parent = null), !0) : !1;
        },
        insertChild: function (a, b) {
          if (this.nodeType != D.Document && this.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element or Document but found " +
                (null == this.nodeType ? "null" : ha.toString(this.nodeType))
            );
          null != a.parent && ba.remove(a.parent.children, a);
          this.children.splice(b, 0, a);
          a.parent = this;
        },
        toString: function () {
          return pf.print(this);
        },
        __class__: D,
      };
      var Qi = function () {};
      g["flixel.IFlxBasic"] = Qi;
      Qi.__name__ = "flixel.IFlxBasic";
      Qi.__isInterface__ = !0;
      Qi.prototype = {
        __class__: Qi,
        __properties__: {
          set_visible: "set_visible",
          set_active: "set_active",
        },
      };
      var Ri = function (a) {
        this._count = 0;
        this._pool = [];
        this._class = a;
      };
      g["flixel.util.FlxPool_flixel_math_FlxPoint"] = Ri;
      Ri.__name__ = "flixel.util.FlxPool_flixel_math_FlxPoint";
      Ri.__interfaces__ = [B];
      Ri.prototype = {
        get: function () {
          return 0 == this._count
            ? Ya.createInstance(this._class, [])
            : this._pool[--this._count];
        },
        putUnsafe: function (a) {
          null != a && (a.destroy(), (this._pool[this._count++] = a));
        },
        __class__: Ri,
      };
      var U = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this._weak = this._inPool = !1;
        this.x = this.y = 0;
        this.set(a, b);
      };
      g["flixel.math.FlxPoint"] = U;
      U.__name__ = "flixel.math.FlxPoint";
      U.__interfaces__ = [ra];
      U.prototype = {
        put: function () {
          this._inPool ||
            ((this._inPool = !0), (this._weak = !1), U._pool.putUnsafe(this));
        },
        set: function (a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          this.set_x(a);
          this.set_y(b);
          return this;
        },
        addPoint: function (a) {
          var b = this;
          b.set_x(b.x + a.x);
          b = this;
          b.set_y(b.y + a.y);
          a._weak && a.put();
          return this;
        },
        subtractPoint: function (a) {
          var b = this;
          b.set_x(b.x - a.x);
          b = this;
          b.set_y(b.y - a.y);
          a._weak && a.put();
          return this;
        },
        copyTo: function (a) {
          null == a && ((a = U._pool.get().set(0, 0)), (a._inPool = !1));
          a.set_x(this.x);
          a.set_y(this.y);
          return a;
        },
        distanceTo: function (a) {
          var b = this.x - a.x,
            c = this.y - a.y;
          a._weak && a.put();
          return Math.sqrt(b * b + c * c);
        },
        rotate: function (a, b) {
          var c = (Math.PI / 180) * b;
          var d = 0.3183098862 * c;
          1 < d
            ? (d -= (Math.ceil(d) >> 1) << 1)
            : -1 > d && (d += (Math.ceil(-d) >> 1) << 1);
          b =
            0 < d
              ? d * (3.1 + d * (0.5 + d * (-7.2 + 3.6 * d)))
              : d * (3.1 - d * (0.5 + d * (7.2 + 3.6 * d)));
          d = 0.3183098862 * (c + 1.570796327);
          1 < d
            ? (d -= (Math.ceil(d) >> 1) << 1)
            : -1 > d && (d += (Math.ceil(-d) >> 1) << 1);
          c =
            0 < d
              ? d * (3.1 + d * (0.5 + d * (-7.2 + 3.6 * d)))
              : d * (3.1 - d * (0.5 + d * (7.2 + 3.6 * d)));
          d = this.x - a.x;
          var e = this.y - a.y;
          this.set_x(c * d - b * e + a.x);
          this.set_y(b * d + c * e + a.y);
          a._weak && a.put();
          return this;
        },
        angleBetween: function (a) {
          var b = a.x - this.x,
            c = a.y - this.y,
            d = 0;
          if (0 != b || 0 != c) {
            d = 0.25 * Math.PI;
            var e = 0 > c ? -c : c;
            d =
              0 <= b
                ? d - ((b - e) / (b + e)) * d
                : 3 * d - ((b + e) / (e - b)) * d;
            d = (180 / Math.PI) * (0 > c ? -d : d);
            d = 90 < d ? d - 270 : d + 90;
          }
          a._weak && a.put();
          return d;
        },
        destroy: function () {},
        set_x: function (a) {
          return (this.x = a);
        },
        set_y: function (a) {
          return (this.y = a);
        },
        __class__: U,
        __properties__: { set_y: "set_y", set_x: "set_x" },
      };
      var Hm = function (a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = e;
        this.ty = f;
      };
      g["lime.math.Matrix3"] = Hm;
      Hm.__name__ = "lime.math.Matrix3";
      Hm.prototype = { __class__: Hm };
      var Ea = function (a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = e;
        this.ty = f;
      };
      g["openfl.geom.Matrix"] = Ea;
      Ea.__name__ = "openfl.geom.Matrix";
      Ea.prototype = {
        clone: function () {
          return new Ea(this.a, this.b, this.c, this.d, this.tx, this.ty);
        },
        concat: function (a) {
          var b = this.a * a.a + this.b * a.c;
          this.b = this.a * a.b + this.b * a.d;
          this.a = b;
          b = this.c * a.a + this.d * a.c;
          this.d = this.c * a.b + this.d * a.d;
          this.c = b;
          b = this.tx * a.a + this.ty * a.c + a.tx;
          this.ty = this.tx * a.b + this.ty * a.d + a.ty;
          this.tx = b;
        },
        copyFrom: function (a) {
          this.a = a.a;
          this.b = a.b;
          this.c = a.c;
          this.d = a.d;
          this.tx = a.tx;
          this.ty = a.ty;
        },
        createGradientBox: function (a, b, c, d, e) {
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          this.a = a / 1638.4;
          this.d = b / 1638.4;
          if (0 != c) {
            var f = Math.cos(c);
            c = Math.sin(c);
            this.b = c * this.d;
            this.c = -c * this.a;
            this.a *= f;
            this.d *= f;
          } else this.c = this.b = 0;
          this.tx = d + a / 2;
          this.ty = e + b / 2;
        },
        equals: function (a) {
          return null != a &&
            this.tx == a.tx &&
            this.ty == a.ty &&
            this.a == a.a &&
            this.b == a.b &&
            this.c == a.c
            ? this.d == a.d
            : !1;
        },
        identity: function () {
          this.a = 1;
          this.c = this.b = 0;
          this.d = 1;
          this.ty = this.tx = 0;
        },
        invert: function () {
          var a = this.a * this.d - this.b * this.c;
          if (0 == a)
            (this.a = this.b = this.c = this.d = 0),
              (this.tx = -this.tx),
              (this.ty = -this.ty);
          else {
            a = 1 / a;
            var b = this.d * a;
            this.d = this.a * a;
            this.a = b;
            this.b *= -a;
            this.c *= -a;
            a = -this.a * this.tx - this.c * this.ty;
            this.ty = -this.b * this.tx - this.d * this.ty;
            this.tx = a;
          }
          return this;
        },
        rotate: function (a) {
          var b = Math.cos(a);
          a = Math.sin(a);
          var c = this.a * b - this.b * a;
          this.b = this.a * a + this.b * b;
          this.a = c;
          c = this.c * b - this.d * a;
          this.d = this.c * a + this.d * b;
          this.c = c;
          c = this.tx * b - this.ty * a;
          this.ty = this.tx * a + this.ty * b;
          this.tx = c;
        },
        scale: function (a, b) {
          this.a *= a;
          this.b *= b;
          this.c *= a;
          this.d *= b;
          this.tx *= a;
          this.ty *= b;
        },
        setTo: function (a, b, c, d, e, f) {
          this.a = a;
          this.b = b;
          this.c = c;
          this.d = d;
          this.tx = e;
          this.ty = f;
        },
        translate: function (a, b) {
          this.tx += a;
          this.ty += b;
        },
        __class__: Ea,
      };
      var Bb = function (a, b, c, d, e, f, h, m) {
        null == m && (m = 0);
        null == h && (h = 0);
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 1);
        null == a && (a = 1);
        this.redMultiplier = a;
        this.greenMultiplier = b;
        this.blueMultiplier = c;
        this.alphaMultiplier = d;
        this.redOffset = e;
        this.greenOffset = f;
        this.blueOffset = h;
        this.alphaOffset = m;
      };
      g["openfl.geom.ColorTransform"] = Bb;
      Bb.__name__ = "openfl.geom.ColorTransform";
      Bb.prototype = {
        __copyFrom: function (a) {
          this.redMultiplier = a.redMultiplier;
          this.greenMultiplier = a.greenMultiplier;
          this.blueMultiplier = a.blueMultiplier;
          this.alphaMultiplier = a.alphaMultiplier;
          this.redOffset = a.redOffset;
          this.greenOffset = a.greenOffset;
          this.blueOffset = a.blueOffset;
          this.alphaOffset = a.alphaOffset;
        },
        __combine: function (a) {
          this.redMultiplier *= a.redMultiplier;
          this.greenMultiplier *= a.greenMultiplier;
          this.blueMultiplier *= a.blueMultiplier;
          this.alphaMultiplier *= a.alphaMultiplier;
          this.redOffset += a.redOffset;
          this.greenOffset += a.greenOffset;
          this.blueOffset += a.blueOffset;
          this.alphaOffset += a.alphaOffset;
        },
        __identity: function () {
          this.alphaMultiplier =
            this.blueMultiplier =
            this.greenMultiplier =
            this.redMultiplier =
              1;
          this.alphaOffset =
            this.blueOffset =
            this.greenOffset =
            this.redOffset =
              0;
        },
        __invert: function () {
          this.redMultiplier =
            0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
          this.greenMultiplier =
            0 != this.greenMultiplier ? 1 / this.greenMultiplier : 1;
          this.blueMultiplier =
            0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
          this.alphaMultiplier =
            0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
          this.redOffset = -this.redOffset;
          this.greenOffset = -this.greenOffset;
          this.blueOffset = -this.blueOffset;
          this.alphaOffset = -this.alphaOffset;
        },
        __equals: function (a, b) {
          return null == a ||
            this.redMultiplier != a.redMultiplier ||
            this.greenMultiplier != a.greenMultiplier ||
            this.blueMultiplier != a.blueMultiplier ||
            (!b && this.alphaMultiplier != a.alphaMultiplier) ||
            this.redOffset != a.redOffset ||
            this.greenOffset != a.greenOffset ||
            this.blueOffset != a.blueOffset
            ? !1
            : this.alphaOffset == a.alphaOffset;
        },
        __isDefault: function (a) {
          return a
            ? 1 == this.redMultiplier &&
              1 == this.greenMultiplier &&
              1 == this.blueMultiplier &&
              0 == this.redOffset &&
              0 == this.greenOffset &&
              0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1
            : 1 == this.redMultiplier &&
              1 == this.greenMultiplier &&
              1 == this.blueMultiplier &&
              1 == this.alphaMultiplier &&
              0 == this.redOffset &&
              0 == this.greenOffset &&
              0 == this.blueOffset
            ? 0 == this.alphaOffset
            : !1;
        },
        __setArrays: function (a, b) {
          a[0] = this.redMultiplier;
          a[1] = this.greenMultiplier;
          a[2] = this.blueMultiplier;
          a[3] = this.alphaMultiplier;
          b[0] = this.redOffset;
          b[1] = this.greenOffset;
          b[2] = this.blueOffset;
          b[3] = this.alphaOffset;
        },
        __toLimeColorMatrix: function () {
          if (null == Bb.__limeColorMatrix) {
            var a = new Float32Array(20);
            Bb.__limeColorMatrix = a;
          }
          Bb.__limeColorMatrix[0] = this.redMultiplier;
          Bb.__limeColorMatrix[4] = this.redOffset / 255;
          Bb.__limeColorMatrix[6] = this.greenMultiplier;
          Bb.__limeColorMatrix[9] = this.greenOffset / 255;
          Bb.__limeColorMatrix[12] = this.blueMultiplier;
          Bb.__limeColorMatrix[14] = this.blueOffset / 255;
          Bb.__limeColorMatrix[18] = this.alphaMultiplier;
          Bb.__limeColorMatrix[19] = this.alphaOffset / 255;
          return Bb.__limeColorMatrix;
        },
        __class__: Bb,
      };
      var Zb = function (a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this._helperPoint = new Ra();
        this._helperMatrix = new $f();
        var f = ya._pool.get();
        f.x = 0;
        f.y = 0;
        f.width = 0;
        f.height = 0;
        f._inPool = !1;
        this._bounds = f;
        this._scrollRect = new fa();
        this.initialZoom = 1;
        f = U._pool.get().set(0, 0);
        f._inPool = !1;
        this._point = f;
        this._fxShakeAxes = od.XY;
        this._fxFadeAlpha = this._fxShakeIntensity = this._fxShakeDuration = 0;
        this._fxFadeCompleted = !0;
        this._fxFadeComplete = null;
        this._fxFadeIn = !1;
        this._fxFadeDuration = 0;
        f = U._pool.get().set(0, 0);
        f._inPool = !1;
        this._scrollTarget = f;
        this._fxFlashAlpha = this._fxFadeColor = 0;
        this._fxFlashComplete = null;
        this._fxFlashColor = this._fxFlashDuration = 0;
        f = U._pool.get().set(0, 0);
        f._inPool = !1;
        this._flashOffset = f;
        this._flashPoint = new Ra();
        this.filtersEnabled = !0;
        f = U._pool.get().set(0, 0);
        f._inPool = !1;
        this.followLead = f;
        this.antialiasing = !1;
        this.color = -1;
        this._useBlitMatrix = !1;
        this._blitMatrix = new $f();
        this.width =
          this.height =
          this.viewOffsetX =
          this.viewOffsetY =
          this.viewOffsetWidth =
          this.viewOffsetHeight =
          this.viewWidth =
          this.viewHeight =
            0;
        this.flashSprite = new fa();
        this.useBgAlphaBlending = !1;
        f = U._pool.get().set(0, 0);
        f._inPool = !1;
        this.scroll = f;
        this.followLerp = 60 / p.updateFramerate;
        f = U._pool.get().set(0, 0);
        f._inPool = !1;
        this.targetOffset = f;
        this.x = this.y = this.scaleX = this.scaleY = 0;
        ca.call(this);
        this.set_x(a);
        this.set_y(b);
        this.set_width(0 >= c ? p.width : c);
        this.set_height(0 >= d ? p.height : d);
        this._flashRect = new ma(0, 0, this.width, this.height);
        this.flashSprite.addChild(this._scrollRect);
        this._scrollRect.set_scrollRect(new ma());
        (this.pixelPerfectRender = p.renderBlit)
          ? ((this.screen = new H()),
            (this.buffer = new J(this.width, this.height, !0, 0)),
            this.screen.set_pixels(this.buffer),
            this.screen.origin.set(),
            (this._flashBitmap = new Ob(this.buffer)),
            this._scrollRect.addChild(this._flashBitmap),
            (this._fill = new J(this.width, this.height, !0, 0)))
          : ((this.canvas = new fa()), this._scrollRect.addChild(this.canvas));
        this.set_color(-1);
        this.initialZoom = 0 == e ? Zb.defaultZoom : e;
        this.set_zoom(e);
        this.updateScrollRect();
        this.updateFlashOffset();
        this.updateFlashSpritePosition();
        this.updateInternalSpritePositions();
        this.bgColor = p.cameras.get_bgColor();
      };
      g["flixel.FlxCamera"] = Zb;
      Zb.__name__ = "flixel.FlxCamera";
      Zb.__super__ = ca;
      Zb.prototype = r(ca.prototype, {
        startQuadBatch: function (a, b, c, d, e, f) {
          null == e && (e = !1);
          null == c && (c = !1);
          var h = Xc.blendToInt(d);
          if (
            null != this._currentDrawItem &&
            this._currentDrawItem.type == bn.TILES &&
            this._headTiles.graphics == a &&
            this._headTiles.colored == b &&
            this._headTiles.hasColorOffsets == c &&
            this._headTiles.blending == h &&
            this._headTiles.blend == d &&
            this._headTiles.antialiasing == e &&
            this._headTiles.shader == f
          )
            return this._headTiles;
          if (null != Zb._storageTilesHead) {
            var m = Zb._storageTilesHead;
            var n = Zb._storageTilesHead.nextTyped;
            m.reset();
            Zb._storageTilesHead = n;
          } else m = new Si();
          m.graphics = a;
          m.antialiasing = e;
          m.colored = b;
          m.hasColorOffsets = c;
          m.blending = h;
          m.blend = d;
          m.shader = f;
          m.nextTyped = this._headTiles;
          this._headTiles = m;
          null == this._headOfDrawStack && (this._headOfDrawStack = m);
          null != this._currentDrawItem && (this._currentDrawItem.next = m);
          return (this._currentDrawItem = m);
        },
        clearDrawStack: function () {
          for (var a = this._headTiles, b; null != a; )
            (b = a.nextTyped),
              a.reset(),
              (a.nextTyped = Zb._storageTilesHead),
              (Zb._storageTilesHead = a),
              (a = b);
          for (a = this._headTriangles; null != a; )
            (b = a.nextTyped),
              a.reset(),
              (a.nextTyped = Zb._storageTrianglesHead),
              (Zb._storageTrianglesHead = a),
              (a = b);
          this._headTriangles =
            this._headTiles =
            this._headOfDrawStack =
            this._currentDrawItem =
              null;
        },
        render: function () {
          for (var a = this._headOfDrawStack; null != a; )
            a.render(this), (a = a.next);
        },
        drawPixels: function (a, b, c, d, e, f, h) {
          null == f && (f = !1);
          if (p.renderBlit)
            this._helperMatrix.copyFrom(c),
              this._useBlitMatrix
                ? (this._helperMatrix.concat(this._blitMatrix),
                  this.buffer.draw(
                    b,
                    this._helperMatrix,
                    null,
                    null,
                    null,
                    f || this.antialiasing
                  ))
                : (this._helperMatrix.translate(
                    -this.viewOffsetX,
                    -this.viewOffsetY
                  ),
                  this.buffer.draw(
                    b,
                    this._helperMatrix,
                    null,
                    e,
                    null,
                    f || this.antialiasing
                  ));
          else {
            b = null != d && ve.hasRGBMultipliers(d);
            var m = null != d && ve.hasRGBAOffsets(d);
            this.startQuadBatch(a.parent, b, m, e, f, h).addQuad(a, c, d);
          }
        },
        copyPixels: function (a, b, c, d, e, f, h, m) {
          null == h && (h = !1);
          p.renderBlit
            ? null != b
              ? this._useBlitMatrix
                ? (this._helperMatrix.identity(),
                  this._helperMatrix.translate(d.x, d.y),
                  this._helperMatrix.concat(this._blitMatrix),
                  this.buffer.draw(
                    b,
                    this._helperMatrix,
                    null,
                    null,
                    null,
                    h || this.antialiasing
                  ))
                : ((this._helperPoint.x = d.x - (this.viewOffsetX | 0)),
                  (this._helperPoint.y = d.y - (this.viewOffsetY | 0)),
                  this.buffer.copyPixels(
                    b,
                    c,
                    this._helperPoint,
                    null,
                    null,
                    !0
                  ))
              : null != a && a.paint(this.buffer, d, !0)
            : (this._helperMatrix.identity(),
              this._helperMatrix.translate(d.x + a.offset.x, d.y + a.offset.y),
              (b = null != e && ve.hasRGBMultipliers(e)),
              (c = null != e && ve.hasRGBAOffsets(e)),
              this.startQuadBatch(a.parent, b, c, f, h, m).addQuad(
                a,
                this._helperMatrix,
                e
              ));
        },
        destroy: function () {
          Z.removeChild(this.flashSprite, this._scrollRect);
          if (p.renderBlit)
            Z.removeChild(this._scrollRect, this._flashBitmap),
              (this.screen = Z.destroy(this.screen)),
              (this._flashBitmap = this.buffer = null),
              (this._fill = Z.dispose(this._fill));
          else {
            Z.removeChild(this._scrollRect, this.canvas);
            if (null != this.canvas) {
              for (var a = 0, b = this.canvas.get_numChildren(); a < b; )
                a++, this.canvas.removeChildAt(0);
              this.canvas = null;
            }
            null != this._headOfDrawStack && this.clearDrawStack();
            this._helperPoint = this._helperMatrix = this._blitMatrix = null;
          }
          this._bounds = null;
          this.scroll = Z.put(this.scroll);
          this.targetOffset = Z.put(this.targetOffset);
          this.deadzone = Z.put(this.deadzone);
          this._fxShakeComplete =
            this._fxFadeComplete =
            this._fxFlashComplete =
            this._flashPoint =
            this._flashRect =
            this._scrollRect =
            this.flashSprite =
            this.target =
              null;
          ca.prototype.destroy.call(this);
        },
        update: function (a) {
          null != this.target && this.updateFollow();
          this.updateScroll();
          this.updateFlash(a);
          this.updateFade(a);
          this.flashSprite.set_filters(
            this.filtersEnabled ? this._filters : null
          );
          this.updateFlashSpritePosition();
          this.updateShake(a);
        },
        updateScroll: function () {
          var a = this.zoom / p.initialZoom,
            b =
              null == this.minScrollX
                ? null
                : this.minScrollX - ((a - 1) * this.width) / (2 * a),
            c =
              null == this.maxScrollX
                ? null
                : this.maxScrollX + ((a - 1) * this.width) / (2 * a),
            d =
              null == this.minScrollY
                ? null
                : this.minScrollY - ((a - 1) * this.height) / (2 * a);
          a =
            null == this.maxScrollY
              ? null
              : this.maxScrollY + ((a - 1) * this.height) / (2 * a);
          var e = this.scroll.x;
          c = null != c ? c - this.width : null;
          b = null != b && e < b ? b : e;
          this.scroll.set_x(null != c && b > c ? c : b);
          e = this.scroll.y;
          c = null != a ? a - this.height : null;
          b = null != d && e < d ? d : e;
          this.scroll.set_y(null != c && b > c ? c : b);
        },
        updateFollow: function () {
          if (null == this.deadzone) {
            this.target.getMidpoint(this._point);
            this._point.addPoint(this.targetOffset);
            var a = this._point;
            this.scroll.set(a.x - 0.5 * this.width, a.y - 0.5 * this.height);
            a._weak && a.put();
          } else {
            var b = this.target.x + this.targetOffset.x;
            a = this.target.y + this.targetOffset.y;
            if (this.style == Cm.SCREEN_BY_SCREEN) {
              if (b >= this.scroll.x + this.width) {
                var c = this._scrollTarget;
                c.set_x(c.x + this.width);
              } else
                b < this.scroll.x &&
                  ((c = this._scrollTarget), c.set_x(c.x - this.width));
              a >= this.scroll.y + this.height
                ? ((c = this._scrollTarget), c.set_y(c.y + this.height))
                : a < this.scroll.y &&
                  ((c = this._scrollTarget), c.set_y(c.y - this.height));
            } else
              (c = b - this.deadzone.x),
                this._scrollTarget.x > c && this._scrollTarget.set_x(c),
                (c =
                  b +
                  this.target.get_width() -
                  this.deadzone.x -
                  this.deadzone.width),
                this._scrollTarget.x < c && this._scrollTarget.set_x(c),
                (c = a - this.deadzone.y),
                this._scrollTarget.y > c && this._scrollTarget.set_y(c),
                (c =
                  a +
                  this.target.get_height() -
                  this.deadzone.y -
                  this.deadzone.height),
                this._scrollTarget.y < c && this._scrollTarget.set_y(c);
            this.target instanceof H &&
              (null == this._lastTargetPosition &&
                ((a = this.target.x),
                (c = this.target.y),
                null == c && (c = 0),
                null == a && (a = 0),
                (a = U._pool.get().set(a, c)),
                (a._inPool = !1),
                (this._lastTargetPosition = a)),
              (c = this._scrollTarget),
              c.set_x(
                c.x +
                  (this.target.x - this._lastTargetPosition.x) *
                    this.followLead.x
              ),
              (c = this._scrollTarget),
              c.set_y(
                c.y +
                  (this.target.y - this._lastTargetPosition.y) *
                    this.followLead.y
              ),
              this._lastTargetPosition.set_x(this.target.x),
              this._lastTargetPosition.set_y(this.target.y));
            this.followLerp >= 60 / p.updateFramerate
              ? ((c = this.scroll),
                (a = this._scrollTarget),
                c.set_x(a.x),
                c.set_y(a.y),
                a._weak && a.put())
              : ((c = this.scroll),
                c.set_x(
                  c.x +
                    ((this._scrollTarget.x - this.scroll.x) *
                      this.followLerp *
                      p.updateFramerate) /
                      60
                ),
                (c = this.scroll),
                c.set_y(
                  c.y +
                    ((this._scrollTarget.y - this.scroll.y) *
                      this.followLerp *
                      p.updateFramerate) /
                      60
                ));
          }
        },
        updateFlash: function (a) {
          0 < this._fxFlashAlpha &&
            ((this._fxFlashAlpha -= a / this._fxFlashDuration),
            0 >= this._fxFlashAlpha &&
              null != this._fxFlashComplete &&
              this._fxFlashComplete());
        },
        updateFade: function (a) {
          this._fxFadeCompleted ||
            (this._fxFadeIn
              ? ((this._fxFadeAlpha -= a / this._fxFadeDuration),
                0 >= this._fxFadeAlpha &&
                  ((this._fxFadeAlpha = 0), this.completeFade()))
              : ((this._fxFadeAlpha += a / this._fxFadeDuration),
                1 <= this._fxFadeAlpha &&
                  ((this._fxFadeAlpha = 1), this.completeFade())));
        },
        completeFade: function () {
          this._fxFadeCompleted = !0;
          null != this._fxFadeComplete && this._fxFadeComplete();
        },
        updateShake: function (a) {
          0 < this._fxShakeDuration &&
            ((this._fxShakeDuration -= a),
            0 >= this._fxShakeDuration
              ? null != this._fxShakeComplete && this._fxShakeComplete()
              : (this._fxShakeAxes != od.Y &&
                  ((a = this.flashSprite),
                  a.set_x(
                    a.get_x() +
                      p.random.float(
                        -this._fxShakeIntensity * this.width,
                        this._fxShakeIntensity * this.width
                      ) *
                        this.zoom *
                        p.scaleMode.scale.x
                  )),
                this._fxShakeAxes != od.X &&
                  ((a = this.flashSprite),
                  a.set_y(
                    a.get_y() +
                      p.random.float(
                        -this._fxShakeIntensity * this.height,
                        this._fxShakeIntensity * this.height
                      ) *
                        this.zoom *
                        p.scaleMode.scale.y
                  ))));
        },
        updateFlashSpritePosition: function () {
          null != this.flashSprite &&
            (this.flashSprite.set_x(
              this.x * p.scaleMode.scale.x + this._flashOffset.x
            ),
            this.flashSprite.set_y(
              this.y * p.scaleMode.scale.y + this._flashOffset.y
            ));
        },
        updateFlashOffset: function () {
          this._flashOffset.set_x(
            0.5 * this.width * p.scaleMode.scale.x * this.initialZoom
          );
          this._flashOffset.set_y(
            0.5 * this.height * p.scaleMode.scale.y * this.initialZoom
          );
        },
        updateScrollRect: function () {
          var a =
            null != this._scrollRect ? this._scrollRect.get_scrollRect() : null;
          null != a &&
            ((a.x = a.y = 0),
            (a.width = this.width * this.initialZoom * p.scaleMode.scale.x),
            (a.height = this.height * this.initialZoom * p.scaleMode.scale.y),
            this._scrollRect.set_scrollRect(a),
            this._scrollRect.set_x(-0.5 * a.width),
            this._scrollRect.set_y(-0.5 * a.height));
        },
        updateInternalSpritePositions: function () {
          p.renderBlit
            ? null != this._flashBitmap &&
              (this._flashBitmap.set_x(0), this._flashBitmap.set_y(0))
            : null != this.canvas &&
              (this.canvas.set_x(
                -0.5 *
                  this.width *
                  (this.scaleX - this.initialZoom) *
                  p.scaleMode.scale.x
              ),
              this.canvas.set_y(
                -0.5 *
                  this.height *
                  (this.scaleY - this.initialZoom) *
                  p.scaleMode.scale.y
              ),
              this.canvas.set_scaleX(this.totalScaleX),
              this.canvas.set_scaleY(this.totalScaleY));
        },
        follow: function (a, b, c) {
          null == b && (b = Cm.LOCKON);
          null == c && (c = 60 / p.updateFramerate);
          this.style = b;
          this.target = a;
          this.set_followLerp(c);
          c = a = 0;
          this._lastTargetPosition = null;
          switch (b._hx_index) {
            case 0:
              null != this.target &&
                ((a = this.target.get_width()), (c = this.target.get_height()));
              var d = (this.width - a) / 2;
              b = (this.height - c) / 2 - 0.25 * c;
              var e = c;
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c = ya._pool.get();
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c.x = d;
              c.y = b;
              c.width = a;
              c.height = e;
              b = c;
              b._inPool = !1;
              this.deadzone = b;
              break;
            case 1:
              a = this.width / 8;
              c = this.height / 3;
              d = (this.width - a) / 2;
              b = (this.height - c) / 2 - 0.25 * c;
              e = c;
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c = ya._pool.get();
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c.x = d;
              c.y = b;
              c.width = a;
              c.height = e;
              b = c;
              b._inPool = !1;
              this.deadzone = b;
              break;
            case 2:
              c = Math.max(this.width, this.height) / 4;
              d = (this.width - c) / 2;
              b = (this.height - c) / 2;
              e = a = c;
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c = ya._pool.get();
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c.x = d;
              c.y = b;
              c.width = a;
              c.height = e;
              b = c;
              b._inPool = !1;
              this.deadzone = b;
              break;
            case 3:
              c = Math.max(this.width, this.height) / 8;
              d = (this.width - c) / 2;
              b = (this.height - c) / 2;
              e = a = c;
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c = ya._pool.get();
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c.x = d;
              c.y = b;
              c.width = a;
              c.height = e;
              b = c;
              b._inPool = !1;
              this.deadzone = b;
              break;
            case 4:
              b = d = 0;
              a = this.width;
              e = this.height;
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c = ya._pool.get();
              null == e && (e = 0);
              null == a && (a = 0);
              null == b && (b = 0);
              null == d && (d = 0);
              c.x = d;
              c.y = b;
              c.width = a;
              c.height = e;
              b = c;
              b._inPool = !1;
              this.deadzone = b;
              break;
            case 5:
              this.deadzone = null;
          }
        },
        flash: function (a, b, c, d) {
          null == d && (d = !1);
          null == b && (b = 1);
          null == a && (a = -1);
          (!d && 0 < this._fxFlashAlpha) ||
            ((this._fxFlashColor = a),
            0 >= b && (b = 1e-6),
            (this._fxFlashDuration = b),
            (this._fxFlashComplete = c),
            (this._fxFlashAlpha = 1));
        },
        fade: function (a, b, c, d, e) {
          null == e && (e = !1);
          null == c && (c = !1);
          null == b && (b = 1);
          null == a && (a = -16777216);
          if (this._fxFadeCompleted || e)
            (this._fxFadeColor = a),
              0 >= b && (b = 1e-6),
              (this._fxFadeIn = c),
              (this._fxFadeDuration = b),
              (this._fxFadeComplete = d),
              (this._fxFadeAlpha = this._fxFadeIn ? 0.999999 : 1e-6),
              (this._fxFadeCompleted = !1);
        },
        fill: function (a, b, c, d) {
          null == c && (c = 1);
          null == b && (b = !0);
          p.renderBlit
            ? b
              ? (this._fill.fillRect(this._flashRect, a),
                this.buffer.copyPixels(
                  this._fill,
                  this._flashRect,
                  this._flashPoint,
                  null,
                  null,
                  b
                ))
              : this.buffer.fillRect(this._flashRect, a)
            : 0 != c &&
              ((b = null == d ? this.canvas.get_graphics() : d),
              b.beginFill(a, c),
              b.drawRect(
                this.viewOffsetX - 1,
                this.viewOffsetY - 1,
                this.viewWidth + 2,
                this.viewHeight + 2
              ),
              b.endFill());
        },
        drawFX: function () {
          if (0 < this._fxFlashAlpha) {
            var a = (this._fxFlashColor >> 24) & 255;
            p.renderBlit
              ? this.fill(
                  ((((0 >= a ? 255 : a) * this._fxFlashAlpha) | 0) << 24) +
                    (this._fxFlashColor & 16777215)
                )
              : this.fill(
                  this._fxFlashColor & 16777215,
                  !0,
                  ((0 >= a ? 255 : a) * this._fxFlashAlpha) / 255,
                  this.canvas.get_graphics()
                );
          }
          0 < this._fxFadeAlpha &&
            ((a = (this._fxFadeColor >> 24) & 255),
            p.renderBlit
              ? this.fill(
                  ((((0 >= a ? 255 : a) * this._fxFadeAlpha) | 0) << 24) +
                    (this._fxFadeColor & 16777215)
                )
              : this.fill(
                  this._fxFadeColor & 16777215,
                  !0,
                  ((0 >= a ? 255 : a) * this._fxFadeAlpha) / 255,
                  this.canvas.get_graphics()
                ));
        },
        checkResize: function () {
          if (p.renderBlit) {
            if (
              this.width != this.buffer.width ||
              this.height != this.buffer.height
            ) {
              var a = this.screen.graphic;
              this.buffer = new J(this.width, this.height, !0, 0);
              this.screen.set_pixels(this.buffer);
              this.screen.origin.set();
              this._flashBitmap.set_bitmapData(this.buffer);
              this._flashRect.width = this.width;
              this._flashRect.height = this.height;
              this._fill = Z.dispose(this._fill);
              this._fill = new J(this.width, this.height, !0, 0);
              p.bitmap.removeIfNoUse(a);
            }
            this._blitMatrix.identity();
            this._blitMatrix.translate(-this.viewOffsetX, -this.viewOffsetY);
            this._blitMatrix.scale(this.scaleX, this.scaleY);
            this._useBlitMatrix =
              this.scaleX < this.initialZoom || this.scaleY < this.initialZoom;
          }
        },
        setScale: function (a, b) {
          this.scaleX = a;
          this.scaleY = b;
          this.totalScaleX = this.scaleX * p.scaleMode.scale.x;
          this.totalScaleY = this.scaleY * p.scaleMode.scale.y;
          p.renderBlit &&
            (this._blitMatrix.identity(),
            this._blitMatrix.translate(-this.viewOffsetX, -this.viewOffsetY),
            this._blitMatrix.scale(this.scaleX, this.scaleY),
            (this._useBlitMatrix =
              this.scaleX < this.initialZoom || this.scaleY < this.initialZoom)
              ? (this._flashBitmap.set_scaleX(
                  this.initialZoom * p.scaleMode.scale.x
                ),
                this._flashBitmap.set_scaleY(
                  this.initialZoom * p.scaleMode.scale.y
                ))
              : (this._flashBitmap.set_scaleX(this.totalScaleX),
                this._flashBitmap.set_scaleY(this.totalScaleY)));
          this.viewOffsetX =
            (0.5 * this.width * (this.scaleX - this.initialZoom)) / this.scaleX;
          this.viewOffsetWidth = this.width - this.viewOffsetX;
          this.viewWidth = this.width - 2 * this.viewOffsetX;
          this.viewOffsetY =
            (0.5 * this.height * (this.scaleY - this.initialZoom)) /
            this.scaleY;
          this.viewOffsetHeight = this.height - this.viewOffsetY;
          this.viewHeight = this.height - 2 * this.viewOffsetY;
          this.updateScrollRect();
          this.updateInternalSpritePositions();
          p.cameras.cameraResized.dispatch(this);
        },
        onResize: function () {
          this.updateFlashOffset();
          this.setScale(this.scaleX, this.scaleY);
        },
        set_followLerp: function (a) {
          var b = 60 / p.updateFramerate;
          a = 0 > a ? 0 : a;
          return (this.followLerp = null != b && a > b ? b : a);
        },
        set_width: function (a) {
          this.width != a &&
            0 < a &&
            ((this.width = a),
            (this.viewOffsetX =
              (0.5 * this.width * (this.scaleX - this.initialZoom)) /
              this.scaleX),
            (this.viewOffsetWidth = this.width - this.viewOffsetX),
            (this.viewWidth = this.width - 2 * this.viewOffsetX),
            this.updateFlashOffset(),
            this.updateScrollRect(),
            this.updateInternalSpritePositions(),
            p.cameras.cameraResized.dispatch(this));
          return a;
        },
        set_height: function (a) {
          this.height != a &&
            0 < a &&
            ((this.height = a),
            (this.viewOffsetY =
              (0.5 * this.height * (this.scaleY - this.initialZoom)) /
              this.scaleY),
            (this.viewOffsetHeight = this.height - this.viewOffsetY),
            (this.viewHeight = this.height - 2 * this.viewOffsetY),
            this.updateFlashOffset(),
            this.updateScrollRect(),
            this.updateInternalSpritePositions(),
            p.cameras.cameraResized.dispatch(this));
          return a;
        },
        set_zoom: function (a) {
          this.zoom = 0 == a ? Zb.defaultZoom : a;
          this.setScale(this.zoom, this.zoom);
          return this.zoom;
        },
        set_color: function (a) {
          this.color = a;
          if (p.renderBlit) {
            if (null == this._flashBitmap) return a;
            var b = this._flashBitmap.get_transform().get_colorTransform();
          } else b = this.canvas.get_transform().get_colorTransform();
          b.redMultiplier = ((this.color >> 16) & 255) / 255;
          b.greenMultiplier = ((this.color >> 8) & 255) / 255;
          b.blueMultiplier = (this.color & 255) / 255;
          p.renderBlit
            ? this._flashBitmap.get_transform().set_colorTransform(b)
            : this.canvas.get_transform().set_colorTransform(b);
          return a;
        },
        set_x: function (a) {
          this.x = a;
          this.updateFlashSpritePosition();
          return a;
        },
        set_y: function (a) {
          this.y = a;
          this.updateFlashSpritePosition();
          return a;
        },
        set_visible: function (a) {
          null != this.flashSprite && this.flashSprite.set_visible(a);
          return (this.visible = a);
        },
        __class__: Zb,
        __properties__: r(ca.prototype.__properties__, {
          set_color: "set_color",
          set_zoom: "set_zoom",
          set_height: "set_height",
          set_width: "set_width",
          set_followLerp: "set_followLerp",
          set_y: "set_y",
          set_x: "set_x",
        }),
      });
      var Cm = (z["flixel.FlxCameraFollowStyle"] = {
          __ename__: "flixel.FlxCameraFollowStyle",
          __constructs__:
            "LOCKON PLATFORMER TOPDOWN TOPDOWN_TIGHT SCREEN_BY_SCREEN NO_DEAD_ZONE".split(
              " "
            ),
          LOCKON: {
            _hx_index: 0,
            __enum__: "flixel.FlxCameraFollowStyle",
            toString: l,
          },
          PLATFORMER: {
            _hx_index: 1,
            __enum__: "flixel.FlxCameraFollowStyle",
            toString: l,
          },
          TOPDOWN: {
            _hx_index: 2,
            __enum__: "flixel.FlxCameraFollowStyle",
            toString: l,
          },
          TOPDOWN_TIGHT: {
            _hx_index: 3,
            __enum__: "flixel.FlxCameraFollowStyle",
            toString: l,
          },
          SCREEN_BY_SCREEN: {
            _hx_index: 4,
            __enum__: "flixel.FlxCameraFollowStyle",
            toString: l,
          },
          NO_DEAD_ZONE: {
            _hx_index: 5,
            __enum__: "flixel.FlxCameraFollowStyle",
            toString: l,
          },
        }),
        zh = function (a, b, c) {
          this.major = a;
          this.minor = b;
          this.patch = c;
        };
      g["flixel.system.FlxVersion"] = zh;
      zh.__name__ = "flixel.system.FlxVersion";
      zh.prototype = {
        toString: function () {
          var a = zh.sha;
          "" != a && (a = "@" + a.substring(0, 7));
          return (
            "HaxeFlixel " + this.major + "." + this.minor + "." + this.patch + a
          );
        },
        __class__: zh,
      };
      var dl = function () {
        this._lastUniqueKeyIndex = 0;
        this.reset();
      };
      g["flixel.system.frontEnds.BitmapFrontEnd"] = dl;
      dl.__name__ = "flixel.system.frontEnds.BitmapFrontEnd";
      dl.prototype = {
        onAssetsReload: function (a) {
          for (a = ea.keysIterator(this._cache.h); a.hasNext(); ) {
            var b = a.next();
            b = this._cache.h[b];
            if (null != b && (null != b.assetsClass || null != b.assetsKey))
              b.onAssetsReload();
          }
        },
        onContext: function () {
          for (var a = ea.keysIterator(this._cache.h); a.hasNext(); ) {
            var b = a.next();
            b = this._cache.h[b];
            if (null != b && b.isDumped) b.onContext();
          }
        },
        create: function (a, b, c, d, e) {
          null == d && (d = !1);
          return Eb.fromRectangle(a, b, c, d, e);
        },
        add: function (a, b, c) {
          null == b && (b = !1);
          return a instanceof Eb
            ? Eb.fromGraphic(a, b, c)
            : a instanceof J
            ? Eb.fromBitmapData(a, b, c)
            : Eb.fromAssetKey(I.string(a), b, c);
        },
        findKeyForBitmap: function (a) {
          for (var b = ea.keysIterator(this._cache.h); b.hasNext(); ) {
            var c = b.next(),
              d = this._cache.h[c];
            if (null != d && d.bitmap == a) return c;
          }
          return null;
        },
        generateKey: function (a, b, c) {
          null == c && (c = !1);
          null == b && (b = a);
          if (c || null == b) b = this.getUniqueKey(b);
          return b;
        },
        getUniqueKey: function (a) {
          null == a && (a = "pixels");
          if (null == this._cache.h[a]) return a;
          for (
            var b = this._lastUniqueKeyIndex, c;
            ++b, (c = a + b), null != this._cache.h[c];

          );
          this._lastUniqueKeyIndex = b;
          return c;
        },
        remove: function (a) {
          if (null != a) {
            var b = a.key;
            if (null != b) {
              la.cache.removeBitmapData(b);
              var c = this._cache;
              Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            }
            a.destroy();
          }
        },
        removeByKey: function (a) {
          if (null != a) {
            var b = this._cache.h[a];
            if (null != a) {
              la.cache.removeBitmapData(a);
              var c = this._cache;
              Object.prototype.hasOwnProperty.call(c.h, a) && delete c.h[a];
            }
            null != b && b.destroy();
          }
        },
        removeIfNoUse: function (a) {
          null == a || 0 != a.get_useCount() || a.persist || this.remove(a);
        },
        clearCache: function () {
          if (null == this._cache) this._cache = new ea();
          else
            for (var a = ea.keysIterator(this._cache.h); a.hasNext(); ) {
              var b = a.next(),
                c = this._cache.h[b];
              if (null != c && !c.persist && 0 >= c.get_useCount()) {
                if (null != b) {
                  la.cache.removeBitmapData(b);
                  var d = this._cache;
                  Object.prototype.hasOwnProperty.call(d.h, b) && delete d.h[b];
                }
                c.destroy();
              }
            }
        },
        reset: function () {
          if (null == this._cache) this._cache = new ea();
          else
            for (var a = ea.keysIterator(this._cache.h); a.hasNext(); ) {
              var b = a.next(),
                c = this._cache.h[b];
              if (null != b) {
                la.cache.removeBitmapData(b);
                var d = this._cache;
                Object.prototype.hasOwnProperty.call(d.h, b) && delete d.h[b];
              }
              null != c && c.destroy();
            }
        },
        __class__: dl,
      };
      var el = function () {
        this.useBufferLocking = !1;
        this.cameraResized = new qf();
        this.cameraRemoved = new qf();
        this.cameraAdded = new qf();
        this.list = [];
        Zb.defaultCameras = this.list;
      };
      g["flixel.system.frontEnds.CameraFrontEnd"] = el;
      el.__name__ = "flixel.system.frontEnds.CameraFrontEnd";
      el.prototype = {
        add: function (a) {
          p.game.addChildAt(
            a.flashSprite,
            p.game.getChildIndex(p.game._inputContainer)
          );
          p.cameras.list.push(a);
          a.ID = p.cameras.list.length - 1;
          this.cameraAdded.dispatch(a);
          return a;
        },
        remove: function (a, b) {
          null == b && (b = !0);
          var c = this.list.indexOf(a);
          if (null != a && -1 != c) {
            p.game.removeChild(a.flashSprite);
            this.list.splice(c, 1);
            if (p.renderTile) {
              c = 0;
              for (var d = this.list.length; c < d; ) {
                var e = c++;
                this.list[e].ID = e;
              }
            }
            b && a.destroy();
            this.cameraRemoved.dispatch(a);
          }
        },
        reset: function (a) {
          for (; 0 < this.list.length; ) this.remove(this.list[0]);
          null == a && (a = new Zb(0, 0, p.width, p.height));
          p.camera = this.add(a);
          a.ID = 0;
          Zb.defaultCameras = this.list;
        },
        resize: function () {
          for (var a = 0, b = this.list; a < b.length; ) {
            var c = b[a];
            ++a;
            c.onResize();
          }
        },
        get_bgColor: function () {
          return null == p.camera ? -16777216 : p.camera.bgColor;
        },
        set_bgColor: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            d.bgColor = a;
          }
          return a;
        },
        __class__: el,
        __properties__: {
          set_bgColor: "set_bgColor",
          get_bgColor: "get_bgColor",
        },
      };
      var fl = function () {
        this.visible = !1;
        this.visibilityChanged = new fd();
        this.precision = 3;
      };
      g["flixel.system.frontEnds.DebuggerFrontEnd"] = fl;
      fl.__name__ = "flixel.system.frontEnds.DebuggerFrontEnd";
      fl.prototype = { __class__: fl };
      var gl = function () {
        this.resetOnStateSwitch = !0;
        this.list = [];
      };
      g["flixel.system.frontEnds.InputFrontEnd"] = gl;
      gl.__name__ = "flixel.system.frontEnds.InputFrontEnd";
      gl.prototype = {
        add_flixel_input_gamepad_FlxGamepadManager: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            if (yb.getClassName(a, !0) == yb.getClassName(d, !0)) return a;
          }
          this.list.push(a);
          return a;
        },
        add_flixel_input_touch_FlxTouchManager: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            if (yb.getClassName(a, !0) == yb.getClassName(d, !0)) return a;
          }
          this.list.push(a);
          return a;
        },
        add_flixel_input_keyboard_FlxKeyboard: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            if (yb.getClassName(a, !0) == yb.getClassName(d, !0)) return a;
          }
          this.list.push(a);
          return a;
        },
        replace_flixel_input_mouse_FlxMouse: function (a, b) {
          for (var c = 0, d = !1, e = 0, f = this.list; e < f.length; ) {
            var h = f[e];
            ++e;
            if (h == a) {
              this.list[c] = b;
              d = !0;
              break;
            }
            ++c;
          }
          return d ? b : null;
        },
        add_flixel_input_mouse_FlxMouse: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            if (yb.getClassName(a, !0) == yb.getClassName(d, !0)) return a;
          }
          this.list.push(a);
          return a;
        },
        reset: function () {
          for (var a = 0, b = this.list; a < b.length; ) {
            var c = b[a];
            ++a;
            c.reset();
          }
        },
        onStateSwitch: function () {
          this.resetOnStateSwitch && this.reset();
        },
        __class__: gl,
      };
      var Db = function () {};
      g["haxe.Log"] = Db;
      Db.__name__ = "haxe.Log";
      Db.formatOutput = function (a, b) {
        var c = I.string(a);
        if (null == b) return c;
        var d = b.fileName + ":" + b.lineNumber;
        if (null != b.customParams) {
          var e = 0;
          for (b = b.customParams; e < b.length; )
            (a = b[e]), ++e, (c += ", " + I.string(a));
        }
        return d + ": " + c;
      };
      Db.trace = function (a, b) {
        a = Db.formatOutput(a, b);
        "undefined" != typeof console && null != console.log && console.log(a);
      };
      var pa = function () {};
      g["js.Boot"] = pa;
      pa.__name__ = "js.Boot";
      pa.getClass = function (a) {
        if (null == a) return null;
        if (a instanceof Array) return Array;
        var b = a.__class__;
        if (null != b) return b;
        a = pa.__nativeClassName(a);
        return null != a ? pa.__resolveNativeClass(a) : null;
      };
      pa.__string_rec = function (a, b) {
        if (null == a) return "null";
        if (5 <= b.length) return "<...>";
        var c = typeof a;
        "function" == c && (a.__name__ || a.__ename__) && (c = "object");
        switch (c) {
          case "function":
            return "<function>";
          case "object":
            if (a.__enum__) {
              var d = z[a.__enum__];
              c = d.__constructs__[a._hx_index];
              var e = d[c];
              if (e.__params__) {
                b += "\t";
                d = [];
                var f = 0;
                for (e = e.__params__; f < e.length; ) {
                  var h = e[f];
                  f += 1;
                  d.push(pa.__string_rec(a[h], b));
                }
                return c + "(" + d.join(",") + ")";
              }
              return c;
            }
            if (a instanceof Array) {
              c = "[";
              b += "\t";
              d = 0;
              for (f = a.length; d < f; )
                (e = d++), (c += (0 < e ? "," : "") + pa.__string_rec(a[e], b));
              return c + "]";
            }
            try {
              d = a.toString;
            } catch (m) {
              return (Ba.lastError = m), "???";
            }
            if (
              null != d &&
              d != Object.toString &&
              "function" == typeof d &&
              ((c = a.toString()), "[object Object]" != c)
            )
              return c;
            c = "{\n";
            b += "\t";
            d = null != a.hasOwnProperty;
            f = null;
            for (f in a)
              (d && !a.hasOwnProperty(f)) ||
                "prototype" == f ||
                "__class__" == f ||
                "__super__" == f ||
                "__interfaces__" == f ||
                "__properties__" == f ||
                (2 != c.length && (c += ", \n"),
                (c += b + f + " : " + pa.__string_rec(a[f], b)));
            b = b.substring(1);
            return c + ("\n" + b + "}");
          case "string":
            return a;
          default:
            return String(a);
        }
      };
      pa.__interfLoop = function (a, b) {
        if (null == a) return !1;
        if (a == b) return !0;
        var c = a.__interfaces__;
        if (null != c)
          for (var d = 0, e = c.length; d < e; ) {
            var f = d++;
            f = c[f];
            if (f == b || pa.__interfLoop(f, b)) return !0;
          }
        return pa.__interfLoop(a.__super__, b);
      };
      pa.__instanceof = function (a, b) {
        if (null == b) return !1;
        switch (b) {
          case Array:
            return a instanceof Array;
          case sn:
            return "boolean" == typeof a;
          case tn:
            return null != a;
          case Im:
            return "number" == typeof a;
          case cn:
            return "number" == typeof a ? (a | 0) === a : !1;
          case String:
            return "string" == typeof a;
          default:
            if (null != a)
              if ("function" == typeof b) {
                if (pa.__downcastCheck(a, b)) return !0;
              } else {
                if (
                  "object" == typeof b &&
                  pa.__isNativeObj(b) &&
                  a instanceof b
                )
                  return !0;
              }
            else return !1;
            return (b == hl && null != a.__name__) ||
              (b == nn && null != a.__ename__)
              ? !0
              : null != a.__enum__
              ? z[a.__enum__] == b
              : !1;
        }
      };
      pa.__downcastCheck = function (a, b) {
        return a instanceof b
          ? !0
          : b.__isInterface__
          ? pa.__interfLoop(pa.getClass(a), b)
          : !1;
      };
      pa.__implements = function (a, b) {
        return pa.__interfLoop(pa.getClass(a), b);
      };
      pa.__cast = function (a, b) {
        if (null == a || pa.__instanceof(a, b)) return a;
        throw C.thrown("Cannot cast " + I.string(a) + " to " + I.string(b));
      };
      pa.__nativeClassName = function (a) {
        a = pa.__toStr.call(a).slice(8, -1);
        return "Object" == a || "Function" == a || "Math" == a || "JSON" == a
          ? null
          : a;
      };
      pa.__isNativeObj = function (a) {
        return null != pa.__nativeClassName(a);
      };
      pa.__resolveNativeClass = function (a) {
        return E[a];
      };
      var ig = function (a) {
        this.initialSeed = this.internalSeed = 1;
        null != a
          ? ((a = 1 > a ? 1 : a), (a = (2147483646 < a ? 2147483646 : a) | 0))
          : ((a = (2147483647 * Math.random()) | 0),
            (a = 1 > a ? 1 : a),
            (a = (2147483646 < a ? 2147483646 : a) | 0),
            (a = 1 > a ? 1 : a),
            (a = (2147483646 < a ? 2147483646 : a) | 0));
        a = 1 > a ? 1 : a;
        this.initialSeed =
          (this.internalSeed = (2147483646 < a ? 2147483646 : a) | 0) | 0;
      };
      g["flixel.math.FlxRandom"] = ig;
      ig.__name__ = "flixel.math.FlxRandom";
      ig.prototype = {
        getObject_flixel_system_FlxSound: function (a, b, c, d) {
          null == c && (c = 0);
          var e = null;
          if (0 != a.length) {
            if (null == b) {
              e = [];
              for (var f = 0, h = a.length; f < h; ) f++, e.push(1);
              b = e;
            }
            null == d && (d = a.length - 1);
            e = a.length - 1;
            f = 0 > c ? 0 : c;
            c = (null != e && f > e ? e : f) | 0;
            e = a.length - 1;
            f = 0 > d ? 0 : d;
            d = (null != e && f > e ? e : f) | 0;
            d < c && ((c += d), (d = c - d), (c -= d));
            d > b.length - 1 && (d = b.length - 1);
            e = [];
            f = c;
            for (h = d + 1; f < h; ) (d = f++), e.push(b[d]);
            ig._arrayFloatHelper = e;
            e = a[c + this.weightedPick(ig._arrayFloatHelper)];
          }
          return e;
        },
        getObject_Array_String: function (a, b, c, d) {
          null == c && (c = 0);
          var e = null;
          if (0 != a.length) {
            if (null == b) {
              e = [];
              for (var f = 0, h = a.length; f < h; ) f++, e.push(1);
              b = e;
            }
            null == d && (d = a.length - 1);
            e = a.length - 1;
            f = 0 > c ? 0 : c;
            c = (null != e && f > e ? e : f) | 0;
            e = a.length - 1;
            f = 0 > d ? 0 : d;
            d = (null != e && f > e ? e : f) | 0;
            d < c && ((c += d), (d = c - d), (c -= d));
            d > b.length - 1 && (d = b.length - 1);
            e = [];
            f = c;
            for (h = d + 1; f < h; ) (d = f++), e.push(b[d]);
            ig._arrayFloatHelper = e;
            e = a[c + this.weightedPick(ig._arrayFloatHelper)];
          }
          return e;
        },
        int: function (a, b, c) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          if (0 == a && 2147483647 == b && null == c)
            return (
              (this.internalSeed = (48271 * this.internalSeed) % 2147483647) | 0
            );
          if (a == b) return a;
          a > b && ((a += b), (b = a - b), (a -= b));
          if (null == c)
            return Math.floor(
              a +
                ((this.internalSeed =
                  (48271 * this.internalSeed) % 2147483647) /
                  2147483647) *
                  (b - a + 1)
            );
          for (
            var d;
            (d = Math.floor(
              a +
                ((this.internalSeed =
                  (48271 * this.internalSeed) % 2147483647) /
                  2147483647) *
                  (b - a + 1)
            )),
              0 <= c.indexOf(d);

          );
          return d;
        },
        float: function (a, b, c) {
          null == b && (b = 1);
          null == a && (a = 0);
          if (0 == a && 1 == b && null == c)
            return (
              (this.internalSeed = (48271 * this.internalSeed) % 2147483647) /
              2147483647
            );
          if (a == b) var d = a;
          else if ((a > b && ((a += b), (b = a - b), (a -= b)), null == c))
            d =
              a +
              ((this.internalSeed = (48271 * this.internalSeed) % 2147483647) /
                2147483647) *
                (b - a);
          else
            for (
              ;
              (d =
                a +
                ((this.internalSeed =
                  (48271 * this.internalSeed) % 2147483647) /
                  2147483647) *
                  (b - a)),
                0 <= c.indexOf(d);

            );
          return d;
        },
        weightedPick: function (a) {
          for (var b = 0, c = 0, d = 0; d < a.length; ) {
            var e = a[d];
            ++d;
            b += e;
          }
          b = this.float(0, b);
          d = 0;
          for (var f = a.length; d < f; ) {
            e = d++;
            if (b < a[e]) {
              c = e;
              break;
            }
            b -= a[e];
          }
          return c;
        },
        __class__: ig,
      };
      var Ti = function () {
        this._closeRequested = !1;
      };
      g["flixel.util.FlxSave"] = Ti;
      Ti.__name__ = "flixel.util.FlxSave";
      Ti.__interfaces__ = [T];
      Ti.prototype = {
        destroy: function () {
          this._onComplete =
            this.data =
            this.path =
            this.name =
            this._sharedObject =
              null;
          this._closeRequested = !1;
        },
        bind: function (a, b) {
          this.destroy();
          this.name = a;
          this.path = b;
          try {
            this._sharedObject = Oc.getLocal(this.name, this.path);
          } catch (c) {
            Ba.lastError = c;
            if (C.caught(c).unwrap() instanceof Cb) return this.destroy(), !1;
            throw c;
          }
          this.data = this._sharedObject.data;
          return !0;
        },
        flush: function (a, b) {
          if (!this.checkBinding()) return !1;
          this._onComplete = b;
          a = null;
          try {
            a = this._sharedObject.flush();
          } catch (c) {
            Ba.lastError = c;
            if (C.caught(c).unwrap() instanceof Cb)
              return this.onDone(il.ERROR);
            throw c;
          }
          return this.onDone(0 == a ? il.SUCCESS : il.PENDING);
        },
        onDone: function (a) {
          null != this._onComplete && this._onComplete(a == il.SUCCESS);
          this._closeRequested && this.destroy();
          return a == il.SUCCESS;
        },
        checkBinding: function () {
          return null == this._sharedObject ? !1 : !0;
        },
        __class__: Ti,
      };
      var Ah = function () {
        this.verticalAlign = un.CENTER;
        this.horizontalAlign = vn.CENTER;
        var a = U._pool.get().set(0, 0);
        a._inPool = !1;
        this.deviceSize = a;
        a = U._pool.get().set(0, 0);
        a._inPool = !1;
        this.gameSize = a;
        a = U._pool.get().set(0, 0);
        a._inPool = !1;
        this.scale = a;
        a = U._pool.get().set(0, 0);
        a._inPool = !1;
        this.offset = a;
      };
      g["flixel.system.scaleModes.BaseScaleMode"] = Ah;
      Ah.__name__ = "flixel.system.scaleModes.BaseScaleMode";
      Ah.prototype = {
        onMeasure: function (a, b) {
          p.width = p.initialWidth;
          p.height = p.initialHeight;
          this.updateGameSize(a, b);
          this.updateDeviceSize(a, b);
          this.updateScaleOffset();
          this.updateGamePosition();
        },
        updateGameSize: function (a, b) {
          this.gameSize.set(a, b);
        },
        updateDeviceSize: function (a, b) {
          this.deviceSize.set(a, b);
        },
        updateScaleOffset: function () {
          this.scale.set_x(this.gameSize.x / (p.width * p.initialZoom));
          this.scale.set_y(this.gameSize.y / (p.height * p.initialZoom));
          this.updateOffsetX();
          this.updateOffsetY();
        },
        updateOffsetX: function () {
          switch (this.horizontalAlign._hx_index) {
            case 0:
              var a = 0;
              break;
            case 1:
              a = Math.ceil(0.5 * (this.deviceSize.x - this.gameSize.x));
              break;
            case 2:
              a = this.deviceSize.x - this.gameSize.x;
          }
          this.offset.set_x(a);
        },
        updateOffsetY: function () {
          switch (this.verticalAlign._hx_index) {
            case 0:
              var a = 0;
              break;
            case 1:
              a = Math.ceil(0.5 * (this.deviceSize.y - this.gameSize.y));
              break;
            case 2:
              a = this.deviceSize.y - this.gameSize.y;
          }
          this.offset.set_y(a);
        },
        updateGamePosition: function () {
          null != p.game &&
            (p.game.set_x(this.offset.x), p.game.set_y(this.offset.y));
        },
        __class__: Ah,
      };
      var Ui = function (a) {
        null == a && (a = !1);
        Ah.call(this);
        this.fillScreen = a;
      };
      g["flixel.system.scaleModes.RatioScaleMode"] = Ui;
      Ui.__name__ = "flixel.system.scaleModes.RatioScaleMode";
      Ui.__super__ = Ah;
      Ui.prototype = r(Ah.prototype, {
        updateGameSize: function (a, b) {
          var c = p.width / p.height,
            d = a / b < c;
          this.fillScreen && (d = !d);
          d
            ? (this.gameSize.set_x(a),
              this.gameSize.set_y(Math.floor(this.gameSize.x / c)))
            : (this.gameSize.set_y(b),
              this.gameSize.set_x(Math.floor(this.gameSize.y * c)));
        },
        __class__: Ui,
      });
      var jl = function () {
        this.focusLost = new fd();
        this.focusGained = new fd();
        this.postDraw = new fd();
        this.preDraw = new fd();
        this.postUpdate = new fd();
        this.preUpdate = new fd();
        this.postGameStart = new fd();
        this.preGameStart = new fd();
        this.postGameReset = new fd();
        this.preGameReset = new fd();
        this.gameResized = new Vi();
        this.preStateCreate = new qf();
        this.postStateSwitch = new fd();
        this.preStateSwitch = new fd();
      };
      g["flixel.system.frontEnds.SignalFrontEnd"] = jl;
      jl.__name__ = "flixel.system.frontEnds.SignalFrontEnd";
      jl.prototype = { __class__: jl };
      var p = function () {};
      g["flixel.FlxG"] = p;
      p.__name__ = "flixel.FlxG";
      p.__properties__ = {
        set_mouse: "set_mouse",
        set_fullscreen: "set_fullscreen",
        get_fullscreen: "get_fullscreen",
        set_drawFramerate: "set_drawFramerate",
        set_updateFramerate: "set_updateFramerate",
      };
      p.init = function (a, b, c, d) {
        p.game = a;
        p.width = Math.abs(b) | 0;
        p.height = Math.abs(c) | 0;
        p.initRenderMethod();
        p.initialWidth = p.width;
        p.initialHeight = p.height;
        p.initialZoom = Zb.defaultZoom = d;
        b = na.get_current().stage.stageWidth;
        c = na.get_current().stage.stageHeight;
        p.scaleMode.onMeasure(b, c);
        p.keys = p.inputs.add_flixel_input_keyboard_FlxKeyboard(new Wi());
        p.set_mouse(
          p.inputs.add_flixel_input_mouse_FlxMouse(
            new rf(p.game._inputContainer)
          )
        );
        p.touches = p.inputs.add_flixel_input_touch_FlxTouchManager(new Kg());
        p.gamepads = p.inputs.add_flixel_input_gamepad_FlxGamepadManager(
          new sf()
        );
        p.accelerometer = new kl();
        p.save.bind("flixel");
        p.plugins = new ll();
        p.vcr = new ml();
        p.sound = new nl();
      };
      p.initRenderMethod = function () {
        p.renderMethod = ol.BLITTING;
        switch (na.get_current().stage.window.context.type) {
          case "opengl":
          case "opengles":
          case "webgl":
            var a = ol.DRAW_TILES;
            break;
          default:
            a = ol.BLITTING;
        }
        p.renderMethod = a;
        p.renderBlit = p.renderMethod == ol.BLITTING;
        p.renderTile = p.renderMethod == ol.DRAW_TILES;
        L.defaultPixelPerfectPosition = p.renderBlit;
      };
      p.reset = function () {
        var a = p.random,
          b = (2147483647 * Math.random()) | 0;
        b = 1 > b ? 1 : b;
        b = (2147483646 < b ? 2147483646 : b) | 0;
        b = 1 > b ? 1 : b;
        b = (2147483646 < b ? 2147483646 : b) | 0;
        b = 1 > b ? 1 : b;
        a.initialSeed =
          (a.internalSeed = (2147483646 < b ? 2147483646 : b) | 0) | 0;
        p.bitmap.reset();
        p.inputs.reset();
        p.sound.destroy(!0);
        p.autoPause = !0;
        p.fixedTimestep = !0;
        p.timeScale = 1;
        p.elapsed = 0;
        p.maxElapsed = 0.1;
        a = p.worldBounds;
        var c = (b = -10),
          d = p.width + 20,
          e = p.height + 20;
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a.width = d;
        a.height = e;
        p.worldDivisions = 6;
      };
      p.set_mouse = function (a) {
        if (null == p.mouse)
          return (
            (p.mouse = p.inputs.add_flixel_input_mouse_FlxMouse(a)), p.mouse
          );
        var b = p.mouse,
          c = p.inputs.replace_flixel_input_mouse_FlxMouse(b, a);
        return null != c ? ((p.mouse = c), b.destroy(), a) : b;
      };
      p.set_updateFramerate = function (a) {
        p.updateFramerate = a;
        p.game._stepMS = Math.abs(1e3 / a);
        p.game._stepSeconds = p.game._stepMS / 1e3;
        p.game._maxAccumulation < p.game._stepMS &&
          (p.game._maxAccumulation = p.game._stepMS);
        return a;
      };
      p.set_drawFramerate = function (a) {
        p.drawFramerate = Math.abs(a) | 0;
        null != p.game.stage && p.game.stage.set_frameRate(p.drawFramerate);
        p.game._maxAccumulation = 2e3 / p.drawFramerate - 1;
        p.game._maxAccumulation < p.game._stepMS &&
          (p.game._maxAccumulation = p.game._stepMS);
        return a;
      };
      p.get_fullscreen = function () {
        return 0 != na.get_current().stage.get_displayState()
          ? 1 == na.get_current().stage.get_displayState()
          : !0;
      };
      p.set_fullscreen = function (a) {
        na.get_current().stage.set_displayState(a ? 0 : 2);
        return a;
      };
      var ol = (z["flixel.FlxRenderMethod"] = {
          __ename__: "flixel.FlxRenderMethod",
          __constructs__: ["DRAW_TILES", "BLITTING"],
          DRAW_TILES: {
            _hx_index: 0,
            __enum__: "flixel.FlxRenderMethod",
            toString: l,
          },
          BLITTING: {
            _hx_index: 1,
            __enum__: "flixel.FlxRenderMethod",
            toString: l,
          },
        }),
        vi = function (a, b, c, d, e, f, h, m) {
          null == h && (h = !1);
          null == f && (f = 60);
          null == e && (e = 60);
          null == d && (d = 1);
          null == b && (b = 0);
          null == a && (a = 0);
          this._skipSplash = this._resetGame = !1;
          this._customSoundTray = Xi;
          this._lostFocus = !1;
          this._total = this._startTime = 0;
          this._gameJustStarted = !1;
          this.filtersEnabled = !0;
          this.ticks = 0;
          this.focusLostFramerate = 10;
          fa.call(this);
          this._inputContainer = new fa();
          0 == a && (a = na.get_current().stage.stageWidth);
          0 == b && (b = na.get_current().stage.stageHeight);
          p.init(this, a, b, d);
          p.set_updateFramerate(e);
          p.set_drawFramerate(f);
          this._accumulator = this._stepMS;
          this._skipSplash = h;
          this._initialState = null == c ? $b : c;
          this.addEventListener("addedToStage", q(this, this.create));
        };
      g["flixel.FlxGame"] = vi;
      vi.__name__ = "flixel.FlxGame";
      vi.__super__ = fa;
      vi.prototype = r(fa.prototype, {
        create: function (a) {
          null != this.stage &&
            (this.removeEventListener("addedToStage", q(this, this.create)),
            (this._startTime = this.getTimer()),
            (this._total = this.getTimer() - this._startTime),
            this.stage.set_scaleMode(2),
            (this.stage.align = 6),
            this.stage.set_frameRate(p.drawFramerate),
            this.addChild(this._inputContainer),
            (this.soundTray = Ya.createInstance(this._customSoundTray, [])),
            this.addChild(this.soundTray),
            this.stage.addEventListener(
              "deactivate",
              q(this, this.onFocusLost)
            ),
            this.stage.addEventListener("activate", q(this, this.onFocus)),
            p.signals.preGameReset.dispatch(),
            this._skipSplash || null != xd.nextState
              ? ((this._requestedState = Ya.createInstance(
                  this._initialState,
                  []
                )),
                null == xd.nextState && (this._gameJustStarted = !0))
              : ((xd.nextState = this._initialState),
                (this._requestedState = new xd()),
                (this._skipSplash = !0)),
            p.reset(),
            p.signals.postGameReset.dispatch(),
            this.switchState(),
            this.stage.addEventListener(
              "enterFrame",
              q(this, this.onEnterFrame)
            ),
            this.stage.addEventListener("resize", q(this, this.onResize)),
            this.resizeGame(
              na.get_current().stage.stageWidth,
              na.get_current().stage.stageHeight
            ),
            la.addEventListener(
              "change",
              ((y = p.bitmap), q(y, y.onAssetsReload))
            ));
        },
        onFocus: function (a) {
          this._lostFocus = !1;
          p.signals.focusGained.dispatch();
          this._state.onFocus();
          if (p.autoPause) {
            this.stage.set_frameRate(p.drawFramerate);
            p.sound.onFocus();
            a = 0;
            for (var b = p.inputs.list; a < b.length; ) {
              var c = b[a];
              ++a;
              c.onFocus();
            }
          }
        },
        onFocusLost: function (a) {
          this._lostFocus = !0;
          p.signals.focusLost.dispatch();
          this._state.onFocusLost();
          if (p.autoPause) {
            this.stage.set_frameRate(this.focusLostFramerate);
            p.sound.onFocusLost();
            a = 0;
            for (var b = p.inputs.list; a < b.length; ) {
              var c = b[a];
              ++a;
              c.onFocusLost();
            }
          }
        },
        onResize: function (a) {
          a = na.get_current().stage.stageWidth;
          var b = na.get_current().stage.stageHeight;
          if (p.renderTile) p.bitmap.onContext();
          this.resizeGame(a, b);
        },
        resizeGame: function (a, b) {
          p.scaleMode.onMeasure(a, b);
          this._state.onResize(a, b);
          p.cameras.resize();
          p.signals.gameResized.dispatch(a, b);
          null != this.soundTray && this.soundTray.screenCenter();
        },
        onEnterFrame: function (a) {
          this.ticks = this.getTimer() - this._startTime;
          this._elapsedMS = this.ticks - this._total;
          this._total = this.ticks;
          null != this.soundTray &&
            this.soundTray.active &&
            this.soundTray.update(this._elapsedMS);
          if (!this._lostFocus || !p.autoPause) {
            if (p.vcr.paused)
              if (p.vcr.stepRequested) p.vcr.stepRequested = !1;
              else if (this._state == this._requestedState) return;
            if (p.fixedTimestep)
              for (
                this._accumulator += this._elapsedMS,
                  this._accumulator =
                    this._accumulator > this._maxAccumulation
                      ? this._maxAccumulation
                      : this._accumulator;
                this._accumulator >= this._stepMS;

              )
                this.step(), (this._accumulator -= this._stepMS);
            else this.step();
            this.draw();
          }
        },
        switchState: function () {
          p.cameras.reset();
          p.inputs.onStateSwitch();
          p.sound.destroy();
          p.signals.preStateSwitch.dispatch();
          null != this._state && this._state.destroy();
          p.bitmap.clearCache();
          this._state = this._requestedState;
          this._gameJustStarted && p.signals.preGameStart.dispatch();
          p.signals.preStateCreate.dispatch(this._state);
          this._state.create();
          this._gameJustStarted && this.gameStart();
          p.signals.postStateSwitch.dispatch();
        },
        gameStart: function () {
          p.signals.postGameStart.dispatch();
          this._gameJustStarted = !1;
        },
        step: function () {
          this._resetGame &&
            (p.signals.preGameReset.dispatch(),
            this._skipSplash || null != xd.nextState
              ? ((this._requestedState = Ya.createInstance(
                  this._initialState,
                  []
                )),
                null == xd.nextState && (this._gameJustStarted = !0))
              : ((xd.nextState = this._initialState),
                (this._requestedState = new xd()),
                (this._skipSplash = !0)),
            p.reset(),
            p.signals.postGameReset.dispatch(),
            (this._resetGame = !1));
          this.handleReplayRequests();
          this.update();
        },
        handleReplayRequests: function () {},
        update: function () {
          if (this._state.active && this._state.exists) {
            this._state != this._requestedState && this.switchState();
            this.updateElapsed();
            p.signals.preUpdate.dispatch();
            this.updateInput();
            p.sound.update(p.elapsed);
            for (var a = p.elapsed, b = 0, c = p.plugins.list; b < c.length; ) {
              var d = c[b];
              ++b;
              d.exists && d.active && d.update(a);
            }
            this._state.tryUpdate(p.elapsed);
            a = p.elapsed;
            b = 0;
            for (c = p.cameras.list; b < c.length; )
              (d = c[b]), ++b, null != d && d.exists && d.active && d.update(a);
            p.signals.postUpdate.dispatch();
            Mc.clearArray(p.swipes);
            this.set_filters(this.filtersEnabled ? this._filters : null);
          }
        },
        updateElapsed: function () {
          if (p.fixedTimestep) p.elapsed = p.timeScale * this._stepSeconds;
          else {
            p.elapsed = (this._elapsedMS / 1e3) * p.timeScale;
            var a = p.maxElapsed * p.timeScale;
            p.elapsed > a && (p.elapsed = a);
          }
        },
        updateInput: function () {
          for (var a = 0, b = p.inputs.list; a < b.length; ) {
            var c = b[a];
            ++a;
            c.update();
          }
        },
        draw: function () {
          if (this._state.visible && this._state.exists) {
            p.signals.preDraw.dispatch();
            p.renderTile && (Xc.drawCalls = 0);
            for (var a = p.cameras, b = 0, c = a.list; b < c.length; ) {
              var d = c[b];
              ++b;
              null != d &&
                d.exists &&
                d.visible &&
                (p.renderBlit &&
                  (d.checkResize(), a.useBufferLocking && d.buffer.lock()),
                p.renderTile &&
                  (d.clearDrawStack(), d.canvas.get_graphics().clear()),
                p.renderBlit
                  ? (d.fill(d.bgColor, d.useBgAlphaBlending),
                    (d.screen.dirty = !0))
                  : d.fill(
                      d.bgColor & 16777215,
                      d.useBgAlphaBlending,
                      ((d.bgColor >> 24) & 255) / 255
                    ));
            }
            b = 0;
            for (c = p.plugins.list; b < c.length; )
              (a = c[b]), ++b, a.exists && a.visible && a.draw();
            this._state.draw();
            if (p.renderTile && p.renderTile)
              for (b = 0, c = p.cameras.list; b < c.length; )
                (d = c[b]),
                  ++b,
                  null != d && d.exists && d.visible && d.render();
            a = p.cameras;
            b = 0;
            for (c = a.list; b < c.length; )
              (d = c[b]),
                ++b,
                null != d &&
                  d.exists &&
                  d.visible &&
                  (d.drawFX(),
                  p.renderBlit &&
                    (a.useBufferLocking && d.buffer.unlock(),
                    (d.screen.dirty = !0)));
            p.signals.postDraw.dispatch();
          }
        },
        getTimer: function () {
          return na.getTimer();
        },
        __class__: vi,
      });
      var Bh = function () {};
      g["flixel.IFlxSprite"] = Bh;
      Bh.__name__ = "flixel.IFlxSprite";
      Bh.__isInterface__ = !0;
      Bh.__interfaces__ = [Qi];
      Bh.prototype = {
        __class__: Bh,
        __properties__: { set_y: "set_y", set_x: "set_x" },
      };
      var pl = function (a, b, c, d, e, f) {
        null == f && (f = 0.05);
        null == e && (e = 0.4);
        null == d && (d = 3);
        null == c && (c = 10);
        this._recentAnimations = [];
        this._recentFlipY = [];
        this._recentFlipX = [];
        this._recentFrames = [];
        this._recentScales = [];
        this._recentAngles = [];
        this._recentPositions = [];
        this._transp = 1;
        this._counter = this._trailLength = 0;
        this.rotationsEnabled = this.scalesEnabled = this.framesEnabled = !0;
        Q.call(this);
        var h = U._pool.get().set(0, 0);
        h._inPool = !1;
        var m = h;
        h = a.origin;
        m.set_x(h.x);
        m.set_y(h.y);
        h._weak && h.put();
        this._spriteOrigin = m;
        this.target = a;
        this.delay = d;
        this._graphic = b;
        this._transp = e;
        this._difference = f;
        this.increaseLength(c);
        this.set_solid(!1);
      };
      g["flixel.addons.effects.FlxTrail"] = pl;
      pl.__name__ = "flixel.addons.effects.FlxTrail";
      pl.__super__ = Q;
      pl.prototype = r(Q.prototype, {
        destroy: function () {
          Z.putArray(this._recentPositions);
          Z.putArray(this._recentScales);
          this._graphic =
            this.target =
            this._spriteOrigin =
            this._recentAnimations =
            this._recentFlipY =
            this._recentFlipX =
            this._recentFrames =
            this._recentScales =
            this._recentPositions =
            this._recentAngles =
              null;
          Q.prototype.destroy.call(this);
        },
        update: function (a) {
          this._counter++;
          if (this._counter >= this.delay && 1 <= this._trailLength) {
            this._counter = 0;
            if (this._recentPositions.length == this._trailLength)
              var b = this._recentPositions.pop();
            else (b = U._pool.get().set(0, 0)), (b._inPool = !1);
            b.set(
              this.target.x - this.target.offset.x,
              this.target.y - this.target.offset.y
            );
            this._recentPositions.unshift(b);
            this.rotationsEnabled &&
              this.cacheValue(this._recentAngles, this.target.angle);
            this.scalesEnabled &&
              (this._recentScales.length == this._trailLength
                ? (b = this._recentScales.pop())
                : ((b = U._pool.get().set(0, 0)), (b._inPool = !1)),
              b.set(this.target.scale.x, this.target.scale.y),
              this._recentScales.unshift(b));
            this.framesEnabled &&
              null == this._graphic &&
              (this.cacheValue(
                this._recentFrames,
                this.target.animation.frameIndex
              ),
              this.cacheValue(this._recentFlipX, this.target.flipX),
              this.cacheValue(this._recentFlipY, this.target.flipY),
              this.cacheValue(
                this._recentAnimations,
                this.target.animation._curAnim
              ));
            for (var c = 0, d = this._recentPositions.length; c < d; ) {
              var e = c++;
              b = this.group.members[e];
              b.set_x(this._recentPositions[e].x);
              b.set_y(this._recentPositions[e].y);
              this.rotationsEnabled &&
                (b.set_angle(this._recentAngles[e]),
                b.origin.set_x(this._spriteOrigin.x),
                b.origin.set_y(this._spriteOrigin.y));
              this.scalesEnabled &&
                (b.scale.set_x(this._recentScales[e].x),
                b.scale.set_y(this._recentScales[e].y));
              if (this.framesEnabled && null == this._graphic) {
                b.animation.set_frameIndex(this._recentFrames[e]);
                b.set_flipX(this._recentFlipX[e]);
                b.set_flipY(this._recentFlipY[e]);
                var f = b.animation;
                e = this._recentAnimations[e];
                e != f._curAnim &&
                  (null != f._curAnim && f._curAnim.stop(),
                  null != e && e.play());
                f._curAnim = e;
              }
              b.set_exists(!0);
            }
          }
          Q.prototype.update.call(this, a);
        },
        cacheValue: function (a, b) {
          a.unshift(b);
          Mc.setLength_cacheValue_T(a, this._trailLength);
        },
        increaseLength: function (a) {
          if (!(0 >= a)) {
            this._trailLength += a;
            for (var b = 0; b < a; ) {
              b++;
              var c = new H(0, 0);
              null == this._graphic
                ? c.loadGraphicFromSprite(this.target)
                : c.loadGraphic(this._graphic);
              c.set_exists(!1);
              this.add(c);
              c.set_alpha(this._transp);
              this._transp -= this._difference;
              c.set_solid(0 < (this.allowCollisions & 4369));
              0 >= c.alpha && c.kill();
            }
          }
        },
        __class__: pl,
      });
      var ql = function (a, b, c, d, e, f, h, m, n) {
        null == m && (m = !1);
        null == h && (h = !1);
        null == f && (f = 2);
        null == e && (e = 0.8);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this._width = this._height = 1;
        this.redOffset =
          this.greenOffset =
          this.blueOffset =
          this.alphaOffset =
          this._counter =
            0;
        this.redMultiplier = this.greenMultiplier = this.blueMultiplier = 1;
        this.blendMode = null;
        this.simpleRender = !1;
        this.delay = 2;
        H.call(this, a, b);
        this.group = new nb();
        this.delay = f;
        this.simpleRender = h;
        this.blendMode = n;
        this.set_antialiasing(m);
        this.alphaMultiplier = e;
        this.setSize(c, d);
        this.set_pixels(this._areaPixels);
      };
      g["flixel.addons.effects.FlxTrailArea"] = ql;
      ql.__name__ = "flixel.addons.effects.FlxTrailArea";
      ql.__super__ = H;
      ql.prototype = r(H.prototype, {
        setSize: function (a, b) {
          0 >= a && (a = p.width);
          0 >= b && (b = p.height);
          if (a != this._width || b != this._height)
            (this._width = a),
              (this._height = b),
              (this._areaPixels = new J(
                this._width | 0,
                this._height | 0,
                !0,
                0
              ));
        },
        destroy: function () {
          this.group = Z.destroy(this.group);
          this.blendMode = null;
          this.get_pixels() != this._areaPixels && this._areaPixels.dispose();
          this._areaPixels = null;
          H.prototype.destroy.call(this);
        },
        draw: function () {
          this._counter++;
          if (this._counter >= this.delay) {
            this._counter = 0;
            this._areaPixels.lock();
            var a = new Bb(
              this.redMultiplier,
              this.greenMultiplier,
              this.blueMultiplier,
              this.alphaMultiplier,
              this.redOffset,
              this.greenOffset,
              this.blueOffset,
              this.alphaOffset
            );
            this._areaPixels.colorTransform(
              new ma(0, 0, this._areaPixels.width, this._areaPixels.height),
              a
            );
            a = 0;
            for (var b = this.group.members; a < b.length; ) {
              var c = b[a];
              ++a;
              if (c.exists) {
                var d = c.x - this.x - c.offset.x,
                  e = c.y - this.y - c.offset.y;
                if (this.simpleRender)
                  this._areaPixels.copyPixels(
                    c.updateFramePixels(),
                    new ma(0, 0, c.frameWidth, c.frameHeight),
                    new Ra(d, e),
                    null,
                    null,
                    !0
                  );
                else {
                  var f = 1 != c.scale.x || 1 != c.scale.y,
                    h = 0 != c.angle && 0 >= c.bakedRotationAngle;
                  this._matrix.identity();
                  if (h || f)
                    this._matrix.translate(-c.origin.x, -c.origin.y),
                      f && this._matrix.scale(c.scale.x, c.scale.y),
                      h && this._matrix.rotate((Math.PI / 180) * c.angle),
                      this._matrix.translate(c.origin.x, c.origin.y);
                  this._matrix.translate(d, e);
                  this._areaPixels.draw(
                    c.updateFramePixels(),
                    this._matrix,
                    c.colorTransform,
                    this.blendMode,
                    null,
                    this.antialiasing
                  );
                }
              }
            }
            this._areaPixels.unlock();
            this.set_pixels(this._areaPixels);
          }
          H.prototype.draw.call(this);
        },
        get_width: function () {
          return this._width;
        },
        set_width: function (a) {
          0 >= a && (a = p.width);
          a != this._width &&
            (this._areaPixels = new J(a | 0, this._height | 0, !0, 0));
          return (this._width = a);
        },
        get_height: function () {
          return this._height;
        },
        set_height: function (a) {
          0 >= a && (a = p.height);
          a != this._height &&
            (this._areaPixels = new J(this._width | 0, a | 0, !0, 0));
          return (this._height = a);
        },
        __class__: ql,
      });
      var rl = function (a, b) {
        this.effectsEnabled = this.updateTargetAnimation = !0;
        H.call(this);
        this.target = a;
        this.effects = null != b ? b : [];
        a = U._pool.get().set(0, 0);
        a._inPool = !1;
        this._effectOffset = a;
      };
      g["flixel.addons.effects.chainable.FlxEffectSprite"] = rl;
      rl.__name__ = "flixel.addons.effects.chainable.FlxEffectSprite";
      rl.__super__ = H;
      rl.prototype = r(H.prototype, {
        destroy: function () {
          this.effects = Z.destroyArray(this.effects);
          this._effectOffset = Z.put(this._effectOffset);
          this.target = null;
          H.prototype.destroy.call(this);
        },
        getScreenPosition: function (a, b) {
          return H.prototype.getScreenPosition
            .call(this, a, b)
            .addPoint(this._effectOffset);
        },
        draw: function () {
          this.target.dirty && this.target.drawFrame();
          if (
            null != this.target.framePixels &&
            (null != this.get_pixels() &&
            this.get_pixels().width == this.target.framePixels.width &&
            this.get_pixels().height == this.target.framePixels.height
              ? (this.get_pixels().fillRect(this.get_pixels().rect, 0),
                this.get_pixels().draw(this.target.framePixels))
              : (Z.dispose(this.get_pixels()),
                this.set_pixels(this.target.framePixels.clone())),
            this._effectOffset.set(0, 0),
            this.effectsEnabled)
          ) {
            this.get_pixels().lock();
            for (var a = 0, b = this.effects; a < b.length; ) {
              var c = b[a];
              ++a;
              c.active &&
                (this.set_pixels(c.apply(this.get_pixels())),
                null != c.offset && this._effectOffset.addPoint(c.offset));
            }
            this.get_pixels().unlock();
            this._flashRect = this.get_pixels().rect;
          }
          H.prototype.draw.call(this);
        },
        update: function (a) {
          this.updateTargetAnimation &&
            1 < this.target.animation._sprite.numFrames &&
            this.target.updateAnimation(a);
          if (this.effectsEnabled)
            for (var b = 0, c = this.effects; b < c.length; ) {
              var d = c[b];
              ++b;
              d.active && d.update(a);
            }
          H.prototype.update.call(this, a);
        },
        __class__: rl,
      });
      var Yi = function () {};
      g["flixel.addons.effects.chainable.IFlxEffect"] = Yi;
      Yi.__name__ = "flixel.addons.effects.chainable.IFlxEffect";
      Yi.__isInterface__ = !0;
      Yi.__interfaces__ = [T];
      Yi.prototype = { __class__: Yi };
      var Wd = function (a, b) {
        sa.call(this, this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.isBuffering = !1;
        this.url = null;
        null != a && this.load(a, b);
      };
      g["openfl.media.Sound"] = Wd;
      Wd.__name__ = "openfl.media.Sound";
      Wd.fromAudioBuffer = function (a) {
        var b = new Wd();
        b.__buffer = a;
        return b;
      };
      Wd.__super__ = sa;
      Wd.prototype = r(sa.prototype, {
        load: function (a, b) {
          var c = this;
          this.url = a.url;
          a = W.getLibrary("default");
          if (
            null != a &&
            Object.prototype.hasOwnProperty.call(
              a.cachedAudioBuffers.h,
              this.url
            )
          )
            this.AudioBuffer_onURLLoad(a.cachedAudioBuffers.h[this.url]);
          else
            Wb.loadFromFile(this.url)
              .onComplete(q(this, this.AudioBuffer_onURLLoad))
              .onError(function (a) {
                c.AudioBuffer_onURLLoad(null);
              });
        },
        play: function (a, b, c) {
          null == b && (b = 0);
          null == a && (a = 0);
          if (null == this.__buffer || 32 <= yd.__soundChannels.length)
            return null;
          c = null == c ? new tf() : c.clone();
          var d = yd.__soundTransform.pan + c.pan;
          1 < d && (d = 1);
          -1 > d && (d = -1);
          var e = yd.__soundTransform.volume * c.volume,
            f = new sl(this.__buffer);
          f.offset = a | 0;
          1 < b && f.set_loops(b - 1);
          f.set_gain(e);
          a = f.get_position();
          a.x = d;
          a.z = -1 * Math.sqrt(1 - Math.pow(d, 2));
          f.set_position(a);
          return new Zi(f, c);
        },
        get_id3: function () {
          return new tl();
        },
        get_length: function () {
          return null != this.__buffer
            ? (1e3 * this.__buffer.get_src().duration()) | 0
            : 0;
        },
        AudioBuffer_onURLLoad: function (a) {
          null == a
            ? this.dispatchEvent(new Ch("ioError"))
            : ((this.__buffer = a), this.dispatchEvent(new Ca("complete")));
        },
        __class__: Wd,
        __properties__: { get_length: "get_length", get_id3: "get_id3" },
      });
      var $i = function (a, b) {
        Wd.call(this, a, b);
      };
      g["flixel.addons.text.TypeSound"] = $i;
      $i.__name__ = "flixel.addons.text.TypeSound";
      $i.__super__ = Wd;
      $i.prototype = r(Wd.prototype, { __class__: $i });
      var ab = function (a, b, c, d, e, f) {
        null == f && (f = !0);
        null == e && (e = 8);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this._hasBorderAlpha = !1;
        this._regen = !0;
        this._formatRanges = [];
        this.borderSize = this.borderQuality = 1;
        this.borderColor = 0;
        this.borderStyle = Vb.NONE;
        this.text = "";
        H.call(this, a, b);
        null == d || "" == d
          ? (this.set_text(""), (d = " "))
          : this.set_text(d);
        this.textField = new ec();
        this.textField.set_selectable(!1);
        this.textField.set_multiline(!0);
        this.textField.set_wordWrap(!0);
        this._defaultFormat = new zc(null, e, 16777215);
        this.set_font(Xd.FONT_DEFAULT);
        this._formatAdjusted = new zc();
        this.textField.set_defaultTextFormat(this._defaultFormat);
        this.textField.set_text(d);
        this.set_fieldWidth(c);
        this.textField.set_embedFonts(f);
        this.textField.set_sharpness(100);
        this.textField.set_height(0 >= d.length ? 1 : 10);
        this.set_allowCollisions(0);
        this.set_moves(!1);
        this.drawFrame();
        b = a = 1;
        null == b && (b = 0);
        null == a && (a = 0);
        a = U._pool.get().set(a, b);
        a._inPool = !1;
        this.shadowOffset = a;
      };
      g["flixel.text.FlxText"] = ab;
      ab.__name__ = "flixel.text.FlxText";
      ab.__super__ = H;
      ab.prototype = r(H.prototype, {
        destroy: function () {
          this._formatAdjusted =
            this._defaultFormat =
            this._font =
            this.textField =
              null;
          this.shadowOffset = Z.put(this.shadowOffset);
          H.prototype.destroy.call(this);
        },
        drawFrame: function (a) {
          null == a && (a = !1);
          this._regen = this._regen || a;
          H.prototype.drawFrame.call(this, this._regen);
        },
        setFormat: function (a, b, c, d, e, f, h) {
          null == h && (h = !0);
          null == f && (f = 0);
          null == c && (c = -1);
          null == b && (b = 8);
          null == e && (e = Vb.NONE);
          h ? this.set_font(a) : null != a && this.set_systemFont(a);
          this.set_size(b);
          this.set_color(c);
          null != d && this.set_alignment(d);
          c = f;
          null == c && (c = 0);
          this.set_borderStyle(e);
          this.set_borderColor(c);
          this.set_borderSize(1);
          this.set_borderQuality(1);
          this.textField.set_defaultTextFormat(this._defaultFormat);
          this.textField.setTextFormat(this._defaultFormat);
          this._regen = !0;
          return this;
        },
        updateHitbox: function () {
          this.regenGraphic();
          H.prototype.updateHitbox.call(this);
        },
        set_fieldWidth: function (a) {
          if (null == this.textField) return a;
          0 >= a
            ? (this.set_wordWrap(!1), this.set_autoSize(!0))
            : (this.set_autoSize(!1),
              this.set_wordWrap(!0),
              this.textField.set_width(a));
          this._regen = !0;
          return a;
        },
        get_fieldWidth: function () {
          return null != this.textField ? this.textField.get_width() : 0;
        },
        set_autoSize: function (a) {
          null != this.textField &&
            (this.textField.set_autoSize(a ? 1 : 2), (this._regen = !0));
          return a;
        },
        set_text: function (a) {
          this.text = a;
          if (null != this.textField) {
            var b = this.textField.get_text();
            this.textField.set_text(a);
            this._regen = this.textField.get_text() != b || this._regen;
          }
          return a;
        },
        set_size: function (a) {
          this._defaultFormat.size = a;
          this.textField.set_defaultTextFormat(this._defaultFormat);
          this.textField.setTextFormat(this._defaultFormat);
          this._regen = !0;
          return a;
        },
        set_color: function (a) {
          if (this._defaultFormat.color == (a & 16777215)) return a;
          this._defaultFormat.color = a & 16777215;
          this.color = a;
          this.textField.set_defaultTextFormat(this._defaultFormat);
          this.textField.setTextFormat(this._defaultFormat);
          this._regen = !0;
          return a;
        },
        set_font: function (a) {
          this.textField.set_embedFonts(!0);
          if (null != a) {
            var b = a;
            la.exists(a, "FONT") && (b = la.getFont(a).name);
            this._defaultFormat.font = b;
          } else this._defaultFormat.font = Xd.FONT_DEFAULT;
          this.textField.set_defaultTextFormat(this._defaultFormat);
          this.textField.setTextFormat(this._defaultFormat);
          this._regen = !0;
          return (this._font = this._defaultFormat.font);
        },
        set_systemFont: function (a) {
          this.textField.set_embedFonts(!1);
          this._defaultFormat.font = a;
          this.textField.set_defaultTextFormat(this._defaultFormat);
          this.textField.setTextFormat(this._defaultFormat);
          this._regen = !0;
          return a;
        },
        set_wordWrap: function (a) {
          this.textField.get_wordWrap() != a &&
            (this.textField.set_wordWrap(a), (this._regen = !0));
          return a;
        },
        set_alignment: function (a) {
          this._defaultFormat.align = ul.toOpenFL(a);
          this.textField.set_defaultTextFormat(this._defaultFormat);
          this.textField.setTextFormat(this._defaultFormat);
          this._regen = !0;
          return a;
        },
        set_borderStyle: function (a) {
          a != this.borderStyle && (this._regen = !0);
          return (this.borderStyle = a);
        },
        set_borderColor: function (a) {
          this.borderColor != a &&
            this.borderStyle != Vb.NONE &&
            (this._regen = !0);
          this._hasBorderAlpha = 1 > ((a >> 24) & 255) / 255;
          return (this.borderColor = a);
        },
        set_borderSize: function (a) {
          a != this.borderSize &&
            this.borderStyle != Vb.NONE &&
            (this._regen = !0);
          return (this.borderSize = a);
        },
        set_borderQuality: function (a) {
          a = 0 > a ? 0 : a;
          a = 1 < a ? 1 : a;
          a != this.borderQuality &&
            this.borderStyle != Vb.NONE &&
            (this._regen = !0);
          return (this.borderQuality = a);
        },
        set_graphic: function (a) {
          var b = this.graphic;
          a = H.prototype.set_graphic.call(this, a);
          p.bitmap.removeIfNoUse(b);
          return a;
        },
        get_width: function () {
          this.regenGraphic();
          return H.prototype.get_width.call(this);
        },
        get_height: function () {
          this.regenGraphic();
          return H.prototype.get_height.call(this);
        },
        updateColorTransform: function () {
          null == this.colorTransform && (this.colorTransform = new Bb());
          1 != this.alpha
            ? ((this.colorTransform.alphaMultiplier = this.alpha),
              (this.useColorTransform = !0))
            : ((this.colorTransform.alphaMultiplier = 1),
              (this.useColorTransform = !1));
          this.dirty = !0;
        },
        regenGraphic: function () {
          if (null != this.textField && this._regen) {
            var a = 0,
              b = 4;
            null != this.graphic &&
              ((a = this.graphic.width), (b = this.graphic.height));
            var c = this.textField.get_width(),
              d = this.textField.get_textHeight() + 4;
            0 == this.textField.get_textHeight() && (d = b);
            a != c || b != d
              ? (this.set_height(d),
                (a = p.bitmap.getUniqueKey("text")),
                this.makeGraphic(c | 0, d | 0, 0, !1, a),
                this._hasBorderAlpha &&
                  (this._borderPixels = this.graphic.bitmap.clone()),
                (this.frameHeight = this.get_height() | 0),
                this.textField.set_height(1.2 * this.get_height()),
                (this._flashRect.x = 0),
                (this._flashRect.y = 0),
                (this._flashRect.width = c),
                (this._flashRect.height = d))
              : (this.graphic.bitmap.fillRect(this._flashRect, 0),
                this._hasBorderAlpha &&
                  (null == this._borderPixels
                    ? (this._borderPixels = new J(
                        this.frameWidth,
                        this.frameHeight,
                        !0
                      ))
                    : this._borderPixels.fillRect(this._flashRect, 0)));
            null != this.textField &&
              null != this.textField.get_text() &&
              0 < this.textField.get_text().length &&
              (this.copyTextFormat(this._defaultFormat, this._formatAdjusted),
              this._matrix.identity(),
              this.applyBorderStyle(),
              this._hasBorderAlpha &&
                (null == this._borderColorTransform &&
                  (this._borderColorTransform = new Bb()),
                (this._borderColorTransform.alphaMultiplier =
                  ((this.borderColor >> 24) & 255) / 255),
                this._borderPixels.colorTransform(
                  this._borderPixels.rect,
                  this._borderColorTransform
                ),
                this.graphic.bitmap.draw(this._borderPixels)),
              this.applyFormats(this._formatAdjusted, !1),
              this.drawTextFieldTo(this.graphic.bitmap));
            this._regen = !1;
            this.set_frame(this.frame);
          }
        },
        drawTextFieldTo: function (a) {
          a.draw(this.textField, this._matrix);
        },
        draw: function () {
          this.regenGraphic();
          H.prototype.draw.call(this);
        },
        calcFrame: function (a) {
          null == a && (a = !1);
          null == this.textField ||
            (p.renderTile && !a) ||
            (this.regenGraphic(), H.prototype.calcFrame.call(this, a));
        },
        applyBorderStyle: function () {
          var a = (this.borderSize * this.borderQuality) | 0;
          0 >= a && (a = 1);
          var b = this.borderSize / a;
          switch (this.borderStyle._hx_index) {
            case 1:
              this.applyFormats(this._formatAdjusted, !0);
              for (var c = 0; c < a; ) {
                c++;
                var d = this._hasBorderAlpha
                  ? this._borderPixels
                  : this.graphic.bitmap;
                this._matrix.translate(b, b);
                this.drawTextFieldTo(d);
              }
              this._matrix.translate(
                -this.shadowOffset.x * this.borderSize,
                -this.shadowOffset.y * this.borderSize
              );
              break;
            case 2:
              this.applyFormats(this._formatAdjusted, !0);
              var e = b;
              for (c = 0; c < a; )
                c++,
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(-e, -e),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(e, 0),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(e, 0),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(0, e),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(0, e),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(-e, 0),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(-e, 0),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(0, -e),
                  this.drawTextFieldTo(d),
                  this._matrix.translate(e, 0),
                  (e += b);
              break;
            case 3:
              for (
                this.applyFormats(this._formatAdjusted, !0), e = b, c = 0;
                c < a;

              )
                c++,
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(-e, -e),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(2 * e, 0),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(0, 2 * e),
                  this.drawTextFieldTo(d),
                  (d = this._hasBorderAlpha
                    ? this._borderPixels
                    : this.graphic.bitmap),
                  this._matrix.translate(2 * -e, 0),
                  this.drawTextFieldTo(d),
                  this._matrix.translate(e, -e),
                  (e += b);
          }
        },
        applyFormats: function (a, b) {
          null == b && (b = !1);
          this.copyTextFormat(this._defaultFormat, a, !1);
          a.color = b ? this.borderColor & 16777215 : this._defaultFormat.color;
          this.textField.setTextFormat(a);
          for (var c = 0, d = this._formatRanges; c < d.length; ) {
            var e = d[c];
            ++c;
            if (this.textField.get_text().length - 1 < e.range.start) break;
            else {
              var f = e.format.format;
              this.copyTextFormat(f, a, !1);
              a.color = b ? e.format.borderColor & 16777215 : f.color;
            }
            this.textField.setTextFormat(
              a,
              e.range.start,
              Math.min(e.range.end, this.textField.get_text().length) | 0
            );
          }
        },
        copyTextFormat: function (a, b, c) {
          null == c && (c = !0);
          b.font = a.font;
          b.bold = a.bold;
          b.italic = a.italic;
          b.size = a.size;
          b.color = a.color;
          c && (b.align = a.align);
        },
        set_frames: function (a) {
          H.prototype.set_frames.call(this, a);
          this._regen = !1;
          return a;
        },
        __class__: ab,
        __properties__: r(H.prototype.__properties__, {
          set_alignment: "set_alignment",
          set_wordWrap: "set_wordWrap",
          set_systemFont: "set_systemFont",
          set_font: "set_font",
          set_size: "set_size",
          set_autoSize: "set_autoSize",
          set_fieldWidth: "set_fieldWidth",
          get_fieldWidth: "get_fieldWidth",
          set_borderQuality: "set_borderQuality",
          set_borderSize: "set_borderSize",
          set_borderColor: "set_borderColor",
          set_borderStyle: "set_borderStyle",
          set_text: "set_text",
        }),
      });
      var we = function (a, b, c, d, e, f) {
        null == f && (f = !0);
        null == e && (e = 8);
        this._typeVarPercent = 0.5;
        this._typingVariation = !1;
        this._cursorTimer = 0;
        this._typing = this._erasing = this._waiting = !1;
        this._timer = this._waitTimer = this._length = 0;
        this._finalText = "";
        this.skipKeys = [];
        this.paused = this.useDefaultSound = this.finishSounds = !1;
        this.waitTime = 1;
        this.autoErase = !1;
        this.prefix = "";
        this.cursorBlinkSpeed = 0.5;
        this.cursorCharacter = "|";
        this.showCursor = !1;
        this.eraseDelay = 0.02;
        this.delay = 0.05;
        ab.call(this, a, b, c, "", e, f);
        this._finalText = d;
      };
      g["flixel.addons.text.FlxTypeText"] = we;
      we.__name__ = "flixel.addons.text.FlxTypeText";
      we.__super__ = ab;
      we.prototype = r(ab.prototype, {
        start: function (a, b, c, d, e) {
          null == c && (c = !1);
          null == b && (b = !1);
          null != a && (this.delay = a);
          this._typing = !0;
          this._waiting = this.paused = this._erasing = !1;
          b && (this.set_text(""), (this._length = 0));
          this.autoErase = c;
          null != d && (this.skipKeys = d);
          this.completeCallback = e;
          this.insertBreakLines();
          this.useDefaultSound && this.loadDefaultSound();
        },
        insertBreakLines: function () {
          for (var a = this.text, b = this._finalText.length, c, d; ; ) {
            b = ba.substr(this._finalText, 0, b).lastIndexOf(" ");
            if (0 >= b) break;
            this.set_text(this.prefix + this._finalText);
            c = this.textField.get_numLines();
            var e =
              ba.substr(this._finalText, 0, b) +
              "\n" +
              ba.substr(this._finalText, b + 1, this._finalText.length);
            this.set_text(this.prefix + e);
            d = this.textField.get_numLines();
            c == d && (this._finalText = e);
          }
          this.set_text(a);
        },
        resetText: function (a) {
          this.set_text("");
          this._finalText = a;
          this._waiting = this.paused = this._erasing = this._typing = !1;
          this._length = 0;
        },
        onComplete: function () {
          this._timer = 0;
          this._typing = !1;
          if (this.useDefaultSound) {
            var a = this._sound;
            a.cleanup(a.autoDestroy, !0);
          } else if (null != this.sounds) {
            a = 0;
            for (var b = this.sounds; a < b.length; ) {
              var c = b[a];
              ++a;
              c.cleanup(c.autoDestroy, !0);
            }
          }
          null != this.completeCallback && this.completeCallback();
          this.autoErase && 0 >= this.waitTime
            ? (this._erasing = !0)
            : this.autoErase &&
              ((this._waitTimer = this.waitTime), (this._waiting = !0));
        },
        onErased: function () {
          this._timer = 0;
          this._erasing = !1;
          null != this.eraseCallback && this.eraseCallback();
        },
        update: function (a) {
          null != this.skipKeys &&
            0 < this.skipKeys.length &&
            p.keys.checkKeyArrayState(this.skipKeys, 2) &&
            this.skip();
          this._waiting &&
            !this.paused &&
            ((this._waitTimer -= a),
            0 >= this._waitTimer &&
              ((this._waiting = !1), (this._erasing = !0)));
          this._waiting ||
            this.paused ||
            (this._length < this._finalText.length &&
              this._typing &&
              (this._timer += a),
            0 < this._length && this._erasing && (this._timer += a));
          if (this._typing || this._erasing)
            if (
              (this._typing &&
                this._timer >= this.delay &&
                ((this._length += (this._timer / this.delay) | 0),
                this._length > this._finalText.length &&
                  (this._length = this._finalText.length)),
              this._erasing &&
                this._timer >= this.eraseDelay &&
                ((this._length -= (this._timer / this.eraseDelay) | 0),
                0 > this._length && (this._length = 0)),
              (this._typing && this._timer >= this.delay) ||
                (this._erasing && this._timer >= this.eraseDelay))
            )
              if (
                ((this._timer = this._typingVariation
                  ? this._typing
                    ? p.random.float(
                        (-this.delay * this._typeVarPercent) / 2,
                        (this.delay * this._typeVarPercent) / 2
                      )
                    : p.random.float(
                        (-this.eraseDelay * this._typeVarPercent) / 2,
                        (this.eraseDelay * this._typeVarPercent) / 2
                      )
                  : this._timer % this.delay),
                null == this.sounds || this.useDefaultSound)
              )
                this.useDefaultSound && this._sound.play(!this.finishSounds);
              else {
                if (!this.finishSounds)
                  for (var b = 0, c = this.sounds; b < c.length; ) {
                    var d = c[b];
                    ++b;
                    d.cleanup(d.autoDestroy, !0);
                  }
                p.random
                  .getObject_flixel_system_FlxSound(this.sounds)
                  .play(!this.finishSounds);
              }
          we.helperString =
            this.prefix + ba.substr(this._finalText, 0, this._length);
          this.showCursor &&
            ((this._cursorTimer += a),
            (b =
              "\n" ==
              (this.prefix + this._finalText).charAt(we.helperString.length)),
            this._cursorTimer > this.cursorBlinkSpeed / 2 &&
              !b &&
              (we.helperString += this.cursorCharacter.charAt(0)),
            this._cursorTimer > this.cursorBlinkSpeed &&
              (this._cursorTimer = 0));
          if (we.helperString != this.text) {
            this.set_text(we.helperString);
            if (
              this._length >= this._finalText.length &&
              this._typing &&
              !this._waiting &&
              !this._erasing
            )
              this.onComplete();
            if (
              0 == this._length &&
              this._erasing &&
              !this._typing &&
              !this._waiting
            )
              this.onErased();
          }
          ab.prototype.update.call(this, a);
        },
        skip: function () {
          this._erasing || this._waiting
            ? ((this._length = 0), (this._waiting = !1))
            : this._typing && (this._length = this._finalText.length);
        },
        loadDefaultSound: function () {
          this._sound = p.sound.load(new $i());
        },
        __class__: we,
      });
      var Lg = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      g["lime.math.Vector2"] = Lg;
      Lg.__name__ = "lime.math.Vector2";
      Lg.prototype = {
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        __toFlashPoint: function () {
          return null;
        },
        __class__: Lg,
      };
      var J = function (a, b, c, d) {
        null == d && (d = -1);
        null == c && (c = !0);
        this.transparent = c;
        null == a && (a = 0);
        null == b && (b = 0);
        0 > a && (a = 0);
        0 > b && (b = 0);
        this.width = a;
        this.height = b;
        this.rect = new ma(0, 0, a, b);
        this.__textureWidth = a;
        this.__textureHeight = b;
        0 < a &&
          0 < b &&
          (c
            ? 0 == (d & -16777216) && (d = 0)
            : (d = -16777216 | (d & 16777215)),
          (this.image = new Da(
            null,
            0,
            0,
            a,
            b,
            (d << 8) | ((d >>> 24) & 255)
          )),
          this.image.set_transparent(c),
          (this.readable = this.__isValid = !0));
        this.__renderTransform = new Ea();
        this.__worldAlpha = 1;
        this.__worldTransform = new Ea();
        this.__worldColorTransform = new Bb();
        this.__renderable = !0;
      };
      g["openfl.display.BitmapData"] = J;
      J.__name__ = "openfl.display.BitmapData";
      J.__interfaces__ = [sb];
      J.fromCanvas = function (a, b) {
        null == b && (b = !0);
        if (null == a) return null;
        var c = new J(0, 0, b, 0);
        c.__fromImage(Da.fromCanvas(a));
        c.image.set_transparent(b);
        return c;
      };
      J.fromImage = function (a, b) {
        null == b && (b = !0);
        if (null == a || null == a.buffer) return null;
        var c = new J(0, 0, b, 0);
        c.__fromImage(a);
        c.image.set_transparent(b);
        return null != c.image ? c : null;
      };
      J.prototype = {
        clone: function () {
          if (this.__isValid)
            if (this.readable || null != this.image)
              var a = J.fromImage(this.image.clone(), this.transparent);
            else
              (a = new J(0, 0, this.transparent, 0)),
                (a.width = this.width),
                (a.height = this.height),
                (a.__textureWidth = this.__textureWidth),
                (a.__textureHeight = this.__textureHeight),
                a.rect.copyFrom(this.rect),
                (a.__framebuffer = this.__framebuffer),
                (a.__framebufferContext = this.__framebufferContext),
                (a.__texture = this.__texture),
                (a.__textureContext = this.__textureContext),
                (a.__isValid = !0);
          else a = new J(this.width, this.height, this.transparent, 0);
          a.__worldTransform.copyFrom(this.__worldTransform);
          a.__renderTransform.copyFrom(this.__renderTransform);
          return a;
        },
        colorTransform: function (a, b) {
          this.readable &&
            this.image.colorTransform(
              a.__toLimeRectangle(),
              b.__toLimeColorMatrix()
            );
        },
        copyChannel: function (a, b, c, d, e) {
          if (this.readable) {
            switch (d) {
              case 1:
                d = uf.RED;
                break;
              case 2:
                d = uf.GREEN;
                break;
              case 4:
                d = uf.BLUE;
                break;
              case 8:
                d = uf.ALPHA;
                break;
              default:
                return;
            }
            switch (e) {
              case 1:
                e = uf.RED;
                break;
              case 2:
                e = uf.GREEN;
                break;
              case 4:
                e = uf.BLUE;
                break;
              case 8:
                e = uf.ALPHA;
                break;
              default:
                return;
            }
            this.image.copyChannel(
              a.image,
              b.__toLimeRectangle(),
              c.__toLimeVector2(),
              d,
              e
            );
          }
        },
        copyPixels: function (a, b, c, d, e, f) {
          null == f && (f = !1);
          this.readable &&
            null != a &&
            (null != e && ((J.__tempVector.x = e.x), (J.__tempVector.y = e.y)),
            this.image.copyPixels(
              a.image,
              b.__toLimeRectangle(),
              c.__toLimeVector2(),
              null != d ? d.image : null,
              null != e ? J.__tempVector : null,
              f
            ));
        },
        dispose: function () {
          this.image = null;
          this.height = this.width = 0;
          this.rect = null;
          this.readable = this.__isValid = !1;
          this.__textureContext =
            this.__texture =
            this.__framebufferContext =
            this.__framebuffer =
            this.__vertexBuffer =
            this.__surface =
              null;
        },
        draw: function (a, b, c, d, e, f) {
          null == f && (f = !1);
          if (null != a) {
            a.__update(!1, !0);
            var h = Ea.__pool.get();
            h.copyFrom(a.__renderTransform);
            h.invert();
            null != b && h.concat(b);
            b = null;
            null != e && ((b = Ea.__pool.get()), b.copyFrom(h), b.invert());
            var m = new Bb();
            m.__copyFrom(a.__worldColorTransform);
            m.__invert();
            if (this.readable || null == na.get_current().stage.context3D) {
              if (null != c) {
                var n = ma.__pool.get(),
                  p = Ea.__pool.get();
                a.__getBounds(n, p);
                var g = Math.ceil(n.width),
                  k = Math.ceil(n.height);
                p.tx = -n.x;
                p.ty = -n.y;
                g = new J(g, k, !0, 0);
                g.draw(a, p);
                g.colorTransform(g.rect, c);
                g.__renderTransform.identity();
                g.__renderTransform.tx = n.x;
                g.__renderTransform.ty = n.y;
                g.__renderTransform.concat(a.__renderTransform);
                g.__worldAlpha = a.__worldAlpha;
                g.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                a = g;
                ma.__pool.release(n);
                Ea.__pool.release(p);
              }
              Oa.convertToCanvas(this.image);
              c = new $e(this.image.buffer.__srcContext);
              c.__allowSmoothing = f;
              c.__overrideBlendMode = d;
              c.__worldTransform = h;
              c.__worldAlpha = 1 / a.__worldAlpha;
              c.__worldColorTransform = m;
              null != e && c.__pushMaskRect(e, b);
              this.__drawCanvas(a, c);
            } else
              null == this.__textureContext &&
                (this.__textureContext = ua.current.__window.context),
                null != c && m.__combine(c),
                (c = new Ta(na.get_current().stage.context3D, this)),
                (c.__allowSmoothing = f),
                (c.__overrideBlendMode = d),
                (c.__worldTransform = h),
                (c.__worldAlpha = 1 / a.__worldAlpha),
                (c.__worldColorTransform = m),
                c.__resize(this.width, this.height),
                null != e && c.__pushMaskRect(e, b),
                this.__drawGL(a, c);
            null != e && (c.__popMaskRect(), Ea.__pool.release(b));
            Ea.__pool.release(h);
          }
        },
        fillRect: function (a, b) {
          this.__fillRect(a, b, !0);
        },
        getIndexBuffer: function (a, b) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context ||
            (null != b && null == this.__indexBufferGrid) ||
            (null != this.__indexBufferGrid &&
              !this.__indexBufferGrid.equals(b))
          ) {
            this.__indexBufferContext = a.__context;
            this.__indexBuffer = null;
            if (null != b) {
              null == this.__indexBufferGrid &&
                (this.__indexBufferGrid = new ma());
              this.__indexBufferGrid.copyFrom(b);
              var c = b.width;
              b = b.height;
              0 != c && 0 != b
                ? ((this.__indexBufferData = c = new Uint16Array(54)),
                  (this.__indexBufferData[0] = 0),
                  (this.__indexBufferData[1] = 1),
                  (this.__indexBufferData[2] = 2),
                  (this.__indexBufferData[3] = 2),
                  (this.__indexBufferData[4] = 1),
                  (this.__indexBufferData[5] = 3),
                  (this.__indexBufferData[6] = 4),
                  (this.__indexBufferData[7] = 0),
                  (this.__indexBufferData[8] = 5),
                  (this.__indexBufferData[9] = 5),
                  (this.__indexBufferData[10] = 0),
                  (this.__indexBufferData[11] = 2),
                  (this.__indexBufferData[12] = 6),
                  (this.__indexBufferData[13] = 4),
                  (this.__indexBufferData[14] = 7),
                  (this.__indexBufferData[15] = 7),
                  (this.__indexBufferData[16] = 4),
                  (this.__indexBufferData[17] = 5),
                  (this.__indexBufferData[18] = 8),
                  (this.__indexBufferData[19] = 9),
                  (this.__indexBufferData[20] = 0),
                  (this.__indexBufferData[21] = 0),
                  (this.__indexBufferData[22] = 9),
                  (this.__indexBufferData[23] = 1),
                  (this.__indexBufferData[24] = 10),
                  (this.__indexBufferData[25] = 8),
                  (this.__indexBufferData[26] = 4),
                  (this.__indexBufferData[27] = 4),
                  (this.__indexBufferData[28] = 8),
                  (this.__indexBufferData[29] = 0),
                  (this.__indexBufferData[30] = 11),
                  (this.__indexBufferData[31] = 10),
                  (this.__indexBufferData[32] = 6),
                  (this.__indexBufferData[33] = 6),
                  (this.__indexBufferData[34] = 10),
                  (this.__indexBufferData[35] = 4),
                  (this.__indexBufferData[36] = 12),
                  (this.__indexBufferData[37] = 13),
                  (this.__indexBufferData[38] = 8),
                  (this.__indexBufferData[39] = 8),
                  (this.__indexBufferData[40] = 13),
                  (this.__indexBufferData[41] = 9),
                  (this.__indexBufferData[42] = 14),
                  (this.__indexBufferData[43] = 12),
                  (this.__indexBufferData[44] = 10),
                  (this.__indexBufferData[45] = 10),
                  (this.__indexBufferData[46] = 12),
                  (this.__indexBufferData[47] = 8),
                  (this.__indexBufferData[48] = 15),
                  (this.__indexBufferData[49] = 14),
                  (this.__indexBufferData[50] = 11),
                  (this.__indexBufferData[51] = 11),
                  (this.__indexBufferData[52] = 14),
                  (this.__indexBufferData[53] = 10),
                  (this.__indexBuffer = a.createIndexBuffer(54)))
                : 0 == c && 0 != b
                ? ((this.__indexBufferData = c = new Uint16Array(18)),
                  (this.__indexBufferData[0] = 0),
                  (this.__indexBufferData[1] = 1),
                  (this.__indexBufferData[2] = 2),
                  (this.__indexBufferData[3] = 2),
                  (this.__indexBufferData[4] = 1),
                  (this.__indexBufferData[5] = 3),
                  (this.__indexBufferData[6] = 4),
                  (this.__indexBufferData[7] = 5),
                  (this.__indexBufferData[8] = 0),
                  (this.__indexBufferData[9] = 0),
                  (this.__indexBufferData[10] = 5),
                  (this.__indexBufferData[11] = 1),
                  (this.__indexBufferData[12] = 6),
                  (this.__indexBufferData[13] = 7),
                  (this.__indexBufferData[14] = 4),
                  (this.__indexBufferData[15] = 4),
                  (this.__indexBufferData[16] = 7),
                  (this.__indexBufferData[17] = 5),
                  (this.__indexBuffer = a.createIndexBuffer(18)))
                : 0 != c &&
                  0 == b &&
                  ((this.__indexBufferData = c = new Uint16Array(18)),
                  (this.__indexBufferData[0] = 0),
                  (this.__indexBufferData[1] = 1),
                  (this.__indexBufferData[2] = 2),
                  (this.__indexBufferData[3] = 2),
                  (this.__indexBufferData[4] = 1),
                  (this.__indexBufferData[5] = 3),
                  (this.__indexBufferData[6] = 4),
                  (this.__indexBufferData[7] = 0),
                  (this.__indexBufferData[8] = 5),
                  (this.__indexBufferData[9] = 5),
                  (this.__indexBufferData[10] = 0),
                  (this.__indexBufferData[11] = 2),
                  (this.__indexBufferData[12] = 6),
                  (this.__indexBufferData[13] = 4),
                  (this.__indexBufferData[14] = 7),
                  (this.__indexBufferData[15] = 7),
                  (this.__indexBufferData[16] = 4),
                  (this.__indexBufferData[17] = 5),
                  (this.__indexBuffer = a.createIndexBuffer(18)));
            } else this.__indexBufferGrid = null;
            null == this.__indexBuffer &&
              ((this.__indexBufferData = c = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBuffer = a.createIndexBuffer(6)));
            this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData);
          }
          return this.__indexBuffer;
        },
        getVertexBuffer: function (a, b, c) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            (null != b && null == this.__vertexBufferGrid) ||
            (null != this.__vertexBufferGrid &&
              !this.__vertexBufferGrid.equals(b)) ||
            (null != c &&
              (this.__vertexBufferWidth != c.get_width() ||
                this.__vertexBufferHeight != c.get_height() ||
                this.__vertexBufferScaleX != c.get_scaleX() ||
                this.__vertexBufferScaleY != c.get_scaleY()))
          ) {
            this.__uvRect = new ma(0, 0, this.width, this.height);
            this.__vertexBufferContext = a.__context;
            this.__vertexBuffer = null;
            null != c &&
              ((this.__vertexBufferWidth = c.get_width()),
              (this.__vertexBufferHeight = c.get_height()),
              (this.__vertexBufferScaleX = c.get_scaleX()),
              (this.__vertexBufferScaleY = c.get_scaleY()));
            if (null != b && null != c) {
              null == this.__vertexBufferGrid &&
                (this.__vertexBufferGrid = new ma());
              this.__vertexBufferGrid.copyFrom(b);
              this.__vertexBufferWidth = c.get_width();
              this.__vertexBufferHeight = c.get_height();
              this.__vertexBufferScaleX = c.get_scaleX();
              this.__vertexBufferScaleY = c.get_scaleY();
              var d = b.width,
                e = b.height;
              if (0 != d && 0 != e) {
                var f = new Float32Array(224);
                this.__vertexBufferData = f;
                var h = b.x,
                  m = b.y,
                  n = this.width - d - h,
                  p = this.height - e - m;
                b = h / this.width;
                f = m / this.height;
                d /= this.width;
                e /= this.height;
                h /= c.get_scaleX();
                m /= c.get_scaleY();
                n /= c.get_scaleX();
                var g = p / c.get_scaleY();
                p = c.get_width() / c.get_scaleX() - h - n;
                n = c.get_height() / c.get_scaleY() - m - g;
                this.__vertexBufferData[0] = h;
                this.__vertexBufferData[1] = m;
                this.__vertexBufferData[3] = 1 * b;
                this.__vertexBufferData[4] = 1 * f;
                this.__vertexBufferData[15] = m;
                this.__vertexBufferData[18] = 1 * f;
                this.__vertexBufferData[28] = h;
                this.__vertexBufferData[31] = 1 * b;
                this.__vertexBufferData[56] = h + p;
                this.__vertexBufferData[57] = m;
                this.__vertexBufferData[59] = 1 * (b + d);
                this.__vertexBufferData[60] = 1 * f;
                this.__vertexBufferData[70] = h + p;
                this.__vertexBufferData[73] = 1 * (b + d);
                this.__vertexBufferData[84] = this.width;
                this.__vertexBufferData[85] = m;
                this.__vertexBufferData[87] = 1;
                this.__vertexBufferData[88] = 1 * f;
                this.__vertexBufferData[98] = this.width;
                this.__vertexBufferData[101] = 1;
                this.__vertexBufferData[112] = h;
                this.__vertexBufferData[113] = m + n;
                this.__vertexBufferData[115] = 1 * b;
                this.__vertexBufferData[116] = 1 * (f + e);
                this.__vertexBufferData[127] = m + n;
                this.__vertexBufferData[130] = 1 * (f + e);
                this.__vertexBufferData[140] = h + p;
                this.__vertexBufferData[141] = m + n;
                this.__vertexBufferData[143] = 1 * (b + d);
                this.__vertexBufferData[144] = 1 * (f + e);
                this.__vertexBufferData[154] = this.width;
                this.__vertexBufferData[155] = m + n;
                this.__vertexBufferData[157] = 1;
                this.__vertexBufferData[158] = 1 * (f + e);
                this.__vertexBufferData[168] = h;
                this.__vertexBufferData[169] = this.height;
                this.__vertexBufferData[171] = 1 * b;
                this.__vertexBufferData[172] = 1;
                this.__vertexBufferData[183] = this.height;
                this.__vertexBufferData[186] = 1;
                this.__vertexBufferData[196] = h + p;
                this.__vertexBufferData[197] = this.height;
                this.__vertexBufferData[199] = 1 * (b + d);
                this.__vertexBufferData[200] = 1;
                this.__vertexBufferData[210] = this.width;
                this.__vertexBufferData[211] = this.height;
                this.__vertexBufferData[213] = 1;
                this.__vertexBufferData[214] = 1;
                this.__vertexBuffer = a.createVertexBuffer(16, 14);
              } else
                0 == d && 0 != e
                  ? ((this.__vertexBufferData = f = new Float32Array(112)),
                    (m = b.y),
                    (p = this.height - e - m),
                    (f = m / this.height),
                    (e /= this.height),
                    (m /= c.get_scaleY()),
                    (g = p / c.get_scaleY()),
                    (n = c.get_height() / c.get_scaleY() - m - g),
                    (c = c.get_width() / c.get_scaleX()),
                    (this.__vertexBufferData[0] = c),
                    (this.__vertexBufferData[1] = m),
                    (this.__vertexBufferData[3] = 1),
                    (this.__vertexBufferData[4] = 1 * f),
                    (this.__vertexBufferData[15] = m),
                    (this.__vertexBufferData[18] = 1 * f),
                    (this.__vertexBufferData[28] = c),
                    (this.__vertexBufferData[31] = 1),
                    (this.__vertexBufferData[56] = c),
                    (this.__vertexBufferData[57] = m + n),
                    (this.__vertexBufferData[59] = 1),
                    (this.__vertexBufferData[60] = 1 * (f + e)),
                    (this.__vertexBufferData[71] = m + n),
                    (this.__vertexBufferData[74] = 1 * (f + e)),
                    (this.__vertexBufferData[84] = c),
                    (this.__vertexBufferData[85] = this.height),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[99] = this.height),
                    (this.__vertexBufferData[102] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)))
                  : 0 == e &&
                    0 != d &&
                    ((this.__vertexBufferData = f = new Float32Array(112)),
                    (h = b.x),
                    (n = this.width - d - h),
                    (b = h / this.width),
                    (d /= this.width),
                    (h /= c.get_scaleX()),
                    (n /= c.get_scaleX()),
                    (p = c.get_width() / c.get_scaleX() - h - n),
                    (c = c.get_height() / c.get_scaleY()),
                    (this.__vertexBufferData[0] = h),
                    (this.__vertexBufferData[1] = c),
                    (this.__vertexBufferData[3] = 1 * b),
                    (this.__vertexBufferData[4] = 1),
                    (this.__vertexBufferData[15] = c),
                    (this.__vertexBufferData[18] = 1),
                    (this.__vertexBufferData[28] = h),
                    (this.__vertexBufferData[31] = 1 * b),
                    (this.__vertexBufferData[56] = h + p),
                    (this.__vertexBufferData[57] = c),
                    (this.__vertexBufferData[59] = 1 * (b + d)),
                    (this.__vertexBufferData[60] = 1),
                    (this.__vertexBufferData[70] = h + p),
                    (this.__vertexBufferData[73] = 1 * (b + d)),
                    (this.__vertexBufferData[84] = this.width),
                    (this.__vertexBufferData[85] = c),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[98] = this.width),
                    (this.__vertexBufferData[101] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)));
            } else this.__vertexBufferGrid = null;
            null == this.__vertexBuffer &&
              ((this.__vertexBufferData = f = new Float32Array(56)),
              (this.__vertexBufferData[0] = this.width),
              (this.__vertexBufferData[1] = this.height),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[15] = this.height),
              (this.__vertexBufferData[18] = 1),
              (this.__vertexBufferData[28] = this.width),
              (this.__vertexBufferData[31] = 1),
              (this.__vertexBuffer = a.createVertexBuffer(3, 14)));
            this.__vertexBuffer.uploadFromTypedArray(
              aj.toArrayBufferView(this.__vertexBufferData)
            );
          }
          return this.__vertexBuffer;
        },
        getTexture: function (a) {
          if (!this.__isValid) return null;
          if (null == this.__texture || this.__textureContext != a.__context)
            (this.__textureContext = a.__context),
              (this.__texture = a.createRectangleTexture(
                this.width,
                this.height,
                1,
                !1
              )),
              (this.__textureVersion = -1);
          Oa.sync(this.image, !1);
          null != this.image &&
            this.image.version > this.__textureVersion &&
            (null != this.__surface && wn.flush(this.__surface),
            (a = this.image),
            pb.__supportsBGRA ||
              0 == a.get_format() ||
              ((a = a.clone()), a.set_format(0)),
            this.__texture.__uploadFromImage(a),
            (this.__textureVersion = this.image.version),
            (this.__textureWidth = a.buffer.width),
            (this.__textureHeight = a.buffer.height));
          this.readable ||
            null == this.image ||
            (this.image = this.__surface = null);
          return this.__texture;
        },
        lock: function () {},
        setPixel: function (a, b, c) {
          this.readable && this.image.setPixel(a, b, c, 1);
        },
        setPixel32: function (a, b, c) {
          this.readable && this.image.setPixel32(a, b, c, 1);
        },
        unlock: function (a) {},
        __drawCanvas: function (a, b) {
          var c = this.image.buffer;
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
          b.__render(a);
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !0);
          c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
          c.__srcImageData = null;
          c.data = null;
          this.image.dirty = !0;
          this.image.version++;
        },
        __drawGL: function (a, b) {
          var c = b.__context3D,
            d = c.__state.renderToTexture,
            e = c.__state.renderToTextureDepthStencil,
            f = c.__state.renderToTextureAntiAlias,
            h = c.__state.renderToTextureSurfaceSelector;
          c.setRenderToTexture(this.getTexture(c), !0);
          b.__render(a);
          null != d
            ? c.setRenderToTexture(d, e, f, h)
            : c.setRenderToBackBuffer();
        },
        __fillRect: function (a, b, c) {
          if (null != a)
            if (
              (this.transparent && 0 == (b & -16777216) && (b = 0),
              c &&
                null != this.__texture &&
                null != this.__texture.__glFramebuffer &&
                "opengl" == na.get_current().stage.__renderer.__type)
            ) {
              c = na.get_current().stage.__renderer.__context3D;
              var d = !this.rect.equals(a),
                e = c.__state.renderToTexture,
                f = c.__state.renderToTextureDepthStencil,
                h = c.__state.renderToTextureAntiAlias,
                m = c.__state.renderToTextureSurfaceSelector;
              c.setRenderToTexture(this.__texture);
              d && c.setScissorRectangle(a);
              c.clear(
                ((b >>> 16) & 255) / 255,
                ((b >>> 8) & 255) / 255,
                (b & 255) / 255,
                this.transparent ? ((b >>> 24) & 255) / 255 : 1,
                0,
                0,
                1
              );
              d && c.setScissorRectangle(null);
              null != e
                ? c.setRenderToTexture(e, f, h, m)
                : c.setRenderToBackBuffer();
            } else
              this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1);
        },
        __fromImage: function (a) {
          null != a &&
            null != a.buffer &&
            ((this.image = a),
            (this.width = a.width),
            (this.height = a.height),
            (this.rect = new ma(0, 0, a.width, a.height)),
            (this.__textureWidth = this.width),
            (this.__textureHeight = this.height),
            (this.__isValid = this.readable = !0));
        },
        __getBounds: function (a, b) {
          var c = ma.__pool.get();
          this.rect.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          ma.__pool.release(c);
        },
        __renderCairo: function (a) {},
        __renderCanvas: function (a) {
          if (this.readable) {
            this.image.type == Yd.DATA && Oa.convertToCanvas(this.image);
            var b = a.context;
            b.globalAlpha = 1;
            a.setTransform(this.__renderTransform, b);
            b.drawImage(
              this.image.get_src(),
              0,
              0,
              this.image.width,
              this.image.height
            );
          }
        },
        __renderDOM: function (a) {},
        __renderGL: function (a) {
          var b = a.__context3D;
          a.__setBlendMode(10);
          var c = a.__defaultDisplayShader;
          a.setShader(c);
          a.applyBitmapData(this, a.__upscaled);
          a.applyMatrix(a.__getMatrix(this.__worldTransform, 1));
          a.applyAlpha(this.__worldAlpha);
          a.applyColorTransform(this.__worldColorTransform);
          a.updateShader();
          var d = this.getVertexBuffer(b);
          null != c.__position &&
            b.setVertexBufferAt(c.__position.index, d, 0, 3);
          null != c.__textureCoord &&
            b.setVertexBufferAt(c.__textureCoord.index, d, 3, 2);
          c = this.getIndexBuffer(b);
          b.drawTriangles(c);
          a.__clearShader();
        },
        __setUVRect: function (a, b, c, d, e) {
          if (
            null != this.getVertexBuffer(a) &&
            (d != this.__uvRect.width ||
              e != this.__uvRect.height ||
              b != this.__uvRect.x ||
              c != this.__uvRect.y)
          ) {
            null == this.__uvRect && (this.__uvRect = new ma());
            this.__uvRect.setTo(b, c, d, e);
            a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
            c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
            b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
            var f = 0 < this.__textureHeight ? e / this.__textureHeight : 0;
            this.__vertexBufferData[0] = d;
            this.__vertexBufferData[1] = e;
            this.__vertexBufferData[3] = a + b;
            this.__vertexBufferData[4] = c + f;
            this.__vertexBufferData[15] = e;
            this.__vertexBufferData[17] = a;
            this.__vertexBufferData[18] = c + f;
            this.__vertexBufferData[28] = d;
            this.__vertexBufferData[31] = a + b;
            this.__vertexBufferData[32] = c;
            this.__vertexBufferData[45] = a;
            this.__vertexBufferData[46] = c;
            this.__vertexBuffer.uploadFromTypedArray(
              aj.toArrayBufferView(this.__vertexBufferData)
            );
          }
        },
        __update: function (a, b) {
          this.__updateTransforms();
        },
        __updateTransforms: function (a) {
          null == a
            ? this.__worldTransform.identity()
            : this.__worldTransform.copyFrom(a);
          this.__renderTransform.copyFrom(this.__worldTransform);
        },
        __class__: J,
      };
      var ye = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != ye.preload) this.__fromImage(ye.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(ye.resourceName), ye.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == ye.preload && (ye.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.addons.transition.GraphicTransTileCircle"] = ye;
      ye.__name__ = "flixel.addons.transition.GraphicTransTileCircle";
      ye.__super__ = J;
      ye.prototype = r(J.prototype, { __class__: ye });
      var Id = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Id.preload) this.__fromImage(Id.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Id.resourceName), Id.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Id.preload && (Id.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.addons.transition.GraphicTransTileDiamond"] = Id;
      Id.__name__ = "flixel.addons.transition.GraphicTransTileDiamond";
      Id.__super__ = J;
      Id.prototype = r(J.prototype, { __class__: Id });
      var ze = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != ze.preload) this.__fromImage(ze.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(ze.resourceName), ze.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == ze.preload && (ze.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.addons.transition.GraphicTransTileSquare"] = ze;
      ze.__name__ = "flixel.addons.transition.GraphicTransTileSquare";
      ze.__super__ = J;
      ze.prototype = r(J.prototype, { __class__: ze });
      var bj = function (a, b, c, d, e, f, h) {
        null == h && (h = 40);
        null == f && (f = 32);
        null == e && (e = 32);
        null == b && (b = 0);
        null == a && (a = 0);
        this._newStatus = -1;
        this.status = 0;
        this._finished = !1;
        this._starting = !0;
        H.call(this, a, b);
        null == d && ((d = Eb.fromClass(Id)), (f = e = 32));
        this._delay = c;
        this.loadGraphic(d, !0, e, f);
        this.graphic.persist = !0;
        this.graphic.set_destroyOnNoUse(!1);
        a = [];
        b = 1;
        for (c = this.numFrames - 1; b < c; ) (d = b++), a.push(d);
        b = a.slice();
        b.reverse();
        this.animation.add("empty", [0], 0, !1);
        this.animation.add("in", a, h, !1);
        this.animation.add("full", [this.numFrames - 1], 0, !1);
        this.animation.add("out", b, h, !1);
        this.setStatus(3);
      };
      g["flixel.addons.transition.FlxTransitionSprite"] = bj;
      bj.__name__ = "flixel.addons.transition.FlxTransitionSprite";
      bj.__super__ = H;
      bj.prototype = r(H.prototype, {
        start: function (a) {
          this._starting = !0;
          this._finished = !1;
          this._count = 0;
          this._newStatus = a;
        },
        setStatus: function (a) {
          switch (a) {
            case -1:
            case 2:
              var b = "empty";
              break;
            case 0:
              b = "in";
              break;
            case 1:
              b = "out";
              break;
            case 3:
              b = "full";
          }
          this.animation.play(b);
          this.animation.finishCallback = q(this, this.onFinishAnim);
          this.status = a;
        },
        onFinishAnim: function (a) {
          if (!this._finished)
            switch (((this._finished = !0), this.status)) {
              case 0:
                this.setStatus(3);
                break;
              case 1:
                this.setStatus(2);
            }
        },
        update: function (a) {
          H.prototype.update.call(this, a);
          if (
            this._starting &&
            ((this._count += a), this._count >= this._delay)
          )
            this.onTime();
        },
        onTime: function () {
          this._starting = !1;
          this._count = 0;
          this.setStatus(this._newStatus);
          this._newStatus = -1;
        },
        __class__: bj,
      });
      var rh = function (a) {
        wc.call(this, 0);
        this._effect = this.createEffect(a);
        this._effect.scrollFactor.set(0, 0);
        this.add(this._effect);
      };
      g["flixel.addons.transition.Transition"] = rh;
      rh.__name__ = "flixel.addons.transition.Transition";
      rh.__super__ = wc;
      rh.prototype = r(wc.prototype, {
        update: function (a) {
          wc.prototype.update.call(this, a);
          this._effect.update(a);
        },
        destroy: function () {
          wc.prototype.destroy.call(this);
          this.set_finishCallback(null);
          this._effect.destroy();
          this._effect = null;
        },
        start: function (a) {
          this._effect.start(a);
        },
        setStatus: function (a) {
          this._effect.setStatus(a);
        },
        createEffect: function (a) {
          switch (a.type) {
            case "fade":
              return new cj(a);
            case "tiles":
              return new dj(a);
            default:
              return null;
          }
        },
        get_finishCallback: function () {
          return null != this._effect ? this._effect.finishCallback : null;
        },
        set_finishCallback: function (a) {
          return null != this._effect
            ? (this._effect.finishCallback = a)
            : null;
        },
        __class__: rh,
        __properties__: r(wc.prototype.__properties__, {
          set_finishCallback: "set_finishCallback",
          get_finishCallback: "get_finishCallback",
        }),
      });
      var yh = function (a, b, c, d, e, f) {
        null == c && (c = 1);
        null == b && (b = -1);
        null == a && (a = "fade");
        this.duration = 1;
        this.type = a;
        this.tileData = e;
        this.duration = c;
        this.color = b;
        this.direction = d;
        null == this.direction && (this.direction = new U(0, 0));
        this.tweenOptions = { onComplete: null };
        this.region = f;
        null == f && (this.region = new ya(0, 0, p.width, p.height));
      };
      g["flixel.addons.transition.TransitionData"] = yh;
      yh.__name__ = "flixel.addons.transition.TransitionData";
      yh.__interfaces__ = [T];
      yh.prototype = {
        destroy: function () {
          this.direction = this.tileData = null;
          this.tweenOptions.onComplete = null;
          this.direction =
            this.region =
            this.tweenOptions =
            this.tweenOptions.ease =
              null;
        },
        __class__: yh,
      };
      var rd = function (a) {
        this._finalDelayTime = 0;
        this.finished = this._started = !1;
        this._data = a;
        Q.call(this);
      };
      g["flixel.addons.transition.TransitionEffect"] = rd;
      rd.__name__ = "flixel.addons.transition.TransitionEffect";
      rd.__super__ = Q;
      rd.prototype = r(Q.prototype, {
        destroy: function () {
          Q.prototype.destroy.call(this);
          this.finishCallback = null;
        },
        start: function (a) {
          this._started = !0;
          this._endStatus = 0 == a ? 3 : 2;
        },
        setStatus: function (a) {},
        delayThenFinish: function () {
          new hc().start(this._finalDelayTime, q(this, this.onFinish));
        },
        onFinish: function (a) {
          this.finished = !0;
          null != this.finishCallback &&
            (this.finishCallback(), (this.finishCallback = null));
        },
        __class__: rd,
      });
      var Zd = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Zd.preload) this.__fromImage(Zd.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Zd.resourceName), Zd.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Zd.preload && (Zd.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.addons.transition._TransitionFade.GraphicDiagonalGradient"] =
        Zd;
      Zd.__name__ =
        "flixel.addons.transition._TransitionFade.GraphicDiagonalGradient";
      Zd.__super__ = J;
      Zd.prototype = r(J.prototype, { __class__: Zd });
      var cj = function (a) {
        this.tweenValStart =
          this.tweenValStart2 =
          this.tweenValEnd =
          this.tweenValEnd2 =
            0;
        this.tweenStr = this.tweenStr2 = "";
        rd.call(this, a);
        this.back = this.makeSprite(a.direction.x, a.direction.y, a.region);
        this.back.scrollFactor.set(0, 0);
        this.add(this.back);
      };
      g["flixel.addons.transition.TransitionFade"] = cj;
      cj.__name__ = "flixel.addons.transition.TransitionFade";
      cj.__super__ = rd;
      cj.prototype = r(rd.prototype, {
        destroy: function () {
          rd.prototype.destroy.call(this);
          this.back = null;
        },
        start: function (a) {
          rd.prototype.start.call(this, a);
          this.setTweenValues(
            a,
            this._data.direction.x,
            this._data.direction.y
          );
          switch (this.tweenStr) {
            case "alpha":
              this.back.set_alpha(this.tweenValStart);
              break;
            case "x":
              this.back.set_x(this.tweenValStart);
              break;
            case "y":
              this.back.set_y(this.tweenValStart);
          }
          switch (this.tweenStr2) {
            case "alpha":
              this.back.set_alpha(this.tweenValStart2);
              break;
            case "x":
              this.back.set_x(this.tweenValStart2);
              break;
            case "y":
              this.back.set_y(this.tweenValStart2);
          }
          a = {};
          a[this.tweenStr] = this.tweenValEnd;
          "" != this.tweenStr2 && (a[this.tweenStr2] = this.tweenValEnd2);
          this._data.tweenOptions.onComplete = q(this, this.finishTween);
          mb.tween(this.back, a, this._data.duration, this._data.tweenOptions);
        },
        setTweenValues: function (a, b, c) {
          0 == b && 0 == c
            ? ((this.tweenStr = "alpha"),
              (this.tweenValStart = 0 == a ? 0 : 1),
              (this.tweenValEnd = 0 == a ? 1 : 0))
            : 0 < Math.abs(b) && 0 == c
            ? ((this.tweenStr = "x"),
              0 < b
                ? ((this.tweenValStart = 0 == a ? -this.back.get_width() : 0),
                  (this.tweenValEnd = 0 == a ? 0 : -this.back.get_width()))
                : ((this.tweenValStart =
                    0 == a ? p.width : -this.back.get_width() / 2),
                  (this.tweenValEnd =
                    0 == a ? -this.back.get_width() / 2 : p.width)))
            : 0 == b && 0 < Math.abs(c)
            ? ((this.tweenStr = "y"),
              0 < c
                ? ((this.tweenValStart = 0 == a ? -this.back.get_height() : 0),
                  (this.tweenValEnd = 0 == a ? 0 : -this.back.get_height()))
                : ((this.tweenValStart =
                    0 == a ? p.height : -this.back.get_height() / 2),
                  (this.tweenValEnd =
                    0 == a ? -this.back.get_height() / 2 : p.height)))
            : 0 < Math.abs(b) &&
              0 < Math.abs(c) &&
              ((this.tweenStr = "x"),
              (this.tweenStr2 = "y"),
              0 < b
                ? ((this.tweenValStart = 0 == a ? -this.back.get_width() : 0),
                  (this.tweenValEnd = 0 == a ? 0 : -this.back.get_width()))
                : ((this.tweenValStart =
                    0 == a
                      ? p.width
                      : 0.6666666666666666 * -this.back.get_width()),
                  (this.tweenValEnd =
                    0 == a
                      ? 0.6666666666666666 * -this.back.get_width()
                      : p.width)),
              0 < c
                ? ((this.tweenValStart2 = 0 == a ? -this.back.get_height() : 0),
                  (this.tweenValEnd2 = 0 == a ? 0 : -this.back.get_height()))
                : ((this.tweenValStart2 =
                    0 == a
                      ? p.height
                      : 0.6666666666666666 * -this.back.get_height()),
                  (this.tweenValEnd2 =
                    0 == a
                      ? 0.6666666666666666 * -this.back.get_height()
                      : p.height)));
        },
        makeSprite: function (a, b, c) {
          var d = new H(c.x, c.y);
          if (0 == a && 0 == b)
            d.makeGraphic(c.width | 0, c.height | 0, this._data.color);
          else if (0 == a && 0 < Math.abs(b)) {
            var e = 0 < b ? c.height : 0;
            b = 0 < b ? 90 : 270;
            d.makeGraphic(1, (2 * c.height) | 0, this._data.color);
            a = d.get_pixels();
            b = sd.createGradientBitmapData(
              1,
              c.height | 0,
              [this._data.color, 0],
              1,
              b
            );
            a.copyPixels(b, b.rect, new Ra(0, e));
            d.set_pixels(a);
            d.scale.set(c.width, 1);
            d.updateHitbox();
          } else
            0 < Math.abs(a) && 0 == b
              ? ((e = 0 < a ? c.width : 0),
                (b = 0 < a ? 0 : 180),
                d.makeGraphic((2 * c.width) | 0, 1, this._data.color),
                (a = d.get_pixels()),
                (b = sd.createGradientBitmapData(
                  c.width | 0,
                  1,
                  [this._data.color, 0],
                  1,
                  b
                )),
                a.copyPixels(b, b.rect, new Ra(e, 0)),
                d.set_pixels(a),
                d.scale.set(1, c.height),
                d.updateHitbox())
              : 0 < Math.abs(a) &&
                0 < Math.abs(b) &&
                (d.loadGraphic(this.getGradient()),
                d.set_flipX(0 > a),
                d.set_flipY(0 > b));
          return d;
        },
        getGradient: function () {
          var a = new Zd(0, 0),
            b = new J(2 * p.width, 2 * p.height, !0),
            c = new Ea();
          c.scale(b.width / a.width, b.height / a.height);
          b.draw(a, c, null, null, null, !0);
          c = new J(3 * p.width, 3 * p.height, !0, this._data.color);
          c.copyChannel(
            b,
            b.rect,
            new Ra(c.width - b.width, c.height - b.height),
            1,
            8
          );
          a.dispose();
          b.dispose();
          return c;
        },
        finishTween: function (a) {
          this.delayThenFinish();
        },
        __class__: cj,
      });
      var dj = function (a) {
        this._isCenter = !1;
        rd.call(this, a);
        this._grpSprites = new Q();
        var b = 0;
        null == a.tileData &&
          (a.tileData = { asset: null, width: 32, height: 32 });
        var c = a.region,
          d = Math.ceil(c.width / a.tileData.width),
          e = Math.ceil(c.height / a.tileData.height),
          f = a.duration / (d > e ? d : e),
          h = f * Math.abs(a.direction.x);
        f *= Math.abs(a.direction.y);
        var m = a.tileData.width,
          n = a.tileData.height,
          p = c.x | 0;
        var g = c.y | 0;
        0 > a.direction.x && ((m *= -1), (p += (c.width + m) | 0));
        0 > a.direction.y && ((n *= -1), (g += (c.height + n) | 0));
        c = p;
        for (var k = 0; k < e; ) {
          for (var l = k++, q = 0, r = d; q < r; ) {
            q++;
            var u = 40;
            null != a.tileData.frameRate && (u = a.tileData.frameRate);
            u = new bj(
              c,
              g,
              b,
              a.tileData.asset,
              a.tileData.width,
              a.tileData.height,
              u
            );
            u.set_color(a.color);
            u.scrollFactor.set(0, 0);
            this._grpSprites.add(u);
            c += m;
            b += h;
          }
          g += n;
          c = p;
          b = (l + 1) * f;
        }
        this.add(this._grpSprites);
        this._isCenter = 0 == a.direction.x && 0 == a.direction.y;
      };
      g["flixel.addons.transition.TransitionTiles"] = dj;
      dj.__name__ = "flixel.addons.transition.TransitionTiles";
      dj.__super__ = rd;
      dj.prototype = r(rd.prototype, {
        destroy: function () {
          rd.prototype.destroy.call(this);
          this._grpSprites = null;
        },
        start: function (a) {
          rd.prototype.start.call(this, a);
          this._grpSprites.group.forEach(function (b) {
            b.start(a);
          }, !1);
        },
        setStatus: function (a) {
          rd.prototype.setStatus.call(this, a);
          this._grpSprites.group.forEach(function (b) {
            b.setStatus(a);
          }, !1);
        },
        update: function (a) {
          rd.prototype.update.call(this, a);
          if (this._started) {
            a = !0;
            for (
              var b = 0, c = this._grpSprites.group.members;
              b < c.length;

            ) {
              var d = c[b];
              ++b;
              if (-1 != d.status && d.status != this._endStatus) {
                a = !1;
                break;
              }
            }
            a && ((this._started = !1), this.delayThenFinish());
          }
        },
        __class__: dj,
      });
      var Gf = function (a, b, c, d, e, f) {
        this.x = new ej(a, c, e);
        this.y = new ej(b, d, f);
      };
      g["flixel.addons.ui.Anchor"] = Gf;
      Gf.__name__ = "flixel.addons.ui.Anchor";
      Gf.__interfaces__ = [T];
      Gf.prototype = {
        destroy: function () {
          this.y = this.x = null;
        },
        anchorThing: function (a, b) {
          switch (this.x.side) {
            case "center":
              var c = b.x + b.get_width() / 2;
              break;
            case "left":
              c = b.x;
              break;
            case "right":
              c = b.x + b.get_width();
              break;
            default:
              c = b.x;
          }
          switch (this.y.side) {
            case "bottom":
              b = b.y + b.get_height();
              break;
            case "center":
              b = b.y + b.get_height() / 2;
              break;
            case "top":
              b = b.y;
              break;
            default:
              b = b.y;
          }
          switch (this.x.flush) {
            case "center":
              c -= a.get_width() / 2;
              break;
            case "right":
              c -= a.get_width();
          }
          switch (this.y.flush) {
            case "bottom":
              b -= a.get_height();
              break;
            case "center":
              b -= a.get_height() / 2;
          }
          a.set_x(c + this.x.offset);
          a.set_y(b + this.y.offset);
        },
        getFlipped: function (a, b, c) {
          var d = a ? -1 * this.x.offset : this.x.offset,
            e = b ? -1 * this.y.offset : this.y.offset,
            f = a ? this.flipAnchorSide(this.x.side) : this.x.side,
            h = b ? this.flipAnchorSide(this.y.side) : this.y.side;
          a = a ? this.flipAnchorSide(this.x.flush) : this.x.flush;
          b = b ? this.flipAnchorSide(this.y.flush) : this.y.flush;
          null == c
            ? (c = new Gf(d, e, f, h, a, b))
            : ((c.x.offset = d),
              (c.y.offset = e),
              (c.x.side = f),
              (c.y.side = h),
              (c.x.flush = a),
              (c.y.flush = b));
          return c;
        },
        clone: function () {
          return new Gf(
            this.x.offset,
            this.y.offset,
            this.x.side,
            this.y.side,
            this.x.flush,
            this.y.flush
          );
        },
        flipAnchorSide: function (a) {
          return "left" == a
            ? "right"
            : "right" == a
            ? "left"
            : "top" == a
            ? "bottom"
            : "bottom" == a
            ? "top"
            : a;
        },
        __class__: Gf,
      };
      var ej = function (a, b, c) {
        this.side = this.flush = "center";
        this.offset = 0;
        this.offset = a;
        this.side = b;
        this.flush = c;
      };
      g["flixel.addons.ui.AnchorPoint"] = ej;
      ej.__name__ = "flixel.addons.ui.AnchorPoint";
      ej.prototype = { __class__: ej };
      var $d = function (a, b, c, d) {
        null == d && (d = 1);
        null == c && (c = 1);
        this.style = a;
        this.color = b;
        this.size = c;
        this.quality = d;
      };
      g["flixel.addons.ui.BorderDef"] = $d;
      $d.__name__ = "flixel.addons.ui.BorderDef";
      $d.fromXML = function (a) {
        var b = x.xml_str(a, "border"),
          c = Vb.NONE,
          d = x.xml_color(a, "border_color", !0, 0),
          e = x.xml_f(a, "border_size", 1),
          f = x.xml_f(a, "border_quality", 0);
        c = new $d(c, d, e, f);
        switch (b) {
          case "":
            b = x.xml_str(a, "shadow", !0, "");
            if ("" != b && "false" != b && "none" != b) {
              c.style = Vb.SHADOW;
              a = !0;
              null == a && (a = !1);
              d = Xb.fromString(b);
              if (null == d)
                if (a) d = 0;
                else
                  throw C.thrown(
                    "U.parseHex() unable to parse hex String " + b
                  );
              c.color = d;
            } else if (
              ((b = x.xml_str(a, "outline", !0, "")),
              "" != b && "false" != b && "none" != b)
            ) {
              c.style = Vb.OUTLINE;
              a = !0;
              null == a && (a = !1);
              d = Xb.fromString(b);
              if (null == d)
                if (a) d = 0;
                else
                  throw C.thrown(
                    "U.parseHex() unable to parse hex String " + b
                  );
              c.color = d;
            } else if (
              ((b = x.xml_str(a, "outline_fast")),
              "" != b && "false" != b && "none" != b)
            ) {
              c.style = Vb.OUTLINE_FAST;
              a = !0;
              null == a && (a = !1);
              d = Xb.fromString(b);
              if (null == d)
                if (a) d = 0;
                else
                  throw C.thrown(
                    "U.parseHex() unable to parse hex String " + b
                  );
              c.color = d;
            }
            break;
          case "false":
          case "none":
            c.style = Vb.NONE;
            break;
          case "outline":
            c.style = Vb.OUTLINE;
            break;
          case "outline_fast":
            c.style = Vb.OUTLINE_FAST;
            break;
          case "shadow":
            c.style = Vb.SHADOW;
        }
        return c;
      };
      $d.prototype = {
        clone: function () {
          return new $d(this.style, this.color, this.size, this.quality);
        },
        apply: function (a) {
          var b = this.color,
            c = this.size,
            d = this.quality;
          null == d && (d = 1);
          null == c && (c = 1);
          null == b && (b = 0);
          a.set_borderStyle(this.style);
          a.set_borderColor(b);
          a.set_borderSize(c);
          a.set_borderQuality(d);
          return a;
        },
        __class__: $d,
      };
      var Dh = function (a, b, c, d) {
        this.font = this.border = this.color = this.align = null;
        this.font = a;
        this.border = d;
        this.color = c;
        this.align = b;
      };
      g["flixel.addons.ui.ButtonLabelStyle"] = Dh;
      Dh.__name__ = "flixel.addons.ui.ButtonLabelStyle";
      Dh.prototype = {
        apply: function (a) {
          null != this.font && this.font.apply(null, a);
          null != this.border && this.border.apply(a);
          null != this.color && a.set_color(this.color);
          null != this.align && a.set_alignment(this.align);
        },
        __class__: Dh,
      };
      var Hf = function () {};
      g["flixel.addons.ui.FlxBaseMultiInput"] = Hf;
      Hf.__name__ = "flixel.addons.ui.FlxBaseMultiInput";
      Hf.__interfaces__ = [T];
      Hf.prototype = {
        destroy: function () {
          this.forbiddens = this.combos = null;
        },
        checkJustPressed: function () {
          return !1;
        },
        checkPressed: function () {
          return !1;
        },
        justPressed: function () {
          return this.checkJustPressed() ? this.passCombosAndForbiddens() : !1;
        },
        pressed: function () {
          return this.checkPressed() ? this.passCombosAndForbiddens() : !1;
        },
        equals: function (a) {
          if (
            null == a ||
            Ya.typeof(a) != Ya.typeof(this) ||
            this.input != a.input ||
            (null == this.combos) != (null == a.combos) ||
            (null == this.forbiddens) != (null == a.forbiddens)
          )
            return !1;
          if (null != this.combos && null != a.combos)
            for (var b = 0, c = this.combos; b < c.length; ) {
              var d = c[b];
              ++b;
              if (-1 == a.combos.indexOf(d)) return !1;
            }
          if (null != this.forbiddens && null != a.forbiddens)
            for (b = 0, c = this.forbiddens; b < c.length; )
              if (((d = c[b]), ++b, -1 == a.forbiddens.indexOf(d))) return !1;
          return !0;
        },
        passCombosAndForbiddens: function (a, b) {
          null == b && (b = !1);
          null == a && (a = !0);
          a = null == this.combos || this.checkCombos(a);
          b = null == this.forbiddens || this.checkForbiddens(b);
          return a ? b : !1;
        },
        checkCombos: function (a) {
          return !1;
        },
        checkForbiddens: function (a) {
          return !1;
        },
        __class__: Hf,
      };
      var If = function (a, b, c, d, e, f, h, m) {
        null == m && (m = !0);
        null == h && (h = -1);
        null == f && (f = -16777216);
        null == e && (e = 8);
        null == c && (c = 150);
        null == b && (b = 0);
        null == a && (a = 0);
        this.backgroundColor = -1;
        this.fieldBorderThickness = 1;
        this.fieldBorderColor = -16777216;
        this.caretIndex = this.forceCase = this.maxLength = this.filterMode = 0;
        this.hasFocus = !1;
        this.caretWidth = 1;
        this.background = !1;
        ab.call(this, a, b, c, d, e, m);
        this.set_backgroundColor(h);
        0 != h && (this.background = !0);
        this.set_color(f);
        this.set_caretColor(f);
        this.caret = new H();
        this.caret.makeGraphic(this.caretWidth, (e + 2) | 0);
        this._caretTimer = new hc();
        this.set_caretIndex(0);
        this.set_hasFocus(!1);
        this.background &&
          ((this.fieldBorderSprite = new H(a, b)),
          (this.backgroundSprite = new H(a, b)));
        this.set_lines(1);
        na.get_current().stage.addEventListener(
          "keyDown",
          q(this, this.onKeyDown)
        );
        null == d && (d = "");
        this.set_text(d);
        this.calcFrame();
      };
      g["flixel.addons.ui.FlxInputText"] = If;
      If.__name__ = "flixel.addons.ui.FlxInputText";
      If.__super__ = ab;
      If.prototype = r(ab.prototype, {
        set_caretColor: function (a) {
          this.caretColor = a;
          this.dirty = !0;
          return this.caretColor;
        },
        destroy: function () {
          na.get_current().stage.removeEventListener(
            "keyDown",
            q(this, this.onKeyDown)
          );
          this.backgroundSprite = Z.destroy(this.backgroundSprite);
          this.fieldBorderSprite = Z.destroy(this.fieldBorderSprite);
          this.callback = null;
          ab.prototype.destroy.call(this);
        },
        draw: function () {
          this.drawSprite(this.fieldBorderSprite);
          this.drawSprite(this.backgroundSprite);
          ab.prototype.draw.call(this);
          (this.caretColor == this.caret.color &&
            this.caret.get_height() == (this._defaultFormat.size | 0) + 2) ||
            this.caret.set_color(this.caretColor);
          this.drawSprite(this.caret);
        },
        drawSprite: function (a) {
          null != a &&
            a.visible &&
            ((a.scrollFactor = this.scrollFactor),
            a.set_cameras(this.get_cameras()),
            a.draw());
        },
        update: function (a) {
          ab.prototype.update.call(this, a);
          2 == p.mouse._leftButton.current &&
            ((a = this.hasFocus),
            p.mouse.overlaps(this)
              ? (this.set_caretIndex(this.getCaretIndex()),
                this.set_hasFocus(!0),
                a || null == this.focusGained || this.focusGained())
              : (this.set_hasFocus(!1),
                a && null != this.focusLost && this.focusLost()));
        },
        onKeyDown: function (a) {
          var b = a.keyCode;
          if (this.hasFocus && 16 != b && 17 != b && 220 != b && 27 != b)
            if (37 == b)
              0 < this.caretIndex &&
                ((a = this),
                a.set_caretIndex(a.caretIndex - 1),
                this.set_text(this.text));
            else if (39 == b)
              this.caretIndex < this.text.length &&
                ((a = this),
                a.set_caretIndex(a.caretIndex + 1),
                this.set_text(this.text));
            else if (35 == b)
              this.set_caretIndex(this.text.length), this.set_text(this.text);
            else if (36 == b) this.set_caretIndex(0), this.set_text(this.text);
            else if (8 == b)
              0 < this.caretIndex &&
                ((a = this),
                a.set_caretIndex(a.caretIndex - 1),
                this.set_text(
                  this.text.substring(0, this.caretIndex) +
                    this.text.substring(this.caretIndex + 1)
                ),
                this.onChange("backspace"));
            else if (46 == b)
              0 < this.text.length &&
                this.caretIndex < this.text.length &&
                (this.set_text(
                  this.text.substring(0, this.caretIndex) +
                    this.text.substring(this.caretIndex + 1)
                ),
                this.onChange("delete"));
            else if (13 == b) this.onChange("enter");
            else
              0 != a.charCode &&
                ((a = this.filter(String.fromCodePoint(a.charCode))),
                0 < a.length &&
                  (0 == this.maxLength ||
                    this.text.length + a.length < this.maxLength) &&
                  (this.set_text(
                    this.insertSubstring(this.text, a, this.caretIndex)
                  ),
                  (a = this),
                  a.set_caretIndex(a.caretIndex + 1),
                  this.onChange("input")));
        },
        onChange: function (a) {
          null != this.callback && this.callback(this.text, a);
        },
        insertSubstring: function (a, b, c) {
          return (a =
            c != a.length ? a.substring(0, c) + b + a.substring(c) : a + b);
        },
        getCaretIndex: function () {
          var a = p.mouse.x - this.x,
            b = p.mouse.y - this.y;
          null == b && (b = 0);
          null == a && (a = 0);
          a = U._pool.get().set(a, b);
          a._inPool = !1;
          return this.getCharIndexAtPoint(a.x, a.y);
        },
        getCharBoundaries: function (a) {
          if (
            null != this._charBoundaries &&
            0 <= a &&
            0 < this._charBoundaries.length
          ) {
            var b = new ma();
            if (a >= this._charBoundaries.length) {
              a = this._charBoundaries[this._charBoundaries.length - 1];
              var c = b;
            } else (a = this._charBoundaries[a]), (c = b);
            null == c && (c = new ma());
            c.x = a.x;
            c.y = a.y;
            c.width = a.width;
            c.height = a.height;
            return b;
          }
          return null;
        },
        set_text: function (a) {
          var b = ab.prototype.set_text.call(this, a);
          if (null == this.textField) return b;
          var c = a.length;
          this.prepareCharBoundaries(c);
          this.textField.set_text("");
          for (var d = 0, e, f = 0, h = 0; h < c; ) {
            var m = h++;
            this.textField.appendText(ba.substr(a, m, 1));
            e = this.textField.get_textWidth();
            0 == m && (d = this.textField.get_textHeight());
            this._charBoundaries[m].x = 2 + f;
            this._charBoundaries[m].y = 2;
            this._charBoundaries[m].width = e - f;
            this._charBoundaries[m].height = d;
            f = e;
          }
          this.textField.set_text(a);
          this.onSetTextCheck();
          return b;
        },
        getCharIndexAtPoint: function (a, b) {
          b = 0;
          if (
            null != this._charBoundaries &&
            0 < this._charBoundaries.length &&
            this.textField.get_textWidth() <= this.textField.get_width()
          )
            switch (this.getAlignStr()) {
              case "center":
                a =
                  a -
                  this.textField.get_width() / 2 +
                  this.textField.get_textWidth() / 2;
                break;
              case "right":
                a =
                  a -
                  this.textField.get_width() +
                  this.textField.get_textWidth();
            }
          if (null != this._charBoundaries)
            for (var c = 0, d = this._charBoundaries; c < d.length; ) {
              var e = d[c];
              ++c;
              if (a >= e.x && a <= e.x + e.width) return b;
              ++b;
            }
          return null != this._charBoundaries &&
            0 < this._charBoundaries.length &&
            a > this.textField.get_textWidth()
            ? this._charBoundaries.length
            : 0;
        },
        prepareCharBoundaries: function (a) {
          null == this._charBoundaries && (this._charBoundaries = []);
          if (this._charBoundaries.length > a)
            for (var b = 0, c = this._charBoundaries.length - a; b < c; )
              b++, this._charBoundaries.pop();
          b = 0;
          for (c = a; b < c; )
            if (((a = b++), this._charBoundaries.length - 1 < a)) {
              a = this._charBoundaries;
              var d = 0,
                e = 0,
                f = 0,
                h = 0;
              null == h && (h = 0);
              null == f && (f = 0);
              null == e && (e = 0);
              null == d && (d = 0);
              var m = ya._pool.get();
              null == h && (h = 0);
              null == f && (f = 0);
              null == e && (e = 0);
              null == d && (d = 0);
              m.x = d;
              m.y = e;
              m.width = f;
              m.height = h;
              m._inPool = !1;
              a.push(m);
            }
        },
        onSetTextCheck: function () {},
        calcFrame: function (a) {
          null == a && (a = !1);
          ab.prototype.calcFrame.call(this, a);
          null != this.fieldBorderSprite &&
            (0 < this.fieldBorderThickness
              ? (this.fieldBorderSprite.makeGraphic(
                  (this.get_width() + 2 * this.fieldBorderThickness) | 0,
                  (this.get_height() + 2 * this.fieldBorderThickness) | 0,
                  this.fieldBorderColor
                ),
                this.fieldBorderSprite.set_x(
                  this.x - this.fieldBorderThickness
                ),
                this.fieldBorderSprite.set_y(
                  this.y - this.fieldBorderThickness
                ))
              : 0 == this.fieldBorderThickness &&
                this.fieldBorderSprite.set_visible(!1));
          null != this.backgroundSprite &&
            (this.background
              ? (this.backgroundSprite.makeGraphic(
                  this.get_width() | 0,
                  this.get_height() | 0,
                  this.backgroundColor
                ),
                this.backgroundSprite.set_x(this.x),
                this.backgroundSprite.set_y(this.y))
              : this.backgroundSprite.set_visible(!1));
          if (null != this.caret) {
            a = this.caretWidth;
            var b = ((this._defaultFormat.size | 0) + 2) | 0,
              c = -16777216 | (this.borderColor & 16777215),
              d = -16777216 | (this.caretColor & 16777215),
              e =
                "caret" +
                a +
                "x" +
                b +
                "c:" +
                d +
                "b:" +
                I.string(this.borderStyle) +
                "," +
                this.borderSize +
                "," +
                c;
            switch (this.borderStyle._hx_index) {
              case 0:
                this.caret.makeGraphic(a, b, d, !1, e);
                this.caret.offset.set_x(this.caret.offset.set_y(0));
                break;
              case 1:
                a += this.borderSize | 0;
                b += this.borderSize | 0;
                this.caret.makeGraphic(a, b, 0, !1, e);
                e = new ma(
                  this.borderSize,
                  this.borderSize,
                  this.caretWidth,
                  ((this._defaultFormat.size | 0) + 2) | 0
                );
                this.caret.get_pixels().fillRect(e, c);
                e.x = e.y = 0;
                this.caret.get_pixels().fillRect(e, d);
                this.caret.offset.set_x(this.caret.offset.set_y(0));
                break;
              case 2:
              case 3:
                (a += (2 * this.borderSize) | 0),
                  (b += (2 * this.borderSize) | 0),
                  this.caret.makeGraphic(a, b, c, !1, e),
                  (e = new ma(
                    this.borderSize,
                    this.borderSize,
                    this.caretWidth,
                    ((this._defaultFormat.size | 0) + 2) | 0
                  )),
                  this.caret.get_pixels().fillRect(e, d),
                  this.caret.offset.set_x(
                    this.caret.offset.set_y(this.borderSize)
                  );
            }
            this.caret.set_width(a);
            this.caret.set_height(b);
            this.set_caretIndex(this.caretIndex);
          }
        },
        toggleCaret: function (a) {
          this.caret.set_visible(!this.caret.visible);
        },
        filter: function (a) {
          1 == this.forceCase
            ? (a = a.toUpperCase())
            : 2 == this.forceCase && (a = a.toLowerCase());
          if (0 != this.filterMode) {
            switch (this.filterMode) {
              case 1:
                var b = new Ua("[^a-zA-Z]*", "g");
                break;
              case 2:
                b = new Ua("[^0-9]*", "g");
                break;
              case 3:
                b = new Ua("[^a-zA-Z0-9]*", "g");
                break;
              case 4:
                b = this.customFilterPattern;
                break;
              default:
                throw C.thrown(
                  new Cb(
                    "FlxInputText: Unknown filterMode (" + this.filterMode + ")"
                  )
                );
            }
            a = a.replace(b.r, "");
          }
          return a;
        },
        set_params: function (a) {
          this.params = a;
          null == this.params && (this.params = []);
          this.params.push({ name: "value", value: this.text });
          return a;
        },
        set_x: function (a) {
          null != this.fieldBorderSprite &&
            0 < this.fieldBorderThickness &&
            this.fieldBorderSprite.set_x(a - this.fieldBorderThickness);
          null != this.backgroundSprite &&
            this.background &&
            this.backgroundSprite.set_x(a);
          return ab.prototype.set_x.call(this, a);
        },
        set_y: function (a) {
          null != this.fieldBorderSprite &&
            0 < this.fieldBorderThickness &&
            this.fieldBorderSprite.set_y(a - this.fieldBorderThickness);
          null != this.backgroundSprite &&
            this.background &&
            this.backgroundSprite.set_y(a);
          return ab.prototype.set_y.call(this, a);
        },
        set_hasFocus: function (a) {
          a
            ? this.hasFocus != a &&
              ((this._caretTimer = new hc().start(
                0.5,
                q(this, this.toggleCaret),
                0
              )),
              this.caret.set_visible(!0),
              this.set_caretIndex(this.text.length))
            : (this.caret.set_visible(!1),
              null != this._caretTimer && this._caretTimer.cancel());
          a != this.hasFocus && this.calcFrame();
          return (this.hasFocus = a);
        },
        getAlignStr: function () {
          var a = "left";
          null != this._defaultFormat &&
            null != this._defaultFormat.align &&
            (a = ul.fromOpenFL(this._defaultFormat.align));
          return a;
        },
        set_caretIndex: function (a) {
          var b = 0;
          switch (this.getAlignStr()) {
            case "center":
              1 >= b && (b = 0);
              break;
            case "right":
              b =
                this.textField.get_width() -
                2 -
                this.textField.get_textWidth() -
                2;
              0 > b && (b = 0);
              break;
            default:
              b = 0;
          }
          this.caretIndex = a;
          this.caretIndex > this.text.length + 1 && (this.caretIndex = -1);
          -1 != this.caretIndex &&
            (this.caretIndex < this.text.length
              ? ((a = this.getCharBoundaries(this.caretIndex)),
                null != a &&
                  (this.caret.set_x(b + a.get_left() + this.x),
                  this.caret.set_y(a.get_top() + this.y)))
              : ((a = this.getCharBoundaries(this.caretIndex - 1)),
                null != a
                  ? (this.caret.set_x(b + a.get_right() + this.x),
                    this.caret.set_y(a.get_top() + this.y))
                  : 0 == this.text.length &&
                    (this.caret.set_x(this.x + b + 2),
                    this.caret.set_y(this.y + 2))));
          1 == this.lines &&
            this.caret.x + this.caret.get_width() > this.x + this.get_width() &&
            this.caret.set_x(this.x + this.get_width() - 2);
          return this.caretIndex;
        },
        set_forceCase: function (a) {
          this.forceCase = a;
          this.set_text(this.filter(this.text));
          return this.forceCase;
        },
        set_size: function (a) {
          ab.prototype.set_size.call(this, a);
          this.caret.makeGraphic(1, ((this._defaultFormat.size | 0) + 2) | 0);
          return a;
        },
        set_lines: function (a) {
          if (0 == a) return 0;
          1 < a
            ? (this.textField.set_wordWrap(!0),
              this.textField.set_multiline(!0))
            : (this.textField.set_wordWrap(!1),
              this.textField.set_multiline(!1));
          this.lines = a;
          this.calcFrame();
          return this.lines;
        },
        set_passwordMode: function (a) {
          this.textField.set_displayAsPassword(a);
          this.calcFrame();
          return a;
        },
        set_filterMode: function (a) {
          this.filterMode = a;
          this.set_text(this.filter(this.text));
          return this.filterMode;
        },
        set_backgroundColor: function (a) {
          this.backgroundColor = a;
          this.calcFrame();
          return this.backgroundColor;
        },
        __class__: If,
        __properties__: r(ab.prototype.__properties__, {
          set_passwordMode: "set_passwordMode",
          set_backgroundColor: "set_backgroundColor",
          set_filterMode: "set_filterMode",
          set_lines: "set_lines",
          set_forceCase: "set_forceCase",
          set_caretIndex: "set_caretIndex",
          set_hasFocus: "set_hasFocus",
          set_params: "set_params",
          set_caretColor: "set_caretColor",
        }),
      });
      var Pc = function (a, b, c, d) {
        this.input = b;
        this.gamepad = a;
        this.combos = c;
        this.forbiddens = d;
      };
      g["flixel.addons.ui.FlxMultiGamepad"] = Pc;
      Pc.__name__ = "flixel.addons.ui.FlxMultiGamepad";
      Pc.__super__ = Hf;
      Pc.prototype = r(Hf.prototype, {
        destroy: function () {
          Hf.prototype.destroy.call(this);
          this.gamepad = null;
        },
        checkJustPressed: function () {
          if (null == this.gamepad) return !1;
          var a = this.gamepad,
            b = this.input;
          switch (b) {
            case -2:
              return a.anyButton(2);
            case -1:
              return !a.anyButton(2);
            default:
              return (
                (b = a.mapping.getRawID(b)),
                (a = a.buttons[b]),
                null != a ? a.hasState(2) : !1
              );
          }
        },
        checkPressed: function () {
          if (null == this.gamepad) return !1;
          var a = this.gamepad,
            b = this.input;
          switch (b) {
            case -2:
              return a.anyButton(1);
            case -1:
              return !a.anyButton(1);
            default:
              return (
                (b = a.mapping.getRawID(b)),
                (a = a.buttons[b]),
                null != a ? a.hasState(1) : !1
              );
          }
        },
        checkCombos: function (a) {
          return null == this.gamepad
            ? !1
            : this.gamepad.checkButtonArrayState(this.combos, 1) == a;
        },
        checkForbiddens: function (a) {
          return null == this.gamepad
            ? !1
            : this.gamepad.checkButtonArrayState(this.forbiddens, 1) == a;
        },
        __class__: Pc,
      });
      var Ae = function (a, b, c, d) {
        this.sInput = b;
        Pc.call(this, a, b.id, c, d);
      };
      g["flixel.addons.ui.FlxMultiGamepadAnalogStick"] = Ae;
      Ae.__name__ = "flixel.addons.ui.FlxMultiGamepadAnalogStick";
      Ae.__super__ = Pc;
      Ae.prototype = r(Pc.prototype, {
        destroy: function () {
          Pc.prototype.destroy.call(this);
          this.sInput = null;
        },
        checkJustPressed: function () {
          if (null == this.gamepad) return !1;
          var a = this.gamepad.get_deadZone();
          switch (this.sInput.id) {
            case 19:
              if (this.sInput.axis == df.X) {
                var b = this.gamepad.analog.justMoved,
                  c = b.gamepad.mapping.getAnalogStick(19);
                null == c
                  ? (b = !1)
                  : ((c = b.gamepad.buttons[c.x]),
                    (b = null != c && c.hasState(b.status)));
                if (b) {
                  if (this.sInput.positive)
                    return (
                      (b = this.gamepad.analog.value.gamepad),
                      b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) > a
                    );
                  b = this.gamepad.analog.value.gamepad;
                  return (
                    b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) < -a
                  );
                }
              } else if (
                ((b = this.gamepad.analog.justMoved),
                (c = b.gamepad.mapping.getAnalogStick(19)),
                null == c
                  ? (b = !1)
                  : ((c = b.gamepad.buttons[c.y]),
                    (b = null != c && c.hasState(b.status))),
                b)
              ) {
                if (this.sInput.positive)
                  return (
                    (b = this.gamepad.analog.value.gamepad),
                    b.getYAxisRaw(b.mapping.getAnalogStick(19)) > a
                  );
                b = this.gamepad.analog.value.gamepad;
                return b.getYAxisRaw(b.mapping.getAnalogStick(19)) < -a;
              }
              return !1;
            case 20:
              if (this.sInput.axis == df.X) {
                if (
                  ((b = this.gamepad.analog.justMoved),
                  (c = b.gamepad.mapping.getAnalogStick(20)),
                  null == c
                    ? (b = !1)
                    : ((c = b.gamepad.buttons[c.x]),
                      (b = null != c && c.hasState(b.status))),
                  b)
                ) {
                  if (this.sInput.positive)
                    return (
                      (b = this.gamepad.analog.value.gamepad),
                      b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) > a
                    );
                  b = this.gamepad.analog.value.gamepad;
                  return (
                    b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) < -a
                  );
                }
              } else if (
                ((b = this.gamepad.analog.justMoved),
                (c = b.gamepad.mapping.getAnalogStick(20)),
                null == c
                  ? (b = !1)
                  : ((c = b.gamepad.buttons[c.y]),
                    (b = null != c && c.hasState(b.status))),
                b)
              ) {
                if (this.sInput.positive)
                  return (
                    (b = this.gamepad.analog.value.gamepad),
                    b.getYAxisRaw(b.mapping.getAnalogStick(20)) > a
                  );
                b = this.gamepad.analog.value.gamepad;
                return b.getYAxisRaw(b.mapping.getAnalogStick(20)) < -a;
              }
              return !1;
            default:
              return !1;
          }
        },
        checkPressed: function () {
          if (null == this.gamepad) return !1;
          var a = this.gamepad.get_deadZone();
          switch (this.sInput.id) {
            case 19:
              if (this.sInput.axis == df.X) {
                if (this.sInput.positive) {
                  var b = this.gamepad.analog.value.gamepad;
                  return (
                    b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) > a
                  );
                }
                b = this.gamepad.analog.value.gamepad;
                return b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) < -a;
              }
              if (this.sInput.positive)
                return (
                  (b = this.gamepad.analog.value.gamepad),
                  b.getYAxisRaw(b.mapping.getAnalogStick(19)) > a
                );
              b = this.gamepad.analog.value.gamepad;
              return b.getYAxisRaw(b.mapping.getAnalogStick(19)) < -a;
            case 20:
              if (this.sInput.axis == df.X) {
                if (this.sInput.positive)
                  return (
                    (b = this.gamepad.analog.value.gamepad),
                    b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) > a
                  );
                b = this.gamepad.analog.value.gamepad;
                return b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) < -a;
              }
              if (this.sInput.positive)
                return (
                  (b = this.gamepad.analog.value.gamepad),
                  b.getYAxisRaw(b.mapping.getAnalogStick(20)) > a
                );
              b = this.gamepad.analog.value.gamepad;
              return b.getYAxisRaw(b.mapping.getAnalogStick(20)) < -a;
            default:
              return !1;
          }
        },
        checkCombos: function (a) {
          return null == this.gamepad
            ? !1
            : this.gamepad.checkButtonArrayState(this.combos, 1) == a;
        },
        checkForbiddens: function (a) {
          return null == this.gamepad
            ? !1
            : this.gamepad.checkButtonArrayState(this.forbiddens, 1) == a;
        },
        __class__: Ae,
      });
      var df = (z["flixel.addons.ui.XY"] = {
          __ename__: "flixel.addons.ui.XY",
          __constructs__: ["X", "Y"],
          X: { _hx_index: 0, __enum__: "flixel.addons.ui.XY", toString: l },
          Y: { _hx_index: 1, __enum__: "flixel.addons.ui.XY", toString: l },
        }),
        oc = function (a, b, c) {
          this.input = a;
          this.combos = b;
          this.forbiddens = c;
        };
      g["flixel.addons.ui.FlxMultiKey"] = oc;
      oc.__name__ = "flixel.addons.ui.FlxMultiKey";
      oc.__super__ = Hf;
      oc.prototype = r(Hf.prototype, {
        checkJustPressed: function () {
          return p.keys.checkStatus(this.input, 2);
        },
        checkPressed: function () {
          return p.keys.checkStatus(this.input, 1);
        },
        checkCombos: function (a) {
          return p.keys.checkKeyArrayState(this.combos, 1) == a;
        },
        checkForbiddens: function (a) {
          return p.keys.checkKeyArrayState(this.forbiddens, 1) == a;
        },
        __class__: oc,
      });
      var Qc = function () {};
      g["flixel.addons.ui.interfaces.IFlxUIWidget"] = Qc;
      Qc.__name__ = "flixel.addons.ui.interfaces.IFlxUIWidget";
      Qc.__isInterface__ = !0;
      Qc.__interfaces__ = [Bh];
      Qc.prototype = {
        __class__: Qc,
        __properties__: {
          set_height: "set_height",
          get_height: "get_height",
          set_width: "set_width",
          get_width: "get_width",
        },
      };
      var Ha = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.broadcastToFlxUI = this.autoBounds = !0;
        Q.call(this, a, b);
      };
      g["flixel.addons.ui.FlxUIGroup"] = Ha;
      Ha.__name__ = "flixel.addons.ui.FlxUIGroup";
      Ha.__interfaces__ = [Qc];
      Ha.__super__ = Q;
      Ha.prototype = r(Q.prototype, {
        destroy: function () {
          Q.prototype.destroy.call(this);
        },
        add: function (a) {
          a = Q.prototype.add.call(this, a);
          this.autoBounds && this.calcBounds();
          return a;
        },
        remove: function (a, b) {
          null == b && (b = !1);
          a = Q.prototype.remove.call(this, a, b);
          this.autoBounds && this.calcBounds();
          return a;
        },
        setScrollFactor: function (a, b) {
          for (var c = 0, d = this.group.members; c < d.length; ) {
            var e = d[c];
            ++c;
            null != e && e.scrollFactor.set(a, b);
          }
        },
        hasThis: function (a) {
          for (var b = 0, c = this.group.members; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d == a) return !0;
          }
          return !1;
        },
        calcBounds: function (a) {
          if (null != this.group.members && 0 < this.group.members.length) {
            for (
              var b = Infinity,
                c = -Infinity,
                d = Infinity,
                e = -Infinity,
                f = 0,
                h = this.group.members;
              f < h.length;

            ) {
              var m = h[f];
              ++f;
              null != m &&
                (pa.__implements(m, Qc)
                  ? (m.x < b && (b = m.x),
                    m.x + m.get_width() > c && (c = m.x + m.get_width()),
                    m.y < d && (d = m.y),
                    m.y + m.get_height() > e && (e = m.y + m.get_height()))
                  : m instanceof H &&
                    (m.x < b && (b = m.x),
                    m.x > c && (c = m.x),
                    m.y < d && (d = m.y),
                    m.y > e && (e = m.y)));
            }
            this.set_width(c - b);
            this.set_height(e - d);
            null != a &&
              ((a.x = b),
              (a.y = d),
              (a.width = this.get_width()),
              (a.height = this.get_height()));
          } else this.set_width(this.set_height(0));
        },
        __class__: Ha,
      });
      var Ia = function (a, b, c, d, e, f) {
        this._scaledAssets = [];
        this._assetsToCleanUp = [];
        this._safe_input_delay_elapsed = 0;
        this._curr_mode = "";
        this._pointX = this._pointY = 1;
        this._postLoaded = !1;
        this.getTextFallback = this.cursorLists = null;
        this.failed_by = 0;
        this.failed = !1;
        this.safe_input_delay_time = 0.01;
        this.do_safe_input_delay = !0;
        Ha.call(this);
        this._ptr_tongue = d;
        this._ptr = b;
        null != c && this.setSuperIndex(c);
        if (null != f)
          for (
            this._variable_index = new ea(), b = ea.keysIterator(f.h);
            b.hasNext();

          )
            (c = b.next()), (this._variable_index.h[c] = f.h[c]);
        null != a && this.load(a);
      };
      g["flixel.addons.ui.FlxUI"] = Ia;
      Ia.__name__ = "flixel.addons.ui.FlxUI";
      Ia.__interfaces__ = [eg];
      Ia.event = function (a, b, c, d) {
        var e = Ia.getLeafUIState();
        null != e && e.getEvent(a, b, c, d);
      };
      Ia.fontSize = function (a, b) {
        var c = Ia.getLeafUIState()._tongue;
        c = null != c ? c : null;
        null != c && (b = c.getFontSize(a, b));
        return b;
      };
      Ia.font = function (a, b, c) {
        null == c && (c = ".ttf");
        null == b && (b = "");
        var d = Ia.getLeafUIState()._tongue;
        d = null != d ? d : null;
        null != d && (a = d.getFont(a));
        return x.font(a, b, c);
      };
      Ia.forceFocus = function (a, b) {
        var c = Ia.getLeafUIState();
        null != c && c.forceFocus(a, b);
      };
      Ia.getLeafUIState = function () {
        var a = p.game._state;
        if (null != a) for (; null != a.subState; ) a = a.subState;
        return pa.__implements(a, fg) ? a : null;
      };
      Ia.consolidateData = function (a, b, c) {
        null == c && (c = !1);
        if (null == a && null != b) return b;
        if (null == b) return a;
        b = D.parse(pf.print(b)).firstElement();
        for (var d = a.attributes(); d.hasNext(); ) {
          var e = d.next(),
            f = Pb.resolve(a, e);
          b.set(e, f);
        }
        if (a.nodeType == D.Document) f = "Document";
        else {
          if (a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          f = a.nodeName;
        }
        if (b.nodeType != D.Element)
          throw C.thrown(
            "Bad node type, expected Element but found " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        b.nodeName = f;
        Ib.resolve(a, "name") || Ib.resolve(a, "id")
          ? b.set("name", x.xml_name(a))
          : b.set("name", "");
        for (f = a.elements(); f.hasNext(); ) {
          var h = f.next();
          if (h.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == h.nodeType ? "null" : ha.toString(h.nodeType))
            );
          d = h.nodeName;
          var m = !c;
          if (c) {
            e = b.elementsNamed(d);
            var n = e.next();
            if (1 == Ab.resolve(a, d).length && null != n && 0 == e.hasNext())
              for (d = h.attributes(); d.hasNext(); )
                (e = d.next()), n.set(e, h.get(e));
            else m = !0;
          }
          m && b.insertChild(D.parse(pf.print(h)).firstElement(), 0);
        }
        if (b.nodeType != D.Document && b.nodeType != D.Element)
          throw C.thrown(
            "Invalid nodeType " +
              (null == b.nodeType ? "null" : ha.toString(b.nodeType))
          );
        return b;
      };
      Ia.sortParams = function (a, b) {
        return a.sort < b.sort ? -1 : a.sort > b.sort ? 1 : 0;
      };
      Ia.__super__ = Ha;
      Ia.prototype = r(Ha.prototype, {
        set_focus: function (a) {
          if (null != this.focus) this.onFocusLost(this.focus);
          this.focus = a;
          if (null != this.focus) this.onFocus(this.focus);
          return a;
        },
        getEvent: function (a, b, c, d) {
          if (
            null != this._ptr &&
            (this._ptr.getEvent(a, b, c, d), "post_load" == a)
          )
            for (a = ea.keysIterator(this._asset_index.h); a.hasNext(); )
              (d = a.next()),
                (d = this._asset_index.h[d]),
                d instanceof Ia && d.getEvent("post_load", b, c);
        },
        getRequest: function (a, b, c, d) {
          return null != this._ptr ? this._ptr.getRequest(a, b, c, d) : null;
        },
        onFocus: function (a) {
          if (a instanceof Jf)
            for (var b = 0, c = this.group.members; b < c.length; ) {
              var d = c[b];
              ++b;
              this.setWidgetSuppression(d, a);
            }
        },
        setWidgetSuppression: function (a, b, c) {
          null == c && (c = !0);
          if (pa.__implements(a, Be)) {
            var d = !1;
            a instanceof Jf && a == b && (d = !0);
            d || a.set_skipButtonUpdate(c);
          } else if (a instanceof Ha)
            for (d = 0, a = a.group.members; d < a.length; ) {
              var e = a[d];
              ++d;
              this.setWidgetSuppression(e, b, c);
            }
        },
        onFocusLost: function (a) {
          if (a instanceof Jf) {
            a = 0;
            for (var b = this.group.members; a < b.length; ) {
              var c = b[a];
              ++a;
              this.setWidgetSuppression(c, null, !1);
            }
          }
        },
        setSuperIndex: function (a) {
          this._superIndexUI = a;
        },
        update: function (a) {
          if (this.do_safe_input_delay)
            if (
              ((this._safe_input_delay_elapsed += p.elapsed),
              this._safe_input_delay_elapsed > this.safe_input_delay_time)
            )
              this.do_safe_input_delay = !1;
            else return;
          Ha.prototype.update.call(this, a);
        },
        addAsset: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = "");
          if (Object.prototype.hasOwnProperty.call(this._asset_index.h, b))
            return !1;
          c = this.getGroup(c, d);
          null != c ? c.add(a) : this.add(a);
          this._asset_index.h[b] = a;
          return !0;
        },
        destroy: function () {
          if (null != this._group_index) {
            for (var a = ea.keysIterator(this._group_index.h); a.hasNext(); ) {
              var b = a.next(),
                c = this._group_index;
              Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            }
            this._group_index = null;
          }
          if (null != this._asset_index) {
            for (a = ea.keysIterator(this._asset_index.h); a.hasNext(); )
              (b = a.next()),
                (c = this._asset_index),
                Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            this._asset_index = null;
          }
          if (null != this._tag_index) {
            for (a = ea.keysIterator(this._tag_index.h); a.hasNext(); )
              (b = a.next()),
                Mc.clearArray(this._tag_index.h[b]),
                (c = this._tag_index),
                Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            this._tag_index = null;
          }
          if (null != this._definition_index) {
            for (a = ea.keysIterator(this._definition_index.h); a.hasNext(); )
              (b = a.next()),
                (c = this._definition_index),
                Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            this._definition_index = null;
          }
          if (null != this._variable_index) {
            for (a = ea.keysIterator(this._variable_index.h); a.hasNext(); )
              (b = a.next()),
                (c = this._variable_index),
                Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            this._variable_index = null;
          }
          if (null != this._mode_index) {
            for (a = ea.keysIterator(this._mode_index.h); a.hasNext(); )
              (b = a.next()),
                (c = this._mode_index),
                Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            this._mode_index = null;
          }
          this._ptr_tongue = this._superIndexUI = this._ptr = null;
          if (null != this.cursorLists) {
            a = 0;
            for (b = this.cursorLists; a < b.length; )
              (c = b[a]), ++a, Mc.clearArray(c);
            Mc.clearArray(this.cursorLists);
          }
          this.cursorLists = null;
          Mc.clearArray(this._failure_checks);
          this._failure_checks = null;
          Mc.clearArray(this._assetsToCleanUp);
          this._assetsToCleanUp = null;
          Mc.clearArray(this._scaledAssets);
          this._scaledAssets = null;
          Ha.prototype.destroy.call(this);
        },
        load: function (a) {
          this._group_index = new ea();
          this._asset_index = new ea();
          this._tag_index = new ea();
          this._definition_index = new ea();
          null == this._variable_index && (this._variable_index = new ea());
          this._mode_index = new ea();
          if (null != a) {
            if (null == this._superIndexUI) {
              var b = new jg(0, 0, p.width, p.height);
              b.name = "screen";
              this.addAsset(b, "screen");
              if (
                Ma.resolve(a, "screen_override") &&
                this._loadTest(Xa.resolve(a, "screen_override"))
              ) {
                var c = Xa.resolve(a, "screen_override");
                this._loadPosition(c, b);
                b.set_width(this._loadWidth(c, p.width));
                b.set_height(this._loadHeight(c, p.height));
              }
            }
            this._data = a;
            if (Ma.resolve(a, "inject"))
              for (; Ma.resolve(a, "inject"); ) {
                var d = Xa.resolve(a, "inject");
                b = x.xml_name(d);
                var e = x.xml(b, "xml", !1);
                if (null != e) {
                  var f = d.parent,
                    h = 0;
                  b = 0;
                  for (c = f.children; b < c.length; ) {
                    var m = c[b];
                    ++b;
                    if (m == d) break;
                    ++h;
                  }
                  if (f.removeChild(d))
                    for (b = 0, c = e.elements(); c.hasNext(); )
                      (d = c.next()), f.insertChild(d, h + b), ++b;
                }
              }
            if (Ma.resolve(a, "include"))
              for (b = 0, c = Ab.resolve(a, "include"); b < c.length; )
                if (
                  ((f = c[b]),
                  ++b,
                  (f = x.xml_name(f)),
                  (f = x.xml(f)),
                  null != f)
                ) {
                  e = 0;
                  for (m = Ab.resolve(f, "definition"); e < m.length; )
                    (h = m[e]),
                      ++e,
                      (d = "include:" + x.xml_name(h)),
                      this.unparentXML(h),
                      (this._definition_index.h[d] = h);
                  Ma.resolve(f, "point_size") && this._loadPointSize(f);
                  if (Ma.resolve(f, "default"))
                    for (h = 0, f = Ab.resolve(f, "default"); h < f.length; )
                      (d = f[h]),
                        ++h,
                        this._loadTest(d) &&
                          ((e = x.xml_name(d)),
                          this.unparentXML(d),
                          (this._definition_index.h["default:" + e] = d));
                }
            Ma.resolve(a, "point_size") && this._loadPointSize(a);
            if (Ma.resolve(a, "definition"))
              for (b = 0, c = Ab.resolve(a, "definition"); b < c.length; )
                (h = c[b]),
                  ++b,
                  this._loadTest(h) &&
                    ((d = x.xml_name(h)),
                    (f = ""),
                    -1 != d.indexOf("default:") && (f = "'default:'"),
                    -1 != d.indexOf("include:") && (f = "'include:'"),
                    "" == f &&
                      (this.unparentXML(h), (this._definition_index.h[d] = h)));
            if (Ma.resolve(a, "default"))
              for (b = 0, c = Ab.resolve(a, "default"); b < c.length; )
                (d = c[b]),
                  ++b,
                  this._loadTest(d) &&
                    ((e = x.xml_name(d)),
                    this.unparentXML(d),
                    (this._definition_index.h["default:" + e] = d));
            if (Ma.resolve(a, "variable"))
              for (b = 0, c = Ab.resolve(a, "variable"); b < c.length; )
                (h = c[b]),
                  ++b,
                  this._loadTest(h) &&
                    ((f = x.xml_name(h)),
                    (h = x.xml_str(h, "value")),
                    "" != f && (this._variable_index.h[f] = h));
            if (Ma.resolve(a, "mode"))
              for (b = 0, c = Ab.resolve(a, "mode"); b < c.length; )
                (h = c[b]),
                  ++b,
                  this._loadTest(h) &&
                    ((f = this.applyNodeConditionals(h)),
                    (h = x.xml_name(h)),
                    this.unparentXML(f),
                    (this._mode_index.h[h] = f));
            if (Ma.resolve(a, "group"))
              for (b = 0, c = Ab.resolve(a, "group"); b < c.length; )
                (h = c[b]),
                  ++b,
                  this._loadTest(h) &&
                    ((f = x.xml_name(h)),
                    (d = x.xml_str(h, "custom")),
                    (h = null),
                    "" != d &&
                      ((d = this._ptr.getRequest("ui_get_group:", this, d)),
                      null != d && d instanceof Ha && (h = d)),
                    null == h && (h = new Ha()),
                    (h.name = f),
                    (this._group_index.h[f] = h),
                    this.add(h));
            if (null != a.firstElement())
              for (b = a.elements(); b.hasNext(); )
                (c = b.next()), this._loadSub(c);
            this._postLoad(a);
          } else this._onFinishLoad();
        },
        unparentXML: function (a) {
          return x.unparentXML(a);
        },
        _loadPointSize: function (a) {
          var b = Xa.resolve(a, "point_size"),
            c = -1;
          null == c && (c = 0);
          var d = this._loadWidth(b, c, "x");
          b = Xa.resolve(a, "point_size");
          c = -1;
          null == c && (c = 0);
          b = this._loadHeight(b, c, "y");
          1 > b &&
            1 > d &&
            (d = b =
              this._loadHeight(Xa.resolve(a, "point_size"), -1, "value"));
          0 < b && (this._pointX = d);
          0 < d && (this._pointY = b);
        },
        _loadSub: function (a, b) {
          null == b && (b = 0);
          if (a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          var c = a.nodeName;
          if (a.nodeType != D.Document && a.nodeType != D.Element)
            throw C.thrown(
              "Invalid nodeType " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          if ("load_if" == c) {
            if (this._loadTest(a) && null != a.firstElement())
              for (a = a.elements(); a.hasNext(); ) {
                var d = a.next();
                this._loadSub(d, b + 1);
              }
          } else if (
            ((d = null),
            (b = x.xml_name(a)),
            Ib.resolve(a, "group") &&
              ((d = Pb.resolve(a, "group")), (d = this.getGroup(d))),
            (c = this._loadThing(c, a)),
            null != c)
          ) {
            this._loadGlobals(a, c);
            if (null != b && "" != b) {
              this._asset_index.h[b] = c;
              c.name = b;
              var e = x.xml_str(a, "tags");
              "" != e && ((e = e.split(",")), this._addTags(e, b));
            }
            this._loadTooltip(c, a);
            null != d ? d.add(c) : this.add(c);
            this._loadPosition(a, c);
          }
        },
        _addTags: function (a, b) {
          for (var c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            Object.prototype.hasOwnProperty.call(this._tag_index.h, d) ||
              (this._tag_index.h[d] = []);
            d = this._tag_index.h[d];
            -1 == d.indexOf(b) && d.push(b);
          }
        },
        _loadGlobals: function (a, b) {
          if (b instanceof ca) {
            var c = x.xml_bool(a, "visible", !0),
              d = x.xml_bool(a, "active", !0),
              e = x.xml_i(a, "num_id");
            b.visible = c;
            b.active = d;
            b.ID = e;
            b instanceof H && ((a = x.xml_f(a, "alpha", 1)), b.set_alpha(a));
          }
        },
        _postLoad: function (a) {
          this._postLoaded = !0;
          if (null != a.firstElement())
            for (var b = a.elements(); b.hasNext(); ) {
              var c = b.next();
              if (c.nodeType != D.Element)
                throw C.thrown(
                  "Bad node type, expected Element but found " +
                    (null == c.nodeType ? "null" : ha.toString(c.nodeType))
                );
              var d = c.nodeName.toLowerCase();
              if (c.nodeType != D.Document && c.nodeType != D.Element)
                throw C.thrown(
                  "Invalid nodeType " +
                    (null == c.nodeType ? "null" : ha.toString(c.nodeType))
                );
              this._postLoadThing(d, c);
            }
          if (Ma.resolve(a, "mode"))
            for (b = 0, c = Ab.resolve(a, "mode"); b < c.length; )
              if (((a = c[b]), ++b, x.xml_bool(a, "is_default"))) {
                a = x.xml_name(a);
                this.setMode(a);
                break;
              }
          if (null != this._failure_checks) {
            b = 0;
            for (c = this._failure_checks; b < c.length; )
              if (((a = c[b]), ++b, this._checkFailure(a))) {
                this.failed = !0;
                break;
              }
            x.clearArraySoft(this._failure_checks);
            this._failure_checks = null;
          }
          this._onFinishLoad();
        },
        _sendTo: function (a, b) {
          var c = this.getAssetGroup(null, a);
          if (null == c)
            if (-1 != this.group.members.indexOf(a)) c = this;
            else return;
          if (-1 == b || 1 == b)
            switch ((ba.remove(c.group.members, a), b)) {
              case -1:
                c.group.members.splice(0, 0, a);
                break;
              case 1:
                c.group.members.push(a);
            }
        },
        setMode: function (a, b) {
          null == b && (b = "");
          if (this._curr_mode != a) {
            var c = this.getMode(a);
            this._curr_mode = a;
            if ("" == b) {
              if (null != c)
                for (a = c.elements(); a.hasNext(); ) {
                  b = a.next();
                  c = b = this.applyNodeConditionals(b);
                  if (c.nodeType != D.Element)
                    throw C.thrown(
                      "Bad node type, expected Element but found " +
                        (null == c.nodeType ? "null" : ha.toString(c.nodeType))
                    );
                  var d = c.nodeName,
                    e = "" == x.xml_str(c, "active") ? null : !0;
                  null != e && (e = x.xml_bool(c, "active"));
                  if (this._loadTest(b))
                    switch (d) {
                      case "align":
                        this._alignThing(b);
                        break;
                      case "change":
                        this._changeThing(b);
                        break;
                      case "hide":
                        this.showThing(x.xml_name(c), !1, e);
                        break;
                      case "position":
                        c = x.xml_name(c);
                        c = this.getAsset(c);
                        null != c && this._loadPosition(b, c);
                        break;
                      case "show":
                        this.showThing(x.xml_name(c), !0, e);
                    }
                }
            } else
              (b = this.getAsset(b)),
                null != b && b instanceof Ia && pa.__cast(b, Ia).setMode(a, "");
          }
        },
        showThing: function (a, b, c) {
          null == b && (b = !0);
          if (-1 != a.indexOf(",")) {
            a = a.split(",");
            for (var d = 0; d < a.length; ) {
              var e = a[d];
              ++d;
              var f = this.getAsset(e);
              null != f
                ? (f.set_visible(b), null != c && f.set_active(c))
                : ((f = this.getGroup(e)),
                  null != f &&
                    (f.set_visible(b), null != c && f.set_active(c)));
            }
          } else if ("*" != a)
            (f = this.getAsset(a)),
              null != f
                ? (f.set_visible(b), null != c && f.set_active(c))
                : ((f = this.getGroup(a)),
                  null != f &&
                    (f.set_visible(b), null != c && f.set_active(c)));
          else
            for (a = ea.keysIterator(this._asset_index.h); a.hasNext(); )
              (d = a.next()), "*" != d && this.showThing(d, b, c);
        },
        getGroup: function (a, b) {
          null == b && (b = !0);
          var c = this._group_index.h[a];
          return null == c && b && null != this._superIndexUI
            ? this._superIndexUI.getGroup(a, b)
            : c;
        },
        hasAsset: function (a, b) {
          null == b && (b = !0);
          return Object.prototype.hasOwnProperty.call(this._asset_index.h, a)
            ? !0
            : b && null != this._superIndexUI
            ? this._superIndexUI.hasAsset(a, b)
            : !1;
        },
        getAsset: function (a, b) {
          null == b && (b = !0);
          var c = this._asset_index.h[a];
          return null == c && b && null != this._superIndexUI
            ? this._superIndexUI.getAsset(a, b)
            : c;
        },
        getAssetGroup: function (a, b) {
          if (null == b && (null == a || "" == a)) return null;
          null == b && (b = this.getAsset(a));
          if (null == b) return null;
          for (a = ea.keysIterator(this._group_index.h); a.hasNext(); ) {
            var c = a.next();
            c = this._group_index.h[c];
            if (-1 != c.group.members.indexOf(b)) return c;
          }
          return null;
        },
        getMode: function (a, b) {
          null == b && (b = !0);
          var c = this._mode_index.h[a];
          return null == c && b && null != this._superIndexUI
            ? this._superIndexUI.getMode(a, b)
            : c;
        },
        checkVariable: function (a, b, c, d, e) {
          null == e && (e = !0);
          null == d && (d = "==");
          a = this.getVariable(a, e);
          return null != a
            ? x.compareStringVars(a, b, c, d)
            : x.compareStringVars("", b, c, d);
        },
        setVariable: function (a, b) {
          this._variable_index.h[a] = b;
        },
        getVariable: function (a, b) {
          null == b && (b = !0);
          var c = this._variable_index.h[a];
          null == c &&
            b &&
            null != this._superIndexUI &&
            (c = this._superIndexUI.getVariable(a, b));
          return c;
        },
        getDefinition: function (a, b) {
          null == b && (b = !0);
          var c = this._definition_index.h[a];
          null == c &&
            b &&
            null != this._superIndexUI &&
            (c = this._superIndexUI.getDefinition(a, b));
          null == c &&
            -1 == a.indexOf("include:") &&
            (c = this.getDefinition("include:" + a, b));
          return c;
        },
        screenWidth: function () {
          return this.hasAsset("screen")
            ? this.getAsset("screen").get_width() | 0
            : p.width;
        },
        screenHeight: function () {
          return this.hasAsset("height")
            ? this.getAsset("screen").get_height() | 0
            : p.height;
        },
        applyNodeConditionals: function (a) {
          if (Ma.resolve(a, "locale") || Ma.resolve(a, "haxedef")) {
            a = D.parse(pf.print(a)).firstElement();
            if (a.nodeType != D.Document && a.nodeType != D.Element)
              throw C.thrown(
                "Invalid nodeType " +
                  (null == a.nodeType ? "null" : ha.toString(a.nodeType))
              );
            Ma.resolve(a, "locale") && (a = this.applyNodeChanges(a, "locale"));
            Ma.resolve(a, "haxedef") &&
              (a = this.applyNodeChanges(a, "haxedef"));
            Ma.resolve(a, "window") && (a = this.applyNodeChanges(a, "window"));
          }
          return a;
        },
        applyNodeChanges: function (a, b) {
          var c = "";
          if ("locale" == b) {
            if (null == this._ptr_tongue) return a;
            c = this._ptr_tongue.locale.toLowerCase();
          }
          var d = !1;
          "haxedef" == b && (d = !0);
          "window" == b && (c = p.width + "," + p.height);
          var e = 0;
          for (b = Ab.resolve(a, b); e < b.length; ) {
            var f = b[e];
            ++e;
            var h = x.xml_name(f);
            d && ((c = ""), x.checkHaxedef(h) && (c = h));
            if (h == c && Ma.resolve(f, "change"))
              for (h = 0, f = Ab.resolve(f, "change"); h < f.length; ) {
                var m = f[h];
                ++h;
                for (var n = m.attributes(); n.hasNext(); ) {
                  var da = n.next(),
                    g = m.get(da);
                  a.set(da, g);
                }
              }
          }
          return a;
        },
        _loadThingGetInfo: function (a) {
          if (a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          var b = this.getDefinition("default:" + a.nodeName),
            c = null;
          null != b && (c = Ia.consolidateData(a, b, !0));
          null == c && (c = a);
          a = x.xml_str(c, "use_def", !0);
          b = null;
          "" != a && (b = this.getDefinition(a));
          c = Ia.consolidateData(c, b);
          c = this.applyNodeConditionals(c);
          return 0 == this._loadTest(c) ? null : c;
        },
        _loadTooltip: function (a, b) {
          if (Ma.resolve(b, "tooltip")) {
            b = this._loadTooltipData(Xa.resolve(b, "tooltip"));
            var c = Ia.getLeafUIState();
            a instanceof Ce
              ? c.tooltips.add(a.button, b)
              : c.tooltips.add(a, b);
          }
        },
        _loadTooltipData: function (a) {
          var b = {
              title: "",
              body: "",
              anchor: null,
              style: {
                titleFormat: null,
                bodyFormat: null,
                titleBorder: null,
                bodyBorder: null,
                titleOffset: null,
                bodyOffset: null,
                titleWidth: -1,
                bodyWidth: -1,
                background: null,
                borderSize: -1,
                borderColor: null,
                arrow: null,
                autoSizeVertical: null,
                autoSizeHorizontal: null,
                leftPadding: -1,
                rightPadding: -1,
                topPadding: -1,
                bottomPadding: -1,
              },
            },
            c = this.getDefinition("default:tooltip");
          null != c && (a = Ia.consolidateData(a, c, !0));
          Ib.resolve(a, "use_def") &&
            ((c = x.xml_str(a, "use_def", !0)),
            (c = this.getDefinition(c)),
            null != c && (a = Ia.consolidateData(a, c, !0)));
          Ib.resolve(a, "text") && this._loadTooltipText(a, "text", b);
          Ma.resolve(a, "title") &&
            this._loadTooltipText(Xa.resolve(a, "title"), "text", b);
          Ma.resolve(a, "body") &&
            this._loadTooltipText(Xa.resolve(a, "body"), "text", b);
          b.anchor = this._loadAnchor(a);
          this._loadTooltipStyle(a, b);
          return b;
        },
        _loadTooltipStyle: function (a, b) {
          b.style.background = x.xml_color(a, "background");
          b.style.borderSize = x.xml_i(a, "border", -1);
          b.style.borderColor = x.xml_color(a, "border_color");
          if (Ib.resolve(a, "arrow")) {
            var c = "";
            if (null != a.get("arrow"))
              if (((c = a.get("arrow")), "" == c || null == c)) c = "";
              else {
                c = x.gfx(c);
                try {
                  if (!la.exists(c, "IMAGE"))
                    throw C.thrown('couldn\'t load bmp "arrow"');
                } catch (d) {
                  if (
                    ((Ba.lastError = d),
                    "string" != typeof C.caught(d).unwrap())
                  )
                    throw d;
                }
              }
          } else c = null;
          b.style.arrow = c;
          b.style.autoSizeHorizontal = x.xml_bool(
            a,
            "auto_size_horizontal",
            !0
          );
          b.style.autoSizeVertical = x.xml_bool(a, "auto_size_vertical", !0);
          c = this._loadHeight(a, -1, "pad_all") | 0;
          -1 != c
            ? (b.style.leftPadding =
                b.style.rightPadding =
                b.style.topPadding =
                b.style.bottomPadding =
                  c)
            : ((c = this._loadWidth(a, 0, "pad_left") | 0),
              (b.style.leftPadding = c),
              (c = this._loadWidth(a, 0, "pad_right") | 0),
              (b.style.rightPadding = c),
              (c = this._loadHeight(a, 0, "pad_top") | 0),
              (b.style.topPadding = c),
              (c = this._loadHeight(a, 0, "pad_bottom") | 0),
              (b.style.bottomPadding = c));
        },
        _loadTooltipText: function (a, b, c) {
          if (a.nodeType == D.Document) var d = "Document";
          else {
            if (a.nodeType != D.Element)
              throw C.thrown(
                "Bad node type, expected Element but found " +
                  (null == a.nodeType ? "null" : ha.toString(a.nodeType))
              );
            d = a.nodeName;
          }
          b = this._loadString(a, b);
          var e = new U(
            this._loadWidth(a, 0, "x"),
            this._loadHeight(a, 0, "y")
          );
          if (Ib.resolve(a, "use_def")) {
            var f = x.xml_str(a, "use_def", !0);
            f = this.getDefinition(f);
            null != f && (a = Ia.consolidateData(a, f));
          }
          f = this._loadBorder(a);
          var h = this._loadFontDef(a),
            m = x.xml_color(a, "color", !0, -16777216);
          h.format.color = m;
          a = this._loadWidth(a, -1, "width") | 0;
          switch (d) {
            case "body":
              "" != b && (c.body = b);
              c.style.bodyOffset = e;
              c.style.bodyFormat = h;
              c.style.bodyWidth = a;
              c.style.bodyBorder = f;
              break;
            case "title":
            case "tooltip":
              "" != b && (c.title = b),
                (c.style.titleOffset = e),
                (c.style.titleFormat = h),
                (c.style.titleWidth = a),
                (c.style.titleBorder = f);
          }
        },
        _loadAnchor: function (a) {
          var b = this._loadWidth(a, 0, "x"),
            c = this._loadHeight(a, 0, "y");
          if (Ma.resolve(a, "anchor")) {
            var d = x.xml_str(Xa.resolve(a, "anchor"), "x", !0, "right"),
              e = x.xml_str(Xa.resolve(a, "anchor"), "y", !0, "top"),
              f = x.xml_str(Xa.resolve(a, "anchor"), "x-flush", !0, "left");
            a = x.xml_str(Xa.resolve(a, "anchor"), "y-flush", !0, "top");
            return new Gf(b, c, d, e, f, a);
          }
          return null;
        },
        _loadThing: function (a, b) {
          var c = this._loadThingGetInfo(b);
          if (null == c) return null;
          switch (a) {
            case "align":
              return this._alignThing(c, !0), null;
            case "bar":
              return this._loadBar(c);
            case "box":
              return this._loadBox(c);
            case "button":
              return this._loadButton(c);
            case "button_toggle":
              return this._loadButton(c, !0, !0);
            case "change":
              return this._changeThing(c), null;
            case "checkbox":
              return this._loadCheckBox(c);
            case "failure":
              return (
                null == this._failure_checks && (this._failure_checks = []),
                this.unparentXML(c),
                this._failure_checks.push(c),
                null
              );
            case "input_text":
              return this._loadInputText(c);
            case "line":
              return this._loadLine(c);
            case "default":
            case "group":
            case "include":
            case "inject":
            case "load_if":
            case "mode":
              return null;
            case "chrome":
            case "nine_slice":
            case "nine_slice_sprite":
            case "nineslice":
            case "nineslicesprite":
              return this._load9SliceSprite(c);
            case "num_stepper":
            case "numeric_stepper":
            case "numstepper":
              return this._loadNumericStepper(c);
            case "position":
              return (
                (this.name = x.xml_name(c)),
                (a = this.getAsset(this.name)),
                null != a && this._loadPosition(c, a),
                null
              );
            case "dropdown":
            case "dropdown_menu":
            case "pulldown":
            case "pulldown_menu":
              return this._loadDropDownMenu(c);
            case "radio_group":
              return this._loadRadioGroup(c);
            case "region":
              return this._loadRegion(c);
            case "sprite":
              return this._loadSprite(c);
            case "tab_menu":
              return this._loadTabMenu(c);
            case "text":
              return this._loadText(c);
            case "tile_test":
              return this._loadTileTest(c);
            case "layout":
            case "ui":
              return this._loadLayout(c);
            default:
              return this._ptr.getRequest("ui_get:" + a, this, c, [b]);
          }
        },
        _loadScale: function (a, b, c) {
          null == c && (c = "scale");
          null == b && (b = 1);
          return this._loadHeight(a, b, c, "none");
        },
        _loadScaleX: function (a, b) {
          null == b && (b = 1);
          return this._loadWidth(a, b, "scale_x", "none");
        },
        _loadScaleY: function (a, b) {
          null == b && (b = 1);
          return this._loadHeight(a, b, "scale_y", "none");
        },
        _loadWidth: function (a, b, c, d) {
          null == d && (d = "");
          null == c && (c = "width");
          null == b && (b = 10);
          c = x.xml_str(a, c, !0, null == b ? "null" : "" + b);
          a = this.getRound(a, d);
          return this.doRound(this._getDataSize("w", c, b), a);
        },
        _loadHeight: function (a, b, c, d) {
          null == d && (d = "");
          null == c && (c = "height");
          null == b && (b = 10);
          c = x.xml_str(a, c, !0, null == b ? "null" : "" + b);
          a = this.getRound(a, d);
          return this.doRound(this._getDataSize("h", c, b), a);
        },
        _loadCompass: function (a, b) {
          null == b && (b = "resize_point");
          a = x.xml_str(a, b, !0, "nw");
          b = U._pool.get().set(0, 0);
          b._inPool = !1;
          switch (a) {
            case "c":
            case "center":
            case "m":
            case "mid":
              b.set_x(0.5);
              b.set_y(0.5);
              break;
            case "ll":
            case "sw":
              b.set_x(0);
              b.set_y(1);
              break;
            case "n":
            case "u":
              b.set_x(0.5);
              b.set_y(0);
              break;
            case "nw":
            case "ul":
              b.set_x(0);
              b.set_y(0);
              break;
            case "e":
            case "r":
              b.set_x(1);
              b.set_y(0.5);
              break;
            case "s":
              b.set_x(0.5);
              b.set_y(1);
              break;
            case "lr":
            case "se":
              b.set_x(1);
              b.set_y(1);
              break;
            case "ne":
            case "ur":
              b.set_x(1);
              b.set_y(0);
              break;
            case "w":
              b.set_x(0.5), b.set_y(0);
          }
          return b;
        },
        _changeThing: function (a) {
          var b = x.xml_name(a);
          b = this.getAsset(b);
          if (null != b) {
            for (var c = -1, d = -1, e, f, h = a.attributes(); h.hasNext(); )
              switch (h.next()) {
                case "height":
                  d = this._loadHeight(a);
                  break;
                case "label":
                  var m = x.xml_str(a, "label");
                  e = x.xml_str(a, "context", !0, "ui");
                  f = x.xml_str(a, "code", !0, "");
                  m = this.getText(m, e, !0, f);
                  pa.__implements(b, Mg) && b.getLabel().set_text(m);
                  break;
                case "text":
                  if (b instanceof gd) {
                    m = x.xml_str(a, "text");
                    e = x.xml_str(a, "context", !0, "ui");
                    var n = b;
                    f = x.xml_str(a, "code", !0, "");
                    n.set_text(this.getText(m, e, !0, f));
                  }
                  break;
                case "width":
                  c = this._loadWidth(a);
              }
            !pa.__implements(b, pc) ||
              (-1 == c && -1 == d) ||
              (-1 == c && (c = b.get_width()),
              -1 == d && (d = b.get_height()),
              b.resize(c, d));
            if (Ma.resolve(a, "param") && pa.__implements(b, Jd)) {
              c = null;
              if (Ma.resolve(a, "param")) {
                c = [];
                d = 0;
                for (a = Ab.resolve(a, "param"); d < a.length; )
                  if (
                    ((f = a[d]),
                    ++d,
                    Ib.resolve(f, "type") && Ib.resolve(f, "value"))
                  ) {
                    h = Pb.resolve(f, "type");
                    h = h.toLowerCase();
                    m = e = Pb.resolve(f, "value");
                    f = x.xml_i(f, "sort", -1);
                    switch (h) {
                      case "bool":
                      case "boolean":
                        e = new String(e);
                        e = e.toLowerCase();
                        m = "true" == e || "1" == e ? !0 : !1;
                        break;
                      case "color":
                      case "hex":
                        h = Xb.fromString(e);
                        if (null == h)
                          throw C.thrown(
                            "U.parseHex() unable to parse hex String " + e
                          );
                        m = h;
                        break;
                      case "float":
                        m = parseFloat(e);
                        break;
                      case "int":
                        m = I.parseInt(e);
                        break;
                      case "string":
                        m = new String(e);
                    }
                    c.push({ sort: f, value: m });
                  }
                c.sort(Ia.sortParams);
                d = 0;
                for (a = c.length; d < a; ) (e = d++), (c[e] = c[e].value);
              }
              b.set_params(c);
            }
          }
        },
        _alignThing: function (a, b) {
          if (Ma.resolve(a, "objects")) {
            b = 0;
            for (var c = Ab.resolve(a, "objects"); b < c.length; ) {
              var d = c[b];
              ++b;
              d = x.xml_str(d, "value", !0, "").split(",");
              var e = x.xml_str(a, "axis", !0);
              if ("horizontal" != e && "vertical" != e)
                throw C.thrown(
                  new Cb(
                    'FlxUI._alignThing(): axis must be "horizontal" or "vertical"!'
                  )
                );
              var f =
                "horizontal" == e
                  ? this._getDataSize("w", x.xml_str(a, "spacing", !0), -1)
                  : this._getDataSize("h", x.xml_str(a, "spacing", !0), -1);
              var h = x.xml_bool(a, "resize"),
                m = x.xml_bool(a, "grow", !0),
                n = x.xml_bool(a, "shrink", !0),
                p = -1,
                g = -1;
              null == g && (g = 0);
              null == p && (p = 0);
              p = U._pool.get().set(p, g);
              p._inPool = !1;
              g = "";
              Ma.resolve(a, "bounds") &&
                ("horizontal" == e
                  ? (p.set_x(
                      this._getDataSize(
                        "w",
                        x.xml_str(Xa.resolve(a, "bounds"), "left"),
                        -1
                      )
                    ),
                    p.set_y(
                      this._getDataSize(
                        "w",
                        x.xml_str(Xa.resolve(a, "bounds"), "right"),
                        -1
                      )
                    ))
                  : "vertical" == e &&
                    (p.set_x(
                      this._getDataSize(
                        "h",
                        x.xml_str(Xa.resolve(a, "bounds"), "top"),
                        -1
                      )
                    ),
                    p.set_y(
                      this._getDataSize(
                        "h",
                        x.xml_str(Xa.resolve(a, "bounds"), "bottom"),
                        -1
                      )
                    )));
              -1 != p.x && -1 != p.y
                ? p.y <= p.x &&
                  (g =
                    "bounds max must be > bounds min! (max=" +
                    p.y +
                    " min=" +
                    p.x +
                    ")")
                : (g = "missing bound!");
              "" == g && this._doAlign(d, e, f, h, p, m, n);
              if (
                Ma.resolve(a, "anchor") ||
                Ib.resolve(a, "x") ||
                Ib.resolve(a, "y")
              )
                for (e = 0; e < d.length; )
                  (f = d[e]),
                    ++e,
                    (f = this.getAsset(f)),
                    this._loadPosition(a, f);
            }
          } else
            throw C.thrown(
              new Cb("FlxUI._alignThing(): <objects> node not found!")
            );
        },
        _doAlign: function (a, b, c, d, e, f, h) {
          null == h && (h = !0);
          null == f && (f = !0);
          var m = 0,
            n = e.y - e.x,
            p = a.length - 1,
            g = 0,
            k = "width",
            l = "x";
          "vertical" == b && ((k = "height"), (l = "y"));
          for (var q = 0; q < a.length; ) {
            var r = a[q];
            ++q;
            r = this.getAsset(r);
            if (null != r) {
              var u = 0;
              switch (k) {
                case "height":
                  u = r.get_height();
                  break;
                case "width":
                  u = r.get_width();
              }
              m += u;
            }
          }
          0 == d ? (m = (n - m) / p) : ((m = c), (g = (n - c * p) / a.length));
          g |= 0;
          m |= 0;
          e = e.x;
          for (q = 0; q < a.length; )
            if (((r = a[q]), ++q, (r = this.getAsset(r)), null != r)) {
              c = e;
              if (d)
                pa.__implements(r, pc) &&
                  ((e = !0),
                  (n = r),
                  "vertical" == b
                    ? (g > n.get_width()
                        ? (e = f)
                        : g < n.get_width() && (e = h),
                      e && n.resize(n.get_width(), g))
                    : "horizontal" == b &&
                      (g > n.get_height()
                        ? (e = f)
                        : g < n.get_height() && (e = h),
                      e && n.resize(g, n.get_height())));
              else
                switch (k) {
                  case "height":
                    g = r.get_height();
                    break;
                  case "width":
                    g = r.get_width();
                }
              e = c + g + m;
              switch (l) {
                case "x":
                  r.set_x(c);
                  break;
                case "y":
                  r.set_y(c);
              }
            }
        },
        _checkFailure: function (a) {
          var b = x.xml_str(a, "target", !0),
            c = x.xml_str(a, "property", !0),
            d = x.xml_str(a, "compare", !0);
          a = x.xml_str(a, "value", !0);
          var e = this.getAsset(b);
          if (null == e) return !1;
          var f = (b = 0),
            h = x.perc_to_float(a);
          switch (c) {
            case "h":
            case "height":
              b = e.get_height();
              break;
            case "w":
            case "width":
              b = e.get_width();
          }
          if (isNaN(h))
            if (x.isStrNum(a)) f = parseFloat(a);
            else return !1;
          else
            switch (c) {
              case "h":
              case "height":
                f = h * this.screenHeight();
                break;
              case "w":
              case "width":
                f = h * this.screenWidth();
            }
          c = !1;
          switch (d) {
            case "<":
              b < f && ((this.failed_by = f - b), (c = !0));
              break;
            case "<=":
              b <= f && ((this.failed_by = f - b), (c = !0));
              break;
            case "=":
            case "==":
              b == f && ((this.failed_by = Math.abs(b - f)), (c = !0));
              break;
            case ">":
              b > f && ((this.failed_by = b - f), (c = !0));
              break;
            case ">=":
              b >= f && ((this.failed_by = b - f), (c = !0));
          }
          return c;
        },
        _resizeThing: function (a, b) {
          var c = !1,
            d = a.get_width(),
            e = a.get_height();
          d < b.min_width
            ? ((c = !0), (d = b.min_width))
            : d > b.max_width && ((c = !0), (d = b.max_width));
          e < b.min_height
            ? ((c = !0), (e = b.min_height))
            : e > b.max_height && ((c = !0), (e = b.max_height));
          c && a.resize(d, e);
        },
        _postLoadThing: function (a, b) {
          if ("load_if" == a) {
            if (this._loadTest(b) && null != b.firstElement())
              for (var c = b.elements(); c.hasNext(); ) {
                var d = c.next();
                if (d.nodeType != D.Element)
                  throw C.thrown(
                    "Bad node type, expected Element but found " +
                      (null == d.nodeType ? "null" : ha.toString(d.nodeType))
                  );
                b = d.nodeName.toLowerCase();
                if (d.nodeType != D.Document && d.nodeType != D.Element)
                  throw C.thrown(
                    "Invalid nodeType " +
                      (null == d.nodeType ? "null" : ha.toString(d.nodeType))
                  );
                this._postLoadThing(b, d);
              }
          } else if (0 != this._loadTest(b)) {
            var e = x.xml_name(b);
            c = this.getAsset(e);
            (d = "group" == a) && (c = this.getGroup(e));
            "align" == a && this._alignThing(b);
            "change" == a && this._changeThing(b);
            if ("position" == a) this._loadPosition(b, c);
            else if (("cursor" == a && this._loadCursor(b), null != c || d)) {
              if (!d) {
                a = x.xml_str(b, "use_def", !0);
                "" != a && this.getDefinition(a);
                if (pa.__implements(c, pc)) {
                  a = this._getDataSize("w", x.xml_str(b, "width"));
                  e = this._getDataSize("h", x.xml_str(b, "height"));
                  if (0 == a || a == c.get_width()) a = null;
                  if (0 == e || e == c.get_height()) e = null;
                  var f = this.calcMaxMinSize(b);
                  null != f &&
                    (null != a &&
                      (a < f.min_width && (a = f.min_width),
                      a > f.max_width && (a = f.max_width),
                      (f.min_width = f.max_width = a)),
                    null != e &&
                      (e < f.min_height && (e = f.min_height),
                      e > f.max_height && (e = f.max_height),
                      (f.min_height = f.max_height = e)),
                    this._resizeThing(pa.__cast(c, pc), f));
                }
                a = -c.x;
                e = -c.y;
                null == e && (e = 0);
                null == a && (a = 0);
                f = c;
                f.set_x(f.x + a);
                f = c;
                f.set_y(f.y + e);
                this._loadPosition(b, c);
              }
              b = x.xml_str(b, "send_to", !0, "");
              if ("" != b)
                switch (b) {
                  case "back":
                  case "bottom":
                    this._sendTo(c, -1);
                    break;
                  case "front":
                  case "top":
                    this._sendTo(c, 1);
                }
              !d &&
                c instanceof Ia &&
                0 == c._postLoaded &&
                c.getEvent("post_load", this, null);
            }
          }
        },
        _loadTileTest: function (a) {
          var b = x.xml_i(a, "tiles_w", 2),
            c = x.xml_i(a, "tiles_h", 2),
            d = this._loadWidth(a),
            e = this._loadHeight(a),
            f = this.calcMaxMinSize(a);
          d < f.min_width && (d = f.min_width);
          e < f.min_height && (e = f.min_height);
          d = (d / b) | 0;
          e = (e / c) | 0;
          d < e ? (e = d) : e < d && (d = e);
          d * b > f.max_width && (d = (f.max_width / b) | 0);
          e * c > f.max_height && (e = (f.max_height / c) | 0);
          d < e ? (e = d) : e < d && (d = e);
          2 > d && (d = 2);
          2 > e && (e = 2);
          var h = Xb.fromString(x.xml_str(a, "color1", !0, "0x808080")),
            m = Xb.fromString(x.xml_str(a, "color2", !0, "0xc4c4c4"));
          f = x.xml_i(a, "base_tile_size", -1);
          a = x.xml_bool(a, "floor_to_even", !1);
          b = new Eh(0, 0, d, e, b, c, h, m, a);
          b.baseTileSize = f;
          return b;
        },
        _loadString: function (a, b) {
          b = x.xml_str(a, b);
          var c = x.xml_str(a, "context", !0, "ui");
          a = x.xml_str(a, "code", !0, "");
          return (b = this.getText(b, c, !0, a));
        },
        _loadText: function (a) {
          var b = x.xml_str(a, "text"),
            c = x.xml_str(a, "context", !0, "ui"),
            d = x.xml_str(a, "code", !0, "");
          b = this.getText(b, c, !0, d);
          d = this._loadWidth(a, 100) | 0;
          c = this._loadHeight(a, -1) | 0;
          var e = this._loadFontFace(a);
          if (x.xml_bool(a, "input"))
            throw C.thrown(
              new Cb(
                "FlxUI._loadText(): <text> with input has been deprecated. Use <input_text> instead."
              )
            );
          var f = x.xml_str(a, "align");
          "" == f && (f = null);
          var h = this._loadHeight(a, 8, "size", "floor") | 0,
            m = this._loadColor(a),
            n = this._loadBorder(a);
          d = new gd(0, 0, d, b, h);
          d.setFormat(e, h, m, f);
          n.apply(d);
          d.drawFrame();
          if (Ma.resolve(a, "param")) {
            e = null;
            if (Ma.resolve(a, "param")) {
              e = [];
              f = 0;
              for (a = Ab.resolve(a, "param"); f < a.length; )
                if (
                  ((m = a[f]),
                  ++f,
                  Ib.resolve(m, "type") && Ib.resolve(m, "value"))
                ) {
                  n = Pb.resolve(m, "type");
                  n = n.toLowerCase();
                  var p = (h = Pb.resolve(m, "value"));
                  m = x.xml_i(m, "sort", -1);
                  switch (n) {
                    case "bool":
                    case "boolean":
                      h = new String(h);
                      h = h.toLowerCase();
                      p = "true" == h || "1" == h ? !0 : !1;
                      break;
                    case "color":
                    case "hex":
                      n = Xb.fromString(h);
                      if (null == n)
                        throw C.thrown(
                          "U.parseHex() unable to parse hex String " + h
                        );
                      p = n;
                      break;
                    case "float":
                      p = parseFloat(h);
                      break;
                    case "int":
                      p = I.parseInt(h);
                      break;
                    case "string":
                      p = new String(h);
                  }
                  e.push({ sort: m, value: p });
                }
              e.sort(Ia.sortParams);
              f = 0;
              for (a = e.length; f < a; ) (h = f++), (e[h] = e[h].value);
            }
            d.set_params(e);
          }
          0 < c &&
            d.get_height() != c &&
            pa.__implements(d, pc) &&
            d.resize(d.get_width(), c);
          d.set_text(" ");
          d.set_text(b);
          return d;
        },
        _loadInputText: function (a) {
          var b = x.xml_str(a, "text"),
            c = x.xml_str(a, "context", !0, "ui"),
            d = x.xml_str(a, "code", !0, "");
          b = this.getText(b, c, !0, d);
          var e = this._loadWidth(a, 100) | 0;
          c = this._loadHeight(a, -1) | 0;
          d = this._loadFontFace(a);
          var f = x.xml_str(a, "align");
          "" == f && (f = null);
          var h = this._loadHeight(a, 8, "size") | 0,
            m = this._loadColor(a),
            n = this._loadBorder(a),
            p = x.xml_str(a, "background", !0, "0x00000000"),
            g = !0,
            k = 0;
          null == k && (k = 0);
          null == g && (g = !1);
          var l = Xb.fromString(p);
          if (null == l)
            if (g) l = k;
            else throw C.thrown("U.parseHex() unable to parse hex String " + p);
          p = l;
          l = x.xml_bool(a, "password_mode");
          b = new Kf(0, 0, e, b, h, m, p);
          b.set_passwordMode(l);
          switch (x.xml_str(a, "force_case", !0, "")) {
            case "lower":
            case "lower_case":
            case "lowercase":
              l = 2;
              break;
            case "l":
            case "u":
              throw C.thrown(
                new Cb(
                  "FlxUI._loadInputText(): 1 letter values have been deprecated (force_case attribute)."
                )
              );
            case "upper":
            case "upper_case":
            case "uppercase":
              l = 1;
              break;
            default:
              l = 0;
          }
          for (p = x.xml_str(a, "filter", !0, ""); -1 != p.indexOf("_"); )
            p = K.replace(p, "_", "");
          switch (p) {
            case "a":
            case "an":
            case "n":
              throw C.thrown(
                new Cb(
                  "FlxUI._loadInputText(): 1 letter values have been deprecated (filter attribute)."
                )
              );
            case "alpha":
            case "onlyalpha":
              p = 1;
              break;
            case "alphanum":
            case "alphanumeric":
            case "onlyalphanumeric":
              p = 3;
              break;
            case "num":
            case "numeric":
            case "onlynumeric":
              p = 2;
              break;
            default:
              p = 0;
          }
          b.setFormat(d, h, m, f);
          b.set_forceCase(l);
          b.set_filterMode(p);
          n.apply(b);
          b.drawFrame();
          if (Ma.resolve(a, "param")) {
            d = null;
            if (Ma.resolve(a, "param")) {
              d = [];
              f = 0;
              for (a = Ab.resolve(a, "param"); f < a.length; )
                if (
                  ((m = a[f]),
                  ++f,
                  Ib.resolve(m, "type") && Ib.resolve(m, "value"))
                ) {
                  n = Pb.resolve(m, "type");
                  n = n.toLowerCase();
                  l = h = Pb.resolve(m, "value");
                  m = x.xml_i(m, "sort", -1);
                  switch (n) {
                    case "bool":
                    case "boolean":
                      p = new String(h);
                      p = p.toLowerCase();
                      l = "true" == p || "1" == p ? !0 : !1;
                      break;
                    case "color":
                    case "hex":
                      l = Xb.fromString(h);
                      if (null == l)
                        throw C.thrown(
                          "U.parseHex() unable to parse hex String " + h
                        );
                      break;
                    case "float":
                      l = parseFloat(h);
                      break;
                    case "int":
                      l = I.parseInt(h);
                      break;
                    case "string":
                      l = new String(h);
                  }
                  d.push({ sort: m, value: l });
                }
              d.sort(Ia.sortParams);
              f = 0;
              for (a = d.length; f < a; ) (h = f++), (d[h] = d[h].value);
            }
            b.set_params(d);
          }
          0 < c &&
            b.get_height() != c &&
            pa.__implements(b, pc) &&
            b.resize(b.get_width(), c);
          return b;
        },
        _loadRadioGroup: function (a) {
          var b = x.xml_str(a, "dot_src", !0),
            c = x.xml_str(a, "radio_src", !0);
          var d = [];
          for (
            var e = [],
              f = this._loadWidth(a, 11, "radio_width"),
              h = this._loadHeight(a, 11, "radio_height"),
              m = this._loadHeight(a, 0, "height"),
              n = this._loadHeight(a, 0, "width"),
              p = this._loadWidth(a, 100, "label_width"),
              g = 0,
              k = Ab.resolve(a, "radio");
            g < k.length;

          ) {
            var l = k[g];
            ++g;
            var q = x.xml_name(l),
              r = x.xml_str(l, "label"),
              u = x.xml_str(l, "context", !0, "ui");
            l = x.xml_str(l, "code", !0, "");
            r = this.getText(r, u, !0, l);
            e.push(q);
            d.push(r);
          }
          e.reverse();
          d.reverse();
          l = this._loadHeight(a, 25, "y_space");
          u = null;
          if (Ma.resolve(a, "param")) {
            u = [];
            g = 0;
            for (k = Ab.resolve(a, "param"); g < k.length; )
              if (
                ((q = k[g]),
                ++g,
                Ib.resolve(q, "type") && Ib.resolve(q, "value"))
              ) {
                var z = Pb.resolve(q, "type");
                z = z.toLowerCase();
                var v = (r = Pb.resolve(q, "value"));
                q = x.xml_i(q, "sort", -1);
                switch (z) {
                  case "bool":
                  case "boolean":
                    r = new String(r);
                    r = r.toLowerCase();
                    v = "true" == r || "1" == r ? !0 : !1;
                    break;
                  case "color":
                  case "hex":
                    z = Xb.fromString(r);
                    if (null == z)
                      throw C.thrown(
                        "U.parseHex() unable to parse hex String " + r
                      );
                    v = z;
                    break;
                  case "float":
                    v = parseFloat(r);
                    break;
                  case "int":
                    v = I.parseInt(r);
                    break;
                  case "string":
                    v = new String(r);
                }
                u.push({ sort: q, value: v });
              }
            u.sort(Ia.sortParams);
            g = 0;
            for (k = u.length; g < k; ) (r = g++), (u[r] = u[r].value);
          }
          r = u;
          u = null;
          "" != c
            ? (u = x.gfx(c))
            : Ma.resolve(a, "box") &&
              (u =
                "" != x.xml_str(Xa.resolve(a, "box"), "slice9")
                  ? this._load9SliceSprite(Xa.resolve(a, "box"))
                  : this._loadSprite(Xa.resolve(a, "box")));
          c = null;
          "" != b
            ? (c = x.gfx(b))
            : Ma.resolve(a, "dot") &&
              (c =
                "" != x.xml_str(Xa.resolve(a, "dot"), "slice9")
                  ? this._load9SliceSprite(Xa.resolve(a, "dot"))
                  : this._loadSprite(Xa.resolve(a, "dot")));
          z = b = null;
          if (Ma.resolve(a, "button"))
            for (g = 0, k = Ab.resolve(a, "button"); g < k.length; )
              (v = k[g]),
                ++g,
                (q = x.xml_name(v)),
                "previous" == q || "prev" == q
                  ? ((b = x.xml_f(v, "x")),
                    (q = x.xml_f(v, "y")),
                    null == q && (q = 0),
                    null == b && (b = 0),
                    (b = U._pool.get().set(b, q)),
                    (b._inPool = !1))
                  : "next" == q &&
                    ((q = x.xml_f(v, "x")),
                    (z = x.xml_f(v, "y")),
                    null == z && (z = 0),
                    null == q && (q = 0),
                    (q = U._pool.get().set(q, z)),
                    (q._inPool = !1),
                    (z = q));
          d = new Fh(0, 0, e, d, null, l, f, h, p, null, b, z);
          d.set_params(r);
          "" != u && null != u && d.loadGraphics(u, c);
          e = this._loadWidth(a, 0, "text_x") | 0;
          f = this._loadHeight(a, 0, "text_y") | 0;
          h = d.getRadios();
          r = 0;
          b = !1;
          p = a.elementsNamed("radio");
          g = 0;
          for (k = h.length; g < k; )
            if (
              ((l = g++),
              (c = h[h.length - 1 - l]),
              (l = p.hasNext() ? p.next() : null),
              null != c &&
                c instanceof Ce &&
                ((c = pa.__cast(c, Ce)),
                (u = this.formatButtonText(a, c)),
                null != u &&
                  0 == b &&
                  ((b = Ac.copyFromFlxText(u)),
                  (q = new $d(
                    u.borderStyle,
                    u.borderColor,
                    u.borderSize,
                    u.borderQuality
                  )),
                  d.set_activeStyle(
                    new Gh(
                      16777215,
                      b,
                      ul.fromOpenFL(u._defaultFormat.align),
                      u.color,
                      q
                    )
                  ),
                  (b = !0)),
                c.set_textX(e),
                c.set_textY(f),
                ++r,
                null != l))
            ) {
              if (l.nodeType != D.Document && l.nodeType != D.Element)
                throw C.thrown(
                  "Invalid nodeType " +
                    (null == l.nodeType ? "null" : ha.toString(l.nodeType))
                );
              this._loadTooltip(c, l);
            }
          0 != n && ((d.fixedSize = !0), d.set_width(n));
          0 != m && ((d.fixedSize = !0), d.set_height(m));
          return d;
        },
        _loadCheckBox: function (a) {
          var b = x.xml_str(a, "label");
          var c = x.xml_str(a, "context", !0, "ui");
          var d = x.xml_str(a, "code", !0, ""),
            e = x.xml_bool(a, "checked", !1);
          b = this.getText(b, c, !0, d);
          c = this._loadWidth(a, 100, "label_width");
          d = x.xml_str(a, "check_src", !0);
          var f = x.xml_str(a, "box_src", !0),
            h = null;
          if (Ma.resolve(a, "param")) {
            h = [];
            for (var m = 0, n = Ab.resolve(a, "param"); m < n.length; ) {
              var p = n[m];
              ++m;
              if (Ib.resolve(p, "type") && Ib.resolve(p, "value")) {
                var g = Pb.resolve(p, "type");
                g = g.toLowerCase();
                var k = Pb.resolve(p, "value"),
                  l = k;
                p = x.xml_i(p, "sort", -1);
                switch (g) {
                  case "bool":
                  case "boolean":
                    k = new String(k);
                    k = k.toLowerCase();
                    l = "true" == k || "1" == k ? !0 : !1;
                    break;
                  case "color":
                  case "hex":
                    g = Xb.fromString(k);
                    if (null == g)
                      throw C.thrown(
                        "U.parseHex() unable to parse hex String " + k
                      );
                    l = g;
                    break;
                  case "float":
                    l = parseFloat(k);
                    break;
                  case "int":
                    l = I.parseInt(k);
                    break;
                  case "string":
                    l = new String(k);
                }
                h.push({ sort: p, value: l });
              }
            }
            h.sort(Ia.sortParams);
            m = 0;
            for (n = h.length; m < n; ) (k = m++), (h[k] = h[k].value);
          }
          n = m = null;
          "" != f
            ? (m = x.gfx(f))
            : Ma.resolve(a, "box") &&
              (m =
                "" != x.xml_str(Xa.resolve(a, "box"), "slice9")
                  ? this._load9SliceSprite(Xa.resolve(a, "box"))
                  : this._loadSprite(Xa.resolve(a, "box")));
          "" != d
            ? (n = x.gfx(d))
            : Ma.resolve(a, "check") &&
              (n =
                "" != x.xml_str(Xa.resolve(a, "check"), "slice9")
                  ? this._load9SliceSprite(Xa.resolve(a, "check"))
                  : this._loadSprite(Xa.resolve(a, "check")));
          c = new Ce(0, 0, m, n, b, c, h);
          this.formatButtonText(a, c);
          d = this._loadWidth(a, 0, "text_x") | 0;
          a = this._loadHeight(a, 0, "text_y") | 0;
          c.set_textX(d);
          c.set_textY(a);
          c.set_text(b);
          c.set_checked(e);
          return c;
        },
        _loadDropDownMenu: function (a) {
          var b = x.xml_str(a, "label"),
            c = x.xml_str(a, "context", !0, "ui"),
            d = x.xml_str(a, "code", !0, "");
          b = this.getText(b, c, !0, d);
          var e = x.xml_str(a, "back_def", !0),
            f = x.xml_str(a, "panel_def", !0),
            h = x.xml_str(a, "button_def", !0),
            m = x.xml_str(a, "label_def", !0),
            n = (c = d = null),
            p = null;
          "" != e && (d = this._loadSprite(this.getDefinition(e)));
          "" != f && (c = this._load9SliceSprite(this.getDefinition(f)));
          if ("" != h)
            try {
              n = this._loadButton(this.getDefinition(h), !1, !1);
            } catch (k) {
              if (((Ba.lastError = k), C.caught(k).unwrap() instanceof Cb))
                n = null;
              else throw k;
            }
          if ("" != m) {
            try {
              p = this._loadText(this.getDefinition(m));
            } catch (k) {
              if (((Ba.lastError = k), C.caught(k).unwrap() instanceof Cb))
                p = null;
              else throw k;
            }
            null != p && "" != b && p.set_text(b);
          }
          e = b = null;
          if (Ma.resolve(a, "data"))
            for (f = 0, a = Ab.resolve(a, "data"); f < a.length; )
              (h = a[f]),
                ++f,
                null == e && (e = []),
                (h = new vl(x.xml_str(h, "name", !0), x.xml_str(h, "label"))),
                e.push(h);
          else if (Ma.resolve(a, "asset"))
            for (f = 0, a = Ab.resolve(a, "asset"); f < a.length; ) {
              m = a[f];
              ++f;
              null == b && (b = []);
              h = x.xml_str(m, "def", !0);
              m = x.xml_name(m);
              var g = null;
              try {
                g = this._loadButton(this.getDefinition(h), !1);
              } catch (k) {
                if (((Ba.lastError = k), !(C.caught(k).unwrap() instanceof Cb)))
                  throw k;
              }
              null != g && ((g.name = m), null == b && (b = []), b.push(g));
            }
          d = new Hh(120, d, p, n);
          return new Jf(0, 0, e, null, d, c, b);
        },
        _loadTest: function (a) {
          var b = !0;
          if (a.nodeType == D.Document) var c = "Document";
          else {
            if (a.nodeType != D.Element)
              throw C.thrown(
                "Bad node type, expected Element but found " +
                  (null == a.nodeType ? "null" : ha.toString(a.nodeType))
              );
            c = a.nodeName;
          }
          if ("load_if" == c && ((b = this._loadTestSub(a)), 0 == b)) return !1;
          if (Ma.resolve(a, "load_if"))
            for (c = 0, a = Ab.resolve(a, "load_if"); c < a.length; ) {
              var d = a[c];
              ++c;
              var e = d;
              if (e.nodeType != D.Document && e.nodeType != D.Element)
                throw C.thrown(
                  "Bad node type, expected Element or Document but found " +
                    (null == e.nodeType ? "null" : ha.toString(e.nodeType))
                );
              if (null == e.children[0] && ((b = this._loadTestSub(d)), 0 == b))
                return !1;
            }
          return b;
        },
        _loadTestSub: function (a) {
          var b = x.xml_bool(a, "is", !0),
            c = x.xml_f(a, "aspect_ratio", -1);
          if (-1 != c) {
            var d = !0;
            var e = pa.__cast(p.width, Im) / pa.__cast(p.height, Im),
              f = Math.abs(e - c);
            if (Ib.resolve(a, "tolerance"))
              (c = x.xml_f(a, "tolerance", 0.1)), f > c && (d = !1);
            else if (
              Ib.resolve(a, "tolerance_plus") ||
              Ib.resolve(a, "tolerance_minus")
            ) {
              var h = x.xml_f(a, "tolerance_minus", -1),
                m = x.xml_f(a, "tolerance_plus", -1);
              e > c && -1 != m && f > m && (d = !1);
              e < c && -1 != h && f > h && (d = !1);
            }
            if (d != b) return !1;
          }
          f = x.xml_pt(a, "resolution", null);
          if (null != f) {
            d = !0;
            c = x.xml_pt(a, "tolerance", null);
            null == c && (c = new U(0, 0));
            e = Math.abs(f.y - p.height);
            if (Math.abs(f.x - p.width) > c.x || e > c.y) d = !1;
            if (d != b) return !1;
          }
          d = x.xml_str(a, "haxedef", !0, "");
          f = x.xml_bool(a, "value", !0);
          if ("" != d && (x.checkHaxedef(d) == f) != b) return !1;
          f = x.xml_str(a, "variable", !1, "");
          a = x.xml_str(a, "type", !0, "string");
          return "" != f &&
            ((d = !0),
            (f = this.parseVarValue(f)),
            null != f && (d = this.checkVariable(f.variable, f.value, a, f.op)),
            d != b)
            ? !1
            : !0;
        },
        parseVarValue: function (a) {
          for (
            var b = "== = != !== < > <= >=".split(" "), c, d = 0;
            d < b.length;

          ) {
            var e = b[d];
            ++d;
            if (
              -1 != a.indexOf(e) &&
              ((c = a.split(e)), null != c && 2 == c.length)
            )
              return { variable: c[0], value: c[1], op: e };
          }
          return null;
        },
        _loadLayout: function (a) {
          var b = x.xml_str(a, "name", !0),
            c = this._loadWidth(a, 0, "x"),
            d = this._loadHeight(a, 0, "y");
          a = this.createUI(a);
          a.set_x(c);
          a.set_y(d);
          a.name = b;
          return a;
        },
        addToCleanup: function (a) {
          null != this._assetsToCleanUp &&
            -1 == this._assetsToCleanUp.indexOf(a) &&
            this._assetsToCleanUp.push(a);
        },
        addToScaledAssets: function (a) {
          null != this._scaledAssets &&
            -1 == this._scaledAssets.indexOf(a) &&
            this._scaledAssets.push(a);
        },
        cleanup: function () {
          for (var a = 0, b = this._assetsToCleanUp; a < b.length; ) {
            var c = b[a];
            ++a;
            p.bitmap.removeByKey(c);
          }
          this._scaledAssets = this._assetsToCleanUp = null;
        },
        createUI: function (a) {
          return new Ia(a, this, this, this._ptr_tongue, this.liveFilePath);
        },
        _loadTabMenu: function (a) {
          var b = x.xml_str(a, "back_def");
          b = this.getDefinition(b);
          null == b && (b = a);
          b = Ia.consolidateData(b, a);
          switch (x.xml_str(a, "back_type", !0, "chrome")) {
            case "region":
              b = new jg();
              break;
            case "sprite":
              b = this._loadSprite(b);
              break;
            default:
              b = this._load9SliceSprite(b, "tab_menu");
          }
          var c = null,
            d = x.xml_bool(a, "stretch_tabs", !1),
            e = "front",
            f = "back";
          Ma.resolve(a, "stacking") &&
            ((e = x.xml_str(Xa.resolve(a, "stacking"), "toggled", !0, "front")),
            (f = x.xml_str(
              Xa.resolve(a, "stacking"),
              "untoggled",
              !0,
              "back"
            )));
          var h = null;
          "" != x.xml_str(a, "spacing", !0, "") &&
            (h = this._loadWidth(a, 0, "spacing"));
          var m = this._loadWidth(a, 0, "tab_x"),
            n = this._loadHeight(a, 0, "tab_y");
          null == n && (n = 0);
          null == m && (m = 0);
          var p = U._pool.get().set(m, n);
          p._inPool = !1;
          var g = "";
          if (Ma.resolve(a, "tab")) {
            n = 0;
            for (m = Ab.resolve(a, "tab"); n < m.length; )
              (c = m[n]),
                ++n,
                (c = x.xml_str(c, "use_def")),
                "" != c && (g = c);
            c = "" != g ? this.getDefinition(g) : Xa.resolve(a, "tab");
          }
          g = [];
          if (Ma.resolve(a, "tab"))
            for (n = 0, m = Ab.resolve(a, "tab"); n < m.length; ) {
              var k = m[n];
              ++n;
              var l = x.xml_name(k);
              if ("" != l) {
                var q = x.xml_str(k, "label"),
                  r = x.xml_str(k, "context", !0, "ui"),
                  u = x.xml_str(k, "code", !0, "");
                q = this.getText(q, r, !0, u);
                this.getText(q, r, !0, u);
                k = Ia.consolidateData(k, c);
                q = this._loadButton(k, !0, !0, "tab_menu");
                q.name = l;
                g.push(q);
                this._loadTooltip(q, k);
              }
            }
          if (0 < g.length) {
            if (null == c || !Ma.resolve(c, "text"))
              for (n = 0; n < g.length; )
                (m = g[n]),
                  ++n,
                  m instanceof Yb &&
                    (m.label.set_color(16777215),
                    m.label instanceof gd &&
                      ((m = m.label),
                      m.set_borderStyle(Vb.OUTLINE),
                      m.set_borderColor(0),
                      m.set_borderSize(1),
                      m.set_borderQuality(1)));
            (null != c && Ib.resolve(c, "width")) || (d = !0);
          }
          b = new Ih(b, g, null, p, d, h, [e, f]);
          if (Ma.resolve(a, "group"))
            for (n = 0, m = Ab.resolve(a, "group"); n < m.length; )
              (a = m[n]),
                ++n,
                (l = x.xml_name(a)),
                (a = new Ia(a, b, this, this._ptr_tongue)),
                null != g &&
                  0 < g.length &&
                  ((d = a), d.set_y(d.y + g[0].get_height())),
                (a.name = l),
                b.addGroup(a);
          return b;
        },
        _loadNumericStepper: function (a, b) {
          null == b && (b = !0);
          var c = x.xml_f(a, "step", 1),
            d = x.xml_f(a, "value", 0),
            e = x.xml_f(a, "min", 0),
            f = x.xml_f(a, "max", 10),
            h = x.xml_i(a, "decimals", 0),
            m = x.xml_bool(a, "percent"),
            n = x.xml_str(a, "stack", !0, "");
          "" == n && (n = x.xml_str(a, "stacking", !0, ""));
          n = n.toLowerCase();
          switch (n) {
            case "h":
            case "horizontal":
            case "horz":
              n = 1;
              break;
            case "v":
            case "vert":
            case "vertical":
              n = 0;
              break;
            default:
              n = 1;
          }
          var p = null,
            g = null,
            k = null;
          Ma.resolve(a, "text") &&
            (p = this._loadThing("text", Xa.resolve(a, "text")));
          Ma.resolve(a, "plus") &&
            (g = this._loadThing("button", Xa.resolve(a, "plus")));
          Ma.resolve(a, "minus") &&
            (k = this._loadThing("button", Xa.resolve(a, "minus")));
          c = new Jh(0, 0, c, d, e, f, h, n, p, g, k, m);
          if (b) {
            b = null;
            if (Ma.resolve(a, "param")) {
              b = [];
              d = 0;
              for (a = Ab.resolve(a, "param"); d < a.length; )
                if (
                  ((f = a[d]),
                  ++d,
                  Ib.resolve(f, "type") && Ib.resolve(f, "value"))
                ) {
                  h = Pb.resolve(f, "type");
                  h = h.toLowerCase();
                  m = e = Pb.resolve(f, "value");
                  f = x.xml_i(f, "sort", -1);
                  switch (h) {
                    case "bool":
                    case "boolean":
                      e = new String(e);
                      e = e.toLowerCase();
                      m = "true" == e || "1" == e ? !0 : !1;
                      break;
                    case "color":
                    case "hex":
                      h = Xb.fromString(e);
                      if (null == h)
                        throw C.thrown(
                          "U.parseHex() unable to parse hex String " + e
                        );
                      m = h;
                      break;
                    case "float":
                      m = parseFloat(e);
                      break;
                    case "int":
                      m = I.parseInt(e);
                      break;
                    case "string":
                      m = new String(e);
                  }
                  b.push({ sort: f, value: m });
                }
              b.sort(Ia.sortParams);
              d = 0;
              for (a = b.length; d < a; ) (e = d++), (b[e] = b[e].value);
            }
            c.set_params(b);
          }
          return c;
        },
        getResizeRatio: function (a, b) {
          null == b && (b = 1);
          var c = x.xml_str(a, "resize_ratio_x", !0);
          return "" == c
            ? ((c = x.xml_str(a, "resize_ratio_y", !0)),
              "" == c
                ? ((a = x.xml_f(a, "resize_ratio", -1)), new U(a, b))
                : new U(parseFloat(c), 1))
            : new U(parseFloat(c), 0);
        },
        _loadButton: function (a, b, c, d) {
          null == d && (d = "");
          null == c && (c = !1);
          null == b && (b = !0);
          var e = this._loadColor(a);
          var f = x.xml_f(a, "resize_ratio", -1),
            h = this._loadCompass(a, "resize_point"),
            m = x.xml_bool(a, "resize_label", !1),
            n = x.xml_str(a, "label"),
            p = null,
            g = null;
          if (Ma.resolve(a, "sprite"))
            for (var k = 0, l = Ab.resolve(a, "sprite"); k < l.length; ) {
              var q = l[k];
              ++k;
              c && x.xml_bool(q, "toggle")
                ? (g = this._loadThing("sprite", q))
                : (p = this._loadThing("sprite", q));
            }
          k = x.xml_str(a, "context", !0, "ui");
          q = x.xml_str(a, "code", !0, "");
          n = this.getText(n, k, !0, q);
          q = this._loadWidth(a, 0, "width") | 0;
          var r = this._loadHeight(a, 0, "height") | 0,
            u = null;
          if (Ma.resolve(a, "param")) {
            u = [];
            k = 0;
            for (l = Ab.resolve(a, "param"); k < l.length; ) {
              var z = l[k];
              ++k;
              if (Ib.resolve(z, "type") && Ib.resolve(z, "value")) {
                var v = Pb.resolve(z, "type");
                v = v.toLowerCase();
                var y = Pb.resolve(z, "value"),
                  w = y;
                z = x.xml_i(z, "sort", -1);
                switch (v) {
                  case "bool":
                  case "boolean":
                    y = new String(y);
                    y = y.toLowerCase();
                    w = "true" == y || "1" == y ? !0 : !1;
                    break;
                  case "color":
                  case "hex":
                    v = Xb.fromString(y);
                    if (null == v)
                      throw C.thrown(
                        "U.parseHex() unable to parse hex String " + y
                      );
                    w = v;
                    break;
                  case "float":
                    w = parseFloat(y);
                    break;
                  case "int":
                    w = I.parseInt(y);
                    break;
                  case "string":
                    w = new String(y);
                }
                u.push({ sort: z, value: w });
              }
            }
            u.sort(Ia.sortParams);
            k = 0;
            for (l = u.length; k < l; ) (y = k++), (u[y] = u[y].value);
          }
          k = u;
          null == p
            ? ((l = 0 == Ma.resolve(a, "graphic")),
              (e = new Yc(0, 0, n, null, l, !1, e)),
              (e._autoCleanup = !1))
            : "" != n
            ? ((l = new gd(0, 0, 80, n, 8)),
              l.setFormat(null, 8, 3355443, "center"),
              (e = new Q()),
              e.add(p),
              e.add(l),
              (e = new De(0, 0, e)))
            : (e = new De(0, 0, p));
          e.resize_ratio = f;
          e.resize_point = h;
          e.autoResizeLabel = m;
          b && e.set_params(k);
          if (Ma.resolve(a, "graphic"))
            if (x.xml_bool(Xa.resolve(a, "graphic"), "blank"))
              e.loadGraphicSlice9(["", "", ""], q, r, null, 0, f);
            else {
              m = null;
              c
                ? ((b = "     ".split(" ")),
                  (h = [null, null, null, null, null, null]))
                : ((b = ["", "", ""]), (h = [null, null, null]));
              u = x.xml_i(Xa.resolve(a, "graphic"), "src_w", 0);
              y = x.xml_i(Xa.resolve(a, "graphic"), "src_h", 0);
              z = x.xml_str(Xa.resolve(a, "graphic"), "tile", !0, "");
              var O = 0;
              switch (z) {
                case "h":
                case "horizontal":
                  O = 16;
                  break;
                case "v":
                case "vertical":
                  O = 1;
                  break;
                case "all":
                case "both":
                case "hv":
                case "true":
                case "vh":
                  O = 17;
              }
              z = O;
              k = x.xml_str(Xa.resolve(a, "graphic"), "frames", !0);
              if ("" != k)
                for (m = [], l = k.split(","), k = 0; k < l.length; )
                  (v = l[k]), ++k, m.push(I.parseInt(v));
              k = 0;
              for (l = Ab.resolve(a, "graphic"); k < l.length; ) {
                v = l[k];
                ++k;
                var A = x.xml_name(v);
                w = x.xml_str(v, "image");
                var D = yb.toIntArray(x.xml_str(v, "slice9"));
                z = x.xml_str(v, "tile", !0, "");
                O = 0;
                switch (z) {
                  case "h":
                  case "horizontal":
                    O = 16;
                    break;
                  case "v":
                  case "vertical":
                    O = 1;
                    break;
                  case "all":
                  case "both":
                  case "hv":
                  case "true":
                  case "vh":
                    O = 17;
                }
                z = O;
                var t = x.xml_bool(v, "toggle");
                t = t && c;
                O = x.gfx(w);
                switch (A) {
                  case "all":
                    A = c ? 6 : 3;
                    0 != y && (A = (x.getBmp(O).height / y) | 0);
                    "" != w &&
                      (b = [this.loadScaledSrc(v, "image", "scale_src", 1, A)]);
                    h = [this.load9SliceSprite_scaleSub(D, v, b[0], "image")];
                    y = x.getBmp(b[0]);
                    u = y.width;
                    y = (y.height / A) | 0;
                    break;
                  case "active":
                  case "highlight":
                  case "hilight":
                  case "hover":
                  case "over":
                    "" != w &&
                      (t
                        ? (b[4] = this.loadScaledSrc(v, "image", "scale_src"))
                        : (b[1] = this.loadScaledSrc(v, "image", "scale_src")));
                    t
                      ? (h[4] = this.load9SliceSprite_scaleSub(
                          D,
                          v,
                          b[4],
                          "image"
                        ))
                      : (h[1] = this.load9SliceSprite_scaleSub(
                          D,
                          v,
                          b[1],
                          "image"
                        ));
                    break;
                  case "down":
                  case "pressed":
                  case "pushed":
                    "" != w &&
                      (t
                        ? (b[5] = this.loadScaledSrc(v, "image", "scale_src"))
                        : (b[2] = this.loadScaledSrc(v, "image", "scale_src")));
                    t
                      ? (h[5] = this.load9SliceSprite_scaleSub(
                          D,
                          v,
                          b[5],
                          "image"
                        ))
                      : (h[2] = this.load9SliceSprite_scaleSub(
                          D,
                          v,
                          b[2],
                          "image"
                        ));
                    break;
                  case "":
                  case "inactive":
                  case "normal":
                  case "up":
                    "" != w &&
                      (t
                        ? (b[3] = this.loadScaledSrc(v, "image", "scale_src"))
                        : (b[0] = this.loadScaledSrc(v, "image", "scale_src"))),
                      t
                        ? (h[3] = this.load9SliceSprite_scaleSub(
                            D,
                            v,
                            b[3],
                            "image"
                          ))
                        : (h[0] = this.load9SliceSprite_scaleSub(
                            D,
                            v,
                            b[0],
                            "image"
                          ));
                }
                "" != b[0] &&
                  3 <= b.length &&
                  ("" == b[1] && (b[1] = b[0]),
                  "" == b[2] && (b[2] = b[1]),
                  6 <= b.length &&
                    ("" == b[3] && (b[3] = b[0]),
                    "" == b[4] && (b[4] = b[1]),
                    "" == b[5] && (b[5] = b[2])));
              }
              e.loadGraphicSlice9(b, q, r, h, z, f, c, u, y, m);
            }
          else
            "tab_menu" == d
              ? ((b =
                  "flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png".split(
                    " "
                  )),
                (k = yb.toIntArray("6,6,11,11")),
                (h = [k, k, k, k, k, k]),
                e.loadGraphicSlice9(b, q, r, h, 0, f, c))
              : (0 >= q && (q = 80),
                0 >= r && (r = 20),
                e.loadGraphicSlice9(null, q, r, null, 0, f, c));
          null == p
            ? null != a && Ma.resolve(a, "text")
              ? this.formatButtonText(a, e)
              : "tab_menu" == d
              ? ((e.up_color = 16777215),
                (e.down_color = 16777215),
                (e.over_color = 16777215),
                (e.up_toggle_color = 16777215),
                (e.down_toggle_color = 16777215),
                (e.over_toggle_color = 16777215))
              : e.autoCenterLabel()
            : e.autoCenterLabel();
          null != p &&
            "" != n &&
            null != a &&
            Ma.resolve(a, "text") &&
            this.formatButtonText(a, e);
          c = d = 0;
          null != a.get("text_x")
            ? (d = this._loadWidth(a, 0, "text_x") | 0)
            : null != a.get("label_x") &&
              (d = this._loadWidth(a, 0, "label_x") | 0);
          null != a.get("text_y")
            ? (c = this._loadHeight(a, 0, "text_y") | 0)
            : null != a.get("label_y") &&
              (c = this._loadHeight(a, 0, "label_y") | 0);
          if (e instanceof De)
            if (((a = e), a.label instanceof Q))
              for (a = a.label, k = 0, l = a.group.members; k < l.length; ) {
                if (((a = l[k]), ++k, a instanceof gd)) {
                  f = a.offset;
                  f.set_x(f.x - d);
                  a = a.offset;
                  a.set_y(a.y - c);
                  break;
                }
              }
            else
              (k = a.label.offset),
                k.set_x(k.x - d),
                (k = a.label.offset),
                k.set_y(k.y - c),
                null != g &&
                  ((k = g.offset),
                  k.set_x(k.x - d),
                  (k = g.offset),
                  k.set_y(k.y - c));
          else
            (a = e),
              (k = a.label.offset),
              k.set_x(k.x - d),
              (k = a.label.offset),
              k.set_y(k.y - c);
          null != p && null != g && e.set_toggle_label(g);
          if (e instanceof Yb && ((p = e), null != p._assetsToCleanup))
            for (k = 0, l = p._assetsToCleanup; k < l.length; )
              (p = l[k]), ++k, this.addToCleanup(p);
          return e;
        },
        _loadRegion: function (a) {
          var b = this.calcMaxMinSize(a),
            c = this._loadWidth(a) | 0,
            d = this._loadHeight(a) | 0;
          null != b &&
            ((d = x.conformToBounds(new Ra(c, d), b)),
            (c = d.x | 0),
            (d = d.y | 0));
          a = x.xml_bool(a, "visible", !0);
          c = new jg(0, 0, c, d);
          c.set_visible(a);
          return c;
        },
        _load9SliceSprite: function (a, b) {
          null == b && (b = "");
          var c = this.getResizeRatio(a),
            d = this._loadColor(a),
            e = c.x,
            f = this._loadCompass(a, "resize_point");
          c = c.y | 0;
          var h = this.calcMaxMinSize(a);
          var m = "";
          if (null != a.get("src"))
            if (((m = a.get("src")), "" == m || null == m)) m = "";
            else {
              m = x.gfx(m);
              try {
                if (!la.exists(m, "IMAGE"))
                  throw C.thrown('couldn\'t load bmp "src"');
              } catch (k) {
                if (
                  ((Ba.lastError = k), "string" != typeof C.caught(k).unwrap())
                )
                  throw k;
              }
            }
          var n = Ma.resolve(a, "scale_src");
          if (n) {
            var g = m;
            m = this.loadScaledSrc(a, "src", "scale_src");
            m != g && this.addToCleanup(g);
          }
          "" == m && (m = null);
          null == m &&
            "tab_menu" == b &&
            (m = "flixel/flixel-ui/img/chrome_flat.png");
          b = this._loadWidth(a) | 0;
          g = this._loadHeight(a) | 0;
          null != h &&
            (b < h.min_width
              ? (b = h.min_width | 0)
              : b > h.max_width && (b = h.max_width),
            g < h.min_height
              ? (g = h.min_height | 0)
              : g > h.max_height && (g = h.max_height | 0));
          if (0 == b || 0 == g) return null;
          h = new ma(0, 0, b, g);
          b = yb.toIntArray(x.xml_str(a, "slice9"));
          g = "";
          var l = m;
          n &&
            ((b = this.load9SliceSprite_scaleSub(b, a, m)),
            (g = m),
            (l = p.bitmap._cache.h[m]));
          m = x.xml_bool(a, "smooth", !1);
          n = 0;
          switch (x.xml_str(a, "tile", !0, "")) {
            case "h":
            case "horizontal":
              n = 16;
              break;
            case "v":
            case "vertical":
              n = 1;
              break;
            case "all":
            case "both":
            case "hv":
            case "true":
            case "vh":
              n = 17;
          }
          return new P(0, 0, l, h, b, n, m, g, e, f, c, !1, d);
        },
        load9SliceSprite_scaleSub: function (a, b, c, d) {
          null == d && (d = "src");
          var e = "";
          if (null != b.get(d))
            if (((e = b.get(d)), "" == e || null == e)) e = "";
            else {
              e = x.gfx(e);
              try {
                if (!la.exists(e, "IMAGE"))
                  throw C.thrown("couldn't load bmp \"" + d + '"');
              } catch (h) {
                if (
                  ((Ba.lastError = h), "string" != typeof C.caught(h).unwrap())
                )
                  throw h;
              }
            }
          b = e;
          if (c == b) return a;
          c = null != p.bitmap._cache.h[c] ? p.bitmap._cache.h[c].bitmap : null;
          null == c && (c = la.getBitmapData(b));
          b = la.getBitmapData(b, !1);
          d = c.width / b.width;
          e = c.height / b.height;
          if (0.001 >= Math.abs(1 - d) && 0.001 >= Math.abs(1 - e)) return a;
          if (null != a) {
            a[0] = (a[0] * d) | 0;
            a[1] = (a[1] * e) | 0;
            var f = b.height - a[3];
            a[2] = (c.width - (((b.width - a[2]) * d) | 0)) | 0;
            a[3] = (c.height - ((f * e) | 0)) | 0;
          }
          return a;
        },
        _loadBox: function (a) {
          var b = this._loadWidth(a, 1, "thickness") | 0,
            c = this.calcMaxMinSize(a);
          null == c &&
            (c = {
              min_width: -Infinity,
              min_height: -Infinity,
              max_width: Infinity,
              max_height: Infinity,
            });
          var d = this._loadWidth(a) | 0,
            e = this._loadHeight(a) | 0;
          null != c &&
            (d < c.min_width
              ? (d = c.min_width | 0)
              : d > c.max_width && (d = c.max_width | 0),
            e < c.min_height
              ? (e = c.max_height | 0)
              : e > c.max_height && (e = c.max_height | 0));
          a = x.xml_str(a, "color", !0, "0xff000000");
          c = 0;
          if ("" != a && ((c = Xb.fromString(a)), null == c))
            throw C.thrown("U.parseHex() unable to parse hex String " + a);
          a = new Mb(0, 0);
          var f = d + "x" + e + ":" + c + ":" + b;
          null != p.bitmap._cache.h[f]
            ? a.loadGraphic(f)
            : (a.makeGraphic(d, e, c, !1, f),
              (b = new ma(b, b, d - 2 * b, e - 2 * b)),
              a.graphic.bitmap.fillRect(b, 0));
          return a;
        },
        _loadLine: function (a) {
          var b = x.xml_str(a, "axis", !0, "horizontal"),
            c = this._loadWidth(a, -1, "thickness") | 0,
            d = this.calcMaxMinSize(a);
          null == d &&
            (d = {
              min_width: 1,
              min_height: 1,
              max_width: Infinity,
              max_height: Infinity,
            });
          switch (b) {
            case "h":
            case "horizontal":
            case "horz":
              d.max_height = c;
              d.min_height = c;
              break;
            case "v":
            case "vert":
            case "vertical":
              (d.max_width = c), (d.min_width = c);
          }
          var e = this._loadWidth(a) | 0,
            f = this._loadHeight(a) | 0;
          null != d &&
            (e < d.min_width
              ? (e = d.min_width | 0)
              : e > d.max_width && (e = d.max_width | 0),
            f < d.min_height
              ? (f = d.max_height | 0)
              : f > d.max_height && (f = d.max_height | 0));
          a = x.xml_str(a, "color", !0, "0xff000000");
          d = 0;
          if ("" != a && ((d = Xb.fromString(a)), null == d))
            throw C.thrown("U.parseHex() unable to parse hex String " + a);
          b = "horizontal" == b ? Kh.HORIZONTAL : Kh.VERTICAL;
          return new Lh(
            0,
            0,
            b,
            b == Kh.HORIZONTAL ? e : f,
            -1 != c ? c : b == Kh.HORIZONTAL ? f : e,
            d
          );
        },
        _loadBar: function (a) {
          var b = {
              filledColors: null,
              emptyColors: null,
              chunkSize: null,
              gradRotation: null,
              filledColor: null,
              emptyColor: null,
              borderColor: null,
              filledImgSrc: "",
              emptyImgSrc: "",
            },
            c = this._loadWidth(a, -1) | 0,
            d = this._loadHeight(a, -1) | 0;
          switch (x.xml_str(a, "fill_direction", !0)) {
            case "bottom_to_top":
              var e = xe.BOTTOM_TO_TOP;
              break;
            case "horizontal_inside_out":
              e = xe.HORIZONTAL_INSIDE_OUT;
              break;
            case "horizontal_outside_in":
              e = xe.HORIZONTAL_OUTSIDE_IN;
              break;
            case "left_to_right":
              e = xe.LEFT_TO_RIGHT;
              break;
            case "right_to_left":
              e = xe.RIGHT_TO_LEFT;
              break;
            case "top_to_bottom":
              e = xe.TOP_TO_BOTTOM;
              break;
            case "vertical_inside_out":
              e = xe.VERTICAL_INSIDE_OUT;
              break;
            case "vertical_outside_in":
              e = xe.VERTICAL_OUTSIDE_IN;
              break;
            default:
              e = xe.LEFT_TO_RIGHT;
          }
          var f = x.xml_str(a, "parent_ref", !0),
            h = "" != f ? this.getAsset(f) : null,
            m = x.xml_str(a, "variable");
          f = x.xml_f(a, "value", -1);
          var n = x.xml_f(a, "min", 0),
            p = x.xml_f(a, "max", 100);
          -1 == f && (f = p);
          b.borderColor = x.xml_color(a, "border_color");
          var g = null != b.borderColor;
          b.filledColor = x.xml_color(a, "filled_color");
          null == b.filledColor && (b.filledColor = x.xml_color(a, "color"));
          b.emptyColor = x.xml_color(a, "empty_color");
          b.filledColors = x.xml_colorArray(a, "filled_colors");
          b.emptyColors = x.xml_colorArray(a, "empty_colors");
          null == b.filledColors &&
            (b.filledColors = x.xml_colorArray(a, "colors"));
          b.filledImgSrc = this.loadScaledSrc(a, "src_filled");
          b.emptyImgSrc = this.loadScaledSrc(a, "src_empty");
          "" == b.filledImgSrc &&
            (b.filledImgSrc = this.loadScaledSrc(a, "src"));
          b.chunkSize = x.xml_i(a, "chunk_size", 1);
          b.gradRotation = x.xml_i(a, "rotation", 90);
          "" == b.filledImgSrc &&
            null == b.filledColor &&
            null == b.filledColors &&
            (b.filledColor = -65536);
          a =
            -1 == c && -1 == d
              ? new Ng(0, 0, e, 100, 10, h, m, n, p, g)
              : new Ng(0, 0, e, c, d, h, m, n, p, g);
          a.set_style(b);
          a.resize(a.barWidth, a.barHeight);
          a.set_value(f);
          return a;
        },
        _loadSprite: function (a) {
          var b = this.loadScaledSrc(a);
          var c = this.calcMaxMinSize(a),
            d = this.getResizeRatio(a, -1),
            e = d.x;
          d = d.y | 0;
          var f = this._loadCompass(a, "resize_point"),
            h = this._loadWidth(a, -1) | 0,
            m = this._loadHeight(a, -1) | 0;
          null != c &&
            (h < c.min_width
              ? (h = c.min_width | 0)
              : h > c.max_width && (h = c.max_width | 0),
            m < c.min_height
              ? (m = c.max_height | 0)
              : m > c.max_height && (m = c.max_height | 0));
          if ("" != b)
            -1 == h && -1 == m
              ? (a = new Mb(0, 0, b))
              : (-1 == e ||
                  (-1 != h && -1 != m) ||
                  (-1 == d && (-1 == h && (d = 0), -1 == m && (d = 1)),
                  1 == d ? (m = (1 / e) * h) : 0 == d && (h = (1 / e) * m)),
                (b = this.loadSmooth(a, !0)),
                (a = new Mb(
                  0,
                  0,
                  x.loadScaledImage(x.xml_str(a, "src"), h, m, b)
                )));
          else {
            a = x.xml_str(a, "color");
            b = 0;
            if ("" != a && ((b = Xb.fromString(a)), null == b))
              throw C.thrown("U.parseHex() unable to parse hex String " + a);
            a = new Mb(0, 0);
            a.makeGraphic(h, m, b);
          }
          a.set_resize_point(f);
          a.set_resize_ratio(e);
          a.resize_ratio_axis = d;
          return a;
        },
        loadSmooth: function (a, b) {
          b = b ? "true" : "false";
          var c = x.xml_str(a, "smooth", !0, b);
          "" == c && (c = x.xml_str(a, "antialias", !0, b));
          return x.boolify(c);
        },
        loadScaledSrc: function (a, b, c, d, e) {
          null == e && (e = 1);
          null == d && (d = 1);
          null == c && (c = "scale");
          null == b && (b = "src");
          var f = x.xml_str(a, b);
          if (Ma.resolve(a, c))
            for (var h = 0, m = Ab.resolve(a, c); h < m.length; ) {
              c = m[h];
              ++h;
              var n = x.xml_f(c, "screen_ratio", -1),
                g = x.xml_f(c, "tolerance", 0.1),
                l = p.width / p.height;
              if (0 > n || (0 < n && Math.abs(n - l) <= g)) {
                h = x.xml_str(c, "suffix");
                h = f + h;
                g = -1;
                m = this.loadSmooth(c, !0);
                n = this._loadHeight(c, -1, "to_height");
                -1 != n
                  ? ((l = x.getBmp(x.gfx(f))), null != l && (g = n / l.height))
                  : ((g = this._loadScale(c, -1)),
                    -1 == g && (g = this._loadScale(c, -1, "value")));
                n = -1 != g ? g : this._loadScaleX(c, -1);
                g = -1 != g ? g : this._loadScaleY(c, -1);
                if (0 < n && 0 < g) {
                  0 >= n && (n = 1);
                  0 >= g && (g = 1);
                  l = this._loadWidth(c, -1);
                  var k = this._loadHeight(c, -1);
                  if (-1 == l || -1 == k)
                    (c = la.getBitmapData(x.gfx(f))),
                      (l = c.width),
                      (k = c.height);
                  l *= n;
                  k *= g;
                } else
                  (l = this._loadWidth(c, -1)), (k = this._loadHeight(c, -1));
                if (0 != l && 0 != k) {
                  if (1 < e || 1 < d)
                    return (
                      (c = la.getBitmapData(x.gfx(f))),
                      (d = x.scaleAndStoreTileset(
                        x.gfx(h),
                        g,
                        (c.width / d) | 0,
                        (c.height / e) | 0,
                        l | 0,
                        (k / e) | 0,
                        m
                      )),
                      this.addToScaledAssets(d),
                      d
                    );
                  a = x.loadScaledImage(h, l, k, m);
                  this.addToScaledAssets(a);
                  return a;
                }
                break;
              }
            }
          d = "";
          if (null != a.get(b))
            if (((d = a.get(b)), "" == d || null == d)) d = "";
            else {
              d = x.gfx(d);
              try {
                if (!la.exists(d, "IMAGE"))
                  throw C.thrown("couldn't load bmp \"" + b + '"');
              } catch (Xk) {
                if (
                  ((Ba.lastError = Xk),
                  "string" != typeof C.caught(Xk).unwrap())
                )
                  throw Xk;
              }
            }
          return d;
        },
        _getAnchorPos: function (a, b, c) {
          switch (c) {
            case "":
              break;
            case "bottom":
            case "down":
              return this.screenHeight();
            case "center":
              if ("x" == b) return this.screenWidth() / 2;
              if ("y" == b) return this.screenHeight() / 2;
              break;
            case "left":
              break;
            case "right":
              return this.screenWidth();
            case "top":
            case "up":
              break;
            default:
              if (((a = x.perc_to_float(c)), !isNaN(a))) {
                if ("x" == b) return a * this.screenWidth();
                if ("y" == b) return a * this.screenHeight();
              } else if (new Ua("[\\w]+\\.[\\w]+", "").match(c))
                return (
                  (a = ""),
                  "x" == b && (a = "w"),
                  "y" == b && (a = "h"),
                  this._getStretch(1, a, c)
                );
          }
          return 0;
        },
        getRound: function (a, b) {
          null == b && (b = "");
          switch (x.xml_str(a, "round", !0, b)) {
            case "-1":
            case "down":
            case "floor":
              return Jm.Floor;
            case "1":
            case "ceil":
            case "ceiling":
            case "up":
              return Jm.Ceil;
            case "0":
            case "round":
            case "true":
              return Jm.Round;
          }
          return Jm.None;
        },
        doRound: function (a, b) {
          switch (b._hx_index) {
            case 0:
              return Math.floor(a);
            case 1:
              return Math.ceil(a);
            case 2:
              return Math.round(a);
            case 3:
              return a;
          }
        },
        calcMaxMinSize: function (a, b, c) {
          var d = 0,
            e = 0,
            f = Infinity,
            h = Infinity;
          if (Ma.resolve(a, "exact_size")) {
            var m = 0;
            for (a = Ab.resolve(a, "exact_size"); m < a.length; ) {
              f = a[m];
              ++m;
              d = x.xml_str(f, "width");
              e = x.xml_str(f, "height");
              var n = this.getRound(f);
              d = this.doRound(this._getDataSize("w", d, 0), n);
              e = this.doRound(this._getDataSize("h", e, 0), n);
              f = this.doRound(d, n);
              h = this.doRound(e, n);
            }
          } else if (Ma.resolve(a, "min_size"))
            for (m = 0, a = Ab.resolve(a, "min_size"); m < a.length; ) {
              n = a[m];
              ++m;
              var p = x.xml_str(n, "width");
              var g = x.xml_str(n, "height");
              n = this.getRound(n);
              p = this.doRound(this._getDataSize("w", p, 0), n);
              n = this.doRound(this._getDataSize("h", g, 0), n);
              p > d && (d = p);
              n > e && (e = n);
            }
          else if (Ma.resolve(a, "max_size"))
            for (m = 0, a = Ab.resolve(a, "max_size"); m < a.length; )
              (n = a[m]),
                ++m,
                (p = x.xml_str(n, "width")),
                (g = x.xml_str(n, "height")),
                (n = this.getRound(n)),
                (p = this.doRound(this._getDataSize("w", p, Infinity), n)),
                (n = this.doRound(this._getDataSize("h", g, Infinity), n)),
                p < f && (f = p),
                n < h && (h = n);
          else return null;
          null != b && (b > d && (d = b), b < f && (f = b));
          null != c && (c > e && (e = c), c < h && (h = c));
          0 >= f && (f = Infinity);
          0 >= h && (h = Infinity);
          return { min_width: d, min_height: e, max_width: f, max_height: h };
        },
        _getDataSize: function (a, b, c) {
          null == c && (c = 0);
          if (x.isStrNum(b)) return parseFloat(b);
          var d = x.perc_to_float(b);
          if (isNaN(d)) {
            if (0 == b.indexOf("stretch:"))
              return (
                (b = K.replace(b, "stretch:", "")),
                (d = b.split(",")),
                (b = this._getStretch(0, a, d[0])),
                (a = this._getStretch(1, a, d[1])),
                -1 != b && -1 != a ? a - b : c
              );
            if (0 == b.indexOf("asset:"))
              return (
                (b = K.replace(b, "asset:", "")),
                (c = this._getStretch(1, a, b))
              );
            if (new Ua("[\\w]+\\.[\\w]+", "").match(b))
              return (c = this._getStretch(1, a, b));
            d = "";
            b.indexOf("pt") == b.length - 2 &&
              (d = ba.substr(b, 0, b.length - 2));
            if ("" != d && x.isStrNum(d))
              switch (((b = parseFloat(d)), a)) {
                case "h":
                case "height":
                  return this._pointY * b;
                case "w":
                case "width":
                  return this._pointX * b;
              }
          } else
            switch (a) {
              case "h":
              case "height":
                return this.screenHeight() * d;
              case "scale":
              case "scale_x":
              case "scale_y":
                return d;
              case "w":
              case "width":
                return this.screenWidth() * d;
            }
          return c;
        },
        _getOperation: function (a) {
          for (
            var b = ["+", "-", "*", "/", "^"], c = "", d = Infinity, e = 0;
            e < b.length;

          ) {
            var f = b[e];
            ++e;
            var h = a.indexOf(f);
            -1 != h && h < d && ((d = h), (c = f));
          }
          d = !1;
          return "" != c &&
            -1 != a.indexOf(c) &&
            ((e = a.indexOf(c)),
            e != a.length - 1 &&
              ((b = ba.substr(a, 0, e)),
              (a = ba.substr(a, e + 1, a.length - (e + 1))),
              (e = a.indexOf("pt")),
              -1 != e && e == a.length - 2
                ? ((d = K.replace(a, "pt", "")), (e = parseFloat(d)), (d = !0))
                : (e = parseFloat(a)),
              isNaN(e) && (e = this.getAssetProperty(1, "", a)),
              0 != e || "0" == a))
            ? [b, c, e, d]
            : null;
        },
        _doOperation: function (a, b, c) {
          switch (b) {
            case "*":
              return a * c;
            case "+":
              return a + c;
            case "-":
              return a - c;
            case "/":
              return a / c;
            case "^":
              return Math.pow(a, c);
          }
          return a;
        },
        _getStretch: function (a, b, c) {
          var d = "",
            e = 0;
          var f = this._getOperation(c);
          if (null != f && ((c = f[0]), (d = f[1]), (e = f[2]), (f = f[3])))
            switch (b) {
              case "h":
              case "height":
                e *= this._pointY;
                break;
              case "w":
              case "width":
                e *= this._pointX;
                break;
              default:
                e *= this._pointY;
            }
          a = this.getAssetProperty(a, b, c);
          -1 != a && "" != d && (a = this._doOperation(a, d, e));
          return a;
        },
        getAssetProperty: function (a, b, c) {
          var d = "";
          -1 != c.indexOf(".") && ((d = c.split(".")), (c = d[0]), (d = d[1]));
          var e = this.getAsset(c),
            f = 0;
          if (null == e)
            switch (c) {
              case "bottom":
              case "down":
                f = this.screenHeight();
                break;
              case "left":
                f = 0;
                break;
              case "right":
                f = this.screenWidth();
                break;
              case "top":
              case "up":
                f = 0;
                break;
              default:
                f = x.isStrNum(c) ? parseFloat(c) : -1;
            }
          else
            switch (b) {
              case "h":
              case "height":
                if ("" == d)
                  0 == a && (f = e.y + e.get_height()), 1 == a && (f = e.y);
                else
                  switch (d) {
                    case "bottom":
                    case "down":
                      f = e.y + e.get_height();
                      break;
                    case "center":
                      f = e.y + e.get_height() / 2;
                      break;
                    case "halfheight":
                      f = e.get_height() / 2;
                      break;
                    case "halfwidth":
                      f = e.get_width() / 2;
                      break;
                    case "height":
                      f = e.get_height();
                      break;
                    case "right":
                      f = e.x + e.get_width();
                      break;
                    case "top":
                    case "up":
                    case "y":
                      f = e.y;
                      break;
                    case "width":
                      f = e.get_width();
                      break;
                    case "left":
                    case "x":
                      f = e.x;
                  }
                break;
              case "w":
              case "width":
                if ("" == d)
                  0 == a && (f = e.x + e.get_width()), 1 == a && (f = e.x);
                else
                  switch (d) {
                    case "bottom":
                    case "down":
                      f = e.y + e.get_height();
                      break;
                    case "center":
                      f = e.x + e.get_width() / 2;
                      break;
                    case "halfheight":
                      f = e.get_height() / 2;
                      break;
                    case "halfwidth":
                      f = e.get_width() / 2;
                      break;
                    case "height":
                      f = e.get_height();
                      break;
                    case "right":
                      f = e.x + e.get_width();
                      break;
                    case "top":
                    case "up":
                    case "y":
                      f = e.y;
                      break;
                    case "width":
                      f = e.get_width();
                      break;
                    case "left":
                    case "x":
                      f = e.x;
                  }
                break;
              default:
                switch (d) {
                  case "bottom":
                  case "down":
                    f = e.y + e.get_height();
                    break;
                  case "centerx":
                    f = e.x + e.get_width() / 2;
                    break;
                  case "centery":
                    f = e.y + e.get_height() / 2;
                    break;
                  case "halfheight":
                    f = e.get_height() / 2;
                    break;
                  case "halfwidth":
                    f = e.get_width() / 2;
                    break;
                  case "height":
                    f = e.get_height();
                    break;
                  case "right":
                    f = e.x + e.get_width();
                    break;
                  case "top":
                  case "up":
                  case "y":
                    f = e.y;
                    break;
                  case "width":
                    f = e.get_width();
                    break;
                  case "left":
                  case "x":
                    f = e.x;
                }
            }
          return f;
        },
        _loadCursor: function (a) {
          if (Ma.resolve(a, "list")) {
            null == this.cursorLists && (this.cursorLists = []);
            var b = 0;
            for (a = Ab.resolve(a, "list"); b < a.length; ) {
              var c = a[b];
              ++b;
              c = x.xml_str(c, "ids").split(",");
              if (null != c && 0 < c.length) {
                for (var d = [], e = 0; e < c.length; ) {
                  var f = c[e];
                  ++e;
                  f = this.getAsset(f);
                  null != f && d.push(f);
                }
                this.cursorLists.push(d);
              }
            }
          }
        },
        _loadPosition: function (a, b) {
          var c = this._loadWidth(a, 0, "x"),
            d = this._loadHeight(a, 0, "y"),
            e = x.xml_bool(a, "center_x"),
            f = x.xml_bool(a, "center_y"),
            h = x.xml_str(a, "center_on"),
            m = x.xml_str(a, "center_on_x"),
            n = x.xml_str(a, "center_on_y"),
            g = "",
            l = "",
            k = 0,
            q = 0,
            r = "",
            u = "";
          Ma.resolve(a, "anchor") &&
            ((g = x.xml_str(Xa.resolve(a, "anchor"), "x")),
            (l = x.xml_str(Xa.resolve(a, "anchor"), "y")),
            (r = this.getRound(Xa.resolve(a, "anchor"))),
            (k = this._getAnchorPos(b, "x", g)),
            (q = this._getAnchorPos(b, "y", l)),
            (k = this.doRound(k, r)),
            (q = this.doRound(q, r)),
            (r = x.xml_str(Xa.resolve(a, "anchor"), "x-flush", !0)),
            (u = x.xml_str(Xa.resolve(a, "anchor"), "y-flush", !0)));
          if ("" != g || "" != l) {
            switch (r) {
              case "center":
                k -= b.get_width() / 2;
                break;
              case "right":
                k -= b.get_width();
            }
            switch (u) {
              case "bottom":
              case "down":
                q -= b.get_height();
                break;
              case "center":
                q -= b.get_height() / 2;
            }
            "" != g && b.set_x(k);
            "" != l && b.set_y(q);
          }
          if (e || f)
            (a = e),
              null == f && (f = !0),
              null == a && (a = !0),
              a && b.set_x((p.width - b.get_width()) / 2),
              f && b.set_y((p.height - b.get_height()) / 2);
          "" != h
            ? ((h = this.getAsset(h)),
              null != h &&
                ((h = pa.__cast(h, L)),
                (m = pa.__cast(b, L)),
                m.set_x(h.x + (h.get_width() - m.get_width()) / 2),
                m.set_y(h.y + (h.get_height() - m.get_height()) / 2)))
            : ("" != m &&
                ((h = this.getAsset(m)),
                null != h &&
                  ((h = pa.__cast(h, L)),
                  (m = pa.__cast(b, L)),
                  (f = !0),
                  (a = !1),
                  null == a && (a = !0),
                  null == f && (f = !0),
                  f && m.set_x(h.x + (h.get_width() - m.get_width()) / 2),
                  a && m.set_y(h.y + (h.get_height() - m.get_height()) / 2))),
              "" != n &&
                ((h = this.getAsset(n)),
                null != h &&
                  ((h = pa.__cast(h, L)),
                  (m = pa.__cast(b, L)),
                  (f = !1),
                  (a = !0),
                  null == a && (a = !0),
                  null == f && (f = !0),
                  f && m.set_x(h.x + (h.get_width() - m.get_width()) / 2),
                  a && m.set_y(h.y + (h.get_height() - m.get_height()) / 2))));
          a = c;
          f = d;
          null == f && (f = 0);
          null == a && (a = 0);
          c = b;
          c.set_x(c.x + a);
          c = b;
          c.set_y(c.y + f);
        },
        _loadBorder: function (a) {
          var b = $d.fromXML(a),
            c = this.getRound(a, "floor");
          a = this._getDataSize("h", x.xml_str(a, "border_size"), 1);
          c = this.doRound(a, c) | 0;
          b.size = c;
          return b;
        },
        _loadColor: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = "color");
          var d = x.xml_str(a, b);
          if ("" == d) {
            if (a.nodeType != D.Element)
              throw C.thrown(
                "Bad node type, expected Element but found " +
                  (null == a.nodeType ? "null" : ha.toString(a.nodeType))
              );
            b = a.nodeName == b;
          } else b = !1;
          b && (d = x.xml_str(a, "value"));
          a = c;
          if ("" != d && ((a = Xb.fromString(d)), null == a))
            throw C.thrown("U.parseHex() unable to parse hex String " + d);
          return a;
        },
        _loadFontDef: function (a) {
          var b = Ac.fromXML(a);
          a = this._loadHeight(a, 8, "size") | 0;
          b.format.size = Ia.fontSize(b.file, a);
          b.set_size(a);
          return b;
        },
        _loadFontFace: function (a) {
          var b = x.xml_str(a, "font");
          a = x.xml_str(a, "style");
          var c = null;
          "" != b && (c = Ia.font(b, a));
          return c;
        },
        _onFinishLoad: function () {
          null != this._ptr && this._ptr.getEvent("finish_load", this, null);
        },
        getText: function (a, b, c, d) {
          null == d && (d = "");
          null == c && (c = !0);
          null == b && (b = "data");
          return null != this._ptr_tongue
            ? ((a = this._ptr_tongue.get(a, b, c)), this.formatFromCode(a, d))
            : null != this.getTextFallback
            ? ((a = this.getTextFallback(a, b, c)), this.formatFromCode(a, d))
            : a;
        },
        formatFromCode: function (a, b) {
          switch (b) {
            case "fu":
              return x.FU(a);
            case "fu_":
              return x.FU_(a);
            case "l":
              return a.toLowerCase();
            case "u":
              return a.toUpperCase();
          }
          return a;
        },
        formatButtonText: function (a, b) {
          if (null != a && Ma.resolve(a, "text")) {
            a = Xa.resolve(a, "text");
            var c = x.xml_str(a, "use_def", !0),
              d = null;
            "" != c && (d = this.getDefinition(c));
            var e = Ia.consolidateData(a, d),
              f = this._loadFontFace(e),
              h = this._loadHeight(e, 8, "size", "floor") | 0;
            a = this._loadColor(e);
            var m = x.xml_f(e, "width"),
              n = this._loadBorder(e),
              p = x.xml_str(e, "align", !0);
            "" == p && (p = null);
            var g = (c = null),
              k = null;
            if (0 == b instanceof Ce) {
              if ("" == p || null == p) p = "center";
            } else (b = b.button), (p = "left");
            if (null != b) {
              if (b instanceof Yc) (g = b), (c = g.label);
              else if (b instanceof De)
                if (((k = b), k.label instanceof ab)) c = k.label;
                else if (k.label instanceof Q) {
                  d = 0;
                  for (var l = k.label.group.members; d < l.length; ) {
                    var q = l[d];
                    ++d;
                    if (q instanceof ab) {
                      c = q;
                      break;
                    }
                  }
                }
              b.up_color = a;
              b.down_color = 0;
              b.over_color = 0;
            }
            null != c &&
              (0 != m && (c.set_width(m), c.resetHelpers()),
              null != g
                ? g.setLabelFormat(f, h, a, p)
                : c.setFormat(f, h, a, p),
              c.set_borderStyle(n.style),
              c.set_borderColor(n.color),
              c.set_borderSize(n.size),
              c.set_borderQuality(n.quality),
              c instanceof gd && c.drawFrame(),
              null != g && g.autoCenterLabel(),
              null != k && k.autoCenterLabel());
            d = 0;
            for (l = Ab.resolve(e, "color"); d < l.length; )
              switch (
                ((h = l[d]),
                ++d,
                (a = this._loadColor(h)),
                (e = x.xml_bool(h, "visible", !0)),
                (f = x.xml_name(h)),
                (h = x.xml_bool(h, "toggle")),
                f)
              ) {
                case "active":
                case "hilight":
                case "hover":
                case "over":
                  h
                    ? ((b.over_toggle_color = a), (b.over_toggle_visible = e))
                    : ((b.over_color = a), (b.over_visible = e));
                  break;
                case "down":
                case "pressed":
                case "pushed":
                  h
                    ? ((b.down_toggle_color = a), (b.down_toggle_visible = e))
                    : ((b.down_color = a), (b.down_visible = e));
                  break;
                case "":
                case "inactive":
                case "normal":
                case "up":
                  h
                    ? ((b.up_toggle_color = a), (b.up_toggle_visible = e))
                    : ((b.up_color = a), (b.up_visible = e));
              }
            0 == b.over_color && (b.over_color = b.up_color);
            0 == b.down_color && (b.down_color = b.over_color);
            0 == b.up_toggle_color && (b.up_toggle_color = b.up_color);
            0 == b.over_toggle_color && (b.over_toggle_color = b.over_color);
            0 == b.down_toggle_color && (b.down_toggle_color = b.down_color);
            null != c && (c.set_visible(b.up_visible), c.set_color(b.up_color));
            return c;
          }
          return null;
        },
        __class__: Ia,
        __properties__: r(Ha.prototype.__properties__, {
          set_focus: "set_focus",
        }),
      });
      var Jm = (z["flixel.addons.ui.Rounding"] = {
          __ename__: "flixel.addons.ui.Rounding",
          __constructs__: ["Floor", "Ceil", "Round", "None"],
          Floor: {
            _hx_index: 0,
            __enum__: "flixel.addons.ui.Rounding",
            toString: l,
          },
          Ceil: {
            _hx_index: 1,
            __enum__: "flixel.addons.ui.Rounding",
            toString: l,
          },
          Round: {
            _hx_index: 2,
            __enum__: "flixel.addons.ui.Rounding",
            toString: l,
          },
          None: {
            _hx_index: 3,
            __enum__: "flixel.addons.ui.Rounding",
            toString: l,
          },
        }),
        pc = function () {};
      g["flixel.addons.ui.interfaces.IResizable"] = pc;
      pc.__name__ = "flixel.addons.ui.interfaces.IResizable";
      pc.__isInterface__ = !0;
      pc.prototype = {
        __class__: pc,
        __properties__: { get_height: "get_height", get_width: "get_width" },
      };
      var Mb = function (a, b, c) {
        null == b && (b = 0);
        null == a && (a = 0);
        this._originalKey = "";
        this.resize_ratio_axis = 1;
        this.ptr_owner = null;
        H.call(this, a, b, c);
      };
      g["flixel.addons.ui.FlxUISprite"] = Mb;
      Mb.__name__ = "flixel.addons.ui.FlxUISprite";
      Mb.__interfaces__ = [pc, Qc];
      Mb.__super__ = H;
      Mb.prototype = r(H.prototype, {
        set_resize_ratio: function (a) {
          return (this.resize_ratio = a);
        },
        set_resize_point: function (a) {
          if (null != a) {
            var b = U._pool.get().set(0, 0);
            b._inPool = !1;
            this.resize_point = b;
            this.resize_point.set_x(a.x);
            this.resize_point.set_y(a.y);
          }
          return this.resize_point;
        },
        resize: function (a, b) {
          var c = this.get_width(),
            d = this.get_height();
          0 < this.resize_ratio &&
            1e-4 < Math.abs(a / b - this.resize_ratio) &&
            (1 == this.resize_ratio_axis
              ? (b = (1 / this.resize_ratio) * a)
              : (a = (1 / this.resize_ratio) * b));
          "" != this._originalKey &&
            null != this._originalKey &&
            ((a = x.loadScaledImage(this._originalKey, a, b)),
            "" != a && null != a && this.loadFromScaledGraphic(a));
          c = this.get_width() - c;
          d = this.get_height() - d;
          null != this.resize_point &&
            ((d *= this.resize_point.y),
            (a = this),
            a.set_x(a.x - c * this.resize_point.x),
            (a = this),
            a.set_y(a.y - d));
        },
        loadGraphic: function (a, b, c, d, e, f) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          a = H.prototype.loadGraphic.call(this, a, b, c, d, e, f);
          this._originalKey = this.graphic.assetsKey;
          null == this._originalKey && (this._originalKey = this.graphic.key);
          return a;
        },
        destroy: function () {
          this.ptr_owner = null;
          H.prototype.destroy.call(this);
        },
        loadFromScaledGraphic: function (a, b, c, d, e, f) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          H.prototype.loadGraphic.call(this, a, b, c, d, e, f);
        },
        __class__: Mb,
        __properties__: r(H.prototype.__properties__, {
          set_resize_point: "set_resize_point",
          set_resize_ratio: "set_resize_ratio",
        }),
      });
      var Ra = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      g["openfl.geom.Point"] = Ra;
      Ra.__name__ = "openfl.geom.Point";
      Ra.prototype = {
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
        },
        setTo: function (a, b) {
          this.x = a;
          this.y = b;
        },
        __toLimeVector2: function () {
          null == Ra.__limeVector2 && (Ra.__limeVector2 = new Lg());
          var a = Ra.__limeVector2;
          a.x = this.x;
          a.y = this.y;
          return Ra.__limeVector2;
        },
        __class__: Ra,
      };
      var ma = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
      };
      g["openfl.geom.Rectangle"] = ma;
      ma.__name__ = "openfl.geom.Rectangle";
      ma.prototype = {
        clone: function () {
          return new ma(this.x, this.y, this.width, this.height);
        },
        contains: function (a, b) {
          return a >= this.x && b >= this.y && a < this.get_right()
            ? b < this.get_bottom()
            : !1;
        },
        containsPoint: function (a) {
          return this.contains(a.x, a.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
          this.width = a.width;
          this.height = a.height;
        },
        equals: function (a) {
          return a == this
            ? !0
            : null != a &&
              this.x == a.x &&
              this.y == a.y &&
              this.width == a.width
            ? this.height == a.height
            : !1;
        },
        inflate: function (a, b) {
          this.x -= a;
          this.width += 2 * a;
          this.y -= b;
          this.height += 2 * b;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        __contract: function (a, b, c, d) {
          if (0 != this.width || 0 != this.height) {
            var e = 0,
              f = 0,
              h = 0,
              m = 0;
            this.x < a && (e = a - this.x);
            this.y < b && (f = b - this.y);
            this.get_right() > a + c && (h = a + c - this.get_right());
            this.get_bottom() > b + d && (m = b + d - this.get_bottom());
            this.x += e;
            this.y += f;
            this.width += h - e;
            this.height += m - f;
          }
        },
        __expand: function (a, b, c, d) {
          if (0 == this.width && 0 == this.height)
            (this.x = a), (this.y = b), (this.width = c), (this.height = d);
          else {
            var e = this.get_right(),
              f = this.get_bottom();
            this.x > a && ((this.x = a), (this.width = e - a));
            this.y > b && ((this.y = b), (this.height = f - b));
            e < a + c && (this.width = a + c - this.x);
            f < b + d && (this.height = b + d - this.y);
          }
        },
        __toLimeRectangle: function () {
          null == ma.__limeRectangle && (ma.__limeRectangle = new ae());
          ma.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
          return ma.__limeRectangle;
        },
        __transform: function (a, b) {
          var c = b.a * this.x + b.c * this.y,
            d = c,
            e = b.b * this.x + b.d * this.y,
            f = e,
            h = b.a * (this.x + this.width) + b.c * this.y,
            m = b.b * (this.x + this.width) + b.d * this.y;
          h < c && (c = h);
          m < e && (e = m);
          h > d && (d = h);
          m > f && (f = m);
          h = b.a * (this.x + this.width) + b.c * (this.y + this.height);
          m = b.b * (this.x + this.width) + b.d * (this.y + this.height);
          h < c && (c = h);
          m < e && (e = m);
          h > d && (d = h);
          m > f && (f = m);
          h = b.a * this.x + b.c * (this.y + this.height);
          m = b.b * this.x + b.d * (this.y + this.height);
          h < c && (c = h);
          m < e && (e = m);
          h > d && (d = h);
          m > f && (f = m);
          a.setTo(c + b.tx, e + b.ty, d - c, f - e);
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_left: function () {
          return this.x;
        },
        get_right: function () {
          return this.x + this.width;
        },
        get_top: function () {
          return this.y;
        },
        __class__: ma,
        __properties__: {
          get_top: "get_top",
          get_right: "get_right",
          get_left: "get_left",
          get_bottom: "get_bottom",
        },
      };
      var P = function (a, b, c, d, e, f, h, m, n, p, g, k, l) {
        null == l && (l = -1);
        null == k && (k = !1);
        null == g && (g = 1);
        null == n && (n = -1);
        null == m && (m = "");
        null == h && (h = !1);
        null == f && (f = 0);
        this._asset_id = "";
        this._smooth = !1;
        this._tile = 0;
        this._slice9 = null;
        this.paintScale9_id = "";
        Mb.call(this, a, b, null);
        this.set_color(l);
        this._slice9 = e;
        this._tile = f;
        this._smooth = h;
        this._asset_id = "";
        null == c && (c = "flixel/flixel-ui/img/chrome.png");
        "string" == typeof c
          ? ((this._asset_id = c), (this._raw_pixels = null))
          : c instanceof J
          ? ((this._asset_id = m), (this._raw_pixels = c))
          : c instanceof Eb &&
            ((a = c), (this._asset_id = a.key), (this._raw_pixels = a.bitmap));
        this.set_resize_ratio(n);
        this.resize_ratio_axis = g;
        null != p && this.set_resize_point(p);
        k
          ? ((d = x.applyResize(
              this.resize_ratio,
              this.resize_ratio_axis,
              d.width,
              d.height
            )),
            this.set_width(d.x),
            this.set_height(d.y))
          : this.resize(d.width, d.height);
      };
      g["flixel.addons.ui.FlxUI9SliceSprite"] = P;
      P.__name__ = "flixel.addons.ui.FlxUI9SliceSprite";
      P.__interfaces__ = [Qc, pc];
      P.paintScale9 = function (a, b, c, d, e, f, h) {
        null == f && (f = !1);
        null == e && (e = 0);
        if (null != c) {
          if (null == h) {
            var m = x.getBmp(b);
            if (null != m) {
              var n = m.width;
              m = m.height;
            } else (m = p.bitmap._cache.h[b]), (n = m.width), (m = m.height);
          } else (n = h.width), (m = h.height);
          var g = c[0],
            l = c[1],
            k = c[2],
            q = c[3];
          if (null == P._staticRects) {
            P._staticRects = new ea();
            var r = P._staticRects,
              u = ya._pool.get(),
              z = 0,
              v = 0,
              y = 0,
              w = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h["top.left"] = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h.top = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h["top.right"] = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h.left = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h.middle = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h.right = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h["bottom.left"] = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h.bottom = u;
            r = P._staticRects;
            u = ya._pool.get();
            w = y = v = z = 0;
            null == w && (w = 0);
            null == y && (y = 0);
            null == v && (v = 0);
            null == z && (z = 0);
            u.x = z;
            u.y = v;
            u.width = y;
            u.height = w;
            u._inPool = !1;
            r.h["bottom.right"] = u;
          }
          u = P._staticRects.h["top.left"];
          v = z = 0;
          y = g;
          w = l;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h.top;
          z = g;
          v = 0;
          y = k - g;
          w = l;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h["top.right"];
          z = k;
          v = 0;
          y = n - k;
          w = l;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h.left;
          z = 0;
          v = l;
          y = g;
          w = q - l;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h.middle;
          z = g;
          v = l;
          y = k - g;
          w = q - l;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h.right;
          z = k;
          v = l;
          y = n - k;
          w = q - l;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h["bottom.left"];
          z = 0;
          v = q;
          y = g;
          w = m - q;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h.bottom;
          z = g;
          v = q;
          y = k - g;
          w = m - q;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          u = P._staticRects.h["bottom.right"];
          z = k;
          v = q;
          y = n - k;
          w = m - q;
          null == w && (w = 0);
          null == y && (y = 0);
          null == v && (v = 0);
          null == z && (z = 0);
          u.x = z;
          u.y = v;
          u.width = y;
          u.height = w;
          null == P.cacheCounter && (P.cacheCounter = new ea());
          c = P.makePaintScale9Id(b, c, d);
          n = P.cacheCounter.h[c];
          if (null == n) {
            n = { useCount: 0, subKeys: [] };
            for (m = 0; 9 > m; ) {
              switch (m++) {
                case 0:
                  u = P._staticRects.h["top.left"];
                  break;
                case 1:
                  u = P._staticRects.h.top;
                  break;
                case 2:
                  u = P._staticRects.h["top.right"];
                  break;
                case 3:
                  u = P._staticRects.h.left;
                  break;
                case 4:
                  u = P._staticRects.h.middle;
                  break;
                case 5:
                  u = P._staticRects.h.right;
                  break;
                case 6:
                  u = P._staticRects.h["bottom.left"];
                  break;
                case 7:
                  u = P._staticRects.h.bottom;
                  break;
                case 8:
                  u = P._staticRects.h["bottom.right"];
                  break;
                default:
                  u = P._staticRects.h["top.left"];
              }
              n.subKeys.push(
                b + "_" + u.x + "_" + u.y + "_" + u.width + "_" + u.height + "_"
              );
            }
            P.cacheCounter.h[c] = n;
          }
          P.paintCompoundBitmap(a, b, P._staticRects, d, e, f, h);
          return c;
        }
        return "";
      };
      P.makePaintScale9Id = function (a, b, c) {
        a = a + "_" + b.join(",") + "_";
        b = c.x;
        var d = Sb._pool.get();
        d.label = "x";
        d.value = b;
        b = c.y;
        var e = Sb._pool.get();
        e.label = "y";
        e.value = b;
        b = c.width;
        var f = Sb._pool.get();
        f.label = "w";
        f.value = b;
        b = c.height;
        c = Sb._pool.get();
        c.label = "h";
        c.value = b;
        return a + yb.getDebugString([d, e, f, c]);
      };
      P.paintCompoundBitmap = function (a, b, c, d, e, f, h) {
        null == f && (f = !1);
        null == e && (e = 0);
        d.x |= 0;
        d.y |= 0;
        d.width |= 0;
        d.height |= 0;
        var m = c.h["top.left"];
        if (null != m) {
          var n = P._staticFlxRect2,
            p = 0,
            g = 0,
            k = m.width,
            l = m.height;
          null == l && (l = 0);
          null == k && (k = 0);
          null == g && (g = 0);
          null == p && (p = 0);
          n.x = p;
          n.y = g;
          n.width = k;
          n.height = l;
          P.paintBitmapSection(a, b, m, P._staticFlxRect2, null, 0, f, h);
        }
        var u = c.h["top.right"];
        null != u &&
          ((n = P._staticFlxRect2),
          (p = d.width - u.width),
          (g = 0),
          (k = u.width),
          (l = u.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, u, P._staticFlxRect2, null, 0, f, h));
        var q = c.h.top;
        null != q &&
          ((n = P._staticFlxRect2),
          (p = m.width),
          (g = 0),
          (k = d.width - m.width - u.width),
          (l = q.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, q, P._staticFlxRect2, null, e & 16, f, h));
        var r = c.h["bottom.left"];
        null != r &&
          ((n = P._staticFlxRect2),
          (p = 0),
          (g = d.height - r.height),
          (k = r.width),
          (l = r.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, r, P._staticFlxRect2, null, 0, f, h));
        var z = c.h["bottom.right"];
        null != z &&
          ((n = P._staticFlxRect2),
          (p = d.width - z.width),
          (g = d.height - z.height),
          (k = z.width),
          (l = z.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, z, P._staticFlxRect2, null, 0, f, h));
        var v = c.h.bottom;
        null != v &&
          ((n = P._staticFlxRect2),
          (p = r.width),
          (g = d.height - v.height),
          (k = d.width - r.width - z.width),
          (l = v.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, v, P._staticFlxRect2, null, e & 16, f, h));
        z = c.h.left;
        null != z &&
          ((n = P._staticFlxRect2),
          (p = 0),
          (g = m.height),
          (k = z.width),
          (l = d.height - m.height - r.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, z, P._staticFlxRect2, null, e & 1, f, h));
        var y = c.h.right;
        null != y &&
          ((n = P._staticFlxRect2),
          (p = d.width - y.width),
          (g = u.height),
          (k = y.width),
          (l = d.height - m.height - r.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, y, P._staticFlxRect2, null, e & 1, f, h));
        c = c.h.middle;
        null != c &&
          ((n = P._staticFlxRect2),
          (p = z.width),
          (g = q.height),
          (k = d.width - z.width - y.width),
          (l = d.height - q.height - v.height),
          null == l && (l = 0),
          null == k && (k = 0),
          null == g && (g = 0),
          null == p && (p = 0),
          (n.x = p),
          (n.y = g),
          (n.width = k),
          (n.height = l),
          P.paintBitmapSection(a, b, c, P._staticFlxRect2, null, e, f, h));
      };
      P.paintBitmapSection = function (a, b, c, d, e, f, h, m) {
        null == h && (h = !1);
        null == f && (f = 0);
        null == e && (e = null != m ? m : x.getBmp(b));
        c.x |= 0;
        c.y |= 0;
        c.width |= 0;
        c.height |= 0;
        d.x |= 0;
        d.y |= 0;
        d.width |= 0;
        d.height |= 0;
        var n = (m = null);
        1 == P.useSectionCache &&
          null != b &&
          (null == P.sectionCache && (P.sectionCache = new ea()),
          (n =
            b + "_" + c.x + "_" + c.y + "_" + c.width + "_" + c.height + "_"),
          (m = P.sectionCache.h[n]));
        null == m &&
          ((m = new J(c.width | 0, c.height | 0, !0, 16777215)),
          (P._staticRect2.x = c.x),
          (P._staticRect2.y = c.y),
          (P._staticRect2.width = c.width),
          (P._staticRect2.height = c.height),
          m.copyPixels(e, P._staticRect2, P._staticPointZero),
          1 == P.useSectionCache && null != n && (P.sectionCache.h[n] = m),
          P.bitmapsCreated++);
        0 < d.width &&
          0 < d.height &&
          ((P._staticRect2.x = d.x),
          (P._staticRect2.y = d.y),
          (P._staticRect2.width = d.width),
          (P._staticRect2.height = d.height),
          P.bitmapFillRect(a, P._staticRect2, m, f, h));
      };
      P.bitmapFillRect = function (a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = 0);
        var f = new J(b.width | 0, b.height | 0, !0, 0);
        P._staticMatrix.identity();
        P._staticRect.x = 0;
        P._staticRect.y = 0;
        P._staticRect.width = c.width;
        P._staticRect.height = c.height;
        0 == (d & 16) &&
          (P._staticMatrix.scale(b.width / c.width, 1),
          (P._staticRect.width = b.width));
        0 == (d & 1) &&
          (P._staticMatrix.scale(1, b.height / c.height),
          (P._staticRect.height = b.height));
        c.width == b.width && c.height == b.height
          ? ((P._staticPoint.x = 0),
            (P._staticPoint.y = 0),
            f.copyPixels(c, c.rect, P._staticPoint))
          : e
          ? f.draw(c, P._staticMatrix, null, null, null, !0)
          : f.draw(c, P._staticMatrix, null, null, null, !1);
        if (0 != d) {
          if (16 == (d & 16))
            for (
              P._staticPoint.x = 0, P._staticPoint.y = 0;
              P._staticPoint.x < b.width;

            )
              (P._staticPoint.x += P._staticRect.width),
                f.copyPixels(f, P._staticRect, P._staticPoint);
          if (1 == (d & 1))
            for (
              P._staticPoint.x = 0,
                P._staticPoint.y = 0,
                P._staticRect.width = f.width;
              P._staticPoint.y < b.height;

            )
              (P._staticPoint.y += P._staticRect.height),
                f.copyPixels(f, P._staticRect, P._staticPoint);
        }
        P._staticPoint.x = b.x;
        P._staticPoint.y = b.y;
        a.copyPixels(f, f.rect, P._staticPoint);
        Z.dispose(f);
      };
      P.__super__ = Mb;
      P.prototype = r(Mb.prototype, {
        destroy: function () {
          this.noLongerUsingCachedID(this.paintScale9_id);
          Mb.prototype.destroy.call(this);
        },
        resize: function (a, b) {
          1 > (a | 0) && (a = 1);
          1 > (b | 0) && (b = 1);
          var c = this.get_width(),
            d = this.get_height(),
            e = x.applyResize(this.resize_ratio, this.resize_ratio_axis, a, b);
          a = e.x;
          b = e.y;
          var f = e.x | 0,
            h = e.y | 0;
          if (null == this._slice9 || this._slice9 == [])
            this._slice9 = [4, 4, 7, 7];
          e =
            this._asset_id +
            "_" +
            this._slice9.join(",") +
            "_" +
            f +
            "x" +
            h +
            "_" +
            this._tile +
            "_" +
            I.string(this._smooth);
          null != p.bitmap._cache.h[e]
            ? this.loadGraphic(e, !1, f, h)
            : ((f = new J(a | 0, b | 0)),
              (P._staticFlxRect.x = 0),
              (P._staticFlxRect.y = 0),
              (P._staticFlxRect.width = a),
              (P._staticFlxRect.height = b),
              (a = this.paintScale9_id),
              P.makePaintScale9Id(
                this._asset_id,
                this._slice9,
                P._staticFlxRect
              ) != a &&
                ((this.paintScale9_id = P.paintScale9(
                  f,
                  this._asset_id,
                  this._slice9,
                  P._staticFlxRect,
                  this._tile,
                  this._smooth,
                  this._raw_pixels
                )),
                P.cacheCounter.h[this.paintScale9_id].useCount++,
                this.noLongerUsingCachedID(a)),
              this.loadGraphic(f, !1, f.width, f.height, !1, e));
          c = this.get_width() - c;
          d = this.get_height() - d;
          null != this.resize_point &&
            ((d *= this.resize_point.y),
            (a = this),
            a.set_x(a.x - c * this.resize_point.x),
            (a = this),
            a.set_y(a.y - d));
        },
        noLongerUsingCachedID: function (a) {
          if (Object.prototype.hasOwnProperty.call(P.cacheCounter.h, a)) {
            var b = P.cacheCounter.h[a];
            b.useCount--;
            0 >= b.useCount && this.purgeSections(a);
          }
        },
        purgeSections: function (a) {
          var b = P.cacheCounter.h[a];
          if (null != b) {
            for (var c = 0, d = b.subKeys; c < d.length; ) {
              var e = d[c];
              ++c;
              var f = P.sectionCache;
              Object.prototype.hasOwnProperty.call(f.h, e) && delete f.h[e];
            }
            b.subKeys = null;
            f = P.cacheCounter;
            Object.prototype.hasOwnProperty.call(f.h, a) && delete f.h[a];
          }
        },
        __class__: P,
      });
      var bf = function (a, b, c, d, e, f, h, m, n, g) {
        null == g && (g = !1);
        null == n && (n = 100);
        null == m && (m = 0);
        null == h && (h = "");
        null == e && (e = 10);
        null == d && (d = 100);
        null == b && (b = 0);
        null == a && (a = 0);
        this.numDivisions = this._maxPercent = 100;
        this.killOnEmpty = !1;
        this.fixedPosition = !0;
        H.call(this, a, b);
        null == c && (c = xe.LEFT_TO_RIGHT);
        this.barWidth = d;
        this.barHeight = e;
        this._filledBarPoint = new Ra();
        this._filledBarRect = new ma();
        if (p.renderBlit)
          (this._zeroOffset = new Ra()),
            (this._emptyBarRect = new ma()),
            this.makeGraphic(d, e, 0, !0);
        else {
          a = ya._pool.get();
          var l = (e = d = b = 0);
          null == l && (l = 0);
          null == e && (e = 0);
          null == d && (d = 0);
          null == b && (b = 0);
          a.x = b;
          a.y = d;
          a.width = e;
          a.height = l;
          a._inPool = !1;
          this._filledFlxRect = a;
        }
        null != f && ((this.parent = f), (this.parentVariable = h));
        this.set_fillDirection(c);
        this.createFilledBar(-16756480, -16714752, g);
        this.setRange(m, n);
      };
      g["flixel.ui.FlxBar"] = bf;
      bf.__name__ = "flixel.ui.FlxBar";
      bf.__super__ = H;
      bf.prototype = r(H.prototype, {
        destroy: function () {
          this.positionOffset = Z.put(this.positionOffset);
          p.renderBlit
            ? ((this._frontFrame = null),
              (this._filledFlxRect = Z.put(this._filledFlxRect)))
            : ((this._zeroOffset = this._emptyBarRect = null),
              (this._emptyBar = Z.dispose(this._emptyBar)),
              (this._filledBar = Z.dispose(this._filledBar)));
          this.filledCallback =
            this.emptyCallback =
            this.positionOffset =
            this.parent =
            this._filledBarPoint =
            this._filledBarRect =
              null;
          H.prototype.destroy.call(this);
        },
        setRange: function (a, b) {
          if (b <= a)
            throw C.thrown("FlxBar: max cannot be less than or equal to min");
          this.min = a;
          this.max = b;
          this.range = b - a;
          this.pct = this.range / this._maxPercent;
          this.pxPerPercent = this._fillHorizontal
            ? this.barWidth / this._maxPercent
            : this.barHeight / this._maxPercent;
          var c = this.get_value();
          isNaN(c)
            ? this.set_value(a)
            : this.set_value(Math.max(a, Math.min(this.get_value(), b)));
        },
        createFilledBar: function (a, b, c, d) {
          null == d && (d = -1);
          null == c && (c = !1);
          this.createColoredEmptyBar(a, c, d);
          this.createColoredFilledBar(b, c, d);
          return this;
        },
        createColoredEmptyBar: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = !1);
          if (p.renderTile) {
            var d =
              "empty: " +
              this.barWidth +
              "x" +
              this.barHeight +
              ":" +
              ("0x" +
                K.hex((a >> 24) & 255, 2) +
                K.hex((a >> 16) & 255, 2) +
                K.hex((a >> 8) & 255, 2) +
                K.hex(a & 255, 2));
            b &&
              (d +=
                ",border: " +
                ("0x" +
                  K.hex((c >> 24) & 255, 2) +
                  K.hex((c >> 16) & 255, 2) +
                  K.hex((c >> 8) & 255, 2) +
                  K.hex(c & 255, 2)));
            null == p.bitmap._cache.h[d] &&
              (b
                ? ((b = new J(this.barWidth, this.barHeight, !0, c)),
                  b.fillRect(
                    new ma(1, 1, this.barWidth - 2, this.barHeight - 2),
                    a
                  ))
                : (b = new J(this.barWidth, this.barHeight, !0, a)),
              p.bitmap.add(b, !1, d));
            this.set_frames(p.bitmap._cache.h[d].get_imageFrame());
          } else
            b
              ? ((this._emptyBar = new J(this.barWidth, this.barHeight, !0, c)),
                this._emptyBar.fillRect(
                  new ma(1, 1, this.barWidth - 2, this.barHeight - 2),
                  a
                ))
              : (this._emptyBar = new J(this.barWidth, this.barHeight, !0, a)),
              this._emptyBarRect.setTo(0, 0, this.barWidth, this.barHeight),
              this.updateEmptyBar();
          return this;
        },
        createColoredFilledBar: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = !1);
          if (p.renderTile) {
            var d =
              "filled: " +
              this.barWidth +
              "x" +
              this.barHeight +
              ":" +
              ("0x" +
                K.hex((a >> 24) & 255, 2) +
                K.hex((a >> 16) & 255, 2) +
                K.hex((a >> 8) & 255, 2) +
                K.hex(a & 255, 2));
            b &&
              (d +=
                ",border: " +
                ("0x" +
                  K.hex((c >> 24) & 255, 2) +
                  K.hex((c >> 16) & 255, 2) +
                  K.hex((c >> 8) & 255, 2) +
                  K.hex(c & 255, 2)));
            null == p.bitmap._cache.h[d] &&
              (b
                ? ((b = new J(this.barWidth, this.barHeight, !0, c)),
                  b.fillRect(
                    new ma(1, 1, this.barWidth - 2, this.barHeight - 2),
                    a
                  ))
                : (b = new J(this.barWidth, this.barHeight, !0, a)),
              p.bitmap.add(b, !1, d));
            this.set_frontFrames(p.bitmap._cache.h[d].get_imageFrame());
          } else
            b
              ? ((this._filledBar = new J(
                  this.barWidth,
                  this.barHeight,
                  !0,
                  c
                )),
                this._filledBar.fillRect(
                  new ma(1, 1, this.barWidth - 2, this.barHeight - 2),
                  a
                ))
              : (this._filledBar = new J(this.barWidth, this.barHeight, !0, a)),
              this._filledBarRect.setTo(0, 0, this.barWidth, this.barHeight),
              this.updateFilledBar();
          return this;
        },
        createGradientBar: function (a, b, c, d, e, f) {
          null == f && (f = -1);
          null == e && (e = !1);
          null == d && (d = 180);
          null == c && (c = 1);
          this.createGradientEmptyBar(a, c, d, e, f);
          this.createGradientFilledBar(b, c, d, e, f);
          return this;
        },
        createGradientEmptyBar: function (a, b, c, d, e) {
          null == e && (e = -1);
          null == d && (d = !1);
          null == c && (c = 180);
          null == b && (b = 1);
          if (p.renderTile) {
            for (
              var f =
                  "Gradient:" +
                  this.barWidth +
                  "x" +
                  this.barHeight +
                  ",colors:[",
                h = 0;
              h < a.length;

            ) {
              var m = a[h];
              ++h;
              f +=
                "0x" +
                K.hex((m >> 24) & 255, 2) +
                K.hex((m >> 16) & 255, 2) +
                K.hex((m >> 8) & 255, 2) +
                K.hex(m & 255, 2) +
                ",";
            }
            f += "],chunkSize: " + b + ",rotation: " + c;
            d &&
              (f +=
                ",border: " +
                ("0x" +
                  K.hex((e >> 24) & 255, 2) +
                  K.hex((e >> 16) & 255, 2) +
                  K.hex((e >> 8) & 255, 2) +
                  K.hex(e & 255, 2)));
            null == p.bitmap._cache.h[f] &&
              (d
                ? ((d = new J(this.barWidth, this.barHeight, !0, e)),
                  sd.overlayGradientOnBitmapData(
                    d,
                    this.barWidth - 2,
                    this.barHeight - 2,
                    a,
                    1,
                    1,
                    b,
                    c
                  ))
                : (d = sd.createGradientBitmapData(
                    this.barWidth,
                    this.barHeight,
                    a,
                    b,
                    c
                  )),
              p.bitmap.add(d, !1, f));
            this.set_frames(p.bitmap._cache.h[f].get_imageFrame());
          } else
            d
              ? ((this._emptyBar = new J(this.barWidth, this.barHeight, !0, e)),
                sd.overlayGradientOnBitmapData(
                  this._emptyBar,
                  this.barWidth - 2,
                  this.barHeight - 2,
                  a,
                  1,
                  1,
                  b,
                  c
                ))
              : (this._emptyBar = sd.createGradientBitmapData(
                  this.barWidth,
                  this.barHeight,
                  a,
                  b,
                  c
                )),
              this._emptyBarRect.setTo(0, 0, this.barWidth, this.barHeight),
              this.updateEmptyBar();
          return this;
        },
        createGradientFilledBar: function (a, b, c, d, e) {
          null == e && (e = -1);
          null == d && (d = !1);
          null == c && (c = 180);
          null == b && (b = 1);
          if (p.renderTile) {
            for (
              var f =
                  "Gradient:" +
                  this.barWidth +
                  "x" +
                  this.barHeight +
                  ",colors:[",
                h = 0;
              h < a.length;

            ) {
              var m = a[h];
              ++h;
              f +=
                "0x" +
                K.hex((m >> 24) & 255, 2) +
                K.hex((m >> 16) & 255, 2) +
                K.hex((m >> 8) & 255, 2) +
                K.hex(m & 255, 2) +
                ",";
            }
            f += "],chunkSize: " + b + ",rotation: " + c;
            d &&
              (f +=
                ",border: " +
                ("0x" +
                  K.hex((e >> 24) & 255, 2) +
                  K.hex((e >> 16) & 255, 2) +
                  K.hex((e >> 8) & 255, 2) +
                  K.hex(e & 255, 2)));
            null == p.bitmap._cache.h[f] &&
              (d
                ? ((d = new J(this.barWidth, this.barHeight, !0, e)),
                  sd.overlayGradientOnBitmapData(
                    d,
                    this.barWidth - 2,
                    this.barHeight - 2,
                    a,
                    1,
                    1,
                    b,
                    c
                  ))
                : (d = sd.createGradientBitmapData(
                    this.barWidth,
                    this.barHeight,
                    a,
                    b,
                    c
                  )),
              p.bitmap.add(d, !1, f));
            this.set_frontFrames(p.bitmap._cache.h[f].get_imageFrame());
          } else
            d
              ? ((this._filledBar = new J(
                  this.barWidth,
                  this.barHeight,
                  !0,
                  e
                )),
                sd.overlayGradientOnBitmapData(
                  this._filledBar,
                  this.barWidth - 2,
                  this.barHeight - 2,
                  a,
                  1,
                  1,
                  b,
                  c
                ))
              : (this._filledBar = sd.createGradientBitmapData(
                  this.barWidth,
                  this.barHeight,
                  a,
                  b,
                  c
                )),
              this._filledBarRect.setTo(0, 0, this.barWidth, this.barHeight),
              this.updateFilledBar();
          return this;
        },
        createImageBar: function (a, b, c, d) {
          null == d && (d = -16711936);
          null == c && (c = -16777216);
          this.createImageEmptyBar(a, c);
          this.createImageFilledBar(b, d);
          return this;
        },
        createImageEmptyBar: function (a, b) {
          null == b && (b = -16777216);
          null != a
            ? ((a = p.bitmap.add(a)),
              p.renderTile
                ? this.set_frames(a.get_imageFrame())
                : ((this._emptyBar = a.bitmap.clone()),
                  (this.barWidth = this._emptyBar.width),
                  (this.barHeight = this._emptyBar.height),
                  this._emptyBarRect.setTo(0, 0, this.barWidth, this.barHeight),
                  (null != this.graphic &&
                    this.frame.sourceSize.x == this.barWidth &&
                    this.frame.sourceSize.y == this.barHeight) ||
                    this.makeGraphic(this.barWidth, this.barHeight, 0, !0),
                  this.updateEmptyBar()))
            : this.createColoredEmptyBar(b);
          return this;
        },
        createImageFilledBar: function (a, b) {
          null == b && (b = -16711936);
          null != a
            ? ((a = p.bitmap.add(a)),
              p.renderTile
                ? this.set_frontFrames(a.get_imageFrame())
                : ((this._filledBar = a.bitmap.clone()),
                  this._filledBarRect.setTo(
                    0,
                    0,
                    this.barWidth,
                    this.barHeight
                  ),
                  (null != this.graphic &&
                    this.frame.sourceSize.x == this.barWidth &&
                    this.frame.sourceSize.y == this.barHeight) ||
                    this.makeGraphic(this.barWidth, this.barHeight, 0, !0),
                  (this.pxPerPercent = this._fillHorizontal
                    ? this.barWidth / this._maxPercent
                    : this.barHeight / this._maxPercent),
                  this.updateFilledBar()))
            : this.createColoredFilledBar(b);
          return this;
        },
        set_fillDirection: function (a) {
          this.fillDirection = a;
          switch (a._hx_index) {
            case 2:
            case 3:
            case 6:
            case 7:
              this._fillHorizontal = !1;
              break;
            case 0:
            case 1:
            case 4:
            case 5:
              this._fillHorizontal = !0;
          }
          return this.fillDirection;
        },
        updateValueFromParent: function () {
          this.set_value(ia.getProperty(this.parent, this.parentVariable));
        },
        updateBar: function () {
          this.updateEmptyBar();
          this.updateFilledBar();
        },
        updateEmptyBar: function () {
          p.renderBlit &&
            (this.get_pixels().copyPixels(
              this._emptyBar,
              this._emptyBarRect,
              this._zeroOffset
            ),
            (this.dirty = !0));
        },
        updateFilledBar: function () {
          this._filledBarRect.width = this.barWidth;
          this._filledBarRect.height = this.barHeight;
          var a = (this.get_value() - this.min) / this.range,
            b = a * this._maxPercent,
            c = this._fillHorizontal ? this.barWidth : this.barHeight,
            d = c / this.numDivisions;
          a = Math.round((((a * c) / d) | 0) * d);
          this._fillHorizontal
            ? (this._filledBarRect.width = a | 0)
            : (this._filledBarRect.height = a | 0);
          if (0 < b) {
            switch (this.fillDirection._hx_index) {
              case 1:
                this._filledBarRect.x =
                  this.barWidth - this._filledBarRect.width;
                this._filledBarPoint.x =
                  this.barWidth - this._filledBarRect.width;
                break;
              case 3:
                this._filledBarRect.y =
                  this.barHeight - this._filledBarRect.height;
                this._filledBarPoint.y =
                  this.barHeight - this._filledBarRect.height;
                break;
              case 4:
                this._filledBarRect.x =
                  (this.barWidth / 2 - this._filledBarRect.width / 2) | 0;
                this._filledBarPoint.x =
                  (this.barWidth / 2 - this._filledBarRect.width / 2) | 0;
                break;
              case 5:
                this._filledBarRect.width = (c - a) | 0;
                this._filledBarPoint.x =
                  ((this.barWidth - this._filledBarRect.width) / 2) | 0;
                break;
              case 6:
                this._filledBarRect.y =
                  (this.barHeight / 2 - this._filledBarRect.height / 2) | 0;
                this._filledBarPoint.y =
                  (this.barHeight / 2 - this._filledBarRect.height / 2) | 0;
                break;
              case 7:
                (this._filledBarRect.height = (c - a) | 0),
                  (this._filledBarPoint.y =
                    ((this.barHeight - this._filledBarRect.height) / 2) | 0);
            }
            p.renderBlit
              ? this.get_pixels().copyPixels(
                  this._filledBar,
                  this._filledBarRect,
                  this._filledBarPoint,
                  null,
                  null,
                  !0
                )
              : null != this.get_frontFrames() &&
                ((c = this._filledFlxRect),
                (a = this._filledBarRect),
                (c.x = a.x),
                (c.y = a.y),
                (c.width = a.width),
                (c.height = a.height),
                (c.x = Math.round(c.x)),
                (c.y = Math.round(c.y)),
                (c.width = Math.round(c.width)),
                (c.height = Math.round(c.height)),
                0 < (b | 0) &&
                  (this._frontFrame = this.get_frontFrames()
                    .get_frame()
                    .clipTo(this._filledFlxRect, this._frontFrame)));
          }
          p.renderBlit && (this.dirty = !0);
        },
        update: function (a) {
          null != this.parent &&
            (ia.getProperty(this.parent, this.parentVariable) !=
              this.get_value() && this.updateValueFromParent(),
            this.fixedPosition ||
              (this.set_x(this.parent.x + this.positionOffset.x),
              this.set_y(this.parent.y + this.positionOffset.y)));
          H.prototype.update.call(this, a);
        },
        draw: function () {
          H.prototype.draw.call(this);
          if (
            p.renderTile &&
            0 != this.alpha &&
            0 < this.get_percent() &&
            2 != this._frontFrame.type
          )
            for (var a = 0, b = this.get_cameras(); a < b.length; ) {
              var c = b[a];
              ++a;
              if (c.visible && c.exists && this.isOnScreen(c)) {
                this.getScreenPosition(this._point, c).subtractPoint(
                  this.offset
                );
                this._frontFrame.prepareMatrix(
                  this._matrix,
                  0,
                  this.flipX,
                  this.flipY
                );
                this._matrix.translate(-this.origin.x, -this.origin.y);
                this._matrix.scale(this.scale.x, this.scale.y);
                if (0 != this.angle) {
                  var d = this._matrix,
                    e = this._cosAngle,
                    f = this._sinAngle,
                    h = d.a * e - d.b * f;
                  d.b = d.a * f + d.b * e;
                  d.a = h;
                  h = d.c * e - d.d * f;
                  d.d = d.c * f + d.d * e;
                  d.c = h;
                  h = d.tx * e - d.ty * f;
                  d.ty = d.tx * f + d.ty * e;
                  d.tx = h;
                }
                e = this._point;
                f = this.origin.x;
                d = this.origin.y;
                null == d && (d = 0);
                null == f && (f = 0);
                h = e;
                h.set_x(h.x + f);
                e.set_y(e.y + d);
                this.isPixelPerfectRender(c) &&
                  ((d = this._point),
                  d.set_x(Math.floor(d.x)),
                  d.set_y(Math.floor(d.y)));
                this._matrix.translate(this._point.x, this._point.y);
                c.drawPixels(
                  this._frontFrame,
                  null,
                  this._matrix,
                  this.colorTransform,
                  this.blend,
                  this.antialiasing,
                  this.shader
                );
              }
            }
        },
        set_pixels: function (a) {
          return p.renderTile ? a : H.prototype.set_pixels.call(this, a);
        },
        toString: function () {
          var a = this.min,
            b = Sb._pool.get();
          b.label = "min";
          b.value = a;
          a = this.max;
          var c = Sb._pool.get();
          c.label = "max";
          c.value = a;
          a = this.range;
          var d = Sb._pool.get();
          d.label = "range";
          d.value = a;
          a = this.pct;
          var e = Sb._pool.get();
          e.label = "%";
          e.value = a;
          a = this.pxPerPercent;
          var f = Sb._pool.get();
          f.label = "px/%";
          f.value = a;
          a = this.get_value();
          var h = Sb._pool.get();
          h.label = "value";
          h.value = a;
          return yb.getDebugString([b, c, d, e, f, h]);
        },
        get_percent: function () {
          return this.get_value() > this.max
            ? this._maxPercent
            : Math.floor(
                ((this.get_value() - this.min) / this.range) * this._maxPercent
              );
        },
        set_value: function (a) {
          this.value = Math.max(this.min, Math.min(a, this.max));
          this.get_value() == this.min &&
            null != this.emptyCallback &&
            this.emptyCallback();
          this.get_value() == this.max &&
            null != this.filledCallback &&
            this.filledCallback();
          this.get_value() == this.min && this.killOnEmpty && this.kill();
          this.updateBar();
          return a;
        },
        get_value: function () {
          return this.value;
        },
        set_numDivisions: function (a) {
          this.numDivisions = 0 < a ? a : 100;
          this.updateFilledBar();
          return a;
        },
        get_frontFrames: function () {
          return p.renderTile ? this.frontFrames : null;
        },
        set_frontFrames: function (a) {
          p.renderTile
            ? ((this.frontFrames = a),
              (this._frontFrame =
                null != a ? a.get_frame().copyTo(this._frontFrame) : null))
            : this.createImageFilledBar(a.get_frame().paint());
          return a;
        },
        __class__: bf,
        __properties__: r(H.prototype.__properties__, {
          set_fillDirection: "set_fillDirection",
          set_frontFrames: "set_frontFrames",
          get_frontFrames: "get_frontFrames",
          set_numDivisions: "set_numDivisions",
          set_value: "set_value",
          get_value: "get_value",
          get_percent: "get_percent",
        }),
      });
      var Jd = function () {};
      g["flixel.addons.ui.interfaces.IHasParams"] = Jd;
      Jd.__name__ = "flixel.addons.ui.interfaces.IHasParams";
      Jd.__isInterface__ = !0;
      Jd.prototype = {
        __class__: Jd,
        __properties__: { set_params: "set_params" },
      };
      var Ng = function (a, b, c, d, e, f, h, m, n, p) {
        null == p && (p = !1);
        null == n && (n = 100);
        null == m && (m = 0);
        null == h && (h = "");
        null == e && (e = 10);
        null == d && (d = 100);
        null == b && (b = 0);
        null == a && (a = 0);
        bf.call(this, a, b, c, d, e, f, h, m, n, p);
      };
      g["flixel.addons.ui.FlxUIBar"] = Ng;
      Ng.__name__ = "flixel.addons.ui.FlxUIBar";
      Ng.__interfaces__ = [Jd, Qc, pc];
      Ng.__super__ = bf;
      Ng.prototype = r(bf.prototype, {
        set_style: function (a) {
          this.style = a;
          this.resize(this.barWidth, this.barHeight);
          return this.style;
        },
        resize: function (a, b) {
          this.set_width(a);
          this.set_height(b);
          this.barWidth = this.get_width() | 0;
          this.barHeight = this.get_height() | 0;
          p.renderBlit &&
            this.makeGraphic(this.barWidth, this.barHeight, 0, !0);
          a = null != this.style.borderColor;
          b = null == this.style.emptyColor ? -16777216 : this.style.emptyColor;
          var c =
              null == this.style.filledColor ? -65536 : this.style.filledColor,
            d =
              null == this.style.borderColor
                ? -16777216
                : this.style.borderColor;
          null != this.style.filledColor && this.createFilledBar(b, c, a, d);
          null != this.style.filledColors &&
            this.createGradientBar(
              null == this.style.emptyColors
                ? [-16777216]
                : this.style.emptyColors,
              null == this.style.filledColors
                ? [-65536]
                : this.style.filledColors,
              null == this.style.chunkSize ? 1 : this.style.chunkSize,
              null == this.style.emptyImgSrc ? 180 : this.style.gradRotation,
              a,
              d
            );
          "" != this.style.filledImgSrc &&
            this.createImageBar(
              this.style.emptyImgSrc,
              this.style.filledImgSrc,
              b,
              c
            );
          this.setRange(this.min, this.max);
          this.set_value(this.get_value());
        },
        set_params: function (a) {
          return (this.params = a);
        },
        __class__: Ng,
        __properties__: r(bf.prototype.__properties__, {
          set_params: "set_params",
          set_style: "set_style",
        }),
      });
      var kg = function () {};
      g["flixel.input.IFlxInput"] = kg;
      kg.__name__ = "flixel.input.IFlxInput";
      kg.__isInterface__ = !0;
      kg.prototype = {
        __class__: kg,
        __properties__: {
          get_justPressed: "get_justPressed",
          get_pressed: "get_pressed",
          get_justReleased: "get_justReleased",
        },
      };
      var qc = function (a, b, c) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.lastStatus = -1;
        this.maxInputMovement = Infinity;
        this.mouseButtons = [-1];
        this.allowSwiping = !0;
        this.statusAnimations = ["normal", "highlight", "pressed"];
        this.labelAlphas = [0.8, 1, 0.5];
        var d = U._pool.get().set(0, 0);
        d._inPool = !1;
        var e = U._pool.get().set(0, 0);
        e._inPool = !1;
        var f = U._pool.get().set(0, 1);
        f._inPool = !1;
        this.labelOffsets = [d, e, f];
        H.call(this, a, b);
        this.loadDefaultGraphic();
        this.onUp = new Ee(c);
        this.onDown = new Ee();
        this.onOver = new Ee();
        this.onOut = new Ee();
        this.set_status(0);
        this.scrollFactor.set();
        na.get_current().stage.addEventListener(
          "mouseUp",
          q(this, this.onUpEventListener)
        );
        this.input = new hd(0);
      };
      g["flixel.ui.FlxTypedButton"] = qc;
      qc.__name__ = "flixel.ui.FlxTypedButton";
      qc.__interfaces__ = [kg];
      qc.__super__ = H;
      qc.prototype = r(H.prototype, {
        graphicLoaded: function () {
          H.prototype.graphicLoaded.call(this);
          this.setupAnimation("normal", 0);
          this.setupAnimation("highlight", 1);
          this.setupAnimation("pressed", 2);
        },
        loadDefaultGraphic: function () {
          this.loadGraphic("flixel/images/ui/button.png", !0, 80, 20);
        },
        setupAnimation: function (a, b) {
          b = Math.min(b, this.animation._sprite.numFrames - 1) | 0;
          this.animation.add(a, [b]);
        },
        destroy: function () {
          this.set_label(Z.destroy(this.label));
          this._spriteLabel = null;
          this.onUp = Z.destroy(this.onUp);
          this.onDown = Z.destroy(this.onDown);
          this.onOver = Z.destroy(this.onOver);
          this.onOut = Z.destroy(this.onOut);
          this.labelOffsets = Z.putArray(this.labelOffsets);
          this.input = this.currentInput = this.labelAlphas = null;
          na.get_current().stage.removeEventListener(
            "mouseUp",
            q(this, this.onUpEventListener)
          );
          H.prototype.destroy.call(this);
        },
        update: function (a) {
          H.prototype.update.call(this, a);
          this.visible &&
            (this.updateButton(),
            this.lastStatus != this.status &&
              (this.updateStatusAnimation(), (this.lastStatus = this.status)));
          this.input.update();
        },
        updateStatusAnimation: function () {
          this.animation.play(this.statusAnimations[this.status]);
        },
        draw: function () {
          H.prototype.draw.call(this);
          null != this._spriteLabel &&
            this._spriteLabel.visible &&
            (this._spriteLabel.set_cameras(this.get_cameras()),
            this._spriteLabel.draw());
        },
        updateButton: function () {
          var a = this.checkMouseOverlap();
          a || (a = this.checkTouchOverlap());
          if (
            null != this.currentInput &&
            this.currentInput.get_justReleased() &&
            a
          )
            this.onUpHandler();
          if (
            0 != this.status &&
            (!a ||
              (null != this.currentInput &&
                this.currentInput.get_justReleased()))
          )
            this.onOutHandler();
        },
        checkMouseOverlap: function () {
          for (var a = !1, b = 0, c = this.get_cameras(); b < c.length; ) {
            var d = c[b];
            ++b;
            for (var e = 0, f = this.mouseButtons; e < f.length; ) {
              var h = f[e];
              ++e;
              h = ef.getByID(h);
              null != h &&
                this.checkInput(p.mouse, h, h.justPressedPosition, d) &&
                (a = !0);
            }
          }
          return a;
        },
        checkTouchOverlap: function () {
          for (var a = !1, b = 0, c = this.get_cameras(); b < c.length; ) {
            var d = c[b];
            ++b;
            for (var e = 0, f = p.touches.list; e < f.length; ) {
              var h = f[e];
              ++e;
              this.checkInput(h, h, h.justPressedPosition, d) && (a = !0);
            }
          }
          return a;
        },
        checkInput: function (a, b, c, d) {
          if (Infinity != this.maxInputMovement) {
            var e = 0,
              f = 0;
            null == f && (f = 0);
            null == e && (e = 0);
            e = U._pool.get().set(e, f);
            e._inPool = !1;
            e._weak = !0;
            c =
              c.distanceTo(a.getScreenPosition(null, e)) >
              this.maxInputMovement;
          } else c = !1;
          if (c && b == this.currentInput) this.currentInput = null;
          else if (
            this.overlapsPoint(a.getWorldPosition(d, this._point), !0, d)
          )
            return this.updateStatus(b), !0;
          return !1;
        },
        updateStatus: function (a) {
          if (a.get_justPressed())
            (this.currentInput = a), this.onDownHandler();
          else if (0 == this.status)
            if (this.allowSwiping && a.get_pressed()) this.onDownHandler();
            else this.onOverHandler();
        },
        updateLabelPosition: function () {
          null != this._spriteLabel &&
            (this._spriteLabel.set_x(
              (this.pixelPerfectPosition ? Math.floor(this.x) : this.x) +
                this.labelOffsets[this.status].x
            ),
            this._spriteLabel.set_y(
              (this.pixelPerfectPosition ? Math.floor(this.y) : this.y) +
                this.labelOffsets[this.status].y
            ));
        },
        updateLabelAlpha: function () {
          null != this._spriteLabel &&
            this.labelAlphas.length > this.status &&
            this._spriteLabel.set_alpha(
              this.alpha * this.labelAlphas[this.status]
            );
        },
        onUpEventListener: function (a) {
          if (this.visible && this.exists && this.active && 2 == this.status)
            this.onUpHandler();
        },
        onUpHandler: function () {
          this.set_status(0);
          this.input.release();
          this.currentInput = null;
          var a = this.onUp;
          null != a.callback && a.callback();
          null != a.sound && a.sound.play(!0);
        },
        onDownHandler: function () {
          this.set_status(2);
          this.input.press();
          var a = this.onDown;
          null != a.callback && a.callback();
          null != a.sound && a.sound.play(!0);
        },
        onOverHandler: function () {
          if (p.mouse.enabled) {
            this.set_status(1);
            var a = this.onOver;
            null != a.callback && a.callback();
            null != a.sound && a.sound.play(!0);
          } else this.set_status(0);
        },
        onOutHandler: function () {
          this.set_status(0);
          this.input.release();
          var a = this.onOut;
          null != a.callback && a.callback();
          null != a.sound && a.sound.play(!0);
        },
        set_label: function (a) {
          null != a &&
            (a.scrollFactor.put(), (a.scrollFactor = this.scrollFactor));
          this._spriteLabel = this.label = a;
          this.updateLabelPosition();
          return a;
        },
        set_status: function (a) {
          this.status = a;
          this.updateLabelAlpha();
          return this.status;
        },
        set_alpha: function (a) {
          H.prototype.set_alpha.call(this, a);
          this.updateLabelAlpha();
          return this.alpha;
        },
        set_x: function (a) {
          H.prototype.set_x.call(this, a);
          this.updateLabelPosition();
          return this.x;
        },
        set_y: function (a) {
          H.prototype.set_y.call(this, a);
          this.updateLabelPosition();
          return this.y;
        },
        get_justReleased: function () {
          return -1 == this.input.current;
        },
        get_pressed: function () {
          var a = this.input;
          return 1 != a.current ? 2 == a.current : !0;
        },
        get_justPressed: function () {
          return 2 == this.input.current;
        },
        __class__: qc,
        __properties__: r(H.prototype.__properties__, {
          get_justPressed: "get_justPressed",
          get_pressed: "get_pressed",
          get_justReleased: "get_justReleased",
          set_status: "set_status",
          set_label: "set_label",
        }),
      });
      var Mh = function () {};
      g["flixel.addons.ui.interfaces.ICursorPointable"] = Mh;
      Mh.__name__ = "flixel.addons.ui.interfaces.ICursorPointable";
      Mh.__isInterface__ = !0;
      var Be = function () {};
      g["flixel.addons.ui.interfaces.IFlxUIClickable"] = Be;
      Be.__name__ = "flixel.addons.ui.interfaces.IFlxUIClickable";
      Be.__isInterface__ = !0;
      Be.prototype = {
        __class__: Be,
        __properties__: { set_skipButtonUpdate: "set_skipButtonUpdate" },
      };
      var Lf = function () {};
      g["flixel.addons.ui.interfaces.IFlxUIButton"] = Lf;
      Lf.__name__ = "flixel.addons.ui.interfaces.IFlxUIButton";
      Lf.__isInterface__ = !0;
      Lf.__interfaces__ = [T, Jd, Qc];
      Lf.prototype = {
        __class__: Lf,
        __properties__: {
          get_justMousedOut: "get_justMousedOut",
          get_mouseIsOut: "get_mouseIsOut",
          get_mouseIsOver: "get_mouseIsOver",
          get_justMousedOver: "get_justMousedOver",
          set_toggle_label: "set_toggle_label",
          set_toggled: "set_toggled",
        },
      };
      var Yb = function (a, b, c) {
        null == b && (b = 0);
        null == a && (a = 0);
        this._centerLabelOffset = null;
        this._src_w = this._src_h = 0;
        this._no_graphic = !1;
        this._assetsToCleanup = [];
        this._autoCleanup = !0;
        this.skipButtonUpdate = this.autoResizeLabel = !1;
        this.up_visible =
          this.over_visible =
          this.down_visible =
          this.up_toggle_visible =
          this.over_toggle_visible =
          this.down_toggle_visible =
          this.round_labels =
            !0;
        this.up_color =
          this.over_color =
          this.down_color =
          this.up_toggle_color =
          this.over_toggle_color =
          this.down_toggle_color =
            null;
        this.broadcastToFlxUI = !0;
        this.has_toggle = this.toggled = !1;
        this.tile = 0;
        this.resize_point = null;
        this.resize_ratio_axis = 1;
        this.resize_ratio = -1;
        qc.call(this, a, b, c);
        b = a = 0;
        null == b && (b = 0);
        null == a && (a = 0);
        a = U._pool.get().set(a, b);
        a._inPool = !1;
        this._centerLabelOffset = a;
        this.statusAnimations[3] = "normal_toggled";
        this.statusAnimations[4] = "highlight_toggled";
        this.statusAnimations[5] = "pressed_toggled";
        a = [];
        a.push(1);
        a.push(1);
        a.push(1);
        this.labelAlphas = a;
        this.inputOver = new hd(0);
      };
      g["flixel.addons.ui.FlxUITypedButton"] = Yb;
      Yb.__name__ = "flixel.addons.ui.FlxUITypedButton";
      Yb.__interfaces__ = [Mh, Jd, Be, Qc, pc, Lf];
      Yb.__super__ = qc;
      Yb.prototype = r(qc.prototype, {
        set_toggled: function (a) {
          this.toggled = a;
          this.updateStatusAnimation();
          return this.toggled;
        },
        get_justMousedOver: function () {
          return 2 == this.inputOver.current;
        },
        get_justMousedOut: function () {
          return -1 == this.inputOver.current;
        },
        get_mouseIsOver: function () {
          var a = this.inputOver;
          return 1 != a.current ? 2 == a.current : !0;
        },
        get_mouseIsOut: function () {
          var a = this.inputOver;
          return 0 != a.current ? -1 == a.current : !0;
        },
        set_toggle_label: function (a) {
          return null != this.label ? (this.toggle_label = a) : null;
        },
        set_visible: function (a) {
          this.visible && 0 == a && this.inputOver.release();
          return qc.prototype.set_visible.call(this, a);
        },
        set_skipButtonUpdate: function (a) {
          return (this.skipButtonUpdate = a);
        },
        set_params: function (a) {
          return (this.params = a);
        },
        destroy: function () {
          this.resize_point = Z.put(this.resize_point);
          qc.prototype.destroy.call(this);
        },
        graphicLoaded: function () {
          qc.prototype.graphicLoaded.call(this);
          this.setupAnimation("normal_toggled", 3);
          this.setupAnimation("highlight_toggled", 4);
          this.setupAnimation("pressed_toggled", 5);
          this._autoCleanup && this.cleanup();
        },
        copyStyle: function (a) {
          this.up_color = a.up_color;
          this.over_color = a.over_color;
          this.down_color = a.down_color;
          this.up_toggle_color = a.up_toggle_color;
          this.down_toggle_color = this.over_toggle_color = a.over_toggle_color;
          this.up_visible = a.up_visible;
          this.over_visible = a.over_visible;
          this.down_visible = a.down_visible;
          this.up_toggle_visible = a.up_toggle_visible;
          this.over_toggle_visible = a.over_toggle_visible;
          this.down_toggle_visible = a.down_toggle_visible;
          var b = a.getCenterLabelOffset();
          this.setCenterLabelOffset(b.x, b.y);
          for (var c = (b = 0), d = a.labelOffsets; c < d.length; ) {
            var e = d[c];
            ++c;
            this.labelOffsets[b].set_x(e.x);
            this.labelOffsets[b].set_y(e.y);
            ++b;
          }
          c = b = 0;
          for (d = a.labelAlphas; c < d.length; )
            (a = d[c]), ++c, (this.labelAlphas[b] = a), ++b;
        },
        setAllLabelOffsets: function (a, b) {
          for (var c = 0, d = this.labelOffsets; c < d.length; ) {
            var e = d[c];
            ++c;
            e.set(a, b);
          }
        },
        update: function (a) {
          qc.prototype.update.call(this, a);
          0 == this.status
            ? ((a = this.inputOver), (a = 1 == a.current || 2 == a.current))
            : (a = !1);
          a && (-1 == this.input.current) == 0 && this.inputOver.release();
          this.inputOver.update();
          null != this.label &&
            ((a = this.fetchAndShowCorrectLabel()),
            a.set_x(
              this.x +
                this._centerLabelOffset.x +
                this.labelOffsets[this.status].x
            ),
            a.set_y(
              this.y +
                this._centerLabelOffset.y +
                this.labelOffsets[this.status].y
            ),
            this.round_labels &&
              (a.set_x((a.x + 0.5) | 0), a.set_y((a.y + 0.5) | 0)),
            (a.scrollFactor = this.scrollFactor));
        },
        updateStatusAnimation: function () {
          this.has_toggle && this.toggled
            ? this.animation.play(this.statusAnimations[this.status + 3])
            : qc.prototype.updateStatusAnimation.call(this);
        },
        draw: function () {
          qc.prototype.draw.call(this);
          this.has_toggle &&
            this.toggled &&
            null != this.toggle_label &&
            1 == this.toggle_label.visible &&
            (this.toggle_label.set_cameras(this.get_cameras()),
            this.toggle_label.draw());
        },
        resize: function (a, b) {
          this.doResize(a, b);
        },
        doResize: function (a, b, c) {
          null == c && (c = !0);
          var d = this.get_width(),
            e = this.get_height(),
            f = 0,
            h = 0;
          null != this.label &&
            ((f = this.get_width() - this._spriteLabel.get_width()),
            (h = this.get_height() - this._spriteLabel.get_height()));
          0 >= a && (a = 80);
          0 >= b && (b = 20);
          c &&
            (null != this._slice9_assets
              ? this.loadGraphicSlice9(
                  this._slice9_assets,
                  a | 0,
                  b | 0,
                  this._slice9_arrays,
                  this.tile,
                  this.resize_ratio,
                  this.has_toggle,
                  this._src_w,
                  this._src_h,
                  this._frame_indeces
                )
              : this._no_graphic
              ? ((c = this.has_toggle
                  ? new J(a | 0, (6 * b) | 0, !0, 0)
                  : new J(a | 0, (3 * b) | 0, !0, 0)),
                this.loadGraphicsUpOverDown(c))
              : this.loadGraphicSlice9(null, a | 0, b | 0, null, this.tile));
          null != this.label &&
            this.autoResizeLabel &&
            pa.__implements(this.label, pc) &&
            this.label.resize(a - f, b - h);
          this.autoCenterLabel();
          a = this.get_width() - d;
          e = this.get_height() - e;
          null != this.resize_point &&
            ((e *= this.resize_point.y),
            (b = this),
            b.set_x(b.x - a * this.resize_point.x),
            (b = this),
            b.set_y(b.y - e));
        },
        getBmp: function (a) {
          return x.getBmp(a);
        },
        loadGraphicsUpOverDown: function (a, b, c) {
          null == b && (b = !1);
          this._slice9_arrays = this._slice9_assets = null;
          this.resize_ratio = -1;
          b && (this.has_toggle = !0);
          b = null;
          a instanceof J
            ? (b = a)
            : "string" == typeof a && (b = this.getBmp(a));
          a = this.grabButtonFrame(b, 0, this.has_toggle, 0, 0, c);
          var d = this.grabButtonFrame(b, 1, this.has_toggle, 0, 0, c);
          var e = this.grabButtonFrame(b, 2, this.has_toggle, 0, 0, c);
          var f = c;
          if (null == c || "" == c || (null != p.bitmap._cache.h[c]) == 0)
            f = this.assembleButtonFrames(a, d, e);
          this.has_toggle
            ? ((f = this.assembleButtonFrames(a, d, e)),
              (a = this.grabButtonFrame(b, 3, !0, 0, 0, c)),
              (d = this.grabButtonFrame(b, 4, !0, 0, 0, c)),
              (e = this.grabButtonFrame(b, 5, !0, 0, 0, c)),
              (b = this.assembleButtonFrames(a, d, e)),
              (d = this.combineToggleBitmaps(f, b)),
              Z.dispose(f),
              Z.dispose(b),
              this.loadGraphic(d, !0, a.width, a.height, !1, c))
            : this.loadGraphic(f, !0, a.width, a.height, !1, c);
        },
        loadGraphicSlice9: function (a, b, c, d, e, f, h, m, n, g) {
          null == n && (n = 0);
          null == m && (m = 0);
          null == h && (h = !1);
          null == f && (f = -1);
          null == e && (e = 0);
          null == c && (c = 20);
          null == b && (b = 80);
          0 != m && (this._src_w = m);
          0 != n && (this._src_h = n);
          this.tile = e;
          this.has_toggle = h;
          this.resize_ratio = f;
          this._slice9_assets = a;
          this._slice9_arrays = d;
          e = "";
          if (null == g) g = this.has_toggle ? [0, 1, 2, 3, 4, 5] : [0, 1, 2];
          else {
            f = 2;
            for (this.has_toggle && (f = 5); g.length < f + 1; )
              g.push(g.length - 1);
            for (var l = 0, k = g.length; l < k; ) {
              var da = l++;
              5 < g[da] ? (g[da] = 5) : 0 > g[da] && (g[da] = 0);
            }
          }
          this._frame_indeces = g;
          0 == b && (b = 80);
          0 == c && (c = 20);
          c = x.applyResize(this.resize_ratio, this.resize_ratio_axis, b, c);
          b = c.x | 0;
          c = c.y | 0;
          null == a &&
            (h
              ? ((a = ["flixel/flixel-ui/img/button_toggle.png"]),
                (d = [yb.toIntArray("6,6,11,11")]),
                (h = this.getBmp(a[0])),
                (this._src_w = h.width | 0),
                (this._src_h = (h.height / 6) | 0))
              : ((a = ["flixel/flixel-ui/img/button.png"]),
                (d = [yb.toIntArray("6,6,11,11")]),
                (h = this.getBmp(a[0])),
                (this._src_w = h.width | 0),
                (this._src_h = (h.height / 3) | 0)));
          !this.has_toggle && 3 >= a.length
            ? ((h = [null, null, null]), (f = [null, null, null]))
            : ((this.has_toggle = !0),
              (h = [null, null, null, null, null, null]),
              (f = [null, null, null, null, null, null]));
          this._flashRect2.width = b;
          this._flashRect2.height = c;
          m = e +=
            I.string(a) +
            "_slice9=" +
            I.string(d) +
            "_src=" +
            this._src_w +
            "x" +
            this._src_h;
          e += "_final=" + b + "x" + c + "_fi=" + I.string(this._frame_indeces);
          if (1 == a.length) {
            n = this.getBmp(a[0]);
            l = "_all";
            if (0 == this._src_w || 0 == this._src_h)
              throw C.thrown(
                new Cb(
                  "Ambiguous situation! If you only provide one asset, you MUST provide src_w and src_h. Otherwise I can't tell if it's a stacked set of frames or a single frame."
                )
              );
            k = n.height > this._src_h;
            l += k ? "_multiframe" : "";
            e += l;
            m += l;
            if (null != p.bitmap._cache.h[e]) {
              this.loadGraphic(e, !0, b, c);
              return;
            }
            if (k) {
              l = 0;
              for (k = h.length; l < k; )
                (da = l++),
                  (h[da] = this.grabButtonFrame(
                    n,
                    da,
                    this.has_toggle,
                    this._src_w,
                    this._src_h,
                    m
                  ));
              if (null != d && d[0] != []) {
                l = 0;
                for (k = h.length; l < k; )
                  (da = l++),
                    (f[da] = new P(
                      0,
                      0,
                      h[da],
                      this._flashRect2,
                      d[0],
                      this.tile,
                      !1,
                      a[0] + ":" + da,
                      this.resize_ratio
                    )),
                    f[da].set_resize_point(this.resize_point);
                l = 0;
                for (k = h.length; l < k; )
                  (da = l++), (h[da] = f[da].get_pixels());
                b = h[0].width;
                c = h[0].height;
              }
            } else h[0] = n;
          } else {
            if (null != p.bitmap._cache.h[e]) {
              this.loadGraphic(e, !0, b, c);
              return;
            }
            if (this.has_toggle) for (; 6 > a.length; ) a.push("");
            else for (; 3 > a.length; ) a.push("");
            if ("" != a[0]) {
              if (
                null != d &&
                0 < d.length &&
                null != d[0] &&
                0 < d[0].length
              ) {
                for (; d.length < a.length; ) d.push(null);
                f[0] =
                  null != d[0]
                    ? new P(
                        0,
                        0,
                        a[0],
                        this._flashRect2,
                        d[0],
                        this.tile,
                        !1,
                        "",
                        this.resize_ratio
                      )
                    : new Mb(0, 0, a[0]);
                h[0] = f[0].get_pixels();
                l = 1;
                for (k = a.length; l < k; )
                  (da = l++),
                    "" != a[da] &&
                      ((f[da] =
                        null != d[da]
                          ? new P(
                              0,
                              0,
                              a[da],
                              this._flashRect2,
                              d[da],
                              this.tile,
                              !1,
                              "",
                              this.resize_ratio
                            )
                          : new Mb(0, 0, a[da])),
                      (h[da] = f[da].get_pixels()));
              } else
                for (l = 0, k = a.length; l < k; )
                  (da = l++), (h[da] = this.getBmp(a[da]));
              b = h[0].width;
              c = h[0].height;
            } else
              0 == b && (b = 80),
                0 == c && (c = 20),
                (h[0] = new J(b, 3 * c, !0, 0)),
                (this._no_graphic = !0);
          }
          this.has_toggle
            ? ((a = this.assembleButtonFrames(h[g[0]], h[g[1]], h[g[2]])),
              (g = this.assembleButtonFrames(h[g[3]], h[g[4]], h[g[5]])),
              (d = this.combineToggleBitmaps(a, g)),
              Z.dispose(a),
              Z.dispose(g),
              p.bitmap.add(d, !0, e))
            : ((a = this.assembleButtonFrames(h[g[0]], h[g[1]], h[g[2]])),
              p.bitmap.add(a, !0, e));
          this.loadGraphic(e, !0, b, c);
          l = 0;
          for (k = f.length; l < k; )
            (da = l++), null != f[da] && (f[da].destroy(), (f[da] = null));
          for (; 0 < f.length; ) f.pop();
          for (; 0 < h.length; ) h.pop();
        },
        autoCenterLabel: function () {
          if (null != this.label) {
            this.get_width();
            this._spriteLabel.get_width();
            if (this.label instanceof gd) {
              var a = this.label;
              var b = (this.get_width() - a.get_fieldWidth()) / 2;
              a = (this.get_height() - a.get_height()) / 2;
            } else
              (b = (this.get_width() - this._spriteLabel.get_width()) / 2),
                (a = (this.get_height() - this._spriteLabel.get_height()) / 2);
            this._centerLabelOffset.set_x(b);
            this._centerLabelOffset.set_y(a);
          }
        },
        setCenterLabelOffset: function (a, b) {
          this._centerLabelOffset.set_x(a);
          this._centerLabelOffset.set_y(b);
        },
        getCenterLabelOffset: function () {
          var a = this._centerLabelOffset.x,
            b = this._centerLabelOffset.y;
          null == b && (b = 0);
          null == a && (a = 0);
          a = U._pool.get().set(a, b);
          a._inPool = !1;
          return a;
        },
        forceStateHandler: function (a) {
          switch (a) {
            case "click_button":
              this.onUpHandler();
              break;
            case "down_button":
              this.onDownHandler();
              break;
            case "out_button":
              this.onOutHandler();
              break;
            case "over_button":
              this.onOverHandler();
          }
        },
        grabButtonFrame: function (a, b, c, d, e, f) {
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = !1);
          0 == e && (e = c ? (a.height / 6) | 0 : (a.height / 3) | 0);
          c = d;
          0 == c && (c = a.width);
          this._flashRect.x = 0;
          this._flashRect.y = b * e;
          this._flashRect.width = c;
          this._flashRect.height = e;
          this._flashRect.y >= a.height &&
            4 == ((a.height / e) | 0) &&
            (4 == b
              ? (this._flashRect.y = 3 * e)
              : 5 == b && (this._flashRect.y = 2 * e));
          b =
            f +
            "{x:" +
            this._flashRect.x +
            "y:" +
            this._flashRect.y +
            "w:" +
            this._flashRect.width +
            "h:" +
            this._flashRect.height +
            "}";
          if (null != b && null != p.bitmap._cache.h[b])
            return p.bitmap._cache.h[b].bitmap;
          e = new J(c, e);
          e.copyPixels(a, this._flashRect, this._flashPointZero);
          null != f && (p.bitmap.add(e, !0, b), this.addToCleanup(b));
          return e;
        },
        combineToggleBitmaps: function (a, b) {
          var c = new J(a.width, a.height + b.height);
          c.copyPixels(a, a.rect, this._flashPointZero);
          this._flashPoint.x = 0;
          this._flashPoint.y = a.height;
          c.copyPixels(b, b.rect, this._flashPoint);
          return c;
        },
        assembleButtonFrames: function (a, b, c) {
          var d =
            null != b
              ? null != c
                ? new J(a.width, 3 * a.height)
                : new J(a.width, 2 * a.height)
              : new J(a.width, a.height);
          d.copyPixels(a, a.rect, this._flashPointZero);
          null != b &&
            ((this._flashPoint.x = 0),
            (this._flashPoint.y = a.height),
            d.copyPixels(b, b.rect, this._flashPoint),
            null != c &&
              ((this._flashPoint.y = 2 * a.height),
              d.copyPixels(c, c.rect, this._flashPoint)));
          return d;
        },
        updateButton: function () {
          this.skipButtonUpdate || qc.prototype.updateButton.call(this);
        },
        addToCleanup: function (a) {
          null == this._assetsToCleanup && (this._assetsToCleanup = []);
          -1 == this._assetsToCleanup.indexOf(a) &&
            this._assetsToCleanup.push(a);
        },
        cleanup: function () {
          if (null != this._assetsToCleanup) {
            for (var a = 0, b = this._assetsToCleanup; a < b.length; ) {
              var c = b[a];
              ++a;
              p.bitmap.removeByKey(c);
            }
            this._assetsToCleanup = null;
          }
        },
        fetchAndShowCorrectLabel: function () {
          if (this.has_toggle) {
            if (this.toggled && null != this.toggle_label)
              return (
                this._spriteLabel.set_visible(!1),
                this.toggle_label.set_visible(!0),
                this.toggle_label
              );
            null != this.toggle_label && this.toggle_label.set_visible(!1);
            this._spriteLabel.set_visible(!0);
          }
          return this.label;
        },
        onUpHandler: function () {
          this.has_toggle && this.set_toggled(!this.toggled);
          qc.prototype.onUpHandler.call(this);
          if (null != this.label) {
            var a = this.fetchAndShowCorrectLabel();
            a.set_visible(
              this.toggled ? this.up_toggle_visible : this.up_visible
            );
            var b = this.toggled ? this.up_toggle_color : this.up_color;
            null != b && a.set_color(b);
          }
          this.broadcastToFlxUI &&
            Ia.event("click_button", this, null, this.params);
        },
        onDownHandler: function () {
          qc.prototype.onDownHandler.call(this);
          if (null != this.label) {
            var a = this.fetchAndShowCorrectLabel();
            a.set_visible(
              this.toggled ? this.down_toggle_visible : this.down_visible
            );
            var b = this.toggled ? this.down_toggle_color : this.down_color;
            null != b && a.set_color(b);
          }
          this.broadcastToFlxUI &&
            Ia.event("down_button", this, null, this.params);
        },
        onOverHandler: function () {
          qc.prototype.onOverHandler.call(this);
          this.inputOver.press();
          if (null != this.label) {
            var a = this.fetchAndShowCorrectLabel();
            a.set_visible(
              this.toggled ? this.over_toggle_visible : this.over_visible
            );
            var b = this.toggled ? this.over_toggle_color : this.over_color;
            null != b && a.set_color(b);
          }
          this.broadcastToFlxUI &&
            Ia.event("over_button", this, null, this.params);
        },
        onOutHandler: function () {
          qc.prototype.onOutHandler.call(this);
          this.inputOver.release();
          if (null != this.label) {
            var a = this.fetchAndShowCorrectLabel();
            a.set_visible(
              this.toggled ? this.up_toggle_visible : this.up_visible
            );
            var b = this.toggled ? this.up_toggle_color : this.up_color;
            null != b && a.set_color(b);
          }
          this.broadcastToFlxUI &&
            Ia.event("out_button", this, null, this.params);
        },
        set_x: function (a) {
          qc.prototype.set_x.call(this, a);
          null != this._spriteLabel &&
            (this._spriteLabel.set_x(
              this.x +
                this._centerLabelOffset.x +
                this.labelOffsets[this.status].x
            ),
            this.round_labels &&
              this._spriteLabel.set_x((this._spriteLabel.x + 0.5) | 0),
            this.has_toggle &&
              null != this.toggle_label &&
              this.toggle_label.set_x(this._spriteLabel.x));
          return a;
        },
        set_y: function (a) {
          qc.prototype.set_y.call(this, a);
          null != this.label &&
            (this._spriteLabel.set_y(
              this.y +
                this._centerLabelOffset.y +
                this.labelOffsets[this.status].y
            ),
            this.round_labels &&
              this._spriteLabel.set_y((this._spriteLabel.y + 0.5) | 0),
            this.has_toggle &&
              null != this.toggle_label &&
              this.toggle_label.set_y(this._spriteLabel.y));
          return a;
        },
        __class__: Yb,
        __properties__: r(qc.prototype.__properties__, {
          set_params: "set_params",
          set_skipButtonUpdate: "set_skipButtonUpdate",
          set_toggle_label: "set_toggle_label",
          get_justMousedOut: "get_justMousedOut",
          get_mouseIsOut: "get_mouseIsOut",
          get_mouseIsOver: "get_mouseIsOver",
          get_justMousedOver: "get_justMousedOver",
          set_toggled: "set_toggled",
        }),
      });
      var Mg = function () {};
      g["flixel.addons.ui.interfaces.ILabeled"] = Mg;
      Mg.__name__ = "flixel.addons.ui.interfaces.ILabeled";
      Mg.__isInterface__ = !0;
      Mg.prototype = { __class__: Mg };
      var Yc = function (a, b, c, d, e, f, h) {
        null == h && (h = -1);
        null == f && (f = !1);
        null == e && (e = !0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.up_style =
          this.over_style =
          this.down_style =
          this.up_toggle_style =
          this.over_toggle_style =
          this.down_toggle_style =
            null;
        Yb.call(this, a, b, d);
        this.set_color(h);
        null != c &&
          (this.set_label(new gd(0, 0, 80, c, 8)),
          this.label.setFormat(null, 8, 3355443, "center"));
        f && (this._no_graphic = !0);
        e
          ? this.resize(this.get_width(), this.get_height())
          : 0 == this._no_graphic
          ? this.doResize(this.get_width(), this.get_height(), !1)
          : this.doResize(this.get_width(), this.get_height(), !0);
      };
      g["flixel.addons.ui.FlxUIButton"] = Yc;
      Yc.__name__ = "flixel.addons.ui.FlxUIButton";
      Yc.__interfaces__ = [Lf, Mg];
      Yc.__super__ = Yb;
      Yc.prototype = r(Yb.prototype, {
        setLabelFormat: function (a, b, c, d, e, f, h) {
          null == h && (h = !0);
          null == f && (f = 0);
          null == c && (c = -1);
          null == b && (b = 8);
          return null != this.label
            ? (this.label.setFormat(a, b, c, d, e, f, h), this.label)
            : null;
        },
        autoCenterLabel: function () {
          Yb.prototype.autoCenterLabel.call(this);
        },
        copyStyle: function (a) {
          Yb.prototype.copyStyle.call(this, a);
          if (a instanceof Yc) {
            this.up_style = a.up_style;
            this.over_style = a.over_style;
            this.down_style = a.down_style;
            this.up_toggle_style = a.up_toggle_style;
            this.over_toggle_style = a.over_toggle_style;
            this.down_toggle_style = a.down_toggle_style;
            a = a.label;
            var b = a.textField.get_defaultTextFormat();
            if (-1 == a._font.indexOf(Xd.FONT_DEFAULT))
              Ac.copyFromFlxText(a).apply(null, this.label);
            else {
              var c = ul.fromOpenFL(b.align);
              this.label.setFormat(
                null,
                b.size | 0,
                b.color,
                c,
                a.borderStyle,
                a.borderColor,
                a.textField.set_embedFonts(!0)
              );
            }
          }
        },
        getLabel: function () {
          return this.label;
        },
        resize: function (a, b) {
          Yb.prototype.resize.call(this, a, b);
        },
        destroy: function () {
          this._noIconGraphicsBkup = Z.dispose(this._noIconGraphicsBkup);
          Yb.prototype.destroy.call(this);
        },
        loadDefaultGraphic: function () {},
        resetHelpers: function () {
          Yb.prototype.resetHelpers.call(this);
          if (null != this.label) {
            var a = this.label,
              b = this.get_width() | 0;
            a.set_width((this.label.frameWidth = b));
            this.label.set_fieldWidth(this.label.get_width());
            this.label.set_size(this.label._defaultFormat.size | 0);
          }
        },
        onDownHandler: function () {
          Yb.prototype.onDownHandler.call(this);
          null != this.label &&
            (this.toggled && null != this.down_toggle_style
              ? (this.label.set_color(this.down_toggle_style.color),
                null != this.down_toggle_style.border &&
                  (this.label.set_borderStyle(
                    this.down_toggle_style.border.style
                  ),
                  this.label.set_borderColor(
                    this.down_toggle_style.border.color
                  ),
                  this.label.set_borderSize(this.down_toggle_style.border.size),
                  this.label.set_borderQuality(
                    this.down_toggle_style.border.quality
                  )))
              : this.toggled ||
                null == this.down_style ||
                (this.label.set_color(this.down_style.color),
                null != this.down_style.border &&
                  (this.label.set_borderStyle(this.down_style.border.style),
                  this.label.set_borderColor(this.down_style.border.color),
                  this.label.set_borderSize(this.down_style.border.size),
                  this.label.set_borderQuality(
                    this.down_style.border.quality
                  ))));
        },
        onOverHandler: function () {
          Yb.prototype.onOverHandler.call(this);
          null != this.label &&
            (this.toggled && null != this.over_toggle_style
              ? (this.label.set_color(this.over_toggle_style.color),
                null != this.over_toggle_style.border &&
                  (this.label.set_borderStyle(
                    this.over_toggle_style.border.style
                  ),
                  this.label.set_borderColor(
                    this.over_toggle_style.border.color
                  ),
                  this.label.set_borderSize(this.over_toggle_style.border.size),
                  this.label.set_borderQuality(
                    this.over_toggle_style.border.quality
                  )))
              : this.toggled ||
                null == this.over_style ||
                (this.label.set_color(this.over_style.color),
                null != this.over_style.border &&
                  (this.label.set_borderStyle(this.over_style.border.style),
                  this.label.set_borderColor(this.over_style.border.color),
                  this.label.set_borderSize(this.over_style.border.size),
                  this.label.set_borderQuality(
                    this.over_style.border.quality
                  ))));
        },
        onOutHandler: function () {
          Yb.prototype.onOutHandler.call(this);
          null != this.label &&
            (this.toggled && null != this.up_toggle_style
              ? (this.label.set_color(this.up_toggle_style.color),
                null != this.up_toggle_style.border &&
                  (this.label.set_borderStyle(
                    this.up_toggle_style.border.style
                  ),
                  this.label.set_borderColor(this.up_toggle_style.border.color),
                  this.label.set_borderSize(this.up_toggle_style.border.size),
                  this.label.set_borderQuality(
                    this.up_toggle_style.border.quality
                  )))
              : this.toggled ||
                null == this.up_style ||
                (this.label.set_color(this.up_style.color),
                null != this.up_style.border &&
                  (this.label.set_borderStyle(this.up_style.border.style),
                  this.label.set_borderColor(this.up_style.border.color),
                  this.label.set_borderSize(this.up_style.border.size),
                  this.label.set_borderQuality(this.up_style.border.quality))));
        },
        onUpHandler: function () {
          Yb.prototype.onUpHandler.call(this);
          null != this.label &&
            (this.toggled && null != this.up_toggle_style
              ? (this.label.set_color(this.up_toggle_style.color),
                null != this.up_toggle_style.border &&
                  (this.label.set_borderStyle(
                    this.up_toggle_style.border.style
                  ),
                  this.label.set_borderColor(this.up_toggle_style.border.color),
                  this.label.set_borderSize(this.up_toggle_style.border.size),
                  this.label.set_borderQuality(
                    this.up_toggle_style.border.quality
                  )))
              : this.toggled ||
                null == this.up_style ||
                (this.label.set_color(this.up_style.color),
                null != this.up_style.border &&
                  (this.label.set_borderStyle(this.up_style.border.style),
                  this.label.set_borderColor(this.up_style.border.color),
                  this.label.set_borderSize(this.up_style.border.size),
                  this.label.set_borderQuality(this.up_style.border.quality))));
        },
        __class__: Yc,
      });
      var Ce = function (a, b, c, d, e, f, h, m) {
        null == f && (f = 100);
        null == b && (b = 0);
        null == a && (a = 0);
        this.skipButtonUpdate = !1;
        this.box_space = 2;
        this.textX = this.textY = 0;
        this.checked = this.checkbox_dirty = !1;
        this.max_width = -1;
        Ha.call(this);
        this.callback = m;
        this.set_params(h);
        null == c && (c = "flixel/flixel-ui/img/check_box.png");
        c instanceof H
          ? (this.box = c)
          : ((this.box = new H()), this.box.loadGraphic(c, !0));
        this.button = new Yc(0, 0, e, q(this, this._clickCheck));
        this.button.label.setFormat(null, 8, 16777215, "left", Vb.OUTLINE);
        this.button.label.set_fieldWidth(f);
        this.button.up_color = 16777215;
        this.button.down_color = 16777215;
        this.button.over_color = 16777215;
        this.button.up_toggle_color = 16777215;
        this.button.down_toggle_color = 16777215;
        this.button.over_toggle_color = 16777215;
        this.button.loadGraphicSlice9(
          ["", "", ""],
          (this.box.get_width() + this.box_space + f) | 0,
          this.box.get_height() | 0
        );
        this.max_width = (this.box.get_width() + this.box_space + f) | 0;
        this.button.onUp.callback = q(this, this._clickCheck);
        null == d && (d = "flixel/flixel-ui/img/check_mark.png");
        d instanceof H
          ? (this.mark = d)
          : ((this.mark = new H()), this.mark.loadGraphic(d));
        this.add(this.box);
        this.add(this.mark);
        this.add(this.button);
        this.anchorLabelX();
        this.anchorLabelY();
        this.set_checked(!1);
        this.button.setAllLabelOffsets(0, 0);
        this.set_x(a);
        this.set_y(b);
        this.set_textX(0);
        this.set_textY(0);
      };
      g["flixel.addons.ui.FlxUICheckBox"] = Ce;
      Ce.__name__ = "flixel.addons.ui.FlxUICheckBox";
      Ce.__interfaces__ = [Mh, Jd, Be, Mg];
      Ce.__super__ = Ha;
      Ce.prototype = r(Ha.prototype, {
        set_skipButtonUpdate: function (a) {
          this.skipButtonUpdate = a;
          this.button.set_skipButtonUpdate(this.skipButtonUpdate);
          return this.skipButtonUpdate;
        },
        set_params: function (a) {
          this.params = a;
          null == this.params && (this.params = []);
          this.params.push({ name: "checked", value: !1 });
          return this.params;
        },
        set_color: function (a) {
          null != this.button && this.button.label.set_color(a);
          return Ha.prototype.set_color.call(this, a);
        },
        getLabel: function () {
          return null == this.button ? null : this.button.label;
        },
        set_visible: function (a) {
          return (this.visible = a);
        },
        set_textX: function (a) {
          this.textX = a;
          this.anchorLabelX();
          return this.textX;
        },
        set_textY: function (a) {
          this.textY = a;
          this.anchorLabelY();
          return this.textY;
        },
        anchorLabelX: function () {
          null != this.button &&
            this.button.label.offset.set_x(
              -(this.box.get_width() + this.box_space + this.textX)
            );
        },
        anchorLabelY: function () {
          null != this.button &&
            this.button.set_y(
              this.box.y +
                (this.box.get_height() - this.button.get_height()) / 2 +
                this.textY
            );
        },
        destroy: function () {
          Ha.prototype.destroy.call(this);
          null != this.mark && (this.mark.destroy(), (this.mark = null));
          null != this.box && (this.box.destroy(), (this.box = null));
          null != this.button && (this.button.destroy(), (this.button = null));
        },
        set_text: function (a) {
          this.button.label.set_text(a);
          this.checkbox_dirty = !0;
          return a;
        },
        update: function (a) {
          Ha.prototype.update.call(this, a);
          this.checkbox_dirty &&
            null != this.button.label &&
            (this.button.label instanceof gd && this.button.label.drawFrame(),
            this.anchorLabelX(),
            this.anchorLabelY(),
            this.button.set_width(
              this.box.frameWidth +
                this.box_space +
                this.button.label.textField.get_textWidth()
            ),
            (this.checkbox_dirty = !1));
        },
        set_checked: function (a) {
          this.mark.set_visible(a);
          return (this.checked = a);
        },
        _clickCheck: function () {
          this.visible &&
            (this.set_checked(!this.checked),
            null != this.callback && this.callback(),
            this.broadcastToFlxUI &&
              Ia.event("click_check_box", this, this.checked, this.params));
        },
        __class__: Ce,
        __properties__: r(Ha.prototype.__properties__, {
          set_text: "set_text",
          set_skipButtonUpdate: "set_skipButtonUpdate",
          set_textY: "set_textY",
          set_textX: "set_textX",
          set_params: "set_params",
          set_checked: "set_checked",
        }),
      });
      var th = function (a, b, c, d) {
        null == c && (c = 1);
        null == b && (b = 1);
        this._clickTime = 0;
        this._clickPressed = !1;
        this.inputMethod = this.lastMouseX = this.lastMouseY = 0;
        this.dispatchEvents = !0;
        this.gamepadAutoConnect = xn.FirstActive;
        this.listIndex = 0;
        this.location = -1;
        this.wrap = !0;
        null == d &&
          (d =
            400 > p.height
              ? "flixel/flixel-ui/img/finger_small.png"
              : "flixel/flixel-ui/img/finger_big.png");
        Mb.call(this, 0, 0, d);
        this.inputMethod = b;
        this._lists = [{ x: 0, y: 0, width: 0, height: 0, widgets: [] }];
        this._widgets = this._lists[0].widgets;
        this.anchor = new Gf(-2, 0, "left", "center", "right", "center");
        this.setDefaultKeys(c);
        this.callback = a;
        this.scrollFactor.set(0, 0);
        null != p.mouse && 0 == p.mouse instanceof Nh
          ? ((this._newMouse = new Nh(p.mouse.cursorContainer)),
            p.set_mouse(this._newMouse))
          : (this._newMouse = p.mouse);
      };
      g["flixel.addons.ui.FlxUICursor"] = th;
      th.__name__ = "flixel.addons.ui.FlxUICursor";
      th.__super__ = Mb;
      th.prototype = r(Mb.prototype, {
        findVisibleLocation: function (a, b, c) {
          null == c && (c = !0);
          null == b && (b = !0);
          this.set_location(a);
          if (-1 != this.location)
            for (
              a = !1;
              null == this._widgets[this.location] ||
              0 == this._widgets[this.location].visible;

            )
              if (b)
                if (this.location == this._widgets.length - 1)
                  if (c)
                    if (a) {
                      this.set_location(-1);
                      break;
                    } else (a = !0), this.set_location(0);
                  else {
                    this.set_location(-1);
                    break;
                  }
                else this.set_location(this.location + 1);
              else if (0 == this.location)
                if (c)
                  if (a) {
                    this.set_location(-1);
                    break;
                  } else (a = !0), this.set_location(this._widgets.length - 1);
                else {
                  this.set_location(-1);
                  break;
                }
              else this.set_location(this.location - 1);
        },
        set_listIndex: function (a) {
          a >= this._lists.length
            ? (a = this._lists.length - 1)
            : 0 > a && (a = 0);
          this.listIndex = a;
          this.set_location(0);
          this._updateCursor();
          return this.listIndex;
        },
        set_visible: function (a) {
          return (a = Mb.prototype.set_visible.call(this, a));
        },
        set_location: function (a) {
          a >= this._widgets.length && (a = this._widgets.length - 1);
          this.location = a;
          this._updateCursor();
          return this.location;
        },
        set_gamepad: function (a) {
          this._gamepad = a;
          this.setDefaultKeys(this._defaultCode);
          for (
            var b = [
                this.keysUp,
                this.keysDown,
                this.keysLeft,
                this.keysRight,
                this.keysClick,
              ],
              c = 0;
            c < b.length;

          ) {
            var d = b[c];
            ++c;
            if (null != d)
              for (var e = 0; e < d.length; ) {
                var f = d[e];
                ++e;
                f instanceof Pc && (f.gamepad = this._gamepad);
              }
          }
          return a;
        },
        get_gamepad: function () {
          return this._gamepad;
        },
        destroy: function () {
          Mb.prototype.destroy.call(this);
          p.mouse == this._newMouse && (this._newMouse = null);
          this.keysUp = Z.destroyArray(this.keysUp);
          this.keysDown = Z.destroyArray(this.keysDown);
          this.keysLeft = Z.destroyArray(this.keysLeft);
          this.keysRight = Z.destroyArray(this.keysRight);
          this.keysClick = Z.destroyArray(this.keysClick);
          this.anchor = Z.destroy(this.anchor);
          for (var a = 0, b = this._lists; a < b.length; ) {
            var c = b[a];
            ++a;
            x.clearArraySoft(c.widgets);
          }
          x.clearArraySoft(this._lists);
          this._widgets = null;
        },
        update: function (a) {
          if (null == this.get_gamepad()) {
            var b = this.getGamepad(!1);
            null != b && this.set_gamepad(b);
          }
          if (this.lastMouseX != p.mouse.x || this.lastMouseY != p.mouse.y)
            (b = this.visible),
              this.jumpToXY(p.mouse.x, p.mouse.y),
              this.set_visible(b),
              (this.lastMouseX = p.mouse.x),
              (this.lastMouseY = p.mouse.y);
          this._checkKeys();
          this._clickTime += a;
          Mb.prototype.update.call(this, a);
        },
        addWidgetsFromUI: function (a) {
          if (null != a.cursorLists) {
            var b = 0;
            for (a = a.cursorLists; b < a.length; ) {
              var c = a[b];
              ++b;
              this.addWidgetList(c);
            }
            this._widgets = this._lists[0].widgets;
            this.set_location(0);
            this.set_listIndex(0);
          } else
            for (b = 0, a = a.group.members; b < a.length; )
              (c = a[b]),
                ++b,
                (pa.__implements(c, Mh) || c instanceof Ha) &&
                  this.addWidget(c);
        },
        jumpToXY: function (a, b) {
          var c = 0,
            d = Infinity,
            e = -1,
            f = -1;
          if (null != this._lists) {
            for (var h = 0, m = this._lists; h < m.length; ) {
              var n = m[h];
              ++h;
              for (var p = 0, g = n.widgets.length; p < g; ) {
                var k = p++,
                  l = n.widgets[k];
                if (
                  1 == l.visible &&
                  a >= l.x &&
                  b >= l.y &&
                  a <= l.x + l.get_width() &&
                  b <= l.y + l.get_height()
                ) {
                  var u = l.x + l.get_width() / 2 - a;
                  l = l.y + l.get_height() / 2 - b;
                  u = u * u + l * l;
                  u < d && ((d = u), (e = c), (f = k));
                }
              }
              ++c;
            }
            if (-1 != e && -1 != f)
              return this.set_listIndex(e), this.set_location(f), !0;
          } else {
            h = 0;
            for (m = this._widgets.length; h < m; )
              (k = h++),
                (l = this._widgets[k]),
                1 == l.visible &&
                  a >= l.x &&
                  b >= l.y &&
                  a <= l.x + l.get_width() &&
                  b <= l.y + l.get_height() &&
                  ((u = l.x + l.get_width() / 2 - a),
                  (l = l.y + l.get_height() / 2 - b),
                  (u = u * u + l * l),
                  u < d && ((d = u), (f = k)));
            if (-1 != f) return this.set_location(f), !0;
          }
          return !1;
        },
        addWidgetList: function (a) {
          for (var b = 0, c = this._lists; b < c.length; ) {
            var d = c[b];
            ++b;
            if (Mc.equals(d.widgets, a)) return;
          }
          d = c = Infinity;
          var e = -Infinity,
            f = -Infinity;
          for (b = 0; b < a.length; ) {
            var h = a[b];
            ++b;
            h.x < c && (c = h.x);
            h.y < d && (d = h.y);
            h.x + h.get_width() > e && (e = h.x);
            h.y + h.get_height() > f && (f = h.y);
          }
          1 == this._lists.length &&
          null != this._lists[0].widgets &&
          0 == this._lists[0].widgets.length
            ? ((this._lists[0].widgets = []),
              (this._lists[0].x = c | 0),
              (this._lists[0].y = d | 0),
              (this._lists[0].width = (e - c) | 0),
              (this._lists[0].height = (f - d) | 0),
              (b = this._lists[0]))
            : (this._lists.push({
                x: c | 0,
                y: d | 0,
                width: (e - c) | 0,
                height: (f - d) | 0,
                widgets: [],
              }),
              (b = this._lists[this._lists.length - 1]));
          c = this._widgets;
          this._widgets = b.widgets;
          for (b = 0; b < a.length; ) (d = a[b]), ++b, this.addWidget(d);
          this._widgets = c;
          this._lists.sort(q(this, this._sortXYWidgetList));
          b = 0;
          for (c = this._lists; b < c.length; )
            (a = c[b]), ++b, a.widgets.sort(q(this, this._sortXYVisible));
        },
        addWidget: function (a) {
          if (pa.__implements(a, Mh)) this._widgets.push(a);
          else if (a instanceof Ha) {
            var b = 0;
            for (a = a.group.members; b < a.length; ) {
              var c = a[b];
              ++b;
              pa.__implements(c, Qc) && this.addWidget(c);
            }
          }
          this._widgets.sort(q(this, this._sortXYVisible));
        },
        setDefaultKeys: function (a) {
          this._defaultCode = a;
          this._clearKeys();
          this._newKeys();
          1 == (a & 1) &&
            (this._addToKeys(this.keysRight, new oc(9, null, [16])),
            this._addToKeys(this.keysLeft, new oc(9, [16])),
            this._addToKeys(this.keysClick, new oc(13)));
          256 == (a & 256) &&
            (this._addToKeys(this.keysRight, new oc(39)),
            this._addToKeys(this.keysLeft, new oc(37)),
            this._addToKeys(this.keysDown, new oc(40)),
            this._addToKeys(this.keysUp, new oc(38)),
            this._addToKeys(this.keysClick, new oc(13)));
          16 == (a & 16) &&
            (this._addToKeys(this.keysRight, new oc(68)),
            this._addToKeys(this.keysLeft, new oc(65)),
            this._addToKeys(this.keysDown, new oc(83)),
            this._addToKeys(this.keysUp, new oc(87)),
            this._addToKeys(this.keysClick, new oc(13)));
          4096 == (a & 4096) &&
            (this._addToKeys(this.keysRight, new oc(102)),
            this._addToKeys(this.keysLeft, new oc(100)),
            this._addToKeys(this.keysDown, new oc(98)),
            this._addToKeys(this.keysUp, new oc(104)),
            this._addToKeys(this.keysClick, new oc(13)));
          null == this.get_gamepad() && (this._gamepad = this.getGamepad());
          65536 == (a & 65536) &&
            (this._addToKeys(this.keysLeft, new Pc(this.get_gamepad(), 13)),
            this._addToKeys(this.keysRight, new Pc(this.get_gamepad(), 14)),
            this._addToKeys(this.keysDown, new Pc(this.get_gamepad(), 12)),
            this._addToKeys(this.keysUp, new Pc(this.get_gamepad(), 11)),
            this._addToKeys(this.keysClick, new Pc(this.get_gamepad(), 0)));
          268435456 == (a & 268435456) &&
            (this._addToKeys(this.keysLeft, new Pc(this.get_gamepad(), 4)),
            this._addToKeys(this.keysRight, new Pc(this.get_gamepad(), 5)),
            this._addToKeys(this.keysClick, new Pc(this.get_gamepad(), 0)));
          1048576 == (a & 1048576) &&
            (this._addToKeys(
              this.keysLeft,
              new Ae(this.get_gamepad(), { id: 19, axis: df.X, positive: !1 })
            ),
            this._addToKeys(
              this.keysRight,
              new Ae(this.get_gamepad(), { id: 19, axis: df.X, positive: !0 })
            ),
            this._addToKeys(
              this.keysUp,
              new Ae(this.get_gamepad(), { id: 19, axis: df.Y, positive: !1 })
            ),
            this._addToKeys(
              this.keysDown,
              new Ae(this.get_gamepad(), { id: 19, axis: df.Y, positive: !0 })
            ),
            this._addToKeys(this.keysClick, new Pc(this.get_gamepad(), 0)));
          16777216 == (a & 16777216) &&
            (this._addToKeys(
              this.keysLeft,
              new Ae(this.get_gamepad(), { id: 20, axis: df.X, positive: !1 })
            ),
            this._addToKeys(
              this.keysRight,
              new Ae(this.get_gamepad(), { id: 20, axis: df.X, positive: !0 })
            ),
            this._addToKeys(
              this.keysUp,
              new Ae(this.get_gamepad(), { id: 20, axis: df.Y, positive: !1 })
            ),
            this._addToKeys(
              this.keysDown,
              new Ae(this.get_gamepad(), { id: 20, axis: df.Y, positive: !0 })
            ),
            this._addToKeys(this.keysClick, new Pc(this.get_gamepad(), 0)));
        },
        getGamepad: function (a) {
          null == a && (a = !0);
          var b = this.gamepadAutoConnect;
          switch (b._hx_index) {
            case 0:
              var c = null;
              break;
            case 1:
              c = p.gamepads.getFirstActiveGamepad();
              break;
            case 2:
              c = p.gamepads.lastActive;
              break;
            case 3:
              (c = b.i), (c = p.gamepads._activeGamepads[c]);
          }
          if (null == c && a)
            for (
              b = 0, a = p.gamepads.get_numActiveGamepads();
              b < a &&
              ((c = b++), (c = p.gamepads._activeGamepads[c]), null == c);

            );
          return c;
        },
        _sortXYWidgetList: function (a, b) {
          return a.y < b.y
            ? -1
            : a.y > b.y
            ? 1
            : a.x < b.x
            ? -1
            : a.x > b.x
            ? 1
            : 0;
        },
        _sortXYVisible: function (a, b) {
          return a.visible && !b.visible
            ? -1
            : b.visible && !a.visible
            ? 1
            : a.y < b.y
            ? -1
            : a.y > b.y
            ? 1
            : a.x < b.x
            ? -1
            : a.x > b.x
            ? 1
            : 0;
        },
        _addToKeys: function (a, b) {
          for (var c = !1, d = 0; d < a.length; ) {
            var e = a[d];
            ++d;
            if (b.equals(e)) {
              c = !0;
              break;
            }
          }
          c || a.push(b);
        },
        _clearKeys: function () {
          x.clearArray(this.keysUp);
          this.keysUp = null;
          x.clearArray(this.keysDown);
          this.keysDown = null;
          x.clearArray(this.keysLeft);
          this.keysLeft = null;
          x.clearArray(this.keysRight);
          this.keysRight = null;
          x.clearArray(this.keysClick);
          this.keysClick = null;
        },
        _newKeys: function () {
          this.keysUp = [];
          this.keysDown = [];
          this.keysLeft = [];
          this.keysRight = [];
          this.keysClick = [];
        },
        _checkKeys: function () {
          for (
            var a = 0 == this.visible,
              b = this.location,
              c = 0,
              d = this.keysUp;
            c < d.length;

          ) {
            var e = d[c];
            ++c;
            if (e.justPressed()) {
              this._doInput(0, -1);
              break;
            }
          }
          c = 0;
          for (d = this.keysDown; c < d.length; )
            if (((e = d[c]), ++c, e.justPressed())) {
              this._doInput(0, 1);
              break;
            }
          c = 0;
          for (d = this.keysLeft; c < d.length; )
            if (((e = d[c]), ++c, e.justPressed())) {
              this._doInput(-1, 0);
              break;
            }
          c = 0;
          for (d = this.keysRight; c < d.length; )
            if (((e = d[c]), ++c, e.justPressed())) {
              this._doInput(1, 0);
              break;
            }
          a && this.visible && -1 != b && this.set_location(b);
          this._clickKeysJustPressed() &&
            (this.ignoreNextInput
              ? (this.ignoreNextInput = !1)
              : ((this._clickPressed = !0),
                (this._clickTime = 0),
                this._doPress()));
          this._clickKeysPressed()
            ? ((this._clickPressed = !0), this._doMouseMove())
            : 0 < this._clickTime &&
              this._clickPressed &&
              (this._doRelease(), (this._clickPressed = !1));
        },
        _clickKeysJustPressed: function () {
          for (var a = 0, b = this.keysClick; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.justPressed()) return !0;
          }
          return !1;
        },
        _clickKeysPressed: function () {
          for (var a = 0, b = this.keysClick; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.pressed()) return !0;
          }
          return !1;
        },
        _getWidgetPoint: function (a) {
          null == a && (a = p.camera);
          var b = this._widgets[this.location];
          if (null == b) return null;
          var c = null;
          b instanceof L && (c = b.getScreenPosition());
          var d = c;
          d.set_x(d.x * a.totalScaleX);
          d = c;
          d.set_y(d.y * a.totalScaleY);
          null == c &&
            ((a = b.x),
            (c = b.y),
            null == c && (c = 0),
            null == a && (a = 0),
            (a = U._pool.get().set(a, c)),
            (a._inPool = !1),
            (c = a));
          d = c;
          d.set_x(d.x + b.get_width() / 2);
          d = c;
          d.set_y(d.y + b.get_height() / 2);
          return c;
        },
        _doMouseMove: function (a) {
          var b = !1;
          if (null == a) {
            a = this._getWidgetPoint();
            if (null == a) return;
            b = !0;
          }
          if (this.dispatchEvents) {
            var c = p.mouse;
            c._globalScreenX = (a.x / p.scaleMode.scale.x) | 0;
            c._globalScreenY = (a.y / p.scaleMode.scale.y) | 0;
            c.updatePositions();
            null != this._newMouse &&
              (this._newMouse.updateGlobalScreenPosition = !1);
            var d = na.get_current().stage,
              e = a.x,
              f = a.y,
              h = na.get_current().stage;
            c = p.keys.pressed;
            var m = c.keyManager.checkStatus(17, c.status);
            c = p.keys.pressed;
            var n = c.keyManager.checkStatus(18, c.status);
            c = p.keys.pressed;
            d.dispatchEvent(
              new wb(
                "mouseMove",
                !0,
                !1,
                e,
                f,
                h,
                m,
                n,
                c.keyManager.checkStatus(16, c.status)
              )
            );
          }
          b && a.put();
        },
        _doPress: function (a) {
          var b = this._widgets[this.location];
          if (null != b) {
            var c = !1;
            if (null == a) {
              a = this._getWidgetPoint();
              if (null == a) return;
              c = !0;
            }
            if (this.dispatchEvents) {
              var d = a.x * p.camera.zoom,
                e = a.y * p.camera.zoom,
                f = na.get_current().stage,
                h = na.get_current().stage,
                m = p.keys.pressed,
                n = m.keyManager.checkStatus(17, m.status);
              m = p.keys.pressed;
              var g = m.keyManager.checkStatus(18, m.status);
              m = p.keys.pressed;
              f.dispatchEvent(
                new wb(
                  "mouseDown",
                  !0,
                  !1,
                  d,
                  e,
                  h,
                  n,
                  g,
                  m.keyManager.checkStatus(16, m.status)
                )
              );
            }
            null != this.callback && this.callback("cursor_down", b);
            c && a.put();
          }
        },
        _doRelease: function (a) {
          var b = this._widgets[this.location];
          if (null != b) {
            var c = !1;
            if (null == a) {
              a = this._getWidgetPoint();
              if (null == a) return;
              c = !0;
            }
            var d = a.x * p.camera.zoom,
              e = a.y * p.camera.zoom;
            if (this.dispatchEvents) {
              var f = na.get_current().stage,
                h = na.get_current().stage,
                m = p.keys.pressed,
                n = m.keyManager.checkStatus(17, m.status);
              m = p.keys.pressed;
              var g = m.keyManager.checkStatus(18, m.status);
              m = p.keys.pressed;
              f.dispatchEvent(
                new wb(
                  "mouseUp",
                  !0,
                  !1,
                  d,
                  e,
                  h,
                  n,
                  g,
                  m.keyManager.checkStatus(16, m.status)
                )
              );
              this._clickPressed &&
                ((f = na.get_current().stage),
                (h = na.get_current().stage),
                (m = p.keys.pressed),
                (n = m.keyManager.checkStatus(17, m.status)),
                (m = p.keys.pressed),
                (g = m.keyManager.checkStatus(18, m.status)),
                (m = p.keys.pressed),
                f.dispatchEvent(
                  new wb(
                    "click",
                    !0,
                    !1,
                    d,
                    e,
                    h,
                    n,
                    g,
                    m.keyManager.checkStatus(16, m.status)
                  )
                ));
            }
            null != this.callback && this.callback("cursor_click", b);
            c && a.put();
            null != this._newMouse &&
              ((this._newMouse.updateGlobalScreenPosition = !0),
              (m = this._newMouse),
              (a = p.game.get_mouseX() | 0),
              (b = p.game.get_mouseY() | 0),
              (m._globalScreenX = (a / p.scaleMode.scale.x) | 0),
              (m._globalScreenY = (b / p.scaleMode.scale.y) | 0),
              m.updatePositions());
          }
        },
        _findNextY: function (a, b, c, d) {
          var e = 0,
            f = 0,
            h = 0;
          null != c
            ? ((e = c[b].x | 0), (f = c[b].y | 0), (h = c.length))
            : null != d && ((e = d[b].x), (f = d[b].y), (h = d.length));
          for (
            var m = 0,
              n = 0,
              p = Infinity,
              g = Infinity,
              k = p,
              l = g,
              u = -1,
              q = 0;
            q < h;

          ) {
            var r = q++;
            r != b &&
              (null != c
                ? ((m = c[r].x | 0), (n = c[r].y | 0))
                : null != d && ((m = d[r].x), (n = d[r].y)),
              (g = n - f),
              (0 > g ? -1 : 1) == (0 > a ? -1 : 1) &&
                0 != g &&
                ((g = Math.abs(g)),
                g < l
                  ? ((l = g), (k = Math.abs(e - m)), (u = r))
                  : g == l &&
                    ((p = Math.abs(e - m)), p < k && ((k = p), (u = r)))));
          }
          return u;
        },
        _wrapX: function (a, b, c) {
          0 > b + a ? (b = b + a + c) : b + a >= c && (b = b + a - c);
          return b;
        },
        _wrapY: function (a, b, c, d) {
          var e,
            f,
            h = -1;
          var m = Infinity;
          var n = (f = 0),
            p = 0,
            g = 0;
          null != c && ((n = c.length), (p = c[b].x | 0), (g = c[b].y | 0));
          null != d && ((n = d.length), (p = d[b].x), (g = d[b].y));
          for (var k = 0; k < n; ) {
            var l = k++;
            if (l != this.location) {
              var u = (e = 0);
              null != c
                ? ((e = c[l].x | 0), (u = c[l].y | 0))
                : null != d && ((e = d[l].x | 0), (u = d[l].y | 0));
              u -= g;
              ((0 > u ? -1 : 1) == (0 > a ? -1 : 1)) == 0 &&
                0 != u &&
                ((u = Math.abs(u)),
                u > f
                  ? ((f = u), (m = Math.abs(p - e)), (h = l))
                  : u == f &&
                    ((e = Math.abs(p - e)), e < m && ((m = e), (h = l))));
            }
          }
          -1 != h && (b = h);
          return b;
        },
        _doInput: function (a, b, c) {
          null == c && (c = 0);
          if (this.ignoreNextInput) this.ignoreNextInput = !1;
          else {
            var d = null;
            if (0 == b)
              0 <= this.location + a && this.location + a < this._widgets.length
                ? this.set_location(this.location + a)
                : this.wrap &&
                  (1 == this._lists.length
                    ? this.set_location(
                        this._wrapX(a, this.location, this._widgets.length)
                      )
                    : (0 <= this.listIndex + a &&
                      this.listIndex + a < this._lists.length
                        ? this.set_listIndex(this.listIndex + a)
                        : this.set_listIndex(
                            this._wrapX(a, this.listIndex, this._lists.length)
                          ),
                      -1 == a && this.set_location(this._widgets.length - 1))),
                (d = this._widgets[this.location]);
            else {
              var e = this._findNextY(b, this.location, this._widgets, null);
              -1 != e
                ? (this.set_location(e), (d = this._widgets[this.location]))
                : this.wrap &&
                  (1 == this._lists.length
                    ? this.set_location(
                        this._wrapY(b, this.location, this._widgets, null)
                      )
                    : ((d = this._findNextY(
                        b,
                        this.listIndex,
                        null,
                        this._lists
                      )),
                      -1 != d
                        ? this.set_listIndex(d)
                        : this.set_listIndex(
                            this._wrapY(b, this.listIndex, null, this._lists)
                          ),
                      -1 == b && this.set_location(this._widgets.length - 1)),
                  (d = this._widgets[this.location]));
            }
            null != d &&
            null != this._widgets &&
            0 == d.visible &&
            c < this._widgets.length
              ? this._doInput(a, b, c + 1)
              : null != this.callback && this.callback("cursor_jump", d);
          }
        },
        _updateCursor: function () {
          this._widgets = this._lists[this.listIndex].widgets;
          if (0 > this.location || null == this._lists || null == this._widgets)
            this.set_visible(!1);
          else {
            this.set_visible(this.set_active(!0));
            var a = this._widgets[this.location],
              b = !1,
              c = !1;
            if (null != a) {
              var d = a;
              if (d instanceof H) {
                var e = d;
                null != e &&
                  null != e.scrollFactor &&
                  this.scrollFactor.set(e.scrollFactor.x, e.scrollFactor.y);
              }
              a instanceof Ce && (d = d.box);
              this.anchor.anchorThing(this, d);
              0 > this.x
                ? (this._flipAnchor("left", d), (b = !0))
                : this.x > p.width + this.get_width() &&
                  (this._flipAnchor("right", d), (b = !0));
              0 > this.y
                ? (this._flipAnchor("top", d), (c = !0))
                : this.y > p.height + this.get_height() &&
                  (this._flipAnchor("bottom", d), (c = !0));
              this.set_flipX(b);
              this.set_flipY(c);
            }
          }
        },
        _flipAnchor: function (a, b) {
          var c = null;
          switch (a) {
            case "bottom":
              "bottom" == this.anchor.y.side &&
                (c = this._bottomAnchor =
                  this.anchor.getFlipped(!0, !1, this._bottomAnchor));
              break;
            case "left":
              "left" == this.anchor.x.side &&
                (c = this._leftAnchor =
                  this.anchor.getFlipped(!0, !1, this._leftAnchor));
              break;
            case "right":
              "right" == this.anchor.x.side &&
                ((this._topAnchor = this.anchor.getFlipped(
                  !0,
                  !1,
                  this._rightAnchor
                )),
                (c = this._rightAnchor));
              break;
            case "top":
              "top" == this.anchor.y.side &&
                (c = this._topAnchor =
                  this.anchor.getFlipped(!0, !1, this._topAnchor));
          }
          null != c && c.anchorThing(this, b);
        },
        __class__: th,
        __properties__: r(Mb.prototype.__properties__, {
          set_gamepad: "set_gamepad",
          get_gamepad: "get_gamepad",
          set_listIndex: "set_listIndex",
          set_location: "set_location",
        }),
      });
      var xn = (z["flixel.addons.ui.GamepadAutoConnectPreference"] = {
          __ename__: "flixel.addons.ui.GamepadAutoConnectPreference",
          __constructs__: ["Never", "FirstActive", "LastActive", "GamepadID"],
          Never: {
            _hx_index: 0,
            __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
            toString: l,
          },
          FirstActive: {
            _hx_index: 1,
            __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
            toString: l,
          },
          LastActive: {
            _hx_index: 2,
            __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
            toString: l,
          },
          GamepadID:
            ((y = function (a) {
              return {
                _hx_index: 3,
                i: a,
                __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
                toString: l,
              };
            }),
            (y.__params__ = ["i"]),
            y),
        }),
        Jf = function (a, b, c, d, e, f, h, m) {
          null == b && (b = 0);
          null == a && (a = 0);
          this.dropDirection = dn.Automatic;
          this.list = [];
          Ha.call(this, a, b);
          this.callback = d;
          this.header = e;
          this.dropPanel = f;
          null == this.header && (this.header = new Hh());
          null == this.dropPanel &&
            ((a = new ma(
              0,
              0,
              this.header.background.get_width(),
              this.header.background.get_height()
            )),
            (this.dropPanel = new P(
              0,
              0,
              "flixel/flixel-ui/img/box.png",
              a,
              [1, 1, 14, 14]
            )));
          if (null != c) {
            a = 0;
            for (h = c.length; a < h; )
              (b = a++),
                (d = c[b]),
                this.list.push(this.makeListButton(b, d.label, d.name));
            this.selectSomething(c[0].name, c[0].label);
          } else if (null != h)
            for (a = 0; a < h.length; )
              (c = h[a]),
                ++a,
                this.list.push(c),
                c.resize(
                  this.header.background.get_width(),
                  this.header.background.get_height()
                ),
                c.set_x(1);
          this.updateButtonPositions();
          this.dropPanel.resize(
            this.header.background.get_width(),
            this.getPanelHeight()
          );
          this.dropPanel.set_visible(!1);
          this.add(this.dropPanel);
          a = 0;
          for (h = this.list; a < h.length; )
            (c = h[a]), ++a, this.add(c), c.set_visible(!1);
          this.header.button.onUp.callback = q(this, this.onDropdown);
          this.add(this.header);
        };
      g["flixel.addons.ui.FlxUIDropDownMenu"] = Jf;
      Jf.__name__ = "flixel.addons.ui.FlxUIDropDownMenu";
      Jf.__interfaces__ = [Jd, Be, Qc];
      Jf.__super__ = Ha;
      Jf.prototype = r(Ha.prototype, {
        set_skipButtonUpdate: function (a) {
          this.skipButtonUpdate = a;
          this.header.button.set_skipButtonUpdate(a);
          return a;
        },
        set_selectedId: function (a) {
          if (this._selectedId == a) return a;
          for (var b = 0, c = 0, d = this.list; c < d.length; ) {
            var e = d[c];
            ++c;
            if (null != e && e.name == a) {
              b = this.list[b];
              this._selectedId = a;
              null != b.label
                ? ((this._selectedLabel = b.label.text),
                  this.header.text.set_text(b.label.text))
                : ((this._selectedLabel = ""), this.header.text.set_text(""));
              break;
            }
            ++b;
          }
          return a;
        },
        set_selectedLabel: function (a) {
          if (this._selectedLabel == a) return a;
          for (var b = 0, c = 0, d = this.list; c < d.length; ) {
            var e = d[c];
            ++c;
            if (e.label.text == a) {
              this._selectedId = this.list[b].name;
              this._selectedLabel = a;
              this.header.text.set_text(a);
              break;
            }
            ++b;
          }
          return a;
        },
        set_params: function (a) {
          return (this.params = a);
        },
        updateButtonPositions: function () {
          var a = this.header.background.get_height();
          this.dropPanel.set_y(this.header.background.y);
          if (this.dropsUp()) {
            var b = this.dropPanel;
            b.set_y(b.y - this.getPanelHeight());
          } else (b = this.dropPanel), b.set_y(b.y + a);
          var c = this.dropPanel.y;
          b = 0;
          for (var d = this.list; b < d.length; ) {
            var e = d[b];
            ++b;
            e.set_y(c);
            c += a;
          }
        },
        set_visible: function (a) {
          for (
            var b = this.dropPanel.visible, c = [], d = 0, e = this.list.length;
            d < e;

          ) {
            var f = d++;
            null != this.list[f] ? c.push(this.list[f].visible) : c.push(!1);
          }
          Ha.prototype.set_visible.call(this, a);
          this.dropPanel.set_visible(b);
          d = 0;
          for (e = this.list.length; d < e; )
            (f = d++), null != this.list[f] && this.list[f].set_visible(c[f]);
          return a;
        },
        dropsUp: function () {
          return this.dropDirection != dn.Up
            ? this.dropDirection == dn.Automatic
              ? this.exceedsHeight()
              : !1
            : !0;
        },
        exceedsHeight: function () {
          return (
            this.y +
              this.getPanelHeight() +
              this.header.background.get_height() >
            p.height
          );
        },
        getPanelHeight: function () {
          return this.list.length * this.header.background.get_height();
        },
        selectSomething: function (a, b) {
          this.header.text.set_text(b);
          this.set_selectedId(a);
          this.set_selectedLabel(b);
        },
        makeListButton: function (a, b, c) {
          b = new Yc(0, 0, b);
          b.broadcastToFlxUI = !1;
          var d = q(this, this.onClickItem);
          b.onUp.callback = function () {
            d(a);
          };
          b.name = c;
          b.loadGraphicSlice9(
            [
              "flixel/flixel-ui/img/invis.png",
              "flixel/flixel-ui/img/hilight.png",
              "flixel/flixel-ui/img/hilight.png",
            ],
            this.header.background.get_width() | 0,
            this.header.background.get_height() | 0,
            [
              [1, 1, 3, 3],
              [1, 1, 3, 3],
              [1, 1, 3, 3],
            ],
            0
          );
          c = b.labelOffsets[2];
          c.set_y(c.y - 1);
          b.up_color = -16777216;
          b.over_color = -1;
          b.down_color = -1;
          b.resize(
            this.header.background.get_width() - 2,
            this.header.background.get_height() - 1
          );
          b.label.set_alignment("left");
          b.autoCenterLabel();
          b.set_x(1);
          c = 0;
          for (var e = b.labelOffsets; c < e.length; ) {
            var f = e[c];
            ++c;
            f.set_x(f.x + 2);
          }
          return b;
        },
        update: function (a) {
          Ha.prototype.update.call(this, a);
          this.dropPanel.visible &&
            2 == p.mouse._leftButton.current &&
            (p.mouse.overlaps(this) || this.showList(!1));
        },
        destroy: function () {
          Ha.prototype.destroy.call(this);
          this.dropPanel = Z.destroy(this.dropPanel);
          this.list = Z.destroyArray(this.list);
          this.callback = null;
        },
        showList: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            d.set_visible(a);
            d.set_active(a);
          }
          this.dropPanel.set_visible(a);
          Ia.forceFocus(a, this);
        },
        onDropdown: function () {
          this.dropPanel.visible ? this.showList(!1) : this.showList(!0);
        },
        onClickItem: function (a) {
          a = this.list[a];
          this.selectSomething(a.name, a.label.text);
          this.showList(!1);
          null != this.callback && this.callback(a.name);
          this.broadcastToFlxUI &&
            Ia.event("click_dropdown", this, a.name, this.params);
        },
        __class__: Jf,
        __properties__: r(Ha.prototype.__properties__, {
          set_params: "set_params",
          set_selectedLabel: "set_selectedLabel",
          set_selectedId: "set_selectedId",
          set_skipButtonUpdate: "set_skipButtonUpdate",
        }),
      });
      var Hh = function (a, b, c, d) {
        null == a && (a = 120);
        Ha.call(this);
        this.background = b;
        this.text = c;
        this.button = d;
        null == this.background &&
          (this.background = new P(
            0,
            0,
            "flixel/flixel-ui/img/box.png",
            new ma(0, 0, a, 20),
            [1, 1, 14, 14]
          ));
        null == this.button &&
          ((this.button = new De(
            0,
            0,
            new H(0, 0, "flixel/flixel-ui/img/dropdown_mark.png")
          )),
          this.button.loadGraphicSlice9(
            ["flixel/flixel-ui/img/button_thin.png"],
            80,
            20,
            [yb.toIntArray("6,6,11,11")],
            0,
            -1,
            !1,
            18,
            18
          ));
        this.button.resize(
          this.background.get_height(),
          this.background.get_height()
        );
        this.button.set_x(
          this.background.x +
            this.background.get_width() -
            this.button.get_width()
        );
        this.button.set_width(a);
        b = this.button.offset;
        b.set_x(b.x - (a - this.button.frameWidth));
        this.button.set_x(this.offset.x);
        b = this.button.label.offset;
        b.set_x(b.x + this.button.offset.x);
        null == this.text &&
          (this.text = new gd(0, 0, this.background.get_width() | 0));
        this.text.setPosition(2, 4);
        this.text.set_color(-16777216);
        this.add(this.background);
        this.add(this.button);
        this.add(this.text);
      };
      g["flixel.addons.ui.FlxUIDropDownHeader"] = Hh;
      Hh.__name__ = "flixel.addons.ui.FlxUIDropDownHeader";
      Hh.__super__ = Ha;
      Hh.prototype = r(Ha.prototype, {
        destroy: function () {
          Ha.prototype.destroy.call(this);
          this.background = Z.destroy(this.background);
          this.text = Z.destroy(this.text);
          this.button = Z.destroy(this.button);
        },
        __class__: Hh,
      });
      var dn = (z["flixel.addons.ui.FlxUIDropDownMenuDropDirection"] = {
          __ename__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
          __constructs__: ["Automatic", "Down", "Up"],
          Automatic: {
            _hx_index: 0,
            __enum__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
            toString: l,
          },
          Down: {
            _hx_index: 1,
            __enum__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
            toString: l,
          },
          Up: {
            _hx_index: 2,
            __enum__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
            toString: l,
          },
        }),
        Kf = function (a, b, c, d, e, f, h, m) {
          this.broadcastToFlxUI = !0;
          If.call(this, a, b, c, d, e, f, h, m);
        };
      g["flixel.addons.ui.FlxUIInputText"] = Kf;
      Kf.__name__ = "flixel.addons.ui.FlxUIInputText";
      Kf.__interfaces__ = [Jd, Qc, pc];
      Kf.__super__ = If;
      Kf.prototype = r(If.prototype, {
        resize: function (a, b) {
          this.set_width(a);
          this.set_height(b);
          this.calcFrame();
        },
        onChange: function (a) {
          If.prototype.onChange.call(this, a);
          if (this.broadcastToFlxUI)
            switch (a) {
              case "backspace":
              case "delete":
                Ia.event("delete_input_text", this, this.text, this.params);
                Ia.event("change_input_text", this, this.text, this.params);
                break;
              case "enter":
                Ia.event("enter_input_text", this, this.text, this.params);
                break;
              case "input":
                Ia.event("input_input_text", this, this.text, this.params),
                  Ia.event("change_input_text", this, this.text, this.params);
            }
        },
        __class__: Kf,
      });
      var Lh = function (a, b, c, d, e, f) {
        this.thickness = 1;
        this.length = 10;
        this.axis = Kh.HORIZONTAL;
        Mb.call(this, a, b);
        this.makeGraphic(2, 2, -1);
        this.set_color(f);
        this.set_axis(c);
        this.set_length(d);
        this.set_thickness(e);
      };
      g["flixel.addons.ui.FlxUILine"] = Lh;
      Lh.__name__ = "flixel.addons.ui.FlxUILine";
      Lh.__interfaces__ = [pc];
      Lh.__super__ = Mb;
      Lh.prototype = r(Mb.prototype, {
        set_axis: function (a) {
          this.axis = a;
          this.refresh();
          return a;
        },
        set_length: function (a) {
          this.length = a;
          this.refresh();
          return a;
        },
        set_thickness: function (a) {
          this.thickness = a;
          this.refresh();
          return a;
        },
        refresh: function () {
          this.axis == Kh.HORIZONTAL
            ? this.scale.set(0.5 * this.length, 0.5 * this.thickness)
            : this.scale.set(0.5 * this.thickness, 0.5 * this.length);
          this.updateHitbox();
        },
        resize: function (a, b) {
          this.axis == Kh.HORIZONTAL
            ? (this.set_length(a), this.set_thickness(b))
            : (this.set_length(b), this.set_thickness(a));
        },
        __class__: Lh,
        __properties__: r(Mb.prototype.__properties__, {
          set_thickness: "set_thickness",
          set_length: "set_length",
          set_axis: "set_axis",
        }),
      });
      var Kh = (z["flixel.addons.ui.LineAxis"] = {
          __ename__: "flixel.addons.ui.LineAxis",
          __constructs__: ["HORIZONTAL", "VERTICAL"],
          HORIZONTAL: {
            _hx_index: 0,
            __enum__: "flixel.addons.ui.LineAxis",
            toString: l,
          },
          VERTICAL: {
            _hx_index: 1,
            __enum__: "flixel.addons.ui.LineAxis",
            toString: l,
          },
        }),
        fj = function (a, b, c, d, e, f, h, m, n, p, g, k) {
          null == m && (m = 0);
          null == h && (h = 1);
          null == f && (f = "<X> more...");
          null == e && (e = 0);
          null == d && (d = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this._skipRefresh = !1;
          this.scrollIndex = 0;
          this._skipRefresh = !0;
          Ha.call(this, a, b);
          this.set_stacking(h);
          this.set_spacing(m);
          if (null != c)
            for (var l = 0; l < c.length; ) (a = c[l]), ++l, this.add(a);
          this.prevButton = g;
          this.nextButton = k;
          this.prevButtonOffset = n;
          this.nextButtonOffset = p;
          this.set_moreString(f);
          if (null == this.prevButton)
            (l = q(this, this.onClick)),
              (c = new Yc(0, 0, " ", function () {
                l(-1);
              })),
              0 == this.stacking
                ? (c.loadGraphicsUpOverDown(
                    "flixel/flixel-ui/img/button_arrow_left.png"
                  ),
                  c.label.set_width(c.label.set_fieldWidth(100)),
                  c.label.set_text(this.getMoreString(0)),
                  c.setAllLabelOffsets(
                    c.get_width() - c.label.get_width(),
                    c.get_height() + 2
                  ),
                  c.label.set_alignment("right"))
                : (c.loadGraphicsUpOverDown(
                    "flixel/flixel-ui/img/button_arrow_up.png"
                  ),
                  c.label.set_width(c.label.set_fieldWidth(100)),
                  c.label.set_text(this.getMoreString(0)),
                  c.setAllLabelOffsets(0, 0),
                  c.setCenterLabelOffset(
                    c.get_width() + 2,
                    c.get_height() - c.label.get_height()
                  ),
                  c.label.set_alignment("left")),
              (this.prevButton = c);
          else {
            if (this.prevButton instanceof Yc) {
              c = this.prevButton;
              var da = q(this, this.onClick);
              c.onUp.callback = function () {
                da(-1);
              };
            }
            if (this.prevButton instanceof De) {
              c = this.prevButton;
              var u = q(this, this.onClick);
              c.onUp.callback = function () {
                u(-1);
              };
            }
          }
          if (null == this.nextButton) {
            var r = q(this, this.onClick);
            c = new Yc(0, 0, " ", function () {
              r(1);
            });
            0 == this.stacking
              ? (c.loadGraphicsUpOverDown(
                  "flixel/flixel-ui/img/button_arrow_right.png"
                ),
                c.label.set_width(c.label.set_fieldWidth(100)),
                c.label.set_text(this.getMoreString(0)),
                c.setAllLabelOffsets(0, c.get_height() + 2))
              : (c.loadGraphicsUpOverDown(
                  "flixel/flixel-ui/img/button_arrow_down.png"
                ),
                c.label.set_width(c.label.set_fieldWidth(100)),
                c.label.set_text(this.getMoreString(0)),
                c.setAllLabelOffsets(0, 0),
                c.setCenterLabelOffset(c.get_width() + 2, 0));
            c.label.set_alignment("left");
            this.nextButton = c;
          } else {
            if (this.nextButton instanceof Yc) {
              c = this.nextButton;
              var z = q(this, this.onClick);
              c.onUp.callback = function () {
                z(1);
              };
            }
            if (this.nextButton instanceof De) {
              c = this.nextButton;
              var v = q(this, this.onClick);
              c.onUp.callback = function () {
                v(1);
              };
            }
          }
          null == this.prevButtonOffset &&
            ((b = a = 0),
            null == b && (b = 0),
            null == a && (a = 0),
            (c = U._pool.get().set(a, b)),
            (c._inPool = !1),
            (this.prevButtonOffset = c));
          null == this.nextButtonOffset &&
            ((b = a = 0),
            null == b && (b = 0),
            null == a && (a = 0),
            (c = U._pool.get().set(a, b)),
            (c._inPool = !1),
            (this.nextButtonOffset = c));
          this._skipRefresh = !1;
          this.setSize(d, e);
        };
      g["flixel.addons.ui.FlxUIList"] = fj;
      fj.__name__ = "flixel.addons.ui.FlxUIList";
      fj.__super__ = Ha;
      fj.prototype = r(Ha.prototype, {
        set_scrollIndex: function (a) {
          this.scrollIndex = a;
          this.refreshList();
          return a;
        },
        set_stacking: function (a) {
          this.stacking = a;
          this.refreshList();
          return a;
        },
        set_spacing: function (a) {
          this.spacing = a;
          this.refreshList();
          return a;
        },
        set_moreString: function (a) {
          this.moreString = a;
          this.refreshList();
          return this.moreString;
        },
        destroy: function () {
          this.nextButton = this.prevButton = null;
          this.prevButtonOffset.put();
          this.nextButtonOffset.put();
          this.nextButtonOffset = this.prevButtonOffset = null;
          Ha.prototype.destroy.call(this);
        },
        setSize: function (a, b) {
          var c = !1;
          0 == this._skipRefresh && (c = this._skipRefresh = !0);
          this.set_width(a);
          this.set_height(b);
          c && (this._skipRefresh = !1);
          this.refreshList();
        },
        add: function (a) {
          Ha.prototype.add.call(this, a);
          this.refreshList();
          return a;
        },
        safeAdd: function (a) {
          return Ha.prototype.add.call(this, a);
        },
        getMoreString: function (a) {
          for (var b = this.moreString; -1 != b.indexOf("<X>"); )
            b = K.replace(b, "<X>", null == a ? "null" : "" + a);
          return b;
        },
        set_visible: function (a) {
          Ha.prototype.set_visible.call(this, a);
          this.refreshList();
          return a;
        },
        onClick: function (a) {
          this.set_scrollIndex(this.scrollIndex + a);
          this.refreshList();
        },
        refreshList: function () {
          if (!this._skipRefresh) {
            this.autoBounds = !1;
            -1 != this.group.members.indexOf(this.prevButton) &&
              this.remove(this.prevButton, !0);
            -1 != this.group.members.indexOf(this.nextButton) &&
              this.remove(this.nextButton, !0);
            var a = 0,
              b = 0,
              c = 0;
            0 == this.stacking
              ? (this.prevButton.set_x(
                  this.prevButtonOffset.x - this.prevButton.get_width() - 2
                ),
                this.prevButton.set_y(this.prevButtonOffset.y),
                this.nextButton.set_x(
                  this.nextButtonOffset.x + this.get_width() + 2
                ),
                this.nextButton.set_y(this.nextButtonOffset.y))
              : (this.prevButton.set_x(this.prevButtonOffset.x),
                this.prevButton.set_y(
                  this.prevButtonOffset.y - this.prevButton.get_height() - 2
                ),
                this.nextButton.set_x(this.nextButtonOffset.x),
                this.nextButton.set_y(
                  this.nextButtonOffset.y + this.get_height() + 2
                ));
            this.prevButton.set_x(this.prevButton.x | 0);
            this.prevButton.set_y(this.prevButton.y | 0);
            this.nextButton.set_x(this.nextButton.x | 0);
            this.nextButton.set_y(this.nextButton.y | 0);
            for (var d = 0, e = 0, f = this.group.members; e < f.length; ) {
              var h = f[e];
              ++e;
              var m = !1;
              c >= this.scrollIndex &&
                (m =
                  1 == this.stacking
                    ? b + h.get_height() <= this.get_height() ||
                      0 >= this.get_height()
                    : a + h.get_width() <= this.get_width() ||
                      0 >= this.get_width());
              m
                ? ((d = c),
                  h.set_visible(h.set_active(!0)),
                  h.set_x(this.x + a),
                  h.set_y(this.y + b),
                  1 == this.stacking
                    ? (b += h.get_height() + this.spacing)
                    : (a += h.get_width() + this.spacing))
                : (h.set_x(h.set_y(0)), h.set_visible(h.set_active(!1)));
              ++c;
            }
            this.amountPrevious = this.scrollIndex;
            this.amountNext = this.group.members.length - (d + 1);
            0 < this.amountPrevious &&
              (this.safeAdd(this.prevButton),
              this.prevButton instanceof Yc &&
                ((a = this.prevButton),
                a.label.set_text(this.getMoreString(this.amountPrevious))));
            0 < this.amountNext &&
              (this.safeAdd(this.nextButton),
              this.nextButton instanceof Yc &&
                ((a = this.nextButton),
                a.label.set_text(this.getMoreString(this.amountNext))));
          }
        },
        get_width: function () {
          return this.width;
        },
        get_height: function () {
          return this.height;
        },
        set_width: function (a) {
          this.width = a;
          this.refreshList();
          return a;
        },
        set_height: function (a) {
          this.height = a;
          this.refreshList();
          return a;
        },
        __class__: fj,
        __properties__: r(Ha.prototype.__properties__, {
          set_moreString: "set_moreString",
          set_spacing: "set_spacing",
          set_stacking: "set_stacking",
          set_scrollIndex: "set_scrollIndex",
        }),
      });
      var rc = function () {
        this.x =
          this.y =
          this.screenX =
          this.screenY =
          this._globalScreenX =
          this._globalScreenY =
            0;
      };
      g["flixel.input.FlxPointer"] = rc;
      rc.__name__ = "flixel.input.FlxPointer";
      rc.prototype = {
        getWorldPosition: function (a, b) {
          null == a && (a = p.camera);
          null == b && ((b = U._pool.get().set(0, 0)), (b._inPool = !1));
          this.getScreenPosition(a, rc._cachedPoint);
          b.set_x(rc._cachedPoint.x + a.scroll.x);
          b.set_y(rc._cachedPoint.y + a.scroll.y);
          return b;
        },
        getScreenPosition: function (a, b) {
          null == a && (a = p.camera);
          null == b && ((b = U._pool.get().set(0, 0)), (b._inPool = !1));
          b.set_x(
            (this._globalScreenX -
              a.x +
              0.5 * a.width * (a.zoom - a.initialZoom)) /
              a.zoom
          );
          b.set_y(
            (this._globalScreenY -
              a.y +
              0.5 * a.height * (a.zoom - a.initialZoom)) /
              a.zoom
          );
          return b;
        },
        getPosition: function (a) {
          null == a && ((a = U._pool.get().set(0, 0)), (a._inPool = !1));
          return a.set(this.x, this.y);
        },
        overlaps: function (a, b) {
          var c = this,
            d = !1,
            e = nb.resolveGroup(a);
          null != e
            ? e.forEachExists(function (a) {
                c.overlaps(a, b) && (d = !0);
              })
            : (this.getPosition(rc._cachedPoint),
              (d = a.overlapsPoint(rc._cachedPoint, !0, b)));
          return d;
        },
        updatePositions: function () {
          this.getScreenPosition(p.camera, rc._cachedPoint);
          this.screenX = rc._cachedPoint.x | 0;
          this.screenY = rc._cachedPoint.y | 0;
          this.getWorldPosition(p.camera, rc._cachedPoint);
          this.x = rc._cachedPoint.x | 0;
          this.y = rc._cachedPoint.y | 0;
        },
        __class__: rc,
      };
      var Mf = function () {};
      g["flixel.input.IFlxInputManager"] = Mf;
      Mf.__name__ = "flixel.input.IFlxInputManager";
      Mf.__isInterface__ = !0;
      Mf.__interfaces__ = [T];
      Mf.prototype = { __class__: Mf };
      var rf = function (a) {
        this._prevX = this._prevY = 0;
        this._visibleWhenFocusLost = !0;
        this._wheelUsed = !1;
        this._cursor = null;
        this.useSystemCursor = !1;
        this.visible = !0;
        this.wheel = 0;
        this.enabled = !0;
        rc.call(this);
        this.cursorContainer = a;
        this.cursorContainer.mouseChildren = !1;
        this.cursorContainer.mouseEnabled = !1;
        this._leftButton = new ef(-1);
        this._stage = na.get_current().stage;
        this._stage.addEventListener(
          "mouseDown",
          ((y = this._leftButton), q(y, y.onDown))
        );
        this._stage.addEventListener(
          "mouseUp",
          ((y = this._leftButton), q(y, y.onUp))
        );
        this._middleButton = new ef(-2);
        this._rightButton = new ef(-3);
        this._stage.addEventListener(
          "middleMouseDown",
          ((y = this._middleButton), q(y, y.onDown))
        );
        this._stage.addEventListener(
          "middleMouseUp",
          ((y = this._middleButton), q(y, y.onUp))
        );
        this._stage.addEventListener(
          "rightMouseDown",
          ((y = this._rightButton), q(y, y.onDown))
        );
        this._stage.addEventListener(
          "rightMouseUp",
          ((y = this._rightButton), q(y, y.onUp))
        );
        this._stage.addEventListener("mouseLeave", q(this, this.onMouseLeave));
        this._stage.addEventListener("mouseWheel", q(this, this.onMouseWheel));
        p.signals.postGameStart.add(q(this, this.onGameStart));
        sc.hide();
      };
      g["flixel.input.mouse.FlxMouse"] = rf;
      rf.__name__ = "flixel.input.mouse.FlxMouse";
      rf.__interfaces__ = [Mf];
      rf.__super__ = rc;
      rf.prototype = r(rc.prototype, {
        load: function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 1);
          null != this._cursor &&
            Z.removeChild(this.cursorContainer, this._cursor);
          null == a && (a = new Kd(0, 0));
          pa.__instanceof(a, hl)
            ? (this._cursor = Ya.createInstance(a, []))
            : (this._cursor =
                a instanceof J
                  ? new Ob(a)
                  : "string" == typeof a
                  ? new Ob(la.exists(a) ? la.getBitmapData(a, !1) : null)
                  : new Ob(new Kd(0, 0)));
          this._cursor.set_x(c);
          this._cursor.set_y(d);
          this._cursor.set_scaleX(b);
          this._cursor.set_scaleY(b);
          this.cursorContainer.addChild(this._cursor);
        },
        destroy: function () {
          null != this._stage &&
            (this._stage.removeEventListener(
              "mouseDown",
              ((y = this._leftButton), q(y, y.onDown))
            ),
            this._stage.removeEventListener(
              "mouseUp",
              ((y = this._leftButton), q(y, y.onUp))
            ),
            this._stage.removeEventListener(
              "middleMouseDown",
              ((y = this._middleButton), q(y, y.onDown))
            ),
            this._stage.removeEventListener(
              "middleMouseUp",
              ((y = this._middleButton), q(y, y.onUp))
            ),
            this._stage.removeEventListener(
              "rightMouseDown",
              ((y = this._rightButton), q(y, y.onDown))
            ),
            this._stage.removeEventListener(
              "rightMouseUp",
              ((y = this._rightButton), q(y, y.onUp))
            ),
            this._stage.removeEventListener(
              "mouseLeave",
              q(this, this.onMouseLeave)
            ),
            this._stage.removeEventListener(
              "mouseWheel",
              q(this, this.onMouseWheel)
            ));
          this._cursor = this.cursorContainer = null;
          this._leftButton = Z.destroy(this._leftButton);
          this._middleButton = Z.destroy(this._middleButton);
          this._rightButton = Z.destroy(this._rightButton);
          this._cursorBitmapData = Z.dispose(this._cursorBitmapData);
          p.signals.postGameStart.remove(q(this, this.onGameStart));
        },
        reset: function () {
          this._leftButton.reset();
          this._middleButton.reset();
          this._rightButton.reset();
        },
        update: function () {
          this._prevX = this.x;
          this._prevY = this.y;
          var a = p.game.get_mouseX(),
            b = p.game.get_mouseY();
          this._globalScreenX = (a / p.scaleMode.scale.x) | 0;
          this._globalScreenY = (b / p.scaleMode.scale.y) | 0;
          this.updatePositions();
          this.visible &&
            (this.cursorContainer.set_x(p.game.get_mouseX()),
            this.cursorContainer.set_y(p.game.get_mouseY()));
          this._leftButton.update();
          this._middleButton.update();
          this._rightButton.update();
          this._wheelUsed || (this.wheel = 0);
          this._wheelUsed = !1;
        },
        onFocus: function () {
          this.reset();
          this.set_useSystemCursor(this.useSystemCursor);
          this.set_visible(this._visibleWhenFocusLost);
        },
        onFocusLost: function () {
          (this._visibleWhenFocusLost = this.visible) && this.set_visible(!1);
          sc.show();
        },
        onGameStart: function () {
          this.set_visible(this.visible);
        },
        onMouseWheel: function (a) {
          this.enabled && ((this._wheelUsed = !0), (this.wheel = a.delta));
        },
        onMouseLeave: function (a) {
          this._rightButton.onUp();
          this._middleButton.onUp();
        },
        showSystemCursor: function () {
          this.cursorContainer.set_visible(!1);
          sc.show();
        },
        hideSystemCursor: function () {
          sc.hide();
          this.visible && this.cursorContainer.set_visible(!0);
        },
        set_useSystemCursor: function (a) {
          a ? this.showSystemCursor() : this.hideSystemCursor();
          return (this.useSystemCursor = a);
        },
        showCursor: function () {
          this.useSystemCursor
            ? sc.show()
            : (null == this._cursor && this.load(),
              this.cursorContainer.set_visible(!0),
              sc.hide());
        },
        hideCursor: function () {
          this.cursorContainer.set_visible(!1);
          sc.hide();
        },
        set_visible: function (a) {
          a ? this.showCursor() : this.hideCursor();
          return (this.visible = a);
        },
        __class__: rf,
        __properties__: {
          set_useSystemCursor: "set_useSystemCursor",
          set_visible: "set_visible",
        },
      });
      var Nh = function (a) {
        this.updateGlobalScreenPosition = !0;
        rf.call(this, a);
      };
      g["flixel.addons.ui.FlxUIMouse"] = Nh;
      Nh.__name__ = "flixel.addons.ui.FlxUIMouse";
      Nh.__super__ = rf;
      Nh.prototype = r(rf.prototype, {
        update: function () {
          var a = this._globalScreenX,
            b = this._globalScreenY;
          rf.prototype.update.call(this);
          this.updateGlobalScreenPosition ||
            ((this._globalScreenX = a), (this._globalScreenY = b));
        },
        __class__: Nh,
      });
      var Jh = function (a, b, c, d, e, f, h, m, n, p, g, k) {
        null == k && (k = !1);
        null == m && (m = 1);
        null == h && (h = 0);
        null == f && (f = 999);
        null == e && (e = -999);
        null == d && (d = 0);
        null == c && (c = 1);
        null == b && (b = 0);
        null == a && (a = 0);
        this.isPercent = !1;
        this.stack = 1;
        this.value = 0;
        this.max = 10;
        this.stepSize = this.decimals = this.min = 0;
        Ha.call(this, a, b);
        null == n && (n = new Kf(0, 0, 25));
        n.set_x(0);
        n.set_y(0);
        this.text_field = n;
        this.text_field.set_text(null == d ? "null" : "" + d);
        this.text_field instanceof Kf &&
          ((a = this.text_field),
          a.set_lines(1),
          (a.callback = q(this, this._onInputTextEvent)),
          (a.broadcastToFlxUI = !1));
        this.stepSize = c;
        this.set_decimals(h);
        this.set_min(e);
        this.set_max(f);
        this.set_value(d);
        this.set_isPercent(k);
        c = 1 + n.get_height();
        null == p &&
          ((p = new Yb(0, 0)),
          p.loadGraphicSlice9(
            ["flixel/flixel-ui/img/button_thin.png"],
            c,
            c,
            [yb.toIntArray("2,2,15,15")],
            0,
            -1,
            !1,
            18,
            18
          ),
          p.set_label(new H(0, 0, "flixel/flixel-ui/img/plus_mark.png")));
        null == g &&
          ((g = new Yb(0, 0)),
          g.loadGraphicSlice9(
            ["flixel/flixel-ui/img/button_thin.png"],
            c,
            c,
            [yb.toIntArray("2,2,15,15")],
            0,
            -1,
            !1,
            18,
            18
          ),
          g.set_label(new H(0, 0, "flixel/flixel-ui/img/minus_mark.png")));
        this.button_plus = p;
        this.button_minus = g;
        this.add(this.text_field);
        this.add(this.button_plus);
        this.add(this.button_minus);
        this.button_plus.onUp.callback = q(this, this._onPlus);
        this.button_plus.broadcastToFlxUI = !1;
        this.button_minus.onUp.callback = q(this, this._onMinus);
        this.button_minus.broadcastToFlxUI = !1;
        this.set_stack(m);
      };
      g["flixel.addons.ui.FlxUINumericStepper"] = Jh;
      Jh.__name__ = "flixel.addons.ui.FlxUINumericStepper";
      Jh.__interfaces__ = [Jd, Be, Qc];
      Jh.__super__ = Ha;
      Jh.prototype = r(Ha.prototype, {
        set_params: function (a) {
          return (this.params = a);
        },
        set_skipButtonUpdate: function (a) {
          this.skipButtonUpdate = a;
          this.button_plus.set_skipButtonUpdate(a);
          this.button_minus.set_skipButtonUpdate(a);
          return a;
        },
        set_color: function (a) {
          this.color = a;
          this.button_plus.set_color(a);
          this.button_minus.set_color(a);
          this.text_field instanceof If
            ? this.text_field.set_backgroundColor(a)
            : this.text_field.set_color(a);
          return a;
        },
        set_min: function (a) {
          this.min = a;
          this.value < this.min && this.set_value(this.min);
          return this.min;
        },
        set_max: function (a) {
          this.max = a;
          this.value > this.max && this.set_value(this.max);
          return this.max;
        },
        set_value: function (a) {
          this.value = a;
          this.value < this.min && (this.value = this.min);
          this.value > this.max && (this.value = this.max);
          if (null != this.text_field)
            if (((a = this.value), this.isPercent)) {
              var b = Math.pow(10, this.decimals);
              this.text_field.set_text(
                I.string(I.string(Math.round(100 * a * b) / b)) + "%"
              );
            } else
              (b = Math.pow(10, this.decimals)),
                this.text_field.set_text(I.string(Math.round(a * b) / b));
          return this.value;
        },
        set_decimals: function (a) {
          this.decimals = a;
          0 > a && (this.decimals = 0);
          this.set_value(this.value);
          return this.decimals;
        },
        set_isPercent: function (a) {
          this.isPercent = a;
          this.set_value(this.value);
          return this.isPercent;
        },
        set_stack: function (a) {
          this.stack = a;
          var b = 0,
            c = 0;
          this.text_field instanceof Kf && (c = b = 1);
          switch (this.stack) {
            case 0:
              a = 1 + this.text_field.get_height() / 2;
              this.button_plus.get_height() != a &&
                this.button_plus.resize(a, a);
              this.button_minus.get_height() != a &&
                this.button_minus.resize(a, a);
              this.button_plus.set_x(
                b + this.text_field.x + this.text_field.get_width()
              );
              this.button_plus.set_y(-c + this.text_field.y);
              this.button_minus.set_x(
                b + this.text_field.x + this.text_field.get_width()
              );
              this.button_minus.set_y(
                c +
                  this.text_field.y +
                  (this.text_field.get_height() -
                    this.button_minus.get_height())
              );
              break;
            case 1:
              (a = 2 + this.text_field.get_height()),
                this.button_plus.get_height() != a &&
                  this.button_plus.resize(a, a),
                this.button_minus.get_height() != a &&
                  this.button_minus.resize(a, a),
                this.button_plus.set_x(
                  b + this.text_field.x + this.text_field.get_width()
                ),
                this.button_plus.set_y(-c + this.text_field.y),
                this.button_minus.set_x(
                  this.button_plus.x + this.button_plus.get_width()
                ),
                this.button_minus.set_y(this.button_plus.y);
          }
          return this.stack;
        },
        _onInputTextEvent: function (a, b) {
          "" == a && (a = I.string(this.min));
          for (var c = (b = 0), d = a.length; c < d; ) {
            var e = c++;
            "." == a.charAt(e) && ++b;
          }
          if (1 != b || a.indexOf(".") != a.length - 1)
            this.set_value(parseFloat(a)),
              this._doCallback("edit_numeric_stepper"),
              this._doCallback("change_numeric_stepper");
        },
        _onPlus: function () {
          this.set_value(this.value + this.stepSize);
          this._doCallback("click_numeric_stepper");
          this._doCallback("change_numeric_stepper");
        },
        _onMinus: function () {
          this.set_value(this.value - this.stepSize);
          this._doCallback("click_numeric_stepper");
          this._doCallback("change_numeric_stepper");
        },
        _doCallback: function (a) {
          this.broadcastToFlxUI && Ia.event(a, this, this.value, this.params);
        },
        __class__: Jh,
        __properties__: r(Ha.prototype.__properties__, {
          set_skipButtonUpdate: "set_skipButtonUpdate",
          set_params: "set_params",
          set_isPercent: "set_isPercent",
          set_stack: "set_stack",
          set_value: "set_value",
          set_max: "set_max",
          set_min: "set_min",
          set_decimals: "set_decimals",
        }),
      });
      var Fh = function (a, b, c, d, e, f, h, m, n, p, g, k, l, u) {
        null == p && (p = "<X> more...");
        null == n && (n = 100);
        null == m && (m = 20);
        null == h && (h = 100);
        null == f && (f = 25);
        this._clickable = !0;
        this._selected = 0;
        this._y_space = 25;
        this._height = 20;
        this._label_width = this._width = 100;
        this.fixedSize = !1;
        Ha.call(this);
        this._y_space = f;
        this._width = h;
        this._height = m;
        this._label_width = n;
        null == c && (c = []);
        null == d && (d = []);
        this.callback = e;
        this._list_radios = [];
        this._list_active = [];
        this._list = new fj(0, 0, null, 0, 0, p, 1, 0, g, k, l, u);
        this.add(this._list);
        this.updateRadios(c, d);
        this.loadGraphics(null, null);
        this.set_x(a);
        this.set_y(b);
      };
      g["flixel.addons.ui.FlxUIRadioGroup"] = Fh;
      Fh.__name__ = "flixel.addons.ui.FlxUIRadioGroup";
      Fh.__interfaces__ = [Jd, Be];
      Fh.__super__ = Ha;
      Fh.prototype = r(Ha.prototype, {
        set_activeStyle: function (a) {
          this.activeStyle = a;
          this.updateActives();
          return this.activeStyle;
        },
        set_skipButtonUpdate: function (a) {
          this.skipButtonUpdate = a;
          for (var b = 0, c = this._list_radios; b < c.length; ) {
            var d = c[b];
            ++b;
            d.set_skipButtonUpdate(a);
          }
          return this.skipButtonUpdate;
        },
        set_params: function (a) {
          return (this.params = a);
        },
        set_width: function (a) {
          Ha.prototype.set_width.call(this, a);
          this.fixedSize && null != this._list && this._list.set_width(a);
          return a;
        },
        set_height: function (a) {
          Ha.prototype.set_height.call(this, a);
          this.fixedSize && null != this._list && this._list.set_height(a);
          return a;
        },
        loadGraphics: function (a, b) {
          this._box_asset = null != a ? a : "flixel/flixel-ui/img/radio.png";
          this._dot_asset =
            null != b ? b : "flixel/flixel-ui/img/radio_dot.png";
          this._box_asset instanceof H &&
            ((a = this._box_asset), (this._box_asset = a.graphic.key));
          this._dot_asset instanceof H &&
            ((a = this._dot_asset), (this._dot_asset = a.graphic.key));
          a = 0;
          for (b = this._list_radios; a < b.length; ) {
            var c = b[a];
            ++a;
            c.box.loadGraphic(this._box_asset, !0);
            c.mark.loadGraphic(this._dot_asset);
          }
          this._refreshRadios();
        },
        destroy: function () {
          null != this._list_radios && x.clearArray(this._list_radios);
          null != this._list_active && x.clearArray(this._list_active);
          this._labels =
            this._ids =
            this._list =
            this._list_radios =
            this._list_active =
              null;
          Ha.prototype.destroy.call(this);
        },
        updateRadios: function (a, b) {
          this._ids = a;
          this._labels = b;
          a = 0;
          for (b = this._list_radios; a < b.length; ) {
            var c = b[a];
            ++a;
            c.set_visible(!1);
          }
          this._refreshRadios();
        },
        getRadios: function () {
          return this._list_radios;
        },
        get_selectedId: function () {
          return this._ids[this._selected];
        },
        _refreshRadios: function () {
          var a = this.x,
            b = this.y,
            c = 0,
            d = 0,
            e = 0;
          this._list._skipRefresh = !0;
          for (var f = 0, h = this._ids; f < h.length; ) {
            var m = h[f];
            ++f;
            var n = "";
            n =
              null != this._labels && this._labels.length > c
                ? this._labels[c]
                : "<" + m + ">";
            this._list_radios.length > c
              ? ((m = this._list_radios[c]),
                m.set_visible(!0),
                m.set_text(n),
                0 == c
                  ? ((a = m.x), (b = m.y))
                  : (m.set_x(a | 0), m.set_y(b | 0)))
              : ((m = new Ce(
                  0,
                  0,
                  this._box_asset,
                  this._dot_asset,
                  n,
                  this._label_width,
                  [m, !1]
                )),
                (m.broadcastToFlxUI = !1),
                (m.callback = (function (a, b) {
                  return function () {
                    a[0](b[0]);
                  };
                })([q(this, this._onCheckBoxEvent)], [m])),
                this._list.add(m),
                m.set_x(a | 0),
                m.set_y(b | 0),
                m.set_text(n),
                0 < this._list_radios.length &&
                  (m.button.copyStyle(this._list_radios[0].button),
                  null == this.activeStyle &&
                    this.set_activeStyle(this.makeActiveStyle()),
                  m.button.set_width(this._list_radios[0].button.get_width()),
                  m.button.set_height(this._list_radios[0].button.get_height()),
                  m.set_textX(this._list_radios[0].textX),
                  m.set_textY(this._list_radios[0].textY)),
                this._list_radios.push(m),
                this._list_active.push(!0));
            a + m.get_width() > d && (d = a + m.get_width());
            b + m.get_height() > e && (e = b + m.get_height());
            b += this._y_space;
            ++c;
          }
          0 == this.fixedSize &&
            ((d += 5),
            (e += 5),
            d > this._list.get_width() && this._list.set_width(d),
            e > this._list.get_height() && this._list.set_height(e),
            this.set_width(d),
            this.set_height(e));
          this._list._skipRefresh = !1;
          1 == this.fixedSize && this._list.refreshList();
          this.updateActives();
        },
        updateActives: function () {
          for (var a = 0, b = 0, c = this._list_radios; b < c.length; ) {
            var d = c[b];
            ++b;
            d.set_active(this._list_active[a]);
            0 == this._list_active[a] && null != this.inactiveStyle
              ? this.inactiveStyle.applyToCheck(d)
              : 1 == this._list_active[a] &&
                null != this.activeStyle &&
                this.activeStyle.applyToCheck(d);
            ++a;
          }
        },
        makeActiveStyle: function () {
          if (0 < this._list_radios.length) {
            var a = this._list_radios[0].button.label,
              b = Ac.copyFromFlxText(a),
              c = new $d(
                a.borderStyle,
                a.borderColor,
                a.borderSize,
                a.borderQuality
              );
            return new Gh(
              16777215,
              b,
              ul.fromOpenFL(a._defaultFormat.align),
              a.color,
              c
            );
          }
          return null;
        },
        _onCheckBoxEvent: function (a) {
          this._onClick(a, !0);
        },
        _onClick: function (a, b) {
          if (!this._clickable) return !1;
          for (var c = 0, d = 0, e = this._list_radios; d < e.length; ) {
            var f = e[d];
            ++d;
            f.set_checked(!1);
            a == f && ((this._selected = c), f.set_checked(!0));
            ++c;
          }
          b &&
            (null != this.callback && this.callback(this.get_selectedId()),
            this.broadcastToFlxUI &&
              Ia.event(
                "click_radio_group",
                this,
                this._ids[this._selected],
                this.params
              ));
          return !0;
        },
        __class__: Fh,
        __properties__: r(Ha.prototype.__properties__, {
          set_params: "set_params",
          set_skipButtonUpdate: "set_skipButtonUpdate",
          set_activeStyle: "set_activeStyle",
          get_selectedId: "get_selectedId",
        }),
      });
      var Gh = function (a, b, c, d, e) {
        this.checkColor = a;
        Dh.call(this, b, c, d, e);
      };
      g["flixel.addons.ui.CheckStyle"] = Gh;
      Gh.__name__ = "flixel.addons.ui.CheckStyle";
      Gh.__super__ = Dh;
      Gh.prototype = r(Dh.prototype, {
        applyToCheck: function (a) {
          null != this.checkColor && a.set_color(this.checkColor);
          this.apply(a.button.label);
        },
        __class__: Gh,
      });
      var jg = function (a, b, c, d) {
        null == d && (d = 16);
        null == c && (c = 16);
        null == b && (b = 0);
        null == a && (a = 0);
        H.call(this, a, b);
        this.makeGraphic(1, 1, 0);
        1 > d && (d = 1);
        1 > c && (c = 1);
        this.resize(c, d);
      };
      g["flixel.addons.ui.FlxUIRegion"] = jg;
      jg.__name__ = "flixel.addons.ui.FlxUIRegion";
      jg.__interfaces__ = [pc, Qc];
      jg.__super__ = H;
      jg.prototype = r(H.prototype, {
        resize: function (a, b) {
          this.set_width(a);
          this.set_height(b);
        },
        __class__: jg,
      });
      var De = function (a, b, c, d) {
        null == b && (b = 0);
        null == a && (a = 0);
        Yb.call(this, a, b, d);
        this.up_color =
          this.over_color =
          this.down_color =
          this.up_toggle_color =
          this.over_toggle_color =
          this.down_toggle_color =
            -1;
        null != c && this.set_label(c);
      };
      g["flixel.addons.ui.FlxUISpriteButton"] = De;
      De.__name__ = "flixel.addons.ui.FlxUISpriteButton";
      De.__interfaces__ = [Lf];
      De.__super__ = Yb;
      De.prototype = r(Yb.prototype, {
        resize: function (a, b) {
          Yb.prototype.resize.call(this, a, b);
          this.autoCenterLabel();
        },
        autoCenterLabel: function () {
          if (null != this.label) {
            if (this.label instanceof Q) {
              for (
                var a = this.label, b = 0, c = a.group.members;
                b < c.length;

              ) {
                var d = c[b];
                ++b;
                d.set_x(-d.get_width() / 2);
                d.set_y(-d.get_height() / 2);
              }
              var e = a.get_width(),
                f = a.get_height();
              b = 0;
              for (c = a.group.members; b < c.length; )
                (d = c[b]),
                  ++b,
                  d.set_x((e - d.get_width()) / 2),
                  d.set_y((f - d.get_height()) / 2);
            }
            Yb.prototype.autoCenterLabel.call(this);
          }
        },
        __class__: De,
      });
      var gj = function (a) {
        null == a && (a = 0);
        this.getTextFallback = null;
        this._reload_countdown = 0;
        this.reload_ui_on_resize = this._reload = !1;
        this._xml_id = "";
        this.cursor = null;
        wc.call(this, a);
      };
      g["flixel.addons.ui.FlxUISubState"] = gj;
      gj.__name__ = "flixel.addons.ui.FlxUISubState";
      gj.__interfaces__ = [fg];
      gj.__super__ = wc;
      gj.prototype = r(wc.prototype, {
        forceScrollFactor: function (a, b) {
          if (null != this._ui) {
            for (var c = 0, d = this._ui.group.members; c < d.length; ) {
              var e = d[c];
              ++c;
              e.scrollFactor.set(a, b);
            }
            null != this._ui.scrollFactor && this._ui.scrollFactor.set(a, b);
          }
        },
        forceFocus: function (a, b) {
          null != this._ui &&
            (a ? this._ui.set_focus(b) : this._ui.set_focus(null));
        },
        create: function () {
          null != cd.static_tongue && (this._tongue = cd.static_tongue);
          1 == this._makeCursor && (this.cursor = this.createCursor());
          this.tooltips = new sh(null, this);
          this._ui = this.createUI(null, this, null, this._tongue);
          this.add(this._ui);
          this._ui.getTextFallback = this.getTextFallback;
          if ("" != this._xml_id && null != this._xml_id) {
            var a = x.xml(this._xml_id);
            null == a && (a = x.xml(this._xml_id, "xml", !0, ""));
            null != a && this._ui.load(a);
          } else this._ui.load(null);
          null != this.cursor &&
            null != this._ui &&
            (this.add(this.cursor),
            this.cursor.addWidgetsFromUI(this._ui),
            this.cursor.findVisibleLocation(0));
          p.mouse.set_visible(!0);
          this.tooltips.init();
          wc.prototype.create.call(this);
          this.cleanup();
          this._parentState instanceof cd &&
            (this.reload_ui_on_resize = pa.__cast(
              this._parentState,
              cd
            ).reload_ui_on_resize);
        },
        onCursorEvent: function (a, b) {
          this.getEvent(a, b, null);
        },
        onShowTooltip: function (a) {},
        onResize: function (a, b) {
          this.reload_ui_on_resize &&
            (p.scaleMode.onMeasure(a, b),
            (this._reload_countdown = 5),
            (this._reload = !0));
        },
        update: function (a) {
          wc.prototype.update.call(this, a);
          this.tooltips.update(a);
          this._reload &&
            0 < this._reload_countdown &&
            (this._reload_countdown--,
            0 == this._reload_countdown && this.reloadUI());
        },
        destroy: function () {
          this.destroyed = !0;
          null != this.tooltips &&
            (this.tooltips.destroy(), (this.tooltips = null));
          null != this._ui &&
            (this._ui.destroy(), this.remove(this._ui, !0), (this._ui = null));
          wc.prototype.destroy.call(this);
        },
        getEvent: function (a, b, c, d) {},
        getRequest: function (a, b, c, d) {
          return null;
        },
        getText: function (a, b, c) {
          null == c && (c = !0);
          null == b && (b = "ui");
          return null != this._tongue
            ? this._tongue.get(a, b, c)
            : null != this.getTextFallback
            ? this.getTextFallback(a, b, c)
            : a;
        },
        cleanup: function () {
          this._ui.cleanup();
        },
        createCursor: function () {
          return new th(q(this, this.onCursorEvent));
        },
        createUI: function (a, b, c, d, e) {
          null == e && (e = "");
          return new Ia(a, b, c, d, e);
        },
        reloadUI: function () {
          null != this._ui &&
            (this.remove(this._ui, !0), this._ui.destroy(), (this._ui = null));
          this._ui = this.createUI(null, this, null, this._tongue);
          this.add(this._ui);
          var a = x.xml(this._xml_id);
          this._ui.load(a);
          this._reload = !1;
          this._reload_countdown = 0;
        },
        __class__: gj,
      });
      var Ih = function (a, b, c, d, e, f, h) {
        null == e && (e = !1);
        this._selected_tab = -1;
        this._selected_tab_id = "";
        this._tab_spacing = this._tab_stacking = this._tab_offset = null;
        this._stretch_tabs = !1;
        Ha.call(this);
        null == a &&
          (a = new P(
            0,
            0,
            "flixel/flixel-ui/img/chrome_flat.png",
            new ma(0, 0, 200, 200)
          ));
        this._back = a;
        this.add(this._back);
        if (null == b && null != c)
          for (b = [], a = 0; a < c.length; ) {
            var m = c[a];
            ++a;
            var n = new Yc(0, 0, m.label);
            n.up_color = 16777215;
            n.down_color = 16777215;
            n.over_color = 16777215;
            n.up_toggle_color = 16777215;
            n.down_toggle_color = 16777215;
            n.over_toggle_color = 16777215;
            n.label.set_color(16777215);
            var p = n.label;
            p.set_borderStyle(Vb.OUTLINE);
            p.set_borderColor(0);
            p.set_borderSize(1);
            p.set_borderQuality(1);
            n.name = m.name;
            m = yb.toIntArray("6,6,11,11");
            n.loadGraphicSlice9(
              "flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png".split(
                " "
              ),
              0,
              0,
              [m, m, m, m, m, m],
              0,
              -1,
              !0
            );
            b.push(n);
          }
        this._tabs = b;
        this._stretch_tabs = e;
        this._tab_spacing = f;
        this._tab_stacking = h;
        null == this._tab_stacking && (this._tab_stacking = ["front", "back"]);
        this._tab_offset = d;
        b = 0;
        d = null;
        a = 0;
        for (c = this._tabs; a < c.length; )
          (d = c[a]),
            ++a,
            this.add(d),
            (e = (function (a, b) {
              return function () {
                a[0](b[0]);
              };
            })([q(this, this._onTabEvent)], [d.name])),
            (d.onUp.callback = e),
            ++b;
        this.distributeTabs();
        this._tab_groups = [];
      };
      g["flixel.addons.ui.FlxUITabMenu"] = Ih;
      Ih.__name__ = "flixel.addons.ui.FlxUITabMenu";
      Ih.__interfaces__ = [eg, Be, pc];
      Ih.__super__ = Ha;
      Ih.prototype = r(Ha.prototype, {
        getEvent: function (a, b, c, d) {},
        getRequest: function (a, b, c, d) {
          return null;
        },
        set_skipButtonUpdate: function (a) {
          this.skipButtonUpdate = a;
          for (var b = 0, c = this._tabs; b < c.length; ) {
            var d = c[b];
            ++b;
            d.set_skipButtonUpdate(a);
          }
          b = 0;
          for (c = this._tab_groups; b < c.length; ) {
            var e = c[b];
            ++b;
            d = 0;
            for (e = e.group.members; d < e.length; ) {
              var f = e[d];
              ++d;
              pa.__implements(f, Be) && f.set_skipButtonUpdate(a);
            }
          }
          return a;
        },
        get_width: function () {
          return this._back.get_width();
        },
        get_height: function () {
          var a = this.getFirstTab();
          return null != a
            ? this._back.y + this._back.get_height() - a.y
            : this._back.get_height();
        },
        resize: function (a, b) {
          if (pa.__implements(this._back, pc)) {
            this.distributeTabs(a);
            var c = this._back;
            var d = this.getFirstTab();
            null != d ? c.resize(a, b - d.get_height()) : c.resize(a, b);
          } else this.distributeTabs();
        },
        set_selected_tab: function (a) {
          this.showTabInt(a);
          return this._selected_tab;
        },
        destroy: function () {
          Ha.prototype.destroy.call(this);
          x.clearArray(this._tab_groups);
          x.clearArray(this._tabs);
          this._tab_groups = this._tabs = this._back = null;
        },
        getTab: function (a, b) {
          if (null != a)
            for (var c = 0, d = this._tabs; c < d.length; ) {
              var e = d[c];
              ++c;
              if (e.name == a) return e;
            }
          return null != b && b < this._tabs.length ? this._tabs[b] : null;
        },
        addGroup: function (a) {
          a != this &&
            (this.hasThis(a) ||
              (a.set_y(this._back.y - this.y),
              this.add(a),
              this._tab_groups.push(a)),
            this._showOnlyGroup(""),
            1 == this._tab_groups.length && this.set_selected_tab(0),
            -1 != this._selected_tab &&
              this.set_selected_tab(this._selected_tab));
        },
        _onTabEvent: function (a) {
          this.showTabId(a);
          var b = this.getTab(a);
          b = null != b ? b.params : null;
          this.broadcastToFlxUI && Ia.event("tab_menu_click", this, a, b);
        },
        stackTabs: function () {
          var a = this._back.x,
            b = this._back.y;
          this.group.remove(this._back, !0);
          for (var c, d = 0, e = this._tabs; d < e.length; )
            (c = e[d]), ++d, c.toggled && this.group.remove(c, !0);
          this.group.add(this._back);
          d = 0;
          for (e = this._tabs; d < e.length; )
            (c = e[d]), ++d, c.toggled && this.group.add(c);
          d = 0;
          for (e = this._tab_groups; d < e.length; ) {
            c = e[d];
            ++d;
            var f = c.x,
              h = c.y;
            this.remove(c, !0);
            this.add(c);
            c.set_x(f);
            c.set_y(h);
          }
          this._back.set_x(a);
          this._back.set_y(b);
        },
        showTabId: function (a) {
          this._selected_tab = -1;
          this._selected_tab_id = "";
          for (var b = 0, c = 0, d = this._tabs; c < d.length; ) {
            var e = d[c];
            ++c;
            e.set_toggled(!1);
            e.forceStateHandler("out_button");
            e.name == a &&
              (e.set_toggled(!0),
              (this._selected_tab_id = a),
              (this._selected_tab = b));
            ++b;
          }
          this._showOnlyGroup(a);
          this.stackTabs();
        },
        sortTabs: function (a, b) {
          return !(a.name < b.name) && a.name > b.name ? 1 : -1;
        },
        showTabInt: function (a) {
          0 <= a && null != this._tabs && this._tabs.length > a
            ? this.showTabId(this._tabs[a].name)
            : this.showTabId("");
        },
        _showOnlyGroup: function (a) {
          for (var b = 0, c = this._tab_groups; b < c.length; ) {
            var d = c[b];
            ++b;
            d.name == a
              ? d.set_visible(d.set_active(!0))
              : d.set_visible(d.set_active(!1));
          }
        },
        getFirstTab: function () {
          var a = null;
          null != this._tabs && 0 < this._tabs.length && (a = this._tabs[0]);
          return a;
        },
        distributeTabs: function (a) {
          null == a && (a = -1);
          var b = 0,
            c = 0;
          -1 == a && (a = this._back.get_width());
          var d = 0;
          if (this._stretch_tabs) {
            c = a / this._tabs.length;
            var e = (c | 0) * this._tabs.length;
            e < a && (d = a - e);
          }
          this._tabs.sort(q(this, this.sortTabs));
          e = a = 0;
          for (var f, h = 0, m = this._tabs; h < m.length; ) {
            f = m[h];
            ++h;
            f.set_x(this.x + b);
            f.set_y(this.y);
            if (null != this._tab_offset) {
              var n = f;
              n.set_x(n.x + this._tab_offset.x);
              n = f;
              n.set_y(n.y + this._tab_offset.y);
            }
            this._stretch_tabs
              ? ((n = f.get_height()),
                0 != a && ((n = e), (f.resize_ratio = -1)),
                0 < d
                  ? (f.resize(c + 1, n), (b += (c | 0) + 1), --d)
                  : (f.resize(c, n), (b += c | 0)))
              : (b =
                  null != this._tab_spacing
                    ? b + (f.get_width() + this._tab_spacing)
                    : b + f.get_width());
            0 == a && (e = f.get_height());
            ++a;
          }
          null != this._tabs &&
            0 < this._tabs.length &&
            null != this._tabs[0] &&
            (this._back.set_y(this._tabs[0].y + this._tabs[0].get_height() - 2),
            null != this._tab_offset &&
              ((h = this._back), h.set_y(h.y - this._tab_offset.y)));
          this.calcBounds();
        },
        __class__: Ih,
        __properties__: r(Ha.prototype.__properties__, {
          set_selected_tab: "set_selected_tab",
          set_skipButtonUpdate: "set_skipButtonUpdate",
        }),
      });
      var gd = function (a, b, c, d, e, f) {
        null == f && (f = !0);
        null == e && (e = 8);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.minimumHeight = 1;
        ab.call(this, a, b, c, d, e, f);
      };
      g["flixel.addons.ui.FlxUIText"] = gd;
      gd.__name__ = "flixel.addons.ui.FlxUIText";
      gd.__interfaces__ = [Jd, Qc, pc];
      gd.__super__ = ab;
      gd.prototype = r(ab.prototype, {
        resize: function (a, b) {
          var c = 1;
          b < this.minimumHeight && (b = this.minimumHeight);
          b < this.get_height() && (c = -1);
          this.set_width(a);
          this.set_height(b);
          this.textField.set_width(this.get_width());
          for (
            var d = this._defaultFormat.size | 0,
              e = this.get_height() - this.graphic.bitmap.height,
              f = 0,
              h = this.textField.get_numLines();
            0 < e * c && 999 > f;

          ) {
            ++f;
            this.set_size((this._defaultFormat.size | 0) + c);
            if (0 < c && this.textField.get_numLines() > h) {
              this.set_size((this._defaultFormat.size | 0) - c);
              break;
            }
            this._regen = !0;
            this.calcFrame(!0);
            e = b - this.graphic.bitmap.height;
          }
          999 <= f && this.set_size(d);
          this.set_width(a);
          this.set_height(b);
          this._regen = !0;
          this.calcFrame(!0);
        },
        set_params: function (a) {
          return (this.params = a);
        },
        __class__: gd,
        __properties__: r(ab.prototype.__properties__, {
          set_params: "set_params",
        }),
      });
      var Eh = function (a, b, c, d, e, f, h, m, n) {
        null == n && (n = !1);
        null == m && (m = 12895428);
        null == h && (h = 8421504);
        this.baseTileSize = -1;
        this.floorToEven = !1;
        this._color1 = this._color2 = 0;
        this._tilesWide = this._tilesTall = 2;
        Mb.call(this, a, b);
        this.tileWidth = c;
        this.tileHeight = d;
        this._tilesWide = e;
        this._tilesTall = f;
        this._color1 = h;
        this._color2 = m;
        this.floorToEven = n;
        this.makeTiles(
          this.tileWidth,
          this.tileHeight,
          this._tilesWide,
          this._tilesTall,
          this._color1,
          this._color2
        );
      };
      g["flixel.addons.ui.FlxUITileTest"] = Eh;
      Eh.__name__ = "flixel.addons.ui.FlxUITileTest";
      Eh.__interfaces__ = [Qc, pc];
      Eh.__super__ = Mb;
      Eh.prototype = r(Mb.prototype, {
        makeTiles: function (a, b, c, d, e, f) {
          null == f && (f = -3881788);
          null == e && (e = -8355712);
          b = this.constrain(a * this._tilesWide, b * this._tilesTall);
          a = b.x | 0;
          b = b.y | 0;
          this.makeGraphic(c, d, e);
          e = this.get_pixels();
          for (var h = 0, m = 0; m < c; ) {
            for (var n = m++, p = 0, g = d; p < g; ) {
              var k = p++;
              0 == h % 2 && e.setPixel(n, k, f);
              ++h;
            }
            0 != c % 2 && ++h;
          }
          this.set_pixels(e);
          this.scale.set(a, b);
          this.updateHitbox();
        },
        constrain: function (a, b) {
          a = (a / this._tilesWide) | 0;
          b = (b / this._tilesTall) | 0;
          a < b ? (b = a) : b < a && (a = b);
          this.floorToEven && 1 == a % 2 && (--a, (b = a));
          0 < this.baseTileSize &&
            (b = a = ((a / this.baseTileSize) | 0) * this.baseTileSize);
          return new U(a, b);
        },
        resize: function (a, b) {
          this.makeTiles(
            this.tileWidth,
            this.tileHeight,
            this._tilesWide,
            this._tilesTall,
            this._color1,
            this._color2
          );
        },
        __class__: Eh,
      });
      var Zc = function (a, b, c, d) {
        Ha.call(this, 0, 0);
        null == c && (c = new Gf(0, 0, "left", "top", "right", "top"));
        d = Zc.styleFix(d);
        this.refresh(a, b, "", "", c, d);
        this.setScrollFactor(0, 0);
      };
      g["flixel.addons.ui.FlxUITooltip"] = Zc;
      Zc.__name__ = "flixel.addons.ui.FlxUITooltip";
      Zc.styleFix = function (a, b) {
        null == a &&
          (a = {
            titleFormat: null,
            bodyFormat: null,
            titleBorder: null,
            bodyBorder: null,
            titleOffset: null,
            bodyOffset: null,
            background: null,
            borderSize: -1,
            borderColor: null,
            arrow: null,
            titleWidth: -1,
            bodyWidth: -1,
            autoSizeHorizontal: null,
            autoSizeVertical: null,
            leftPadding: -1,
            rightPadding: -1,
            topPadding: -1,
            bottomPadding: -1,
          });
        if (null != b) {
          null == a.titleFormat && (a.titleFormat = b.titleFormat);
          null == a.bodyFormat && (a.bodyFormat = b.bodyFormat);
          null == a.titleBorder && (a.titleBorder = b.titleBorder);
          null == a.bodyBorder && (a.bodyBorder = b.bodyBorder);
          null == a.titleOffset && (a.titleOffset = b.titleOffset);
          null == a.bodyOffset && (a.bodyOffset = b.bodyOffset);
          null == a.background && (a.background = b.background);
          null == a.borderColor && (a.borderColor = b.borderColor);
          null == a.arrow && (a.arrow = b.arrow);
          if (null == a.borderSize || 0 > a.borderSize)
            a.borderSize = b.borderSize;
          if (null == a.titleWidth || 0 > a.titleWidth)
            a.titleWidth = b.titleWidth;
          if (null == a.bodyWidth || 0 > a.bodyWidth) a.bodyWidth = b.bodyWidth;
          null == a.autoSizeHorizontal &&
            (a.autoSizeHorizontal = b.autoSizeHorizontal);
          null == a.autoSizeVertical &&
            (a.autoSizeVertical = b.autoSizeVertical);
          if (null == a.leftPadding || 0 > a.leftPadding)
            a.leftPadding = b.leftPadding;
          if (null == a.rightPadding || 0 > a.rightPadding)
            a.rightPadding = b.rightPadding;
          if (null == a.topPadding || 0 > a.topPadding)
            a.topPadding = b.topPadding;
          if (null == a.leftPadding || 0 > a.bottomPadding)
            a.bottomPadding = b.bottomPadding;
        }
        null != b &&
          (null != a.titleFormat &&
            (Zc.fillFontDefNulls(a.titleFormat, b.titleFormat),
            null != a.titleFormat.format &&
              null != b.titleFormat.format &&
              Zc.fillFormatNulls(a.titleFormat.format, b.titleFormat.format)),
          null != a.bodyFormat &&
            (Zc.fillFontDefNulls(a.bodyFormat, b.bodyFormat),
            null != a.bodyFormat.format &&
              null != b.bodyFormat.format &&
              Zc.fillFormatNulls(a.bodyFormat.format, b.bodyFormat.format)));
        null == a.titleFormat &&
          (a.titleFormat = new Ac(
            null,
            null,
            null,
            new zc(null, 8, -16777216),
            null
          ));
        null == a.bodyFormat &&
          (a.bodyFormat = new Ac(
            null,
            null,
            null,
            new zc(null, 8, -16777216),
            null
          ));
        null == a.titleBorder && (a.titleBorder = new $d(Vb.NONE, 0, 0, 1));
        null == a.bodyBorder && (a.bodyBorder = new $d(Vb.NONE, 0, 0, 1));
        null == a.titleOffset && (a.titleOffset = new U(0, 0));
        null == a.bodyOffset && (a.bodyOffset = new U(0, 0));
        null == a.background && (a.background = 16777162);
        null == a.borderColor && (a.borderColor = -16777216);
        null == a.arrow && (a.arrow = "flixel/flixel-ui/img/tooltip_arrow.png");
        if (null == a.borderSize || 0 > a.borderSize) a.borderSize = 1;
        if (null == a.titleWidth || 0 > a.titleWidth) a.titleWidth = 100;
        if (null == a.bodyWidth || 0 > a.bodyWidth) a.bodyWidth = 100;
        null == a.autoSizeHorizontal && (a.autoSizeHorizontal = !0);
        null == a.autoSizeVertical && (a.autoSizeVertical = !0);
        if (null == a.leftPadding || 0 > a.leftPadding) a.leftPadding = 0;
        if (null == a.rightPadding || 0 > a.rightPadding) a.rightPadding = 0;
        if (null == a.topPadding || 0 > a.topPadding) a.topPadding = 0;
        if (null == a.leftPadding || 0 > a.bottomPadding) a.bottomPadding = 0;
        return a;
      };
      Zc.cloneStyle = function (a) {
        var b = null != a.titleFormat ? a.titleFormat.clone() : null,
          c = null != a.bodyFormat ? a.bodyFormat.clone() : null;
        return {
          titleFormat: b,
          bodyFormat: c,
          borderSize: a.borderSize,
          titleWidth: a.titleWidth,
          bodyWidth: a.bodyWidth,
          background: a.background,
          borderColor: a.borderColor,
          arrow: a.arrow,
          titleOffset: a.titleOffset.copyTo(),
          bodyOffset: a.bodyOffset.copyTo(),
          titleBorder: a.titleBorder.clone(),
          bodyBorder: a.bodyBorder.clone(),
          autoSizeVertical: a.autoSizeVertical,
          autoSizeHorizontal: a.autoSizeHorizontal,
          leftPadding: a.leftPadding,
          rightPadding: a.rightPadding,
          topPadding: a.topPadding,
          bottomPadding: a.bottomPadding,
        };
      };
      Zc.fillFontDefNulls = function (a, b) {
        0 == a.get_size() && a.set_size(b.get_size());
        if (null == a.name || "" == a.name) a.name = b.name;
        if (null == a.file || "" == a.file) a.file = b.file;
        if (null == a.extension || "" == a.extension) a.extension = b.extension;
        null == a.border &&
          (a.border = null != b.border ? b.border.clone() : null);
      };
      Zc.fillFormatNulls = function (a, b) {
        null == a.align && (a.align = b.align);
        null == a.blockIndent && (a.blockIndent = b.blockIndent);
        null == a.bold && (a.bold = b.bold);
        null == a.bullet && (a.bullet = b.bullet);
        null == a.color && (a.color = b.color);
        null == a.font && (a.font = b.font);
        null == a.indent && (a.indent = b.indent);
        null == a.italic && (a.italic = b.italic);
        null == a.kerning && (a.kerning = b.kerning);
        null == a.leading && (a.leading = b.leading);
        null == a.leftMargin && (a.leftMargin = b.leftMargin);
        null == a.letterSpacing && (a.letterSpacing = b.letterSpacing);
        null == a.rightMargin && (a.rightMargin = b.rightMargin);
        null == a.size && (a.size = b.size);
        null == a.tabStops && (a.tabStops = b.tabStops);
        null == a.target && (a.target = b.target);
        null == a.underline && (a.underline = b.underline);
        null == a.url && (a.url = b.url);
      };
      Zc.__super__ = Ha;
      Zc.prototype = r(Ha.prototype, {
        show: function (a, b, c, d, e, f) {
          null == f && (f = !0);
          null == e && (e = !0);
          null == d && (d = !0);
          null == c && (c = "");
          null == b && (b = "");
          this.set_visible(!0);
          this.set_active(!0);
          this.set_x(0);
          this.set_y(0);
          this._bkg.set_x(0);
          this._bkg.set_y(0);
          this._arrow.set_x(0);
          this._arrow.set_y(0);
          this._arrowBkg.set_x(0);
          this._arrowBkg.set_y(0);
          this._arrowBkg = this.makeArrowBkg(this._arrowBkg);
          this._arrow.set_color(this.style.background);
          this._arrow.set_visible(this._arrowBkg.set_visible(f));
          0 < this.style.titleWidth &&
            this._titleText.set_width(
              this._titleText.textField.set_width(this.style.titleWidth) | 0
            );
          0 < this.style.bodyWidth &&
            this._bodyText.set_width(
              this._bodyText.textField.set_width(this.style.bodyWidth) | 0
            );
          null != this.style.titleFormat &&
            this.style.titleFormat.apply(null, this._titleText);
          null != this.style.bodyFormat &&
            this.style.bodyFormat.apply(null, this._bodyText);
          null != this.style.titleBorder &&
            this.style.titleBorder.apply(this._titleText);
          null != this.style.bodyBorder &&
            this.style.bodyBorder.apply(this._bodyText);
          this._titleText.set_text(b);
          this._bodyText.set_text(c);
          this._titleText.update(0);
          this._bodyText.update(0);
          b = (this._titleText.textField.get_textHeight() + 4) | 0;
          null != this.style.titleOffset &&
            (this._titleText.set_x(this.style.titleOffset.x | 0),
            this._titleText.set_y(this.style.titleOffset.y | 0));
          null != this.style.bodyOffset &&
            (this._bodyText.set_x(this.style.bodyOffset.x | 0),
            this._bodyText.set_y(
              (this._titleText.y + b + this.style.bodyOffset.y) | 0
            ));
          f = this._bkg.get_width() | 0;
          c = this._bkg.get_height() | 0;
          e &&
            ((e =
              "" != this._titleText.text
                ? this._titleText.x + this._titleText.get_width()
                : 0),
            (f =
              "" != this._bodyText.text
                ? this._bodyText.x + this._bodyText.get_width()
                : 0),
            (f = Math.max(e, f) | 0));
          d &&
            ((c =
              "" != this._titleText.text
                ? this._titleText.y + this._titleText.get_height()
                : 0),
            (d =
              "" != this._bodyText.text
                ? this._bodyText.y + this._bodyText.get_height()
                : 0),
            (c = Math.max(c, d) | 0),
            (c = Math.max(c, this._arrowBkg.get_height()) | 0));
          null == this.style.leftPadding && (this.style.leftPadding = 0);
          null == this.style.rightPadding && (this.style.rightPadding = 0);
          null == this.style.topPadding && (this.style.topPadding = 0);
          null == this.style.bottomPadding && (this.style.bottomPadding = 0);
          f += this.style.leftPadding + this.style.rightPadding;
          c += this.style.topPadding + this.style.bottomPadding;
          c |= 0;
          this.refreshBkg(f | 0, c, this.style);
          d = this._anchorArrow.x.offset | 0;
          e = this._anchorArrow.y.offset | 0;
          this._anchorArrow.x.offset -= this.anchor.x.offset;
          this._anchorArrow.y.offset += this.anchor.y.offset;
          this._anchorArrow.x.offset |= 0;
          this._anchorArrow.y.offset |= 0;
          this._anchorArrow.anchorThing(this._arrow, this._bkg);
          this._anchorArrow.x.offset = d;
          this._anchorArrow.y.offset = e;
          0 > this._arrow.x &&
            ((e = Math.abs(this._arrow.x) | 0),
            (d = this._bkg),
            d.set_x(d.x + e),
            (d = this._titleText),
            d.set_x(d.x + e),
            (d = this._bodyText),
            d.set_x(d.x + e),
            this._arrow.set_x(0));
          0 > this._arrow.y &&
            ((e = Math.abs(this._arrow.y) | 0),
            (d = this._bkg),
            d.set_y(d.y + e),
            (d = this._titleText),
            d.set_y(d.y + e),
            (d = this._bodyText),
            d.set_y(d.y + e),
            this._arrow.set_y(0));
          "" != this._titleText.text &&
            "" == this._bodyText.text &&
            ((c -= this.style.topPadding + this.style.bottomPadding),
            (d = this._titleText),
            d.set_y(d.y + (((c - b) / 2) | 0)));
          d = this._titleText;
          d.set_x(d.x + this.style.leftPadding);
          d = this._bodyText;
          d.set_x(d.x + this.style.leftPadding);
          d = this._titleText;
          d.set_y(d.y + this.style.topPadding);
          d = this._bodyText;
          d.set_y(d.y + this.style.topPadding);
          "" == this._titleText.text &&
            (this._titleText.set_x(this._bkg.x),
            this._titleText.set_y(this._bkg.y),
            this._titleText.set_width(this._bkg.get_width()));
          "" == this._bodyText.text &&
            (this._bodyText.set_x(this._bkg.x),
            this._bodyText.set_y(this._bkg.y),
            this._bodyText.set_width(this._bkg.get_width()));
          this.anchor.anchorThing(this, a);
          this.set_x(this.x | 0);
          this.set_y(this.y | 0);
          this._arrowBkg.set_x((this._arrow.x - this.style.borderSize) | 0);
          this._arrowBkg.set_y((this._arrow.y - this.style.borderSize) | 0);
          this._titleText.set_x(this._titleText.x | 0);
          this._bodyText.set_x(this._bodyText.x | 0);
          this._bkg.set_x(this._bkg.x | 0);
          this._bkg.set_y(this._bkg.y | 0);
          this._arrowBkg.set_x(this._arrowBkg.x | 0);
          this._arrowBkg.set_y(this._arrowBkg.y | 0);
          this._arrow.set_x(this._arrow.x | 0);
          this._arrow.set_y(this._arrow.y | 0);
        },
        get_height: function () {
          if (0 == this.group.length) return 0;
          for (
            var a = Infinity, b = -Infinity, c = 0, d = this._sprites;
            c < d.length;

          ) {
            var e = d[c];
            ++c;
            if (null != e && !(e instanceof ab)) {
              var f = e.y;
              e = f + e.get_height();
              e > b && (b = e);
              f < a && (a = f);
            }
          }
          return b - a;
        },
        hide: function () {
          this.set_visible(!1);
          this.set_active(!1);
        },
        set_anchor: function (a) {
          this.anchor = a;
          this._anchorArrow = this.getArrowAnchor(a, this._anchorArrow);
          null != this._arrowBkg && this.makeArrowBkg(this._arrowBkg);
          return a;
        },
        set_style: function (a) {
          return (this.style = a);
        },
        refresh: function (a, b, c, d, e, f) {
          var h = null == this._bkg,
            m = null == this._arrow,
            n = null == this._titleText,
            g = null == this._bodyText;
          h && (this._bkg = new H());
          m && (this._arrow = new H());
          n &&
            ((this._titleText = new gd(0, 0, a)),
            null != f.titleFormat && f.titleFormat.apply(null, this._titleText),
            null != f.titleBorder && f.titleBorder.apply(this._titleText));
          g &&
            ((this._bodyText = new gd(0, 0, a)),
            null != f.bodyFormat && f.bodyFormat.apply(null, this._bodyText),
            null != f.bodyBorder && f.bodyBorder.apply(this._bodyText));
          this._titleText.set_text(c);
          this._bodyText.set_text(d);
          this._arrow.set_color(f.background);
          c = p.bitmap.add(f.arrow);
          null == f.arrow &&
            ((f.arrow = "flixel/flixel-ui/img/tooltip_arrow.png"),
            p.bitmap.add(f.arrow));
          this._arrow.loadGraphic(f.arrow, !0, c.height, c.height);
          m &&
            (this._arrow.animation.add("right", [0], 0, !1),
            this._arrow.animation.add("down", [1], 0, !1),
            this._arrow.animation.add("left", [2], 0, !1),
            this._arrow.animation.add("up", [3], 0, !1));
          this.refreshBkg(a, b, f);
          this.set_style(f);
          m &&
            0 < f.borderSize &&
            ((this._arrowBkg = new H()), this.add(this._arrowBkg));
          this.set_anchor(e);
          h && this.add(this._bkg);
          m && this.add(this._arrow);
          n && this.add(this._titleText);
          g && this.add(this._bodyText);
        },
        refreshBkg: function (a, b, c) {
          var d = this.getStyleKey(a, b, c);
          if (null == p.bitmap._cache.h[d]) {
            if (0 < c.borderSize) {
              var e = new J(a, b, !1, c.borderColor);
              e.fillRect(
                new ma(
                  c.borderSize,
                  c.borderSize,
                  a - 2 * c.borderSize,
                  b - 2 * c.borderSize
                ),
                c.background
              );
            } else e = new J(a, b, !1, c.background);
            p.bitmap.add(e, !0, d);
          }
          this._bkg.loadGraphic(d);
        },
        getStyleKey: function (a, b, c) {
          var d = c.background;
          a =
            a +
            "," +
            b +
            "," +
            ("0x" +
              K.hex((d >> 24) & 255, 2) +
              K.hex((d >> 16) & 255, 2) +
              K.hex((d >> 8) & 255, 2) +
              K.hex(d & 255, 2)) +
            "," +
            c.borderSize +
            ",";
          d = c.borderColor;
          return (
            a +
            ("0x" +
              K.hex((d >> 24) & 255, 2) +
              K.hex((d >> 16) & 255, 2) +
              K.hex((d >> 8) & 255, 2) +
              K.hex(d & 255, 2))
          );
        },
        makeArrowBkg: function (a) {
          null == a && (a = new H());
          var b =
            "arrowBkg:" +
            this.style.background +
            "," +
            this.style.borderSize +
            "," +
            this.style.borderColor +
            "," +
            (null == this._arrow
              ? "null"
              : null == this._arrow.animation._curAnim
              ? "null"
              : this._arrow.animation._curAnim.name);
          if (null == p.bitmap._cache.h[b]) {
            var c = this.style.borderSize;
            if (0 > c || null == c) c = 0;
            var d = (this._arrow.get_width() + c) | 0;
            c = (this._arrow.get_height() + c) | 0;
            d = new J(d, c, !0, 0);
            p.bitmap.add(d, !1, b);
            a.loadGraphic(b);
            d = this._arrow.color;
            this._arrow.set_color(this.style.borderColor);
            new Ea().identity();
            a.stamp(
              this._arrow,
              0 * this.style.borderSize,
              0 * this.style.borderSize
            );
            a.stamp(
              this._arrow,
              this.style.borderSize,
              0 * this.style.borderSize
            );
            a.stamp(
              this._arrow,
              2 * this.style.borderSize,
              0 * this.style.borderSize
            );
            a.stamp(
              this._arrow,
              0 * this.style.borderSize,
              this.style.borderSize
            );
            a.stamp(
              this._arrow,
              2 * this.style.borderSize,
              this.style.borderSize
            );
            a.stamp(
              this._arrow,
              0 * this.style.borderSize,
              2 * this.style.borderSize
            );
            a.stamp(
              this._arrow,
              this.style.borderSize,
              2 * this.style.borderSize
            );
            a.stamp(
              this._arrow,
              2 * this.style.borderSize,
              2 * this.style.borderSize
            );
            this._arrow.set_color(d);
          }
          a.loadGraphic(b);
          return a;
        },
        getArrowAnchor: function (a, b) {
          var c =
              ("left" == a.x.side && "right" == a.x.flush) ||
              ("right" == a.x.side && "left" == a.x.flush),
            d =
              ("top" == a.y.side && "bottom" == a.y.flush) ||
              ("bottom" == a.y.side && "top" == a.y.flush),
            e =
              ("left" == a.x.side && "left" == a.x.flush) ||
              ("right" == a.x.side && "right" == a.x.flush),
            f =
              ("top" == a.y.side && "top" == a.y.flush) ||
              ("bottom" == a.y.side && "bottom" == a.y.flush),
            h = e && f,
            m = this.style.borderSize;
          (c && d) ||
            (c &&
              ((b = a.getFlipped(!0, !1, b)),
              "left" == b.x.flush &&
                ((b.x.offset -= m), this._arrow.animation.play("right")),
              "right" == b.x.flush &&
                ((b.x.offset += m), this._arrow.animation.play("left"))),
            d &&
              ((b = a.getFlipped(!1, !0, b)),
              "top" == b.y.flush &&
                ((b.y.offset -= m), this._arrow.animation.play("down")),
              "bottom" == b.y.flush &&
                ((b.y.offset += m), this._arrow.animation.play("up"))));
          h ||
            (e &&
              ("left" == b.x.flush && (b.x.offset += m),
              "right" == b.x.flush && (b.x.offset -= m)),
            f &&
              ("top" == b.y.flush && (b.y.offset += m),
              "bottom" == b.y.flush && (b.y.offset -= m)));
          return null != b ? b : a;
        },
        __class__: Zc,
        __properties__: r(Ha.prototype.__properties__, {
          set_anchor: "set_anchor",
          set_style: "set_style",
        }),
      });
      var sh = function (a, b) {
        this.current = -1;
        this._init = !1;
        this.delay = 0.1;
        this.defaultAnchor = this.fixedPosition = this.defaultStyle = null;
        this.autoFlipAnchor = !0;
        null != a ? (this.state = a) : null != b && (this.subState = b);
        this.list = [];
        this.tooltip = new Zc(100, 50);
        this.lastPosition = new U(0, 0);
        this.defaultAnchor = this.tooltip.anchor.clone();
        this.defaultStyle = Zc.cloneStyle(this.tooltip.style);
      };
      g["flixel.addons.ui.FlxUITooltipManager"] = sh;
      sh.__name__ = "flixel.addons.ui.FlxUITooltipManager";
      sh.__interfaces__ = [T];
      sh.prototype = {
        init: function () {
          var a =
            null != this.state
              ? this.state._ui
              : null != this.subState
              ? this.subState._ui
              : null;
          null != a &&
            null != a &&
            null != a.getDefinition("default:tooltip") &&
            ((a = a._loadTooltipData(null)),
            (this.defaultStyle = Zc.cloneStyle(a.style)),
            this.tooltip.set_style(this.defaultStyle));
        },
        destroy: function () {
          Z.destroyArray(this.list);
          this.defaultStyle =
            this.defaultAnchor =
            this.subState =
            this.state =
            this.lastPosition =
            this.tooltip =
            this.list =
              null;
        },
        add: function (a, b) {
          this._init && (b.style = Zc.styleFix(b.style, this.defaultStyle));
          if (pa.__implements(a, Lf)) {
            var c = a;
            var d = this.findBtn(c);
            -1 == d
              ? this.list.push(new Oh(c, b))
              : ((this.list[d].data = b), (this.list[d].count = 0));
          } else
            (d = this.findObj(a)),
              -1 == d
                ? ((c = new Yc(0, 0, "", null, !1, !0)),
                  c.resize(a.get_width(), a.get_height()),
                  c.set_x(a.x),
                  c.set_y(a.y),
                  c.set_width(a.get_width()),
                  c.set_height(a.get_height()),
                  c.scrollFactor.set(a.scrollFactor.x, a.scrollFactor.y),
                  null != this.state
                    ? this.state.add(c)
                    : null != this.subState && this.subState.add(c),
                  this.list.push(new Oh(c, b, a)))
                : ((this.list[d].data = b),
                  (this.list[d].count = 0),
                  this.list[d].btn.set_x(a.x),
                  this.list[d].btn.set_y(a.y),
                  this.list[d].btn.set_width(a.get_width()),
                  this.list[d].btn.set_height(a.get_height()),
                  this.list[d].btn.scrollFactor.set(
                    a.scrollFactor.x,
                    a.scrollFactor.y
                  ));
        },
        update: function (a) {
          for (var b = 0, c = this.list.length; b < c; ) {
            var d = b++,
              e = this.list[d].btn,
              f = this.list[d].obj;
            if (0 == this.list[d].enabled)
              this.current == d && this.hide(d), (this.list[d].count = 0);
            else if (
              (null != f &&
                (e.set_x(f.x),
                e.set_y(f.y),
                e.set_width(f.get_width()),
                e.set_height(f.get_height()),
                e.set_visible(f.visible)),
              0 == this.list[d].sticky &&
              (0 == e.visible || e.get_justMousedOut() || e.get_mouseIsOut())
                ? ((this.list[d].count = 0), this.hide(d))
                : (e.get_justMousedOver() || e.get_mouseIsOver()) &&
                  e.get_mouseIsOver() &&
                  (this.list[d].count += a),
              this.list[d].count > this.delay ||
                (0 <= this.list[d].data.delay &&
                  this.list[d].count > this.list[d].data.delay))
            )
              this.current != d
                ? this.show(d)
                : this.list[d].data.moving && this.show(d);
          }
        },
        hide: function (a) {
          this.current == a &&
            (this.tooltip.hide(),
            null != this.state && this.state.remove(this.tooltip, !0),
            null != this.subState && this.subState.remove(this.tooltip, !0),
            (this.current = -1));
        },
        findBtn: function (a) {
          if (null == a) return -1;
          for (var b = 0, c = this.list.length; b < c; ) {
            var d = b++;
            if (null != this.list[d] && this.list[d].btn == a) return d;
          }
          return -1;
        },
        findObj: function (a) {
          if (null == a) return -1;
          for (var b = 0, c = this.list.length; b < c; ) {
            var d = b++;
            if (null != this.list[d] && this.list[d].obj == a) return d;
          }
          return -1;
        },
        show: function (a) {
          if (!(0 > a || a >= this.list.length)) {
            var b = this.list[a].btn;
            if (
              0 != b.visible &&
              (null == this.list[a].obj || 0 != this.list[a].obj.visible)
            )
              if (this.current == a) {
                a = b.x - this.lastPosition.x;
                var c = b.y - this.lastPosition.y;
                this.lastPosition.set_x(b.x);
                this.lastPosition.set_y(b.y);
                b = this.tooltip;
                b.set_x(b.x + a);
                b = this.tooltip;
                b.set_y(b.y + c);
              } else {
                this.current = a;
                a = this.list[a].data;
                1 != a.init &&
                  ((a.style = Zc.styleFix(a.style, this.defaultStyle)),
                  (a.init = !0));
                var d = (c = !0);
                null != a.style &&
                  (this.tooltip.set_style(a.style),
                  (c = a.style.autoSizeVertical),
                  (d = a.style.autoSizeHorizontal));
                null != a.anchor
                  ? this.tooltip.set_anchor(a.anchor)
                  : null != this.defaultAnchor &&
                    this.tooltip.set_anchor(this.defaultAnchor);
                null != this.state && this.state.add(this.tooltip);
                null != this.subState && this.subState.add(this.tooltip);
                this.tooltip.show(b, a.title, a.body, c, d);
                null != this.fixedPosition &&
                  this.fixedPosition.anchor.anchorThing(
                    this.tooltip,
                    this.fixedPosition.object
                  );
                this.autoFlipAnchor &&
                  this.checkAutoFlip(
                    this.tooltip,
                    null != this.fixedPosition
                      ? this.fixedPosition.anchor
                      : null
                  ) &&
                  (null != this.fixedPosition
                    ? this.fixedPosition.anchor.anchorThing(
                        this.tooltip,
                        this.fixedPosition.object
                      )
                    : this.tooltip.show(
                        b,
                        a.title,
                        a.body,
                        c,
                        d,
                        this.showTooltipArrow
                      ));
                this.lastPosition.set(b.x, b.y);
                if (null != this.state) this.state.onShowTooltip(this.tooltip);
                else if (null != this.subState)
                  this.subState.onShowTooltip(this.tooltip);
              }
          }
        },
        checkAutoFlip: function (a, b) {
          var c = 0 > a.x || a.x + a.get_width() > p.width,
            d = 0 > a.y || a.y + a.get_height() > p.height;
          return c || d
            ? (null == b && (b = a.anchor), b.getFlipped(c, d, b), !0)
            : !1;
        },
        __class__: sh,
      };
      var Oh = function (a, b, c) {
        this.sticky = !1;
        this.btn = a;
        this.data = b;
        this.obj = c;
        this.count = 0;
        this.enabled = !0;
        null != this.data &&
          (null == this.data.delay && (this.data.delay = -1),
          null == this.data.moving && (this.data.moving = !1));
      };
      g["flixel.addons.ui._FlxUITooltipManager.FlxUITooltipEntry"] = Oh;
      Oh.__name__ = "flixel.addons.ui._FlxUITooltipManager.FlxUITooltipEntry";
      Oh.__interfaces__ = [T];
      Oh.prototype = {
        destroy: function () {
          this.count = 0;
          this.btn = this.obj = null;
          this.data.anchor = null;
          this.data = this.data.style = null;
        },
        __class__: Oh,
      };
      var Ac = function (a, b, c, d, e) {
        null == c && (c = "");
        null == b && (b = ".ttf");
        this._size = 0;
        this.name = a;
        this.extension = b;
        this.file = c;
        this.format = d;
        null == this.format && (this.format = new zc());
        this.border = e;
        null == this.border && (this.border = new $d(Vb.NONE, 0));
      };
      g["flixel.addons.ui.FontDef"] = Ac;
      Ac.__name__ = "flixel.addons.ui.FontDef";
      Ac.copyFromTextField = function (a) {
        a = a.get_defaultTextFormat();
        var b = new Ac("");
        b.fromStr(a.font);
        b.format.font = a.font;
        b.format.size = a.size;
        b.format.color = a.color;
        b.format.bold = a.bold;
        b.format.italic = a.italic;
        b.format.underline = a.underline;
        b.format.url = a.url;
        b.format.letterSpacing = a.letterSpacing;
        b.format.leading = a.leading;
        b.format.target = a.target;
        b.format.align = a.align;
        return b;
      };
      Ac.copyFromFlxText = function (a) {
        var b = Ac.copyFromTextField(a.textField);
        b.fromStr(a._font);
        b.border.style = a.borderStyle;
        b.border.color = a.borderColor;
        b.border.quality = a.borderQuality;
        b.border.size = a.borderSize;
        return b;
      };
      Ac.fromXML = function (a) {
        var b = x.xml_str(a, "font"),
          c = x.xml_str(a, "style"),
          d = null;
        "" != b && (d = Ia.font(b, c));
        c = x.xml_str(a, "style");
        b = Ia.fontSize(d, x.xml_i(a, "size", 8));
        var e = x.xml_color(a, "color", !0, -1);
        switch (x.xml_str(a, "align").toLowerCase()) {
          case "center":
            var f = 0;
            break;
          case "justify":
            f = 2;
            break;
          case "left":
            f = 3;
            break;
          case "right":
            f = 4;
            break;
          default:
            f = 3;
        }
        d = new Ac(x.xml_str(a, "font"), ".ttf", d);
        d.format.color = e;
        d.format.size = b;
        d.format.align = f;
        d.set_size(b);
        d.setFontStyle(c);
        d.border = $d.fromXML(a);
        return d;
      };
      Ac.prototype = {
        get_size: function () {
          null != this.format && (this._size = this.format.size | 0);
          return this._size;
        },
        set_size: function (a) {
          null != this.format && (this.format.size = a);
          return (this._size = a);
        },
        clone: function () {
          var a = null == this.border ? null : this.border.clone(),
            b =
              null == this.format
                ? null
                : new zc(
                    this.format.font,
                    this.format.size,
                    this.format.color,
                    this.format.bold,
                    this.format.italic,
                    this.format.underline,
                    this.format.url,
                    this.format.target,
                    this.format.align,
                    this.format.leftMargin,
                    this.format.rightMargin,
                    this.format.indent,
                    this.format.leading
                  );
          null != this.format && (b.letterSpacing = this.format.letterSpacing);
          a = new Ac(this.name, this.extension, this.file, b, a);
          a.set_size(this.get_size());
          return a;
        },
        applyFlx: function (a) {
          var b = null;
          if (null != this.format.align)
            switch (this.format.align) {
              case 0:
                b = "center";
                break;
              case 2:
                b = "justify";
                break;
              case 3:
                b = "left";
                break;
              case 4:
                b = "right";
                break;
              default:
                b = "left";
            }
          a.setFormat(
            "" == this.file || null == this.file ? null : this.file,
            this.format.size | 0,
            this.format.color,
            b,
            this.border.style,
            this.border.color
          );
          a.textField.get_defaultTextFormat().leading = this.format.leading;
          a.textField.get_defaultTextFormat().letterSpacing =
            this.format.letterSpacing;
          return a;
        },
        apply: function (a, b) {
          null != a && a.setTextFormat(this.format);
          null != b && this.applyFlx(b);
        },
        fromStr: function (a, b) {
          null == b && (b = 0);
          if (!(3 < b)) {
            a = td.fix(a);
            var c = this.getFontStyle(a);
            this.setFontStyle(c);
            for (var d = "", e = 0, f = Ac.EXTENSIONS; e < f.length; ) {
              var h = f[e];
              ++e;
              if (-1 != a.indexOf(h) && la.exists(a + d, "FONT")) {
                this.name = K.replace(a, d, "");
                this.file = a;
                d = h;
                break;
              }
            }
            if ("" == d) {
              e = 0;
              for (f = Ac.EXTENSIONS; e < f.length; )
                if (((h = f[e]), ++e, la.exists(a + h, "FONT"))) {
                  d = h;
                  this.name = a;
                  this.file = a + d;
                  break;
                }
              this.setFontStyle(c);
            } else
              (a = this.stripFontExtensions(a)),
                "" != this.getFontStyle(a) &&
                  (a = ba.substr(a, a.length - 1, 1)),
                this.fromStr(a, b + 1);
          }
        },
        stripFontExtensions: function (a) {
          if (null == a) return a;
          for (var b = 0, c = Ac.EXTENSIONS; b < c.length; ) {
            var d = c[b];
            ++b;
            null != a && -1 != a.indexOf(d) && (a = K.replace(a, d, ""));
          }
          return a;
        },
        getFontExtension: function (a) {
          if (null == a) return "";
          for (var b = 0, c = Ac.EXTENSIONS; b < c.length; ) {
            var d = c[b];
            ++b;
            if (-1 != a.indexOf(d)) return d;
          }
          return a;
        },
        fixFontName: function () {
          var a = this.getFontStyle(this.file),
            b = this.getFontExtension(this.file),
            c = this.stripFontExtensions(this.file);
          "" != a && (c = ba.substr(c, 0, c.length - 1));
          a = "";
          this.format.bold && this.format.italic
            ? (a = "z")
            : this.format.bold
            ? (a = "b")
            : this.format.italic && (a = "i");
          this.file = c + a + b;
        },
        getFontStyle: function (a) {
          if (null == a) return "";
          a = this.stripFontExtensions(a);
          a = ba.substr(a, a.length - 1, 1);
          if ("" != a && null != a)
            switch (((a = a.toLowerCase()), a)) {
              case "b":
                return "b";
              case "i":
                return "i";
              case "z":
                return "z";
            }
          return "";
        },
        setFontStyle: function (a) {
          a = a.toLowerCase();
          switch (a) {
            case "b":
            case "bold":
              this.format.bold = !0;
              this.format.italic = !1;
              break;
            case "all":
            case "bi":
            case "bold-italic":
            case "bolditalic":
            case "both":
            case "ib":
            case "italicbold":
            case "z":
              this.format.bold = !0;
              this.format.italic = !0;
              break;
            case "i":
            case "italic":
              this.format.bold = !1;
              this.format.italic = !0;
              break;
            default:
              (this.format.bold = !1), (this.format.italic = !1);
          }
          this.fixFontName();
        },
        __class__: Ac,
        __properties__: { set_size: "set_size", get_size: "get_size" },
      };
      var td = function () {};
      g["flixel.addons.ui.FontFixer"] = td;
      td.__name__ = "flixel.addons.ui.FontFixer";
      td.init = function () {
        null == td.name2File && (td.name2File = new ea());
      };
      td.fix = function (a) {
        td.init();
        -1 == a.indexOf(".ttf") &&
          Object.prototype.hasOwnProperty.call(td.name2File.h, a) &&
          (a = td.name2File.h[a]);
        return a;
      };
      td.add = function (a, b) {
        null == b && (b = "");
        td.init();
        if ("" != b && Object.prototype.hasOwnProperty.call(td.name2File.h, b))
          return td.name2File.h[b];
        if (!la.exists(a, "FONT")) return a;
        var c = la.getFont(a);
        if (null == c) return a;
        "" == b && (b = c.name);
        td.name2File.h[b] = a;
        return td.fix(a);
      };
      var vl = function (a, b) {
        null == b && (b = "");
        null == a && (a = "");
        this.name = a;
        this.label = b;
      };
      g["flixel.addons.ui.StrNameLabel"] = vl;
      vl.__name__ = "flixel.addons.ui.StrNameLabel";
      vl.prototype = { __class__: vl };
      var x = function () {};
      g["flixel.addons.ui.U"] = x;
      x.__name__ = "flixel.addons.ui.U";
      x.xml_str = function (a, b, c, d) {
        null == d && (d = "");
        null == c && (c = !1);
        return null != a.get(b) ? (c ? a.get(b).toLowerCase() : a.get(b)) : d;
      };
      x.xml_name = function (a) {
        var b = x.xml_str(a, "name", !0, "");
        "" == b && (b = x.xml_str(a, "id", !0, ""));
        return b;
      };
      x.xml_color = function (a, b, c, d) {
        c = null;
        a = x.xml_str(a, b, !0);
        if ("" != a) {
          b = Xb.fromString(a);
          if (null == b)
            throw C.thrown("U.parseHex() unable to parse hex String " + a);
          c = b;
        }
        null == c && null != d && (c = d);
        return c;
      };
      x.xml_strArray = function (a, b, c, d) {
        null == c && (c = !0);
        a = x.xml_str(a, b, c);
        return "" != a ? a.split(",") : d;
      };
      x.xml_colorArray = function (a, b, c) {
        a = x.xml_strArray(a, b);
        b = null;
        if (null != a && 0 < a.length) {
          b = [];
          c = 0;
          for (var d = a.length; c < d; ) {
            var e = c++,
              f = a[e],
              h = Xb.fromString(f);
            if (null == h)
              throw C.thrown("U.parseHex() unable to parse hex String " + f);
            b[e] = h;
          }
        }
        return b;
      };
      x.perc_to_float = function (a) {
        if (a.lastIndexOf("%") == a.length - 1) {
          a = ba.substr(a, 0, a.length - 1);
          var b = new Ua("([0-9]+)?(\\.)?([0-9]*)?", "");
          if (
            b.match(a) &&
            ((b = b.matchedPos()), 0 == b.pos && b.len == a.length)
          )
            return parseFloat(a) / 100;
        }
        return NaN;
      };
      x.isStrNum = function (a) {
        if (null == a || "" == a) return !1;
        var b = new Ua("-?([0-9]+)?(\\.)?([0-9]*)?", "");
        return b.match(a) &&
          ((b = b.matchedPos()), 0 == b.pos && b.len == a.length)
          ? !0
          : !1;
      };
      x.xml_f = function (a, b, c) {
        null == c && (c = 0);
        return null != a.get(b) ? parseFloat(a.get(b)) : c;
      };
      x.xml_i = function (a, b, c) {
        null == c && (c = 0);
        return null != a.get(b) ? I.parseInt(a.get(b)) : c;
      };
      x.xml_pt = function (a, b, c) {
        return null != a.get(b) ? x.pointify(a.get(b)) : c;
      };
      x.boolify = function (a) {
        a = a.toLowerCase();
        return "true" == a || "1" == a ? !0 : !1;
      };
      x.pointify = function (a) {
        var b = null;
        if (null != a) {
          for (var c = ["(", ")", " ", "=", ":"], d = 0; d < c.length; ) {
            var e = c[d];
            for (++d; -1 != a.indexOf(e); ) a = K.replace(a, e, "");
          }
          -1 == a.indexOf(",") &&
            -1 != a.indexOf("x") &&
            (a = K.replace(a, "x", ","));
          c = a.split(",");
          2 == c.length && (b = new U(parseFloat(c[0]), parseFloat(c[1])));
        }
        return b;
      };
      x.compareStringVars = function (a, b, c, d) {
        null == d && (d = "==");
        switch (c) {
          case "bool":
            a = x.boolify(a);
            b = x.boolify(b);
            if ("==" == d || "=" == d) return a == b;
            if ("!==" == d || "!=" == d) return a != b;
            break;
          case "float":
            a = parseFloat(a);
            b = parseFloat(b);
            if ("==" == d || "=" == d) return a == b;
            if ("!==" == d || "!=" == d) return a != b;
            if ("<" == d) return a < b;
            if (">" == d) return a > b;
            if ("<=" == d) return a <= b;
            if (">=" == d) return a >= b;
            break;
          case "int":
            a = I.parseInt(a);
            b = I.parseInt(b);
            if ("==" == d || "=" == d) return a == b;
            if ("!==" == d || "!=" == d) return a != b;
            if ("<" == d) return a < b;
            if (">" == d) return a > b;
            if ("<=" == d) return a <= b;
            if (">=" == d) return a >= b;
            break;
          case "string":
            if ("==" == d || "=" == d) return a == b;
            if ("!==" == d || "!=" == d) return a != b;
        }
        return !1;
      };
      x.xml_bool = function (a, b, c) {
        null == c && (c = !1);
        return null != a.get(b)
          ? ((a = a.get(b)),
            (a = a.toLowerCase()),
            "true" == a || "1" == a ? !0 : !1)
          : c;
      };
      x.conformToBounds = function (a, b) {
        null != b &&
          (a.x < b.min_width && (a.x = b.min_width),
          a.y < b.min_height && (a.y = b.min_height),
          a.x > b.max_width && (a.x = b.max_width),
          a.x > b.max_height && (a.y = b.max_height));
        return a;
      };
      x.applyResize = function (a, b, c, d, e) {
        null == e && (e = new U());
        0 < a &&
          1e-4 < Math.abs(c / d - a) &&
          (1 == b ? (d = (1 / a) * c) : (c = (1 / a) * d));
        1 > (c | 0) && (c = 1);
        1 > (d | 0) && (d = 1);
        e.set(c, d);
        return e;
      };
      x.xml = function (a, b, c, d) {
        null == d && (d = "assets/xml/");
        null == c && (c = !0);
        null == b && (b = "xml");
        if (0 == a.indexOf("raw:") || 0 == a.indexOf("RAW:"))
          (a = ba.substr(a, 4, a.length - 4)), (d = "");
        if (!la.exists(d + a + "." + b, "TEXT")) return null;
        a = la.getText(d + a + "." + b);
        if (null == a) return null;
        a = D.parse(a);
        if (c) {
          c = a.firstElement();
          if (c.nodeType != D.Document && c.nodeType != D.Element)
            throw C.thrown(
              "Invalid nodeType " +
                (null == c.nodeType ? "null" : ha.toString(c.nodeType))
            );
          return c;
        }
        return a.firstElement();
      };
      x.clearArraySoft = function (a) {
        if (null != a)
          for (var b = a.length - 1; 0 <= b; )
            (a[b] = null), a.splice(b, 1), --b;
      };
      x.clearArray = function (a) {
        if (null != a)
          for (var b = a.length - 1; 0 <= b; )
            x.destroyThing(a[b]), (a[b] = null), a.splice(b, 1), --b;
      };
      x.destroyThing = function (a) {
        null != a &&
          (a instanceof Array
            ? x.clearArray(a)
            : pa.__implements(a, T)
            ? pa.__cast(a, T).destroy()
            : a instanceof ca && pa.__cast(a, ca).destroy());
      };
      x.font = function (a, b, c) {
        null == c && (c = ".ttf");
        null == b && (b = "");
        var d = a,
          e = b;
        null == e && (e = "");
        e = e.toLowerCase();
        var f = "";
        switch (e) {
          case "b":
          case "bold":
            f = "b";
            break;
          case "bi":
          case "bold-italic":
          case "boldi":
          case "bolditalic":
          case "ib":
          case "ibold":
          case "italic-bold":
          case "italicbold":
          case "z":
            f = "z";
            break;
          case "i":
          case "italic":
            f = "i";
            break;
          case "":
          case "none":
          case "normal":
          case "regular":
            f = "";
        }
        a = 0 != a.indexOf("assets/fonts/") ? "assets/fonts/" + a + f : a + f;
        -1 == a.indexOf(c) && (a += c);
        a = td.add(a);
        return !la.exists(a, "FONT") &&
          ".ttf" == c &&
          ((b = x.font(d, b, ".otf")), la.exists(b, "FONT"))
          ? b
          : a;
      };
      x.FU = function (a) {
        return ba.substr(a, 0, 1).toUpperCase() + ba.substr(a, 1, a.length - 1);
      };
      x.getBmp = function (a) {
        var b = null;
        if ("string" == typeof a) b = a;
        else if (a instanceof Eb) b = a.key;
        else if (a instanceof J) return a;
        return null != p.bitmap._cache.h[b] &&
          ((a = p.bitmap._cache.h[b]), null != a.bitmap)
          ? a.bitmap
          : la.getBitmapData(b, !1);
      };
      x.checkHaxedef = function (a) {
        a = a.toLowerCase();
        switch (a) {
          case "html5":
            return !0;
          case "js":
            return !0;
          case "lime_next":
          case "next":
            return !0;
          case "web":
            return !0;
        }
        return !1;
      };
      x.FU_ = function (a) {
        var b = a.split(" ");
        a = "";
        for (var c = 0, d = b.length; c < d; ) {
          var e = c++;
          a += x.FU(b[e]);
          e != b.length - 1 && (a += " ");
        }
        return a;
      };
      x.scaleTileBmp = function (a, b, c, d, e, f, h) {
        null == h && (h = !0);
        null == f && (f = -1);
        null == e && (e = -1);
        var m = la.getBitmapData(a, !1);
        if (null == m)
          if (null != p.bitmap._cache.h[a]) m = p.bitmap._cache.h[a].bitmap;
          else return null;
        a = (m.width / c) | 0;
        var n = (m.height / d) | 0;
        -1 == e && (e = (c * b) | 0);
        -1 == f && ((f = (d * b) | 0), (b = f / d));
        if (0.001 < Math.abs(b - 1)) {
          var g = new J((e * a) | 0, (f * n) | 0, !0, 0),
            l = new ma(),
            k = new Ra(),
            u = new Ea();
          u.scale(b, b);
          for (b = 0; b < n; )
            for (var q = b++, r = 0, z = a; r < z; ) {
              var v = r++,
                y = new J(c, d, !0, 0);
              l.setTo(v * c, q * d, c, d);
              k.setTo(0, 0);
              y.copyPixels(m, l, k);
              var w = new J(e, f, !0, 0);
              w.draw(y, u, null, null, null, h);
              k.setTo(v * e, q * f);
              g.copyPixels(w, w.rect, k);
            }
          return g;
        }
        return m.clone();
      };
      x.scaleAndStoreTileset = function (a, b, c, d, e, f, h) {
        null == h && (h = !0);
        null == f && (f = -1);
        null == e && (e = -1);
        var m = a + "_x" + b;
        (null != p.bitmap._cache.h[m]) == 0 &&
          ((a = x.scaleTileBmp(a, b, c, d, e, f, h)), p.bitmap.add(a, !1, m));
        return m;
      };
      x.loadScaledImage = function (a, b, c, d) {
        null == d && (d = !0);
        var e = x.gfx(a);
        a = la.getBitmapData(e, !1);
        if (null != a) {
          0 > b && (b = a.width);
          0 > c && (c = a.height);
          if (
            0.01 < Math.abs(b - a.width) + Math.abs(c - a.height) &&
            ((e = e + "_" + (b | 0) + "x" + (c | 0)),
            null == p.bitmap._cache.h[e])
          ) {
            var f = new J(b | 0, c | 0, !0, 0),
              h = x.getMatrix();
            h.identity();
            h.scale(b / a.width, c / a.height);
            f.draw(a, h, null, null, null, d);
            p.bitmap.add(f, !0, e);
          }
          return e;
        }
        return null;
      };
      x.gfx = function (a, b, c, d, e, f) {
        null == e && (e = "");
        null == d && (d = "");
        null == c && (c = "");
        null == b && (b = "");
        null != a && (a = a.toLowerCase());
        f = "";
        "" != b &&
          ((f = b + "/"),
          "" != c &&
            ((f += c + "/"),
            "" != d && ((f += d + "/"), "" != e && (f += e + "/"))));
        "" != f && (a = f + a);
        0 != a.indexOf("raw:") && (a = K.replace(a, "-", "_"));
        return x.get_gfx(a);
      };
      x.get_gfx = function (a) {
        var b = "";
        var c = -1 != a.indexOf(".jpg") ? ".jpg" : ".png";
        null != a &&
          4 < a.length &&
          -1 != a.indexOf(c) &&
          (a = ba.substr(a, 0, a.length - 4));
        if (0 == a.indexOf("raw:") || 0 == a.indexOf("RAW:"))
          (a = ba.substr(a, 4, a.length - 4)), (b = a + c);
        null != a && 0 == a.indexOf("assets/gfx/") && (b = a + c);
        "" == b && (b = "assets/gfx/" + a + c);
        -1 != b.indexOf(".stitch.txt" + c) &&
          (b = K.replace(b, ".stitch.txt" + c, ".stitch.txt"));
        return b;
      };
      x.unparentXML = function (a) {
        null != a.parent && a.parent.removeChild(a);
        return a;
      };
      x.getMatrix = function () {
        null == x._matrix && (x._matrix = new Ea());
        return x._matrix;
      };
      var wl = function () {};
      g["flixel.addons.ui.interfaces.IFireTongue"] = wl;
      wl.__name__ = "flixel.addons.ui.interfaces.IFireTongue";
      wl.__isInterface__ = !0;
      wl.prototype = { __class__: wl };
      var be = function (a, b) {
        this.curIndex = 0;
        this.parent = a;
        this.name = b;
      };
      g["flixel.animation.FlxBaseAnimation"] = be;
      be.__name__ = "flixel.animation.FlxBaseAnimation";
      be.__interfaces__ = [T];
      be.prototype = {
        set_curIndex: function (a) {
          this.curIndex = a;
          null != this.parent &&
            this.parent._curAnim == this &&
            this.parent.set_frameIndex(a);
          return a;
        },
        destroy: function () {
          this.name = this.parent = null;
        },
        __class__: be,
        __properties__: { set_curIndex: "set_curIndex" },
      };
      var Og = function (a, b, c, d, e, f, h) {
        null == h && (h = !1);
        null == f && (f = !1);
        null == e && (e = !0);
        null == d && (d = 0);
        this._frameTimer = 0;
        this.reversed = this.flipX = this.flipY = !1;
        this.finished = this.paused = this.looped = !0;
        this.curFrame = this.delay = 0;
        be.call(this, a, b);
        this.set_frameRate(d);
        this.frames = c;
        this.looped = e;
        this.flipX = f;
        this.flipY = h;
      };
      g["flixel.animation.FlxAnimation"] = Og;
      Og.__name__ = "flixel.animation.FlxAnimation";
      Og.__super__ = be;
      Og.prototype = r(be.prototype, {
        destroy: function () {
          this.name = this.frames = null;
          be.prototype.destroy.call(this);
        },
        play: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          null == a && (a = !1);
          a || this.finished || this.reversed != b
            ? ((this.reversed = b),
              (this.paused = !1),
              (this._frameTimer = 0),
              (this.finished = 0 == this.delay),
              (a = this.frames.length - 1),
              0 > c
                ? this.set_curFrame(p.random.int(0, a))
                : (c > a && (c = a),
                  this.reversed && (c = a - c),
                  this.set_curFrame(c)),
              this.finished &&
                ((c = this.parent),
                null != c.finishCallback && c.finishCallback(this.name)))
            : (this.finished = this.paused = !1);
        },
        stop: function () {
          this.paused = this.finished = !0;
        },
        update: function (a) {
          if (0 != this.delay && !this.finished && !this.paused)
            for (
              this._frameTimer += a;
              this._frameTimer > this.delay && !this.finished;

            )
              (this._frameTimer -= this.delay),
                this.reversed
                  ? this.looped && 0 == this.curFrame
                    ? this.set_curFrame(this.frames.length - 1)
                    : this.set_curFrame(this.curFrame - 1)
                  : this.looped && this.curFrame == this.frames.length - 1
                  ? this.set_curFrame(0)
                  : this.set_curFrame(this.curFrame + 1);
        },
        set_frameRate: function (a) {
          this.delay = 0;
          this.frameRate = a;
          0 < a && (this.delay = 1 / a);
          return a;
        },
        set_curFrame: function (a) {
          var b = this.frames.length - 1;
          0 <= (this.reversed ? b - a : a)
            ? !this.looped && a > b
              ? ((this.finished = !0), (this.curFrame = this.reversed ? 0 : b))
              : (this.curFrame = a)
            : (this.curFrame = p.random.int(0, b));
          this.set_curIndex(this.frames[this.curFrame]);
          this.finished &&
            null != this.parent &&
            ((b = this.parent),
            null != b.finishCallback && b.finishCallback(this.name));
          return a;
        },
        __class__: Og,
        __properties__: r(be.prototype.__properties__, {
          set_curFrame: "set_curFrame",
          set_frameRate: "set_frameRate",
        }),
      });
      var oi = function (a) {
        this.frameIndex = -1;
        this._sprite = a;
        this._animations = new ea();
      };
      g["flixel.animation.FlxAnimationController"] = oi;
      oi.__name__ = "flixel.animation.FlxAnimationController";
      oi.__interfaces__ = [T];
      oi.prototype = {
        update: function (a) {
          null != this._curAnim
            ? this._curAnim.update(a)
            : null != this._prerotated &&
              this._prerotated.set_angle(this._sprite.angle);
        },
        copyFrom: function (a) {
          this.destroyAnimations();
          for (var b = ea.valueIterator(a._animations.h); b.hasNext(); ) {
            var c = b.next();
            this.add(c.name, c.frames, c.frameRate, c.looped, c.flipX, c.flipY);
          }
          null != a._prerotated && this.createPrerotated();
          null != a.get_name() && this.set_name(a.get_name());
          this.set_frameIndex(a.frameIndex);
          return this;
        },
        createPrerotated: function (a) {
          this.destroyAnimations();
          null == a && (a = this);
          this._prerotated = new hj(a, a._sprite.bakedRotationAngle);
          this._prerotated.set_angle(this._sprite.angle);
        },
        destroyAnimations: function () {
          this.clearAnimations();
          this.clearPrerotated();
        },
        destroy: function () {
          this.destroyAnimations();
          this._sprite = this.callback = this._animations = null;
        },
        clearPrerotated: function () {
          null != this._prerotated && this._prerotated.destroy();
          this._prerotated = null;
        },
        clearAnimations: function () {
          if (null != this._animations)
            for (var a, b = ea.keysIterator(this._animations.h); b.hasNext(); )
              (a = b.next()),
                (a = this._animations.h[a]),
                null != a && a.destroy();
          this._animations = new ea();
          this._curAnim = null;
        },
        add: function (a, b, c, d, e, f) {
          null == f && (f = !1);
          null == e && (e = !1);
          null == d && (d = !0);
          null == c && (c = 30);
          for (var h = b, m = h.length - 1; 0 <= m; )
            h[m] >= this._sprite.numFrames &&
              (h == b && (h = b.slice()), h.splice(m, 1)),
              --m;
          0 < h.length &&
            ((b = new Og(this, a, h, c, d, e, f)), (this._animations.h[a] = b));
        },
        addByIndices: function (a, b, c, d, e, f, h, m) {
          null == m && (m = !1);
          null == h && (h = !1);
          null == f && (f = !0);
          null == e && (e = 30);
          if (null != this._sprite.frames) {
            var n = [];
            this.byIndicesHelper(n, b, c, d);
            0 < n.length &&
              ((b = new Og(this, a, n, e, f, h, m)),
              (this._animations.h[a] = b));
          }
        },
        findSpriteFrame: function (a, b, c) {
          for (
            var d = this._sprite.frames.frames,
              e = 0,
              f = this._sprite.numFrames;
            e < f;

          ) {
            var h = e++,
              m = d[h].name;
            if (
              K.startsWith(m, a) &&
              K.endsWith(m, c) &&
              ((m = I.parseInt(m.substring(a.length, m.length - c.length))),
              null != m && m == b)
            )
              return h;
          }
          return -1;
        },
        addByPrefix: function (a, b, c, d, e, f) {
          null == f && (f = !1);
          null == e && (e = !1);
          null == d && (d = !0);
          null == c && (c = 30);
          if (null != this._sprite.frames) {
            var h = [];
            this.findByPrefix(h, b);
            if (0 < h.length) {
              var m = [];
              this.byPrefixHelper(m, h, b);
              0 < m.length &&
                ((b = new Og(this, a, m, c, d, e, f)),
                (this._animations.h[a] = b));
            }
          }
        },
        play: function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = !1);
          null == b && (b = !1);
          null == a &&
            (null != this._curAnim && this._curAnim.stop(),
            (this._curAnim = null));
          if (null != a && null != this._animations.h[a]) {
            var e = !1,
              f = !1;
            null != this._curAnim &&
              a != this._curAnim.name &&
              ((e = this._curAnim.flipX),
              (f = this._curAnim.flipY),
              this._curAnim.stop());
            this._curAnim = this._animations.h[a];
            this._curAnim.play(b, c, d);
            if (e != this._curAnim.flipX || f != this._curAnim.flipY)
              this._sprite.dirty = !0;
          }
        },
        byIndicesHelper: function (a, b, c, d) {
          for (var e = 0; e < c.length; ) {
            var f = c[e];
            ++e;
            f = this.findSpriteFrame(b, f, d);
            -1 != f && a.push(f);
          }
        },
        byPrefixHelper: function (a, b, c) {
          var d = b[0].name,
            e = d.indexOf(".", c.length);
          d = d.substring(-1 == e ? d.length : e, d.length);
          Fe.sort(b, c.length, d.length);
          for (c = 0; c < b.length; )
            (d = b[c]), ++c, a.push(this._sprite.frames.frames.indexOf(d));
        },
        findByPrefix: function (a, b) {
          for (var c = 0, d = this._sprite.frames.frames; c < d.length; ) {
            var e = d[c];
            ++c;
            null != e.name && K.startsWith(e.name, b) && a.push(e);
          }
        },
        set_frameIndex: function (a) {
          null != this._sprite.frames &&
            0 < this._sprite.numFrames &&
            ((a %= this._sprite.numFrames),
            this._sprite.set_frame(this._sprite.frames.frames[a]),
            (this.frameIndex = a),
            null != this.callback &&
              this.callback(
                null != this._curAnim ? this._curAnim.name : null,
                null != this._curAnim
                  ? this._curAnim.curFrame
                  : this.frameIndex,
                this.frameIndex
              ));
          return this.frameIndex;
        },
        get_name: function () {
          var a = null;
          null != this._curAnim && (a = this._curAnim.name);
          return a;
        },
        set_name: function (a) {
          this.play(a);
          return a;
        },
        __class__: oi,
        __properties__: {
          set_name: "set_name",
          get_name: "get_name",
          set_frameIndex: "set_frameIndex",
        },
      };
      var hj = function (a, b) {
        this.angle = 0;
        be.call(this, a, "prerotated_animation");
        this.baked = b;
        this.rotations = Math.round(360 / b);
      };
      g["flixel.animation.FlxPrerotatedAnimation"] = hj;
      hj.__name__ = "flixel.animation.FlxPrerotatedAnimation";
      hj.__super__ = be;
      hj.prototype = r(be.prototype, {
        set_angle: function (a) {
          if (isNaN(a)) throw C.thrown("angle must not be NaN");
          for (var b = this.curIndex, c = Math.floor(a % 360); 0 > c; )
            c += 360;
          c = Math.floor(c / this.baked + 0.5);
          c = c % this.rotations | 0;
          b != c && this.set_curIndex(c);
          return (this.angle = a);
        },
        set_curIndex: function (a) {
          this.curIndex = a;
          null != this.parent && this.parent.set_frameIndex(a);
          return a;
        },
        __class__: hj,
        __properties__: r(be.prototype.__properties__, {
          set_angle: "set_angle",
        }),
      });
      var ij = function (a) {
        this._count = 0;
        this._pool = [];
        this._class = a;
      };
      g["flixel.util.FlxPool_flixel_effects_FlxFlicker"] = ij;
      ij.__name__ = "flixel.util.FlxPool_flixel_effects_FlxFlicker";
      ij.__interfaces__ = [B];
      ij.prototype = {
        get: function () {
          return 0 == this._count
            ? Ya.createInstance(this._class, [])
            : this._pool[--this._count];
        },
        put: function (a) {
          if (null != a) {
            var b = this._pool.indexOf(a);
            if (-1 == b || b >= this._count)
              a.destroy(), (this._pool[this._count++] = a);
          }
        },
        __class__: ij,
      };
      var xc = function () {};
      g["flixel.effects.FlxFlicker"] = xc;
      xc.__name__ = "flixel.effects.FlxFlicker";
      xc.__interfaces__ = [T];
      xc.flicker = function (a, b, c, d, e, f, h) {
        null == e && (e = !0);
        null == d && (d = !0);
        null == c && (c = 0.04);
        null == b && (b = 1);
        if (xc.isFlickering(a))
          if (e) xc.stopFlickering(a);
          else return xc._boundObjects.h[a.__id__];
        0 >= c && (c = p.elapsed);
        e = xc._pool.get();
        e.start(a, b, c, d, f, h);
        xc._boundObjects.set(a, e);
        return e;
      };
      xc.isFlickering = function (a) {
        return null != xc._boundObjects.h.__keys__[a.__id__];
      };
      xc.stopFlickering = function (a) {
        a = xc._boundObjects.h[a.__id__];
        null != a && a.stop();
      };
      xc.prototype = {
        destroy: function () {
          this.progressCallback =
            this.completionCallback =
            this.timer =
            this.object =
              null;
        },
        start: function (a, b, c, d, e, f) {
          this.object = a;
          this.duration = b;
          this.interval = c;
          this.completionCallback = e;
          this.progressCallback = f;
          this.endVisibility = d;
          this.timer = new hc().start(
            this.interval,
            q(this, this.flickerProgress),
            (this.duration / this.interval) | 0
          );
        },
        stop: function () {
          this.timer.cancel();
          this.object.set_visible(!0);
          this.release();
        },
        release: function () {
          xc._boundObjects.remove(this.object);
          xc._pool.put(this);
        },
        flickerProgress: function (a) {
          this.object.set_visible(!this.object.visible);
          null != this.progressCallback && this.progressCallback(this);
          0 < a.loops &&
            0 == a.loops - a._loopsCounter &&
            (this.object.set_visible(this.endVisibility),
            null != this.completionCallback && this.completionCallback(this),
            this.release());
        },
        __class__: xc,
      };
      var Eb = function (a, b, c) {
        this._destroyOnNoUse = !0;
        this._useCount = 0;
        this.persist = this.isDumped = this.unique = !1;
        this.width = this.height = 0;
        this.key = a;
        this.persist = null != c ? c : Eb.defaultPersist;
        this.frameCollections = new Fg();
        this.frameCollectionTypes = [];
        this.set_bitmap(b);
        this.shader = new hg();
      };
      g["flixel.graphics.FlxGraphic"] = Eb;
      Eb.__name__ = "flixel.graphics.FlxGraphic";
      Eb.__interfaces__ = [T];
      Eb.fromAssetKey = function (a, b, c, d) {
        null == d && (d = !0);
        null == b && (b = !1);
        if (!d) {
          var e = la.exists(a) ? la.getBitmapData(a, !1) : null;
          return null == e ? null : Eb.createGraphic(e, c, b, d);
        }
        c = p.bitmap.generateKey(a, c, b);
        e = p.bitmap._cache.h[c];
        if (null != e) return e;
        e = la.exists(a) ? la.getBitmapData(a, !1) : null;
        if (null == e) return null;
        e = Eb.createGraphic(e, c, b);
        e.assetsKey = a;
        return e;
      };
      Eb.fromClass = function (a, b, c, d) {
        null == d && (d = !0);
        null == b && (b = !1);
        if (!d) {
          var e = Ya.createInstance(a, [0, 0]);
          return Eb.createGraphic(e, c, b, d);
        }
        d = a.__name__;
        d = p.bitmap.generateKey(d, c, b);
        c = p.bitmap._cache.h[d];
        if (null != c) return c;
        e = Ya.createInstance(a, [0, 0]);
        c = Eb.createGraphic(e, d, b);
        c.assetsClass = a;
        return c;
      };
      Eb.fromBitmapData = function (a, b, c, d) {
        null == d && (d = !0);
        null == b && (b = !1);
        if (!d) return Eb.createGraphic(a, c, b, d);
        d = p.bitmap.findKeyForBitmap(a);
        var e = null,
          f = null;
        if (null != d) {
          var h = p.bitmap._cache.h[d];
          e = h.assetsKey;
          f = h.assetsClass;
        }
        d = p.bitmap.generateKey(d, c, b);
        h = p.bitmap._cache.h[d];
        if (null != h) return h;
        h = Eb.createGraphic(a, d, b);
        h.assetsKey = e;
        h.assetsClass = f;
        return h;
      };
      Eb.fromGraphic = function (a, b, c) {
        null == b && (b = !1);
        if (!b) return a;
        c = p.bitmap.generateKey(a.key, c, b);
        c = Eb.createGraphic(a.bitmap, c, b);
        c.unique = b;
        c.assetsClass = a.assetsClass;
        c.assetsKey = a.assetsKey;
        return (p.bitmap._cache.h[c.key] = c);
      };
      Eb.fromRectangle = function (a, b, c, d, e) {
        null == d && (d = !1);
        d = p.bitmap.generateKey(a + "x" + b + ":" + c, e, d);
        e = p.bitmap._cache.h[d];
        if (null != e) return e;
        a = new J(a, b, !0, c);
        return Eb.createGraphic(a, d);
      };
      Eb.createGraphic = function (a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = !1);
        var e = c;
        null == e && (e = !1);
        e && (a = a.clone());
        d
          ? ((a = new Eb(b, a)), (a.unique = c), (p.bitmap._cache.h[a.key] = a))
          : (a = new Eb(null, a));
        return a;
      };
      Eb.prototype = {
        dump: function () {},
        undump: function () {
          var a = this.getBitmapFromSystem();
          null != a && this.set_bitmap(a);
          this.isDumped = !1;
        },
        onContext: function () {
          this.isDumped && (this.undump(), this.dump());
        },
        onAssetsReload: function () {
          if (null != this.assetsClass || null != this.assetsKey) {
            var a = this.isDumped;
            this.undump();
            a && this.dump();
          }
        },
        destroy: function () {
          this.set_bitmap(Z.dispose(this.bitmap));
          this._imageFrame =
            this.assetsClass =
            this.assetsKey =
            this.key =
            this.shader =
              null;
          if (null != this.frameCollections) {
            for (var a, b = 0, c = this.frameCollectionTypes; b < c.length; )
              (a = c[b]),
                ++b,
                (a = this.frameCollections.get(a)),
                Z.destroyArray(a);
            this.frameCollectionTypes = this.frameCollections = null;
          }
        },
        addFrameCollection: function (a) {
          if (null != a.type) {
            var b = a.type,
              c = this.frameCollections.get(b);
            null == c && ((c = []), this.frameCollections.set(b, c));
            c.push(a);
          }
        },
        getBitmapFromSystem: function () {
          var a = null;
          null != this.assetsClass
            ? (a = Ya.createInstance(this.assetsClass, [0, 0]))
            : null != this.assetsKey &&
              ((a = this.assetsKey),
              (a = la.exists(a) ? la.getBitmapData(a, !1) : null));
          if (null != a) {
            var b = this.unique;
            null == b && (b = !1);
            return b ? a.clone() : a;
          }
          return null;
        },
        get_useCount: function () {
          return this._useCount;
        },
        set_useCount: function (a) {
          0 >= a &&
            this._destroyOnNoUse &&
            !this.persist &&
            p.bitmap.remove(this);
          return (this._useCount = a);
        },
        set_destroyOnNoUse: function (a) {
          a &&
            0 >= this._useCount &&
            null != this.key &&
            !this.persist &&
            p.bitmap.remove(this);
          return (this._destroyOnNoUse = a);
        },
        get_imageFrame: function () {
          if (null == this._imageFrame) {
            var a = 0,
              b = 0,
              c = this.bitmap.width,
              d = this.bitmap.height;
            null == d && (d = 0);
            null == c && (c = 0);
            null == b && (b = 0);
            null == a && (a = 0);
            var e = ya._pool.get();
            null == d && (d = 0);
            null == c && (c = 0);
            null == b && (b = 0);
            null == a && (a = 0);
            e.x = a;
            e.y = b;
            e.width = c;
            e.height = d;
            e._inPool = !1;
            this._imageFrame = ff.fromRectangle(this, e);
          }
          return this._imageFrame;
        },
        set_bitmap: function (a) {
          null != a &&
            ((this.bitmap = a),
            (this.width = this.bitmap.width),
            (this.height = this.bitmap.height));
          return a;
        },
        __class__: Eb,
        __properties__: {
          set_destroyOnNoUse: "set_destroyOnNoUse",
          get_imageFrame: "get_imageFrame",
          set_useCount: "set_useCount",
          get_useCount: "get_useCount",
          set_bitmap: "set_bitmap",
        },
      };
      var zd = function (a, b, c) {
        this.parent = a;
        this.type = b;
        null == c ? ((b = U._pool.get().set(0, 0)), (b._inPool = !1)) : (b = c);
        this.border = b;
        this.frames = [];
        this.framesHash = new ea();
        null != a && a.addFrameCollection(this);
      };
      g["flixel.graphics.frames.FlxFramesCollection"] = zd;
      zd.__name__ = "flixel.graphics.frames.FlxFramesCollection";
      zd.__interfaces__ = [T];
      zd.prototype = {
        destroy: function () {
          this.frames = Z.destroyArray(this.frames);
          this.border = Z.put(this.border);
          this.type = this.parent = this.framesHash = null;
        },
        addSpriteSheetFrame: function (a) {
          var b = new Fe(this.parent);
          b.set_frame(this.checkFrame(a));
          b.sourceSize.set(a.width, a.height);
          b.offset.set(0, 0);
          return this.pushFrame(b);
        },
        addAtlasFrame: function (a, b, c, d, e, f, h) {
          null == h && (h = !1);
          null == f && (f = !1);
          null == e && (e = 0);
          if (
            null != d &&
            Object.prototype.hasOwnProperty.call(this.framesHash.h, d)
          )
            return this.framesHash.h[d];
          e = new Fe(this.parent, e, f, h);
          e.name = d;
          e.sourceSize.set(b.x, b.y);
          e.offset.set(c.x, c.y);
          e.set_frame(this.checkFrame(a, d));
          Z.put(b);
          Z.put(c);
          return this.pushFrame(e);
        },
        checkFrame: function (a, b) {
          var c = a.x;
          b = this.parent.width;
          var d = 0 > c ? 0 : c,
            e = null != b && d > b ? b : d;
          c = a.y;
          b = this.parent.height;
          d = 0 > c ? 0 : c;
          var f = null != b && d > b ? b : d;
          c = a.x + a.width;
          b = this.parent.width;
          d = 0 > c ? 0 : c;
          var h = null != b && d > b ? b : d;
          c = a.y + a.height;
          b = this.parent.height;
          d = 0 > c ? 0 : c;
          c = e;
          var m = f;
          e = h - e;
          b = (null != b && d > b ? b : d) - f;
          null == b && (b = 0);
          null == e && (e = 0);
          null == m && (m = 0);
          null == c && (c = 0);
          a.x = c;
          a.y = m;
          a.width = e;
          a.height = b;
          return a;
        },
        pushFrame: function (a) {
          var b = a.name;
          if (
            null != b &&
            Object.prototype.hasOwnProperty.call(this.framesHash.h, b)
          )
            return this.framesHash.h[b];
          this.frames.push(a);
          a.cacheFrameMatrix();
          null != b && (this.framesHash.h[b] = a);
          return a;
        },
        __class__: zd,
      };
      var Sa = function (a, b) {
        zd.call(this, a, jj.ATLAS, b);
      };
      g["flixel.graphics.frames.FlxAtlasFrames"] = Sa;
      Sa.__name__ = "flixel.graphics.frames.FlxAtlasFrames";
      Sa.fromSparrow = function (a, b) {
        var c = p.bitmap.add(a);
        if (null == c) return null;
        a = Sa.findFrame(c);
        if (null != a) return a;
        if (null == c || null == b) return null;
        a = new Sa(c);
        la.exists(b) && (b = la.getText(b));
        c = D.parse(b).firstElement();
        if (c.nodeType != D.Document && c.nodeType != D.Element)
          throw C.thrown(
            "Invalid nodeType " +
              (null == c.nodeType ? "null" : ha.toString(c.nodeType))
          );
        b = 0;
        for (c = Ab.resolve(c, "SubTexture"); b < c.length; ) {
          var d = c[b];
          ++b;
          var e = Pb.resolve(d, "name"),
            f = Ib.resolve(d, "frameX"),
            h = Ib.resolve(d, "rotated") && "true" == Pb.resolve(d, "rotated"),
            m = Ib.resolve(d, "flipX") && "true" == Pb.resolve(d, "flipX"),
            n = Ib.resolve(d, "flipY") && "true" == Pb.resolve(d, "flipY"),
            g = parseFloat(Pb.resolve(d, "x")),
            l = parseFloat(Pb.resolve(d, "y")),
            k = parseFloat(Pb.resolve(d, "width")),
            u = parseFloat(Pb.resolve(d, "height"));
          null == u && (u = 0);
          null == k && (k = 0);
          null == l && (l = 0);
          null == g && (g = 0);
          var q = ya._pool.get();
          null == u && (u = 0);
          null == k && (k = 0);
          null == l && (l = 0);
          null == g && (g = 0);
          q.x = g;
          q.y = l;
          q.width = k;
          q.height = u;
          q._inPool = !1;
          d = f
            ? new ma(
                I.parseInt(Pb.resolve(d, "frameX")),
                I.parseInt(Pb.resolve(d, "frameY")),
                I.parseInt(Pb.resolve(d, "frameWidth")),
                I.parseInt(Pb.resolve(d, "frameHeight"))
              )
            : new ma(0, 0, q.width, q.height);
          u = h ? -90 : 0;
          g = -d.get_left();
          k = -d.get_top();
          null == k && (k = 0);
          null == g && (g = 0);
          g = U._pool.get().set(g, k);
          g._inPool = !1;
          k = d.width;
          l = d.height;
          null == l && (l = 0);
          null == k && (k = 0);
          k = U._pool.get().set(k, l);
          k._inPool = !1;
          h && !f && k.set(d.height, d.width);
          a.addAtlasFrame(q, k, g, e, u, m, n);
        }
        return a;
      };
      Sa.fromSpriteSheetPacker = function (a, b) {
        var c = p.bitmap.add(a);
        if (null == c) return null;
        a = Sa.findFrame(c);
        if (null != a) return a;
        if (null == c || null == b) return null;
        a = new Sa(c);
        la.exists(b) && (b = la.getText(b));
        b = K.trim(b).split("\n");
        c = 0;
        for (var d = b.length; c < d; ) {
          var e = c++,
            f = b[e].split("=");
          e = K.trim(f[0]);
          f = K.trim(f[1]).split(" ");
          var h = I.parseInt(f[0]),
            m = I.parseInt(f[1]),
            n = I.parseInt(f[2]),
            g = I.parseInt(f[3]);
          null == g && (g = 0);
          null == n && (n = 0);
          null == m && (m = 0);
          null == h && (h = 0);
          f = ya._pool.get();
          null == g && (g = 0);
          null == n && (n = 0);
          null == m && (m = 0);
          null == h && (h = 0);
          f.x = h;
          f.y = m;
          f.width = n;
          f.height = g;
          f._inPool = !1;
          n = f.width;
          g = f.height;
          null == g && (g = 0);
          null == n && (n = 0);
          n = U._pool.get().set(n, g);
          n._inPool = !1;
          g = U._pool.get().set(0, 0);
          g._inPool = !1;
          a.addAtlasFrame(f, n, g, e, 0);
        }
        return a;
      };
      Sa.findFrame = function (a, b) {
        if (null == b) {
          var c = (b = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          b = U._pool.get().set(b, c);
          b._inPool = !1;
          b._weak = !0;
        }
        c = jj.ATLAS;
        var d = a.frameCollections.get(c);
        null == d && ((d = []), a.frameCollections.set(c, d));
        a = d;
        for (c = 0; c < a.length; ) {
          d = a[c];
          ++c;
          var e = d.border;
          e = 1e-7 >= Math.abs(e.x - b.x) && 1e-7 >= Math.abs(e.y - b.y);
          b._weak && b.put();
          if (e) return d;
        }
        return null;
      };
      Sa.__super__ = zd;
      Sa.prototype = r(zd.prototype, { __class__: Sa });
      var Fe = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = 0);
        this.matrix = new $f();
        this.rect = new ma();
        this.point2 = new Ra();
        this.point1 = new Ra();
        this.parent = a;
        this.angle = b;
        this.flipX = c;
        this.flipY = d;
        this.type = 0;
        a = U._pool.get().set(0, 0);
        a._inPool = !1;
        this.sourceSize = a;
        a = U._pool.get().set(0, 0);
        a._inPool = !1;
        this.offset = a;
        this.blitMatrix = a = Array(6);
        p.renderTile && (this.tileMatrix = a = Array(6));
      };
      g["flixel.graphics.frames.FlxFrame"] = Fe;
      Fe.__name__ = "flixel.graphics.frames.FlxFrame";
      Fe.__interfaces__ = [T];
      Fe.sort = function (a, b, c) {
        jc.sort(a, function (a, e) {
          return Fe.sortByName(a, e, b, c);
        });
      };
      Fe.sortByName = function (a, b, c, d) {
        a = a.name;
        b = b.name;
        a = I.parseInt(a.substring(c, a.length - d));
        c = I.parseInt(b.substring(c, b.length - d));
        null == a && (a = 0);
        null == c && (c = 0);
        return a - c;
      };
      Fe.prototype = {
        cacheFrameMatrix: function () {
          var a = this.matrix,
            b = !0;
          null == b && (b = !0);
          a.identity();
          b && a.translate(-this.frame.x, -this.frame.y);
          90 == this.angle
            ? (a.setTo(-a.b, a.a, -a.d, a.c, -a.ty, a.tx),
              a.translate(this.frame.height, 0))
            : -90 == this.angle &&
              (a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx),
              a.translate(0, this.frame.width));
          a.translate(this.offset.x, this.offset.y);
          this.blitMatrix[0] = this.matrix.a;
          this.blitMatrix[1] = this.matrix.b;
          this.blitMatrix[2] = this.matrix.c;
          this.blitMatrix[3] = this.matrix.d;
          this.blitMatrix[4] = this.matrix.tx;
          this.blitMatrix[5] = this.matrix.ty;
          p.renderTile &&
            ((a = this.matrix),
            (b = !1),
            null == b && (b = !0),
            a.identity(),
            b && a.translate(-this.frame.x, -this.frame.y),
            90 == this.angle
              ? (a.setTo(-a.b, a.a, -a.d, a.c, -a.ty, a.tx),
                a.translate(this.frame.height, 0))
              : -90 == this.angle &&
                (a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx),
                a.translate(0, this.frame.width)),
            a.translate(this.offset.x, this.offset.y),
            (this.tileMatrix[0] = this.matrix.a),
            (this.tileMatrix[1] = this.matrix.b),
            (this.tileMatrix[2] = this.matrix.c),
            (this.tileMatrix[3] = this.matrix.d),
            (this.tileMatrix[4] = this.matrix.tx),
            (this.tileMatrix[5] = this.matrix.ty));
        },
        prepareTransformedBlitMatrix: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !1);
          null == b && (b = 0);
          a.a = this.blitMatrix[0];
          a.b = this.blitMatrix[1];
          a.c = this.blitMatrix[2];
          a.d = this.blitMatrix[3];
          a.tx = this.blitMatrix[4];
          a.ty = this.blitMatrix[5];
          null == d && (d = !1);
          null == c && (c = !1);
          null == b && (b = 0);
          var e = this.sourceSize.x | 0,
            f = this.sourceSize.y | 0;
          if (0 != b) {
            var h = e;
            e = f;
            f = h;
            if (90 == b)
              a.setTo(-a.b, a.a, -a.d, a.c, -a.ty, a.tx),
                a.translate(this.sourceSize.y, 0);
            else if (-90 == b || -90 == b)
              a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx),
                a.translate(0, this.sourceSize.x);
          }
          c && (a.scale(-1, 1), a.translate(e, 0));
          d && (a.scale(1, -1), a.translate(0, f));
          return a;
        },
        prepareMatrix: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !1);
          null == b && (b = 0);
          if (p.renderBlit) return a.identity(), a;
          a.a = this.tileMatrix[0];
          a.b = this.tileMatrix[1];
          a.c = this.tileMatrix[2];
          a.d = this.tileMatrix[3];
          a.tx = this.tileMatrix[4];
          a.ty = this.tileMatrix[5];
          c = c != this.flipX;
          d = d != this.flipY;
          if (0 == b && !c && !d) return a;
          null == d && (d = !1);
          null == c && (c = !1);
          null == b && (b = 0);
          var e = this.sourceSize.x | 0,
            f = this.sourceSize.y | 0;
          if (0 != b) {
            var h = e;
            e = f;
            f = h;
            if (90 == b)
              a.setTo(-a.b, a.a, -a.d, a.c, -a.ty, a.tx),
                a.translate(this.sourceSize.y, 0);
            else if (-90 == b || -90 == b)
              a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx),
                a.translate(0, this.sourceSize.x);
          }
          c && (a.scale(-1, 1), a.translate(e, 0));
          d && (a.scale(1, -1), a.translate(0, f));
          return a;
        },
        paint: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !1);
          null == b && ((b = this.point1), b.setTo(0, 0));
          var e = 0,
            f = c;
          null == d && (d = !1);
          null == f && (f = !1);
          null == e && (e = 0);
          var h = this.sourceSize.x | 0,
            m = this.sourceSize.y | 0;
          0 != e && ((e = h), (h = m), (m = e));
          null != a && d && (a = Z.disposeIfNotEqual(a, h, m));
          null == a || f
            ? null == a && (a = new J(h, m, !0, 0))
            : (this.rect.setTo(b.x, b.y, h, m), a.fillRect(this.rect, 0));
          if (2 == this.type) return a;
          if (0 == this.angle)
            (f = this.offset),
              (e = this.point2),
              null == e && (e = new Ra()),
              (e.x = f.x),
              (e.y = f.y),
              (this.point2.x += b.x),
              (this.point2.y += b.y),
              (e = this.parent.bitmap),
              (f = this.frame),
              (b = this.rect),
              null == b && (b = new ma()),
              (b.x = f.x),
              (b.y = f.y),
              (b.width = f.width),
              (b.height = f.height),
              a.copyPixels(e, b, this.point2, null, null, c);
          else {
            d = this.matrix;
            d.a = this.blitMatrix[0];
            d.b = this.blitMatrix[1];
            d.c = this.blitMatrix[2];
            d.d = this.blitMatrix[3];
            d.tx = this.blitMatrix[4];
            d.ty = this.blitMatrix[5];
            this.matrix.translate(b.x, b.y);
            d = this.matrix;
            h = this.frame.x;
            e = this.frame.y;
            null == e && (e = 0);
            null == h && (h = 0);
            f = h;
            b = e;
            null == b && (b = 0);
            null == f && (f = 0);
            b = U._pool.get().set(f, b);
            b._inPool = !1;
            f = b;
            f._weak = !0;
            c = f;
            f = this.frame;
            h = f.x + f.width;
            f = this.frame;
            e = f.y + f.height;
            null == e && (e = 0);
            null == h && (h = 0);
            f = h;
            b = e;
            null == b && (b = 0);
            null == f && (f = 0);
            b = U._pool.get().set(f, b);
            b._inPool = !1;
            f = b;
            f._weak = !0;
            b = f;
            f = c.x * d.a + c.y * d.c + d.tx;
            e = c.x * d.b + c.y * d.d + d.ty;
            c.set(f, e);
            f = b.x * d.a + b.y * d.c + d.tx;
            e = b.x * d.b + b.y * d.d + d.ty;
            b.set(f, e);
            f = ya._pool.get();
            var n = (e = h = 0);
            d = 0;
            null == d && (d = 0);
            null == n && (n = 0);
            null == e && (e = 0);
            null == h && (h = 0);
            f.x = h;
            f.y = e;
            f.width = n;
            f.height = d;
            f._inPool = !1;
            n = Math.min(c.x, b.x);
            d = Math.min(c.y, b.y);
            var p = Math.max(c.x, b.x);
            m = Math.max(c.y, b.y);
            c._weak && c.put();
            b._weak && b.put();
            h = n;
            e = d;
            n = p - n;
            d = m - d;
            null == d && (d = 0);
            null == n && (n = 0);
            null == e && (e = 0);
            null == h && (h = 0);
            f.x = h;
            f.y = e;
            f.width = n;
            f.height = d;
            c = f;
            b = this.rect;
            null == b && (b = new ma());
            b.x = c.x;
            b.y = c.y;
            b.width = c.width;
            b.height = c.height;
            c._inPool ||
              ((c._inPool = !0), (c._weak = !1), ya._pool.putUnsafe(c));
            f = this.rect;
            a.draw(this.parent.bitmap, this.matrix, null, null, f);
          }
          return a;
        },
        paintRotatedAndFlipped: function (a, b, c, d, e, f, h) {
          null == h && (h = !1);
          null == f && (f = !1);
          null == e && (e = !1);
          null == d && (d = !1);
          null == c && (c = 0);
          if (2 == this.type && 0 == c) return this.paint(a, b, f, h);
          null == b && ((b = this.point2), b.setTo(0, 0));
          var m = c;
          null == h && (h = !1);
          null == f && (f = !1);
          null == m && (m = 0);
          var n = this.sourceSize.x | 0,
            p = this.sourceSize.y | 0;
          0 != m && ((m = n), (n = p), (p = m));
          null != a && h && (a = Z.disposeIfNotEqual(a, n, p));
          null == a || f
            ? null == a && (a = new J(n, p, !0, 0))
            : (this.rect.setTo(b.x, b.y, n, p), a.fillRect(this.rect, 0));
          if (2 == this.type) return a;
          this.prepareTransformedBlitMatrix(
            this.matrix,
            c,
            d != this.flipX,
            e != this.flipY
          );
          this.matrix.translate(b.x, b.y);
          e = this.matrix;
          m = this.frame.x;
          d = this.frame.y;
          null == d && (d = 0);
          null == m && (m = 0);
          b = m;
          null == d && (d = 0);
          null == b && (b = 0);
          b = U._pool.get().set(b, d);
          b._inPool = !1;
          b._weak = !0;
          c = b;
          f = this.frame;
          m = f.x + f.width;
          f = this.frame;
          d = f.y + f.height;
          null == d && (d = 0);
          null == m && (m = 0);
          b = m;
          null == d && (d = 0);
          null == b && (b = 0);
          b = U._pool.get().set(b, d);
          b._inPool = !1;
          b._weak = !0;
          d = c.x * e.a + c.y * e.c + e.tx;
          m = c.x * e.b + c.y * e.d + e.ty;
          c.set(d, m);
          d = b.x * e.a + b.y * e.c + e.tx;
          m = b.x * e.b + b.y * e.d + e.ty;
          b.set(d, m);
          f = ya._pool.get();
          e = n = d = m = 0;
          null == e && (e = 0);
          null == n && (n = 0);
          null == d && (d = 0);
          null == m && (m = 0);
          f.x = m;
          f.y = d;
          f.width = n;
          f.height = e;
          d = f;
          d._inPool = !1;
          f = d;
          n = Math.min(c.x, b.x);
          e = Math.min(c.y, b.y);
          p = Math.max(c.x, b.x);
          h = Math.max(c.y, b.y);
          c._weak && c.put();
          b._weak && b.put();
          m = n;
          d = e;
          n = p - n;
          e = h - e;
          null == e && (e = 0);
          null == n && (n = 0);
          null == d && (d = 0);
          null == m && (m = 0);
          f.x = m;
          f.y = d;
          f.width = n;
          f.height = e;
          c = f;
          b = this.rect;
          null == b && (b = new ma());
          b.x = c.x;
          b.y = c.y;
          b.width = c.width;
          b.height = c.height;
          c._inPool ||
            ((c._inPool = !0), (c._weak = !1), ya._pool.putUnsafe(c));
          d = this.rect;
          a.draw(this.parent.bitmap, this.matrix, null, null, d);
          return a;
        },
        clipTo: function (a, b) {
          null == b
            ? (b = new Fe(this.parent, this.angle))
            : ((b.parent = this.parent),
              (b.angle = this.angle),
              b.set_frame(Z.put(b.frame)));
          var c = b.sourceSize,
            d = this.sourceSize;
          c.set_x(d.x);
          c.set_y(d.y);
          d._weak && d.put();
          b.name = this.name;
          if (2 == this.type) return (b.type = 2), b.offset.set(0, 0), b;
          var e = 0;
          d = 0;
          null == d && (d = 0);
          null == e && (e = 0);
          c = ya._pool.get();
          var f = 0,
            h = 0;
          null == h && (h = 0);
          null == f && (f = 0);
          null == d && (d = 0);
          null == e && (e = 0);
          c.x = e;
          c.y = d;
          c.width = f;
          c.height = h;
          var m = c;
          m._inPool = !1;
          c = m;
          c.width = this.frame.width;
          c.height = this.frame.height;
          f = c;
          0 != this.angle &&
            ((f.width = this.frame.height), (f.height = this.frame.width));
          a.x += -this.offset.x;
          a.y += -this.offset.y;
          m = f.intersection(a);
          Z.put(f);
          if (0 == m.width || 0 == m.height)
            (b.type = 2),
              (h = f = d = e = 0),
              null == h && (h = 0),
              null == f && (f = 0),
              null == d && (d = 0),
              null == e && (e = 0),
              (m.x = e),
              (m.y = d),
              (m.width = f),
              (m.height = h),
              b.set_frame(m),
              b.offset.set(0, 0);
          else {
            b.type = 0;
            b.offset.set(m.x, m.y).addPoint(this.offset);
            e = m.x;
            d = m.y;
            null == d && (d = 0);
            null == e && (e = 0);
            null == d && (d = 0);
            null == e && (e = 0);
            d = U._pool.get().set(e, d);
            d._inPool = !1;
            d._weak = !0;
            f = d;
            e = m.x + m.width;
            d = m.y + m.height;
            null == d && (d = 0);
            null == e && (e = 0);
            null == d && (d = 0);
            null == e && (e = 0);
            d = U._pool.get().set(e, d);
            d._inPool = !1;
            d._weak = !0;
            this.matrix.identity();
            -90 == this.angle
              ? ((c = this.matrix),
                c.setTo(-c.b, c.a, -c.d, c.c, -c.ty, c.tx),
                this.matrix.translate(this.frame.width, 0))
              : 90 == this.angle &&
                ((c = this.matrix),
                c.setTo(c.b, -c.a, c.d, -c.c, c.ty, -c.tx),
                this.matrix.translate(0, this.frame.height));
            0 != this.angle &&
              ((e = this.matrix),
              (c = f.x * e.a + f.y * e.c + e.tx),
              (e = f.x * e.b + f.y * e.d + e.ty),
              f.set(c, e),
              (e = this.matrix),
              (c = d.x * e.a + d.y * e.c + e.tx),
              (e = d.x * e.b + d.y * e.d + e.ty),
              d.set(c, e));
            var n = Math.min(f.x, d.x);
            c = Math.min(f.y, d.y);
            var p = Math.max(f.x, d.x);
            h = Math.max(f.y, d.y);
            f._weak && f.put();
            d._weak && d.put();
            e = n;
            d = c;
            f = p - n;
            h -= c;
            null == h && (h = 0);
            null == f && (f = 0);
            null == d && (d = 0);
            null == e && (e = 0);
            m.x = e;
            m.y = d;
            m.width = f;
            m.height = h;
            m.x += this.frame.x;
            m.y += this.frame.y;
            b.set_frame(m);
            b.cacheFrameMatrix();
          }
          a.x += this.offset.x;
          a.y += this.offset.y;
          return b;
        },
        copyTo: function (a) {
          null == a
            ? (a = new Fe(this.parent, this.angle))
            : ((a.parent = this.parent),
              (a.angle = this.angle),
              a.set_frame(Z.put(a.frame)));
          var b = a.offset,
            c = this.offset;
          b.set_x(c.x);
          b.set_y(c.y);
          c._weak && c.put();
          a.flipX = this.flipX;
          a.flipY = this.flipY;
          b = a.sourceSize;
          c = this.sourceSize;
          b.set_x(c.x);
          b.set_y(c.y);
          c._weak && c.put();
          b = ya._pool.get();
          var d = (c = 0),
            e = 0,
            f = 0;
          null == f && (f = 0);
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          b.x = c;
          b.y = d;
          b.width = e;
          b.height = f;
          b._inPool = !1;
          c = this.frame;
          b.x = c.x;
          b.y = c.y;
          b.width = c.width;
          b.height = c.height;
          c._weak &&
            !c._inPool &&
            ((c._inPool = !0), (c._weak = !1), ya._pool.putUnsafe(c));
          a.set_frame(b);
          a.type = this.type;
          a.name = this.name;
          a.cacheFrameMatrix();
          return a;
        },
        destroy: function () {
          this.parent = this.name = null;
          this.sourceSize = Z.put(this.sourceSize);
          this.offset = Z.put(this.offset);
          this.set_frame(Z.put(this.frame));
          this.uv = Z.put(this.uv);
          this.tileMatrix = this.blitMatrix = null;
        },
        set_frame: function (a) {
          if (null != a) {
            if (null == this.uv) {
              var b = ya._pool.get(),
                c = 0,
                d = 0,
                e = 0,
                f = 0;
              null == f && (f = 0);
              null == e && (e = 0);
              null == d && (d = 0);
              null == c && (c = 0);
              b.x = c;
              b.y = d;
              b.width = e;
              b.height = f;
              b._inPool = !1;
              this.uv = b;
            }
            b = this.uv;
            c = a.x / this.parent.width;
            d = a.y / this.parent.height;
            e = (a.x + a.width) / this.parent.width;
            f = (a.y + a.height) / this.parent.height;
            null == f && (f = 0);
            null == e && (e = 0);
            null == d && (d = 0);
            null == c && (c = 0);
            b.x = c;
            b.y = d;
            b.width = e;
            b.height = f;
          }
          return (this.frame = a);
        },
        __class__: Fe,
        __properties__: { set_frame: "set_frame" },
      };
      var jj = (z["flixel.graphics.frames.FlxFrameCollectionType"] = {
          __ename__: "flixel.graphics.frames.FlxFrameCollectionType",
          __constructs__: "IMAGE TILES ATLAS FONT USER FILTER".split(" "),
          IMAGE: {
            _hx_index: 0,
            __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
            toString: l,
          },
          TILES: {
            _hx_index: 1,
            __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
            toString: l,
          },
          ATLAS: {
            _hx_index: 2,
            __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
            toString: l,
          },
          FONT: {
            _hx_index: 3,
            __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
            toString: l,
          },
          USER:
            ((y = function (a) {
              return {
                _hx_index: 4,
                type: a,
                __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
                toString: l,
              };
            }),
            (y.__params__ = ["type"]),
            y),
          FILTER: {
            _hx_index: 5,
            __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
            toString: l,
          },
        }),
        ff = function (a, b) {
          zd.call(this, a, jj.IMAGE, b);
        };
      g["flixel.graphics.frames.FlxImageFrame"] = ff;
      ff.__name__ = "flixel.graphics.frames.FlxImageFrame";
      ff.fromGraphic = function (a, b) {
        if (null == a) return null;
        var c = b;
        if (null == c) {
          var d = 0,
            e = 0,
            f = a.width,
            h = a.height;
          null == h && (h = 0);
          null == f && (f = 0);
          null == e && (e = 0);
          null == d && (d = 0);
          null == h && (h = 0);
          null == f && (f = 0);
          null == e && (e = 0);
          null == d && (d = 0);
          var m = ya._pool.get();
          null == h && (h = 0);
          null == f && (f = 0);
          null == e && (e = 0);
          null == d && (d = 0);
          m.x = d;
          m.y = e;
          m.width = f;
          m.height = h;
          m._inPool = !1;
          c = m;
          c._weak = !0;
        }
        c = ff.findFrame(a, c);
        if (null != c) return c;
        c = new ff(a);
        null == b
          ? ((e = d = 0),
            (f = a.width),
            (h = a.height),
            null == h && (h = 0),
            null == f && (f = 0),
            null == e && (e = 0),
            null == d && (d = 0),
            (m = ya._pool.get()),
            null == h && (h = 0),
            null == f && (f = 0),
            null == e && (e = 0),
            null == d && (d = 0),
            (m.x = d),
            (m.y = e),
            (m.width = f),
            (m.height = h),
            (m._inPool = !1),
            (b = m))
          : (0 == b.width && (b.width = a.width - b.x),
            0 == b.height && (b.height = a.height - b.y));
        c.addSpriteSheetFrame(b);
        return c;
      };
      ff.fromRectangle = function (a, b) {
        a = p.bitmap.add(a, !1);
        return ff.fromGraphic(a, b);
      };
      ff.findFrame = function (a, b, c) {
        if (null == c) {
          var d = (c = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          var e = U._pool.get().set(c, d);
          e._inPool = !1;
          c = e;
          c._weak = !0;
        }
        d = jj.IMAGE;
        var f = a.frameCollections.get(d);
        null == f && ((f = []), a.frameCollections.set(d, f));
        a = f;
        for (d = 0; d < a.length; ) {
          f = a[d];
          ++d;
          e = f.get_frame().frame;
          var h =
            1e-7 >= Math.abs(b.x - e.x) &&
            1e-7 >= Math.abs(b.y - e.y) &&
            1e-7 >= Math.abs(b.width - e.width) &&
            1e-7 >= Math.abs(b.height - e.height);
          e._weak &&
            !e._inPool &&
            ((e._inPool = !0), (e._weak = !1), ya._pool.putUnsafe(e));
          h
            ? ((e = f.border),
              (h = 1e-7 >= Math.abs(c.x - e.x) && 1e-7 >= Math.abs(c.y - e.y)),
              e._weak && e.put(),
              (e = h))
            : (e = !1);
          if (e && 2 != f.get_frame().type) return f;
        }
        return null;
      };
      ff.__super__ = zd;
      ff.prototype = r(zd.prototype, {
        destroy: function () {
          zd.prototype.destroy.call(this);
          Z.destroy(this.get_frame());
        },
        get_frame: function () {
          return this.frames[0];
        },
        __class__: ff,
        __properties__: { get_frame: "get_frame" },
      });
      var Bf = function (a, b) {
        this.numRows = this.numCols = 0;
        zd.call(this, a, jj.TILES, b);
      };
      g["flixel.graphics.frames.FlxTileFrames"] = Bf;
      Bf.__name__ = "flixel.graphics.frames.FlxTileFrames";
      Bf.fromGraphic = function (a, b, c, d) {
        var e = Bf.findFrame(a, b, c, null, d);
        if (null != e) return e;
        if (null == c) {
          var f = 0,
            h = 0,
            m = a.width,
            n = a.height;
          null == n && (n = 0);
          null == m && (m = 0);
          null == h && (h = 0);
          null == f && (f = 0);
          var p = ya._pool.get();
          null == n && (n = 0);
          null == m && (m = 0);
          null == h && (h = 0);
          null == f && (f = 0);
          p.x = f;
          p.y = h;
          p.width = m;
          p.height = n;
          p._inPool = !1;
          c = p;
        } else
          0 == c.width && (c.width = a.width - c.x),
            0 == c.height && (c.height = a.height - c.y);
        null == d &&
          ((h = f = 0),
          null == h && (h = 0),
          null == f && (f = 0),
          (e = U._pool.get().set(f, h)),
          (e._inPool = !1),
          (d = e));
        e = new Bf(a);
        e.region = c;
        e.atlasFrame = null;
        e.tileSize = b;
        e.tileSpacing = d;
        c.x = Math.floor(c.x);
        c.y = Math.floor(c.y);
        c.width = Math.floor(c.width);
        c.height = Math.floor(c.height);
        d.set_x(Math.floor(d.x));
        d.set_y(Math.floor(d.y));
        b.set_x(Math.floor(b.x));
        b.set_y(Math.floor(b.y));
        a = b.x + d.x;
        var g = b.y + d.y,
          k = 0 == b.y ? 1 : ((c.height + d.y) / g) | 0;
        d = 0 == b.x ? 1 : ((c.width + d.x) / a) | 0;
        for (var l = 0; l < k; )
          for (var u = l++, q = 0, r = d; q < r; )
            (p = q++),
              (f = c.x + p * a),
              (h = c.y + u * g),
              (m = b.x),
              (n = b.y),
              null == n && (n = 0),
              null == m && (m = 0),
              null == h && (h = 0),
              null == f && (f = 0),
              (p = ya._pool.get()),
              null == n && (n = 0),
              null == m && (m = 0),
              null == h && (h = 0),
              null == f && (f = 0),
              (p.x = f),
              (p.y = h),
              (p.width = m),
              (p.height = n),
              (p._inPool = !1),
              e.addSpriteSheetFrame(p);
        e.numCols = d;
        e.numRows = k;
        return e;
      };
      Bf.findFrame = function (a, b, c, d, e, f) {
        d = jj.TILES;
        var h = a.frameCollections.get(d);
        null == h && ((h = []), a.frameCollections.set(d, h));
        a = h;
        for (d = 0; d < a.length; )
          if (((h = a[d]), ++d, h.equals(b, c, null, e, f))) return h;
        return null;
      };
      Bf.__super__ = zd;
      Bf.prototype = r(zd.prototype, {
        equals: function (a, b, c, d, e) {
          if (null == this.region && null == this.atlasFrame) return !1;
          null != c && (b = c.frame);
          if (null == b) {
            var f = 0,
              h = 0;
            b = this.parent.width;
            var m = this.parent.height;
            null == m && (m = 0);
            null == b && (b = 0);
            null == h && (h = 0);
            null == f && (f = 0);
            null == m && (m = 0);
            null == b && (b = 0);
            null == h && (h = 0);
            null == f && (f = 0);
            var n = ya._pool.get();
            null == m && (m = 0);
            null == b && (b = 0);
            null == h && (h = 0);
            null == f && (f = 0);
            n.x = f;
            n.y = h;
            n.width = b;
            n.height = m;
            n._inPool = !1;
            n._weak = !0;
            b = n;
          }
          null == d &&
            ((h = f = 0),
            null == h && (h = 0),
            null == f && (f = 0),
            (n = U._pool.get().set(f, h)),
            (n._inPool = !1),
            (n._weak = !0),
            (d = n));
          null == e &&
            ((h = f = 0),
            null == h && (h = 0),
            null == f && (f = 0),
            (n = U._pool.get().set(f, h)),
            (n._inPool = !1),
            (n._weak = !0),
            (e = n));
          this.atlasFrame == c
            ? ((n = this.region),
              (c =
                1e-7 >= Math.abs(n.x - b.x) &&
                1e-7 >= Math.abs(n.y - b.y) &&
                1e-7 >= Math.abs(n.width - b.width) &&
                1e-7 >= Math.abs(n.height - b.height)),
              b._weak &&
                !b._inPool &&
                ((b._inPool = !0), (b._weak = !1), ya._pool.putUnsafe(b)))
            : (c = !1);
          c
            ? ((n = this.tileSize),
              (c = 1e-7 >= Math.abs(n.x - a.x) && 1e-7 >= Math.abs(n.y - a.y)),
              a._weak && a.put(),
              (a = c))
            : (a = !1);
          a
            ? ((n = this.tileSpacing),
              (c = 1e-7 >= Math.abs(n.x - d.x) && 1e-7 >= Math.abs(n.y - d.y)),
              d._weak && d.put(),
              (d = c))
            : (d = !1);
          return d
            ? ((n = this.border),
              (c = 1e-7 >= Math.abs(n.x - e.x) && 1e-7 >= Math.abs(n.y - e.y)),
              e._weak && e.put(),
              c)
            : !1;
        },
        destroy: function () {
          zd.prototype.destroy.call(this);
          this.atlasFrame = null;
          this.region = Z.put(this.region);
          this.tileSize = Z.put(this.tileSize);
          this.tileSpacing = Z.put(this.tileSpacing);
        },
        __class__: Bf,
      });
      var Xc = function () {
        this.blending = 0;
        this.antialiasing = this.colored = this.hasColorOffsets = !1;
      };
      g["flixel.graphics.tile.FlxDrawBaseItem"] = Xc;
      Xc.__name__ = "flixel.graphics.tile.FlxDrawBaseItem";
      Xc.blendToInt = function (a) {
        return 0;
      };
      Xc.prototype = {
        reset: function () {
          this.graphics = null;
          this.antialiasing = !1;
          this.next = this.nextTyped = null;
        },
        render: function (a) {
          Xc.drawCalls++;
        },
        __class__: Xc,
      };
      var bn = (z["flixel.graphics.tile.FlxDrawItemType"] = {
          __ename__: "flixel.graphics.tile.FlxDrawItemType",
          __constructs__: ["TILES", "TRIANGLES"],
          TILES: {
            _hx_index: 0,
            __enum__: "flixel.graphics.tile.FlxDrawItemType",
            toString: l,
          },
          TRIANGLES: {
            _hx_index: 1,
            __enum__: "flixel.graphics.tile.FlxDrawItemType",
            toString: l,
          },
        }),
        Si = function () {
          Xc.call(this);
          this.type = bn.TILES;
          this.rects = rb.toFloatVector(null);
          this.transforms = rb.toFloatVector(null);
          this.alphas = [];
        };
      g["flixel.graphics.tile.FlxDrawQuadsItem"] = Si;
      Si.__name__ = "flixel.graphics.tile.FlxDrawQuadsItem";
      Si.__super__ = Xc;
      Si.prototype = r(Xc.prototype, {
        reset: function () {
          Xc.prototype.reset.call(this);
          this.rects.set_length(0);
          this.transforms.set_length(0);
          this.alphas.splice(0, this.alphas.length);
          null != this.colorMultipliers &&
            this.colorMultipliers.splice(0, this.colorMultipliers.length);
          null != this.colorOffsets &&
            this.colorOffsets.splice(0, this.colorOffsets.length);
        },
        addQuad: function (a, b, c) {
          a = a.frame;
          this.rects.push(a.x);
          this.rects.push(a.y);
          this.rects.push(a.width);
          this.rects.push(a.height);
          this.transforms.push(b.a);
          this.transforms.push(b.b);
          this.transforms.push(b.c);
          this.transforms.push(b.d);
          this.transforms.push(b.tx);
          this.transforms.push(b.ty);
          this.alphas.push(null != c ? c.alphaMultiplier : 1);
          this.alphas.push(null != c ? c.alphaMultiplier : 1);
          this.alphas.push(null != c ? c.alphaMultiplier : 1);
          this.alphas.push(null != c ? c.alphaMultiplier : 1);
          if (this.colored || this.hasColorOffsets)
            for (
              null == this.colorMultipliers && (this.colorMultipliers = []),
                null == this.colorOffsets && (this.colorOffsets = []),
                b = 0;
              4 > b;

            )
              b++,
                null != c
                  ? (this.colorMultipliers.push(c.redMultiplier),
                    this.colorMultipliers.push(c.greenMultiplier),
                    this.colorMultipliers.push(c.blueMultiplier),
                    this.colorOffsets.push(c.redOffset),
                    this.colorOffsets.push(c.greenOffset),
                    this.colorOffsets.push(c.blueOffset),
                    this.colorOffsets.push(c.alphaOffset))
                  : (this.colorMultipliers.push(1),
                    this.colorMultipliers.push(1),
                    this.colorMultipliers.push(1),
                    this.colorOffsets.push(0),
                    this.colorOffsets.push(0),
                    this.colorOffsets.push(0),
                    this.colorOffsets.push(0)),
                this.colorMultipliers.push(1);
        },
        render: function (a) {
          if (0 != this.rects.get_length()) {
            var b = null != this.shader ? this.shader : this.graphics.shader;
            b.bitmap.input = this.graphics.bitmap;
            b.bitmap.filter = a.antialiasing || this.antialiasing ? 4 : 5;
            b.alpha.value = this.alphas;
            if (this.colored || this.hasColorOffsets)
              (b.colorMultiplier.value = this.colorMultipliers),
                (b.colorOffset.value = this.colorOffsets);
            var c = b.hasTransform;
            null == c.value && (c.value = []);
            c.value[0] = !0;
            c = b.hasColorTransform;
            null == c.value && (c.value = []);
            c.value[0] = this.colored || this.hasColorOffsets;
            a.canvas.get_graphics().overrideBlendMode(this.blend);
            a.canvas.get_graphics().beginShaderFill(b);
            a.canvas
              .get_graphics()
              .drawQuads(this.rects, null, this.transforms);
            Xc.prototype.render.call(this, a);
          }
        },
        __class__: Si,
      });
      var xl = function () {
        this.verticesPosition = this.indicesPosition = this.colorsPosition = 0;
        this.colors = rb.toIntVector(null);
        this.uvtData = rb.toFloatVector(null);
        this.indices = rb.toIntVector(null);
        this.vertices = rb.toFloatVector(null);
        Xc.call(this);
        this.type = bn.TRIANGLES;
      };
      g["flixel.graphics.tile.FlxDrawTrianglesItem"] = xl;
      xl.__name__ = "flixel.graphics.tile.FlxDrawTrianglesItem";
      xl.__super__ = Xc;
      xl.prototype = r(Xc.prototype, {
        render: function (a) {
          if (p.renderTile && !(0 >= this.get_numTriangles())) {
            var b = a.antialiasing || this.antialiasing;
            a.canvas
              .get_graphics()
              .beginBitmapFill(this.graphics.bitmap, null, !0, b);
            a.canvas
              .get_graphics()
              .drawTriangles(this.vertices, this.indices, this.uvtData, 1);
            a.canvas.get_graphics().endFill();
            Xc.prototype.render.call(this, a);
          }
        },
        reset: function () {
          Xc.prototype.reset.call(this);
          this.vertices.splice(0, this.vertices.get_length());
          this.indices.splice(0, this.indices.get_length());
          this.uvtData.splice(0, this.uvtData.get_length());
          this.colors.splice(0, this.colors.get_length());
          this.colorsPosition =
            this.indicesPosition =
            this.verticesPosition =
              0;
        },
        get_numTriangles: function () {
          return (this.indices.get_length() / 3) | 0;
        },
        __class__: xl,
      });
      var Ph = function (a, b) {
        this._groupMembers = a;
        this._filter = b;
        this._cursor = 0;
        this._length = this._groupMembers.length;
      };
      g["flixel.group.FlxTypedGroupIterator"] = Ph;
      Ph.__name__ = "flixel.group.FlxTypedGroupIterator";
      Ph.prototype = {
        next: function () {
          return this.hasNext() ? this._groupMembers[this._cursor++] : null;
        },
        hasNext: function () {
          for (
            ;
            this._cursor < this._length &&
            (null == this._groupMembers[this._cursor] ||
              (null != this._filter &&
                !this._filter(this._groupMembers[this._cursor])));

          )
            this._cursor++;
          return this._cursor < this._length;
        },
        __class__: Ph,
      };
      var kl = function () {
        this.x = this.y = this.z = 0;
        Gb.get_isSupported() &&
          ((this._sensor = new Gb()),
          this._sensor.addEventListener("update", q(this, this.update)));
      };
      g["flixel.input.FlxAccelerometer"] = kl;
      kl.__name__ = "flixel.input.FlxAccelerometer";
      kl.prototype = {
        update: function (a) {
          this.x = a.accelerationX;
          this.y = a.accelerationY;
          this.z = a.accelerationZ;
          this.x /= 10;
          this.y /= 10;
          this.z /= 10;
        },
        __class__: kl,
      };
      var Qh = function (a, b) {
        this.status = a;
        this.keyManager = b;
      };
      g["flixel.input.FlxBaseKeyList"] = Qh;
      Qh.__name__ = "flixel.input.FlxBaseKeyList";
      Qh.prototype = {
        get_ANY: function () {
          for (var a = 0, b = this.keyManager._keyListArray; a < b.length; ) {
            var c = b[a];
            ++a;
            if (null != c && this.keyManager.checkStatus(c.ID, this.status))
              return !0;
          }
          return !1;
        },
        get_NONE: function () {
          for (var a = 0, b = this.keyManager._keyListArray; a < b.length; ) {
            var c = b[a];
            ++a;
            if (null != c && this.keyManager.checkStatus(c.ID, this.status))
              return !1;
          }
          return !0;
        },
        __class__: Qh,
        __properties__: { get_NONE: "get_NONE", get_ANY: "get_ANY" },
      };
      var hd = function (a) {
        this.current = this.last = 0;
        this.ID = a;
      };
      g["flixel.input.FlxInput"] = hd;
      hd.__name__ = "flixel.input.FlxInput";
      hd.__interfaces__ = [kg];
      hd.prototype = {
        press: function () {
          this.last = this.current;
          this.current = 1 == this.current || 2 == this.current ? 1 : 2;
        },
        release: function () {
          this.last = this.current;
          this.current = 1 == this.current || 2 == this.current ? -1 : 0;
        },
        update: function () {
          -1 == this.last && -1 == this.current
            ? (this.current = 0)
            : 2 == this.last && 2 == this.current && (this.current = 1);
          this.last = this.current;
        },
        reset: function () {
          this.last = this.current = 0;
        },
        hasState: function (a) {
          switch (a) {
            case -1:
              return -1 == this.current;
            case 0:
              return 0 != this.current ? -1 == this.current : !0;
            case 1:
              return 1 != this.current ? 2 == this.current : !0;
            case 2:
              return 2 == this.current;
          }
        },
        get_justReleased: function () {
          return -1 == this.current;
        },
        get_pressed: function () {
          return 1 != this.current ? 2 == this.current : !0;
        },
        get_justPressed: function () {
          return 2 == this.current;
        },
        __class__: hd,
        __properties__: {
          get_justPressed: "get_justPressed",
          get_pressed: "get_pressed",
          get_justReleased: "get_justReleased",
        },
      };
      var Nf = function (a) {
        this._keyListMap = new lc();
        this._keyListArray = [];
        this.preventDefaultKeys = [];
        this.enabled = !0;
        na.get_current().stage.addEventListener(
          "keyDown",
          q(this, this.onKeyDown)
        );
        na.get_current().stage.addEventListener("keyUp", q(this, this.onKeyUp));
        this.pressed = a(1, this);
        this.released = a(0, this);
        this.justPressed = a(2, this);
        this.justReleased = a(-1, this);
      };
      g["flixel.input.FlxKeyManager"] = Nf;
      Nf.__name__ = "flixel.input.FlxKeyManager";
      Nf.__interfaces__ = [Mf];
      Nf.prototype = {
        checkStatus: function (a, b) {
          switch (a) {
            case -2:
              switch (b) {
                case -1:
                  return this.justReleased.get_ANY();
                case 0:
                  return this.released.get_ANY();
                case 1:
                  return this.pressed.get_ANY();
                case 2:
                  return this.justPressed.get_ANY();
              }
              break;
            case -1:
              switch (b) {
                case -1:
                  return this.justReleased.get_NONE();
                case 0:
                  return this.released.get_NONE();
                case 1:
                  return this.pressed.get_NONE();
                case 2:
                  return this.justPressed.get_NONE();
              }
              break;
            default:
              return (
                (a = this._keyListMap.h[a]), null == a ? !1 : a.hasState(b)
              );
          }
        },
        destroy: function () {
          this._keyListMap = this._keyListArray = null;
        },
        reset: function () {
          for (var a = 0, b = this._keyListArray; a < b.length; ) {
            var c = b[a];
            ++a;
            null != c && c.release();
          }
        },
        update: function () {
          for (var a = 0, b = this._keyListArray; a < b.length; ) {
            var c = b[a];
            ++a;
            null != c && c.update();
          }
        },
        checkKeyArrayState: function (a, b) {
          if (null == a) return !1;
          for (var c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            if (this.checkStatus(d, b)) return !0;
          }
          return !1;
        },
        onKeyUp: function (a) {
          var b = this.resolveKeyCode(a);
          this.handlePreventDefaultKeys(b, a);
          this.enabled &&
            ((a = this._keyListMap.h[b]), null != a && a.release());
        },
        onKeyDown: function (a) {
          var b = this.resolveKeyCode(a);
          this.handlePreventDefaultKeys(b, a);
          this.enabled && ((a = this._keyListMap.h[b]), null != a && a.press());
        },
        handlePreventDefaultKeys: function (a, b) {
          a = this._keyListMap.h[a];
          null != a &&
            null != this.preventDefaultKeys &&
            -1 != this.preventDefaultKeys.indexOf(a.ID) &&
            (b.stopImmediatePropagation(),
            b.stopPropagation(),
            b.preventDefault());
        },
        resolveKeyCode: function (a) {
          return a.keyCode;
        },
        onFocus: function () {},
        onFocusLost: function () {
          this.reset();
        },
        __class__: Nf,
      };
      var kj = function (a, b, c, d) {
        this.ID = a;
        this.startPosition = b;
        this.endPosition = c;
        this._startTimeInTicks = d;
        this._endTimeInTicks = p.game.ticks;
      };
      g["flixel.input.FlxSwipe"] = kj;
      kj.__name__ = "flixel.input.FlxSwipe";
      kj.prototype = { __class__: kj };
      var Ld = function (a, b) {
        this._checked = !1;
        this._timestamp = 0;
        this._x = this._y = null;
        this.triggered = !1;
        this.type = a;
        this.name = b;
        this.inputs = [];
      };
      g["flixel.input.actions.FlxAction"] = Ld;
      Ld.__name__ = "flixel.input.actions.FlxAction";
      Ld.__interfaces__ = [T];
      Ld.prototype = {
        remove: function (a, b) {
          null == b && (b = !1);
          null != a && (ba.remove(this.inputs, a), b && a.destroy());
        },
        check: function () {
          this._y = this._x = null;
          if (this._timestamp == p.game.ticks)
            return (this.triggered = this._checked);
          this._timestamp = p.game.ticks;
          this._checked = !1;
          for (
            var a = null != this.inputs ? this.inputs.length : 0, b = 0;
            b < a;

          ) {
            var c = b++;
            c = a - c - 1;
            var d = this.inputs[c];
            d.destroyed
              ? this.inputs.splice(c, 1)
              : (d.update(), d.check(this) && (this._checked = !0));
          }
          return (this.triggered = this._checked);
        },
        destroy: function () {
          Z.destroyArray(this.inputs);
          this.inputs = null;
        },
        addGenericInput: function (a) {
          null == this.inputs && (this.inputs = []);
          this.checkExists(a) || this.inputs.push(a);
          return this;
        },
        checkExists: function (a) {
          return null == this.inputs ? !1 : -1 != this.inputs.indexOf(a);
        },
        __class__: Ld,
      };
      var vc = function (a, b) {
        null == a && (a = "");
        Ld.call(this, Zk.DIGITAL, a);
        this.callback = b;
      };
      g["flixel.input.actions.FlxActionDigital"] = vc;
      vc.__name__ = "flixel.input.actions.FlxActionDigital";
      vc.__super__ = Ld;
      vc.prototype = r(Ld.prototype, {
        add: function (a) {
          this.addGenericInput(a);
          return this;
        },
        addGamepad: function (a, b, c) {
          null == c && (c = -2);
          return this.add(new lj(a, b, c));
        },
        addKey: function (a, b) {
          return this.add(new mj(a, b));
        },
        destroy: function () {
          this.callback = null;
          Ld.prototype.destroy.call(this);
        },
        check: function () {
          var a = Ld.prototype.check.call(this);
          a && null != this.callback && this.callback(this);
          return a;
        },
        __class__: vc,
      });
      var yl = function (a, b) {
        null == a && (a = "");
        Ld.call(this, Zk.ANALOG, a);
        this.callback = b;
      };
      g["flixel.input.actions.FlxActionAnalog"] = yl;
      yl.__name__ = "flixel.input.actions.FlxActionAnalog";
      yl.__super__ = Ld;
      yl.prototype = r(Ld.prototype, {
        destroy: function () {
          this.callback = null;
          Ld.prototype.destroy.call(this);
        },
        check: function () {
          var a = Ld.prototype.check.call(this);
          a && null != this.callback && this.callback(this);
          return a;
        },
        __class__: yl,
      });
      var Pg = function (a, b, c, d, e) {
        null == e && (e = -2);
        this.destroyed = !1;
        this.type = a;
        this.device = b;
        this.inputID = c;
        this.trigger = d;
        this.deviceID = e;
      };
      g["flixel.input.actions.FlxActionInput"] = Pg;
      Pg.__name__ = "flixel.input.actions.FlxActionInput";
      Pg.__interfaces__ = [T];
      Pg.prototype = {
        update: function () {},
        destroy: function () {
          this.destroyed = !0;
        },
        check: function (a) {
          return !1;
        },
        __class__: Pg,
      };
      var Zk = (z["flixel.input.actions.FlxInputType"] = {
          __ename__: "flixel.input.actions.FlxInputType",
          __constructs__: ["DIGITAL", "ANALOG"],
          DIGITAL: {
            _hx_index: 0,
            __enum__: "flixel.input.actions.FlxInputType",
            toString: l,
          },
          ANALOG: {
            _hx_index: 1,
            __enum__: "flixel.input.actions.FlxInputType",
            toString: l,
          },
        }),
        an = (z["flixel.input.actions.FlxInputDevice"] = {
          __ename__: "flixel.input.actions.FlxInputDevice",
          __constructs__:
            "UNKNOWN MOUSE MOUSE_WHEEL KEYBOARD GAMEPAD STEAM_CONTROLLER IFLXINPUT_OBJECT OTHER ALL NONE".split(
              " "
            ),
          UNKNOWN: {
            _hx_index: 0,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          MOUSE: {
            _hx_index: 1,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          MOUSE_WHEEL: {
            _hx_index: 2,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          KEYBOARD: {
            _hx_index: 3,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          GAMEPAD: {
            _hx_index: 4,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          STEAM_CONTROLLER: {
            _hx_index: 5,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          IFLXINPUT_OBJECT: {
            _hx_index: 6,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          OTHER: {
            _hx_index: 7,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          ALL: {
            _hx_index: 8,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
          NONE: {
            _hx_index: 9,
            __enum__: "flixel.input.actions.FlxInputDevice",
            toString: l,
          },
        }),
        gf = function (a, b, c, d) {
          null == d && (d = -2);
          Pg.call(this, Zk.DIGITAL, a, b, c, d);
          this.inputID = b;
        };
      g["flixel.input.actions.FlxActionInputDigital"] = gf;
      gf.__name__ = "flixel.input.actions.FlxActionInputDigital";
      gf.__super__ = Pg;
      gf.prototype = r(Pg.prototype, { __class__: gf });
      var lj = function (a, b, c) {
        null == c && (c = -2);
        gf.call(this, an.GAMEPAD, a, b, c);
        this.input = new hd(a);
      };
      g["flixel.input.actions.FlxActionInputDigitalGamepad"] = lj;
      lj.__name__ = "flixel.input.actions.FlxActionInputDigitalGamepad";
      lj.__super__ = gf;
      lj.prototype = r(gf.prototype, {
        update: function () {
          gf.prototype.update.call(this);
          if (-1 == this.deviceID)
            p.gamepads.anyHasState(this.inputID, 1) ||
            p.gamepads.anyHasState(this.inputID, 2)
              ? this.input.press()
              : this.input.release();
          else {
            var a = null;
            -2 == this.deviceID
              ? (a = p.gamepads.getFirstActiveGamepad())
              : 0 <= this.deviceID &&
                (a = p.gamepads._activeGamepads[this.deviceID]);
            if (null != a)
              if (-2 == this.inputID && 0 == this.trigger)
                a.released.get_ANY()
                  ? this.input.release()
                  : this.input.press();
              else {
                var b = this.inputID,
                  c = 1;
                switch (b) {
                  case -2:
                    c = a.anyButton(c);
                    break;
                  case -1:
                    c = !a.anyButton(c);
                    break;
                  default:
                    (b = a.mapping.getRawID(b)),
                      (b = a.buttons[b]),
                      (c = null != b && b.hasState(c));
                }
                if (c) a = !0;
                else
                  switch (((b = this.inputID), (c = 2), b)) {
                    case -2:
                      a = a.anyButton(c);
                      break;
                    case -1:
                      a = !a.anyButton(c);
                      break;
                    default:
                      (b = a.mapping.getRawID(b)),
                        (b = a.buttons[b]),
                        (a = null != b && b.hasState(c));
                  }
                a ? this.input.press() : this.input.release();
              }
            else -2 == this.deviceID && this.input.release();
          }
        },
        check: function (a) {
          switch (this.trigger) {
            case -1:
              return -1 == this.input.current;
            case 0:
              return (
                (a = this.input),
                0 != a.current && -1 != a.current
                  ? -1 == this.input.current
                  : !0
              );
            case 1:
              return (
                (a = this.input),
                1 != a.current && 2 != a.current ? 2 == this.input.current : !0
              );
            case 2:
              return 2 == this.input.current;
            default:
              return !1;
          }
        },
        __class__: lj,
      });
      var mj = function (a, b) {
        gf.call(this, an.KEYBOARD, a, b);
      };
      g["flixel.input.actions.FlxActionInputDigitalKeyboard"] = mj;
      mj.__name__ = "flixel.input.actions.FlxActionInputDigitalKeyboard";
      mj.__super__ = gf;
      mj.prototype = r(gf.prototype, {
        check: function (a) {
          switch (this.trigger) {
            case -1:
              return p.keys.checkStatus(this.inputID, -1);
            case 0:
              return p.keys.checkStatus(this.inputID, 0)
                ? !0
                : p.keys.checkStatus(this.inputID, -1);
            case 1:
              return p.keys.checkStatus(this.inputID, 1)
                ? !0
                : p.keys.checkStatus(this.inputID, 2);
            case 2:
              return p.keys.checkStatus(this.inputID, 2);
            default:
              return !1;
          }
        },
        __class__: mj,
      });
      var nj = function (a, b, c, d) {
        this.buttons = [];
        this._deadZone = 0.15;
        d = [];
        d.push(0);
        d.push(0);
        d.push(0);
        d.push(0);
        d.push(0);
        d.push(0);
        this.axis = d;
        this.deadZoneMode = en.INDEPENDENT_AXES;
        this.connected = !0;
        this.id = a;
        this.manager = b;
        this.pressed = new lg(1, this);
        this.released = new lg(0, this);
        this.justPressed = new lg(2, this);
        this.justReleased = new lg(-1, this);
        this.analog = new zl(this);
        this.motion = new Al(this);
        this.pointer = new Bl(this);
        null == c && (c = ce.XINPUT);
        this.set_model(c);
        this.detectedModel = c;
      };
      g["flixel.input.gamepad.FlxGamepad"] = nj;
      nj.__name__ = "flixel.input.gamepad.FlxGamepad";
      nj.__interfaces__ = [T];
      nj.prototype = {
        getButton: function (a) {
          if (-1 == a) return null;
          var b = this.buttons[a];
          null == b && ((b = new oj(a)), (this.buttons[a] = b));
          return b;
        },
        update: function () {
          if (null != this._device) {
            for (var a = 0, b = this._device.get_numControls(); a < b; ) {
              var c = a++;
              var d = this._device.getControlAt(c);
              var e = this.getButton(c);
              this.isAxisForAnalogStick(c) &&
                this.handleAxisMove(c, d.value, e.value);
              e.value = d.value;
              d = Math.abs(d.value);
              d < this.get_deadZone()
                ? e.release()
                : d > this.get_deadZone() && e.press();
            }
            a = 0;
            for (b = this.buttons; a < b.length; )
              (e = b[a]), ++a, null != e && e.update();
          }
        },
        reset: function () {
          for (var a = 0, b = this.buttons; a < b.length; ) {
            var c = b[a];
            ++a;
            null != c && c.reset();
          }
          b = this.axis.length;
          for (a = 0; a < b; ) (c = a++), (this.axis[c] = 0);
        },
        destroy: function () {
          this.connected = !1;
          this.manager = this.axis = this.buttons = null;
        },
        checkButtonArrayState: function (a, b) {
          if (null == a) return !1;
          for (var c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            switch (d) {
              case -2:
                d = this.anyButton(b);
                break;
              case -1:
                d = !this.anyButton(b);
                break;
              default:
                (d = this.mapping.getRawID(d)),
                  (d = this.buttons[d]),
                  (d = null != d && d.hasState(b));
            }
            if (d) return !0;
          }
          return !1;
        },
        getAxis: function (a) {
          a = this.getAxisValue(this.mapping.getRawID(a));
          return Math.abs(a) > this.get_deadZone() ? a : 0;
        },
        isAxisForAnalogStick: function (a) {
          var b = this.mapping.leftStick,
            c = this.mapping.rightStick;
          return (null != b && (a == b.x || a == b.y)) ||
            (null != c && (a == c.x || a == c.y))
            ? !0
            : !1;
        },
        getYAxisRaw: function (a) {
          return this.getAnalogYAxisValue(a);
        },
        anyButton: function (a) {
          null == a && (a = 1);
          for (var b = 0, c = this.buttons; b < c.length; ) {
            var d = c[b];
            ++b;
            if (null != d && d.hasState(a)) return !0;
          }
          return !1;
        },
        anyInput: function () {
          if (this.anyButton()) return !0;
          for (var a = 0, b = this.axis.length; a < b; )
            if ((a++, 0 != this.axis[0])) return !0;
          return !1;
        },
        getAxisValue: function (a) {
          var b = 0;
          if (-1 == a) return 0;
          if (null != this._device && this._device.enabled) {
            var c = this._device.get_numControls() - 1;
            c = 0 <= a && (null == c || a <= c);
          } else c = !1;
          c && (b = this._device.getControlAt(a).value);
          this.isAxisForAnalogStick(a) &&
            this.mapping.isAxisFlipped(a) &&
            (b *= -1);
          return b;
        },
        getAnalogXAxisValue: function (a) {
          return null == a
            ? 0
            : this.deadZoneMode == en.CIRCULAR
            ? this.getAnalogAxisValueCircular(a, a.x)
            : this.getAnalogAxisValueIndependent(a.x);
        },
        getAnalogYAxisValue: function (a) {
          return null == a
            ? 0
            : this.deadZoneMode == en.CIRCULAR
            ? this.getAnalogAxisValueCircular(a, a.y)
            : this.getAnalogAxisValueIndependent(a.y);
        },
        getAnalogAxisValueCircular: function (a, b) {
          if (null == a) return 0;
          var c = this.getAxisValue(a.x);
          a = this.getAxisValue(a.y);
          null == a && (a = 0);
          null == c && (c = 0);
          null == a && (a = 0);
          null == c && (c = 0);
          c = U._pool.get().set(c, a);
          c._inPool = !1;
          a = Math.sqrt(c.x * c.x + c.y * c.y);
          c.put();
          return a > this.get_deadZone() ? this.getAxisValue(b) : 0;
        },
        getAnalogAxisValueIndependent: function (a) {
          a = this.getAxisValue(a);
          return Math.abs(a) > this.get_deadZone() ? a : 0;
        },
        handleAxisMove: function (a, b, c) {
          var d = b;
          this.mapping.isAxisFlipped(a) && (d *= -1);
          b = d;
          d = c;
          this.mapping.isAxisFlipped(a) && (d *= -1);
          c = d;
          d = this.mapping.leftStick;
          var e = this.mapping.rightStick;
          d =
            (null != d && a == d.x) || a == d.y
              ? d
              : (null != e && a == e.x) || a == e.y
              ? e
              : null;
          if (d.mode == pj.ONLY_DIGITAL || d.mode == pj.BOTH)
            this.handleAxisMoveSub(d, a, b, c, 1),
              this.handleAxisMoveSub(d, a, b, c, -1);
        },
        handleAxisMoveSub: function (a, b, c, d, e) {
          null == e && (e = 1);
          var f = -1;
          b == a.x
            ? (f = 0 > e ? a.rawLeft : a.rawRight)
            : b == a.y && (f = 0 > e ? a.rawUp : a.rawDown);
          a = a.digitalThreshold;
          c *= e;
          d *= e;
          c > a && d <= a
            ? ((f = this.getButton(f)), null != f && f.press())
            : c <= a &&
              d > a &&
              ((f = this.getButton(f)), null != f && f.release());
        },
        createMappingForModel: function (a) {
          switch (a._hx_index) {
            case 0:
              return new qj(this.attachment);
            case 1:
              return new rj(this.attachment);
            case 2:
              return new sj(this.attachment);
            case 3:
              return new tj(this.attachment);
            case 4:
              return new Rh(this.attachment);
            case 5:
              return new uj(this.attachment);
            case 6:
              return new vj(this.attachment);
            case 7:
              return new wj(this.attachment);
            case 8:
              return new xj(this.attachment);
            case 9:
              return new yj(this.attachment);
            case 10:
              return new zj(this.attachment);
            default:
              return new Rh(this.attachment);
          }
        },
        set_model: function (a) {
          this.model = a;
          this.mapping = this.createMappingForModel(this.model);
          return this.model;
        },
        get_deadZone: function () {
          return null == this.manager || null == this.manager.globalDeadZone
            ? this._deadZone
            : this.manager.globalDeadZone;
        },
        __class__: nj,
        __properties__: {
          get_deadZone: "get_deadZone",
          set_model: "set_model",
        },
      };
      var en = (z["flixel.input.gamepad.FlxGamepadDeadZoneMode"] = {
          __ename__: "flixel.input.gamepad.FlxGamepadDeadZoneMode",
          __constructs__: ["INDEPENDENT_AXES", "CIRCULAR"],
          INDEPENDENT_AXES: {
            _hx_index: 0,
            __enum__: "flixel.input.gamepad.FlxGamepadDeadZoneMode",
            toString: l,
          },
          CIRCULAR: {
            _hx_index: 1,
            __enum__: "flixel.input.gamepad.FlxGamepadDeadZoneMode",
            toString: l,
          },
        }),
        ce = (z["flixel.input.gamepad.FlxGamepadModel"] = {
          __ename__: "flixel.input.gamepad.FlxGamepadModel",
          __constructs__:
            "LOGITECH OUYA PS4 PSVITA XINPUT MAYFLASH_WII_REMOTE WII_REMOTE MFI SWITCH_PRO SWITCH_JOYCON_LEFT SWITCH_JOYCON_RIGHT UNKNOWN".split(
              " "
            ),
          LOGITECH: {
            _hx_index: 0,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          OUYA: {
            _hx_index: 1,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          PS4: {
            _hx_index: 2,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          PSVITA: {
            _hx_index: 3,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          XINPUT: {
            _hx_index: 4,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          MAYFLASH_WII_REMOTE: {
            _hx_index: 5,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          WII_REMOTE: {
            _hx_index: 6,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          MFI: {
            _hx_index: 7,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          SWITCH_PRO: {
            _hx_index: 8,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          SWITCH_JOYCON_LEFT: {
            _hx_index: 9,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          SWITCH_JOYCON_RIGHT: {
            _hx_index: 10,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
          UNKNOWN: {
            _hx_index: 11,
            __enum__: "flixel.input.gamepad.FlxGamepadModel",
            toString: l,
          },
        }),
        yn = (z["flixel.input.gamepad.FlxGamepadAttachment"] = {
          __ename__: "flixel.input.gamepad.FlxGamepadAttachment",
          __constructs__: ["WII_NUNCHUCK", "WII_CLASSIC_CONTROLLER", "NONE"],
          WII_NUNCHUCK: {
            _hx_index: 0,
            __enum__: "flixel.input.gamepad.FlxGamepadAttachment",
            toString: l,
          },
          WII_CLASSIC_CONTROLLER: {
            _hx_index: 1,
            __enum__: "flixel.input.gamepad.FlxGamepadAttachment",
            toString: l,
          },
          NONE: {
            _hx_index: 2,
            __enum__: "flixel.input.gamepad.FlxGamepadAttachment",
            toString: l,
          },
        }),
        bc = function (a, b, c) {
          this.mode = pj.BOTH;
          this.digitalThreshold = 0.5;
          this.rawUp = this.rawDown = this.rawLeft = this.rawRight = -1;
          this.x = a;
          this.y = b;
          null != c &&
            ((this.mode = null != c.mode ? c.mode : pj.BOTH),
            (this.rawUp = null != c.up ? c.up : -1),
            (this.rawDown = null != c.down ? c.down : -1),
            (this.rawLeft = null != c.left ? c.left : -1),
            (this.rawRight = null != c.right ? c.right : -1),
            (this.digitalThreshold = null != c.threshold ? c.threshold : 0.5));
        };
      g["flixel.input.gamepad.FlxGamepadAnalogStick"] = bc;
      bc.__name__ = "flixel.input.gamepad.FlxGamepadAnalogStick";
      bc.prototype = { __class__: bc };
      var pj = (z["flixel.input.gamepad.FlxAnalogToDigitalMode"] = {
          __ename__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
          __constructs__: ["BOTH", "ONLY_DIGITAL", "ONLY_ANALOG"],
          BOTH: {
            _hx_index: 0,
            __enum__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
            toString: l,
          },
          ONLY_DIGITAL: {
            _hx_index: 1,
            __enum__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
            toString: l,
          },
          ONLY_ANALOG: {
            _hx_index: 2,
            __enum__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
            toString: l,
          },
        }),
        oj = function (a) {
          this.value = 0;
          hd.call(this, a);
        };
      g["flixel.input.gamepad.FlxGamepadButton"] = oj;
      oj.__name__ = "flixel.input.gamepad.FlxGamepadButton";
      oj.__super__ = hd;
      oj.prototype = r(hd.prototype, { __class__: oj });
      var Wa = function () {
        sa.call(this);
        Wa.__instances.push(this);
      };
      g["openfl.ui.GameInput"] = Wa;
      Wa.__name__ = "openfl.ui.GameInput";
      Wa.getDeviceAt = function (a) {
        return 0 <= a && a < Wa.__deviceList.length ? Wa.__deviceList[a] : null;
      };
      Wa.__getDevice = function (a) {
        if (null == a) return null;
        if (null == Wa.__devices.h.__keys__[a.__id__]) {
          var b = cc.__getDeviceData(),
            c = b[a.id].id;
          b = cc.__getDeviceData();
          b = new Cl(c, b[a.id].id);
          Wa.__deviceList.push(b);
          Wa.__devices.set(a, b);
          Wa.numDevices = Wa.__deviceList.length;
        }
        return Wa.__devices.h[a.__id__];
      };
      Wa.__onGamepadAxisMove = function (a, b, c) {
        a = Wa.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__axis.h.hasOwnProperty(b)) {
            if (null == b) var d = "null";
            else
              switch (b) {
                case 0:
                  d = "LEFT_X";
                  break;
                case 1:
                  d = "LEFT_Y";
                  break;
                case 2:
                  d = "RIGHT_X";
                  break;
                case 3:
                  d = "RIGHT_Y";
                  break;
                case 4:
                  d = "TRIGGER_LEFT";
                  break;
                case 5:
                  d = "TRIGGER_RIGHT";
                  break;
                default:
                  d = "UNKNOWN (" + b + ")";
              }
            d = new Md(a, "AXIS_" + d, -1, 1);
            a.__axis.h[b] = d;
            a.__controls.push(d);
          }
          d = a.__axis.h[b];
          d.value = c;
          d.dispatchEvent(new Ca("change"));
        }
      };
      Wa.__onGamepadButtonDown = function (a, b) {
        a = Wa.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = "null";
            else
              switch (b) {
                case 0:
                  c = "A";
                  break;
                case 1:
                  c = "B";
                  break;
                case 2:
                  c = "X";
                  break;
                case 3:
                  c = "Y";
                  break;
                case 4:
                  c = "BACK";
                  break;
                case 5:
                  c = "GUIDE";
                  break;
                case 6:
                  c = "START";
                  break;
                case 7:
                  c = "LEFT_STICK";
                  break;
                case 8:
                  c = "RIGHT_STICK";
                  break;
                case 9:
                  c = "LEFT_SHOULDER";
                  break;
                case 10:
                  c = "RIGHT_SHOULDER";
                  break;
                case 11:
                  c = "DPAD_UP";
                  break;
                case 12:
                  c = "DPAD_DOWN";
                  break;
                case 13:
                  c = "DPAD_LEFT";
                  break;
                case 14:
                  c = "DPAD_RIGHT";
                  break;
                default:
                  c = "UNKNOWN (" + b + ")";
              }
            c = new Md(a, "BUTTON_" + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 1;
          c.dispatchEvent(new Ca("change"));
        }
      };
      Wa.__onGamepadButtonUp = function (a, b) {
        a = Wa.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = "null";
            else
              switch (b) {
                case 0:
                  c = "A";
                  break;
                case 1:
                  c = "B";
                  break;
                case 2:
                  c = "X";
                  break;
                case 3:
                  c = "Y";
                  break;
                case 4:
                  c = "BACK";
                  break;
                case 5:
                  c = "GUIDE";
                  break;
                case 6:
                  c = "START";
                  break;
                case 7:
                  c = "LEFT_STICK";
                  break;
                case 8:
                  c = "RIGHT_STICK";
                  break;
                case 9:
                  c = "LEFT_SHOULDER";
                  break;
                case 10:
                  c = "RIGHT_SHOULDER";
                  break;
                case 11:
                  c = "DPAD_UP";
                  break;
                case 12:
                  c = "DPAD_DOWN";
                  break;
                case 13:
                  c = "DPAD_LEFT";
                  break;
                case 14:
                  c = "DPAD_RIGHT";
                  break;
                default:
                  c = "UNKNOWN (" + b + ")";
              }
            c = new Md(a, "BUTTON_" + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 0;
          c.dispatchEvent(new Ca("change"));
        }
      };
      Wa.__onGamepadConnect = function (a) {
        a = Wa.__getDevice(a);
        if (null != a)
          for (var b = 0, c = Wa.__instances; b < c.length; ) {
            var d = c[b];
            ++b;
            d.dispatchEvent(new Qg("deviceAdded", !0, !1, a));
          }
      };
      Wa.__onGamepadDisconnect = function (a) {
        var b = Wa.__devices.h[a.__id__];
        if (null != b) {
          null != Wa.__devices.h.__keys__[a.__id__] &&
            (ba.remove(Wa.__deviceList, Wa.__devices.h[a.__id__]),
            Wa.__devices.remove(a));
          Wa.numDevices = Wa.__deviceList.length;
          a = 0;
          for (var c = Wa.__instances; a < c.length; ) {
            var d = c[a];
            ++a;
            d.dispatchEvent(new Qg("deviceRemoved", !0, !1, b));
          }
        }
      };
      Wa.__super__ = sa;
      Wa.prototype = r(sa.prototype, {
        addEventListener: function (a, b, c, d, e) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          sa.prototype.addEventListener.call(this, a, b, c, d, e);
          if ("deviceAdded" == a)
            for (a = 0, b = Wa.__deviceList; a < b.length; )
              (c = b[a]),
                ++a,
                this.dispatchEvent(new Qg("deviceAdded", !0, !1, c));
        },
        __class__: Wa,
      });
      var sf = function () {
        this._activeGamepads = [];
        this._gamepads = [];
        this.deviceConnected = new qf();
        this.deviceDisconnected = new qf();
        sf._gameInput.addEventListener(
          "deviceAdded",
          q(this, this.onDeviceAdded)
        );
        sf._gameInput.addEventListener(
          "deviceRemoved",
          q(this, this.onDeviceRemoved)
        );
        for (var a = 0, b = Wa.numDevices; a < b; ) {
          var c = a++;
          this.addGamepad(Wa.getDeviceAt(c));
        }
      };
      g["flixel.input.gamepad.FlxGamepadManager"] = sf;
      sf.__name__ = "flixel.input.gamepad.FlxGamepadManager";
      sf.__interfaces__ = [Mf];
      sf.prototype = {
        removeByID: function (a) {
          var b = this._gamepads[a];
          null != b &&
            ((this._gamepads[a] = null),
            (a = this._activeGamepads.indexOf(b)),
            -1 != a &&
              ((this._activeGamepads[a] = null),
              this.deviceDisconnected.dispatch(b)),
            Z.destroy(b));
          this.lastActive == b && (this.lastActive = null);
          this.firstActive == b && (this.firstActive = null);
        },
        createByID: function (a, b) {
          var c = this._gamepads[a];
          if (null == c) {
            c = new nj(a, this, b);
            this._gamepads[a] = c;
            a = !1;
            b = 0;
            for (var d = this._activeGamepads.length; b < d; ) {
              var e = b++;
              if (null == this._activeGamepads[e]) {
                this._activeGamepads[e] = c;
                a = !0;
                break;
              }
            }
            a || this._activeGamepads.push(c);
          }
          this.lastActive = c;
          null == this.firstActive && (this.firstActive = c);
          return c;
        },
        getFirstActiveGamepad: function () {
          for (var a = 0, b = this._gamepads; a < b.length; ) {
            var c = b[a];
            ++a;
            if (null != c && c.anyInput()) return c;
          }
          return null;
        },
        anyHasState: function (a, b) {
          for (var c = 0, d = this._gamepads; c < d.length; ) {
            var e = d[c];
            ++c;
            if (null != e)
              switch (a) {
                case -2:
                  e = e.anyButton(b);
                  break;
                case -1:
                  e = !e.anyButton(b);
                  break;
                default:
                  var f = e.mapping.getRawID(a);
                  e = e.buttons[f];
                  e = null != e && e.hasState(b);
              }
            else e = !1;
            if (e) return !0;
          }
          return !1;
        },
        destroy: function () {
          Z.destroyArray(this._gamepads);
          this._gamepads = this.lastActive = this.firstActive = null;
          sf._gameInput.removeEventListener(
            "deviceAdded",
            q(this, this.onDeviceAdded)
          );
          sf._gameInput.removeEventListener(
            "deviceRemoved",
            q(this, this.onDeviceRemoved)
          );
        },
        reset: function () {
          for (var a = 0, b = this._gamepads; a < b.length; ) {
            var c = b[a];
            ++a;
            null != c && c.reset();
          }
        },
        onDeviceAdded: function (a) {
          this.addGamepad(a.device);
        },
        onDeviceRemoved: function (a) {
          this.removeGamepad(a.device);
        },
        findGamepadIndex: function (a) {
          if (null == a) return -1;
          for (var b = 0, c = Wa.numDevices; b < c; ) {
            var d = b++;
            if (Wa.getDeviceAt(d) == a) return d;
          }
          return -1;
        },
        addGamepad: function (a) {
          if (null != a) {
            a.enabled = !0;
            var b = this.findGamepadIndex(a);
            0 > b ||
              ((b = this.createByID(b, this.getModelFromDeviceName(a.name))),
              (b._device = a),
              this.deviceConnected.dispatch(b));
          }
        },
        getModelFromDeviceName: function (a) {
          if (null == a) return ce.UNKNOWN;
          a = K.replace(K.replace(a.toLowerCase(), "-", ""), "_", "");
          return -1 != a.indexOf("ouya")
            ? ce.OUYA
            : -1 != a.indexOf("wireless controller") || -1 != a.indexOf("ps4")
            ? ce.PS4
            : -1 != a.indexOf("logitech")
            ? ce.LOGITECH
            : (-1 != a.indexOf("xbox") && -1 != a.indexOf("360")) ||
              -1 != a.indexOf("xinput")
            ? ce.XINPUT
            : -1 != a.indexOf("nintendo rvlcnt01tr")
            ? ce.WII_REMOTE
            : -1 != a.indexOf("nintendo rvlcnt01")
            ? ce.WII_REMOTE
            : -1 != a.indexOf("mayflash wiimote pc adapter")
            ? ce.MAYFLASH_WII_REMOTE
            : -1 != a.indexOf("pro controller") || -1 != a.indexOf("joycon l+r")
            ? ce.SWITCH_PRO
            : -1 != a.indexOf("joycon (l)")
            ? ce.SWITCH_JOYCON_LEFT
            : -1 != a.indexOf("joycon (r)")
            ? ce.SWITCH_JOYCON_RIGHT
            : -1 != a.indexOf("mfi")
            ? ce.MFI
            : ce.UNKNOWN;
        },
        removeGamepad: function (a) {
          if (null != a)
            for (var b = 0, c = this._gamepads.length; b < c; ) {
              var d = b++,
                e = this._gamepads[d];
              null != e && e._device == a && this.removeByID(d);
            }
        },
        update: function () {
          for (var a = 0, b = this._gamepads; a < b.length; ) {
            var c = b[a];
            ++a;
            null != c && c.update();
          }
        },
        onFocus: function () {},
        onFocusLost: function () {
          this.reset();
        },
        get_numActiveGamepads: function () {
          for (var a = 0, b = 0, c = this._gamepads; b < c.length; ) {
            var d = c[b];
            ++b;
            null != d && ++a;
          }
          return a;
        },
        __class__: sf,
        __properties__: { get_numActiveGamepads: "get_numActiveGamepads" },
      };
      var de = function () {};
      g["flixel.input.gamepad.id.LogitechID"] = de;
      de.__name__ = "flixel.input.gamepad.id.LogitechID";
      var ee = function () {};
      g["flixel.input.gamepad.id.MFiID"] = ee;
      ee.__name__ = "flixel.input.gamepad.id.MFiID";
      var Rc = function () {};
      g["flixel.input.gamepad.id.MayflashWiiRemoteID"] = Rc;
      Rc.__name__ = "flixel.input.gamepad.id.MayflashWiiRemoteID";
      var fe = function () {};
      g["flixel.input.gamepad.id.OUYAID"] = fe;
      fe.__name__ = "flixel.input.gamepad.id.OUYAID";
      var ge = function () {};
      g["flixel.input.gamepad.id.PS4ID"] = ge;
      ge.__name__ = "flixel.input.gamepad.id.PS4ID";
      var Ad = function () {};
      g["flixel.input.gamepad.id.PSVitaID"] = Ad;
      Ad.__name__ = "flixel.input.gamepad.id.PSVitaID";
      var Rg = function () {};
      g["flixel.input.gamepad.id.SwitchJoyconLeftID"] = Rg;
      Rg.__name__ = "flixel.input.gamepad.id.SwitchJoyconLeftID";
      var Sg = function () {};
      g["flixel.input.gamepad.id.SwitchJoyconRightID"] = Sg;
      Sg.__name__ = "flixel.input.gamepad.id.SwitchJoyconRightID";
      var he = function () {};
      g["flixel.input.gamepad.id.SwitchProID"] = he;
      he.__name__ = "flixel.input.gamepad.id.SwitchProID";
      var Sc = function () {};
      g["flixel.input.gamepad.id.WiiRemoteID"] = Sc;
      Sc.__name__ = "flixel.input.gamepad.id.WiiRemoteID";
      var ie = function () {};
      g["flixel.input.gamepad.id.XInputID"] = ie;
      ie.__name__ = "flixel.input.gamepad.id.XInputID";
      var Sh = function (a, b) {
        this.status = a;
        this.gamepad = b;
      };
      g["flixel.input.gamepad.lists.FlxBaseGamepadList"] = Sh;
      Sh.__name__ = "flixel.input.gamepad.lists.FlxBaseGamepadList";
      Sh.prototype = {
        get_ANY: function () {
          for (var a = 0, b = this.gamepad.buttons; a < b.length; ) {
            var c = b[a];
            ++a;
            null != c
              ? ((c = this.gamepad.buttons[c.ID]),
                (c = null != c && c.hasState(this.status)))
              : (c = !1);
            if (c) return !0;
          }
          return !1;
        },
        __class__: Sh,
        __properties__: { get_ANY: "get_ANY" },
      };
      var zl = function (a) {
        this.value = new Dl(a);
        this.justMoved = new Aj(2, a);
        this.justReleased = new Aj(-1, a);
      };
      g["flixel.input.gamepad.lists.FlxGamepadAnalogList"] = zl;
      zl.__name__ = "flixel.input.gamepad.lists.FlxGamepadAnalogList";
      zl.prototype = { __class__: zl };
      var Aj = function (a, b) {
        this.status = a;
        this.gamepad = b;
      };
      g["flixel.input.gamepad.lists.FlxGamepadAnalogStateList"] = Aj;
      Aj.__name__ = "flixel.input.gamepad.lists.FlxGamepadAnalogStateList";
      Aj.prototype = {
        get_LEFT_STICK: function () {
          return this.checkXY(19);
        },
        get_LEFT_STICK_X: function () {
          var a = this.gamepad.mapping.getAnalogStick(19);
          if (null == a) return !1;
          a = this.gamepad.buttons[a.x];
          return null != a ? a.hasState(this.status) : !1;
        },
        get_LEFT_STICK_Y: function () {
          var a = this.gamepad.mapping.getAnalogStick(19);
          if (null == a) return !1;
          a = this.gamepad.buttons[a.y];
          return null != a ? a.hasState(this.status) : !1;
        },
        get_RIGHT_STICK: function () {
          return this.checkXY(20);
        },
        get_RIGHT_STICK_X: function () {
          var a = this.gamepad.mapping.getAnalogStick(20);
          if (null == a) return !1;
          a = this.gamepad.buttons[a.x];
          return null != a ? a.hasState(this.status) : !1;
        },
        get_RIGHT_STICK_Y: function () {
          var a = this.gamepad.mapping.getAnalogStick(20);
          if (null == a) return !1;
          a = this.gamepad.buttons[a.y];
          return null != a ? a.hasState(this.status) : !1;
        },
        checkXY: function (a) {
          a = this.gamepad.mapping.getAnalogStick(a);
          if (null == a) return !1;
          var b = this.gamepad.buttons[a.x],
            c = null != b && b.hasState(this.status);
          b = this.gamepad.buttons[a.y];
          var d = null != b && b.hasState(this.status);
          return (c && d) ||
            (c &&
              ((b = this.gamepad.buttons[a.y]),
              (c = null != b && b.hasState(0)),
              (b = this.gamepad.buttons[a.y]),
              (b = null != b && b.hasState(-1)),
              c || b)) ||
            (d &&
              ((b = this.gamepad.buttons[a.x]),
              (d = null != b && b.hasState(0)),
              (b = this.gamepad.buttons[a.x]),
              (a = null != b && b.hasState(-1)),
              d || a))
            ? !0
            : !1;
        },
        checkX: function (a) {
          a = this.gamepad.mapping.getAnalogStick(a);
          if (null == a) return !1;
          a = this.gamepad.buttons[a.x];
          return null != a ? a.hasState(this.status) : !1;
        },
        checkY: function (a) {
          a = this.gamepad.mapping.getAnalogStick(a);
          if (null == a) return !1;
          a = this.gamepad.buttons[a.y];
          return null != a ? a.hasState(this.status) : !1;
        },
        checkRaw: function (a, b) {
          a = this.gamepad.buttons[a];
          return null != a ? a.hasState(b) : !1;
        },
        __class__: Aj,
        __properties__: {
          get_RIGHT_STICK_Y: "get_RIGHT_STICK_Y",
          get_RIGHT_STICK_X: "get_RIGHT_STICK_X",
          get_RIGHT_STICK: "get_RIGHT_STICK",
          get_LEFT_STICK_Y: "get_LEFT_STICK_Y",
          get_LEFT_STICK_X: "get_LEFT_STICK_X",
          get_LEFT_STICK: "get_LEFT_STICK",
        },
      };
      var Dl = function (a) {
        this.gamepad = a;
      };
      g["flixel.input.gamepad.lists.FlxGamepadAnalogValueList"] = Dl;
      Dl.__name__ = "flixel.input.gamepad.lists.FlxGamepadAnalogValueList";
      Dl.prototype = {
        get_LEFT_STICK_X: function () {
          var a = this.gamepad;
          return a.getAnalogXAxisValue(a.mapping.getAnalogStick(19));
        },
        get_LEFT_STICK_Y: function () {
          var a = this.gamepad;
          return a.getYAxisRaw(a.mapping.getAnalogStick(19));
        },
        get_RIGHT_STICK_X: function () {
          var a = this.gamepad;
          return a.getAnalogXAxisValue(a.mapping.getAnalogStick(20));
        },
        get_RIGHT_STICK_Y: function () {
          var a = this.gamepad;
          return a.getYAxisRaw(a.mapping.getAnalogStick(20));
        },
        get_LEFT_TRIGGER: function () {
          return this.gamepad.getAxis(17);
        },
        get_RIGHT_TRIGGER: function () {
          return this.gamepad.getAxis(18);
        },
        get_POINTER_X: function () {
          return this.gamepad.getAxis(28);
        },
        get_POINTER_Y: function () {
          return this.gamepad.getAxis(29);
        },
        getAxis: function (a) {
          return this.gamepad.getAxis(a);
        },
        getXAxis: function (a) {
          var b = this.gamepad;
          return b.getAnalogXAxisValue(b.mapping.getAnalogStick(a));
        },
        getYAxis: function (a) {
          var b = this.gamepad;
          return b.getYAxisRaw(b.mapping.getAnalogStick(a));
        },
        __class__: Dl,
        __properties__: {
          get_POINTER_Y: "get_POINTER_Y",
          get_POINTER_X: "get_POINTER_X",
          get_RIGHT_TRIGGER: "get_RIGHT_TRIGGER",
          get_LEFT_TRIGGER: "get_LEFT_TRIGGER",
          get_RIGHT_STICK_Y: "get_RIGHT_STICK_Y",
          get_RIGHT_STICK_X: "get_RIGHT_STICK_X",
          get_LEFT_STICK_Y: "get_LEFT_STICK_Y",
          get_LEFT_STICK_X: "get_LEFT_STICK_X",
        },
      };
      var lg = function (a, b) {
        Sh.call(this, a, b);
      };
      g["flixel.input.gamepad.lists.FlxGamepadButtonList"] = lg;
      lg.__name__ = "flixel.input.gamepad.lists.FlxGamepadButtonList";
      lg.__super__ = Sh;
      lg.prototype = r(Sh.prototype, { __class__: lg });
      var Al = function (a) {
        this.gamepad = a;
      };
      g["flixel.input.gamepad.lists.FlxGamepadMotionValueList"] = Al;
      Al.__name__ = "flixel.input.gamepad.lists.FlxGamepadMotionValueList";
      Al.prototype = {
        get_TILT_PITCH: function () {
          return this.gamepad.mapping.supportsMotion
            ? this.gamepad.getAxis(26)
            : 0;
        },
        get_TILT_ROLL: function () {
          return this.gamepad.mapping.supportsMotion
            ? this.gamepad.getAxis(27)
            : 0;
        },
        getAxis: function (a) {
          return this.gamepad.mapping.supportsMotion
            ? this.gamepad.getAxis(a)
            : 0;
        },
        get_isSupported: function () {
          return this.gamepad.mapping.supportsMotion;
        },
        __class__: Al,
        __properties__: {
          get_TILT_ROLL: "get_TILT_ROLL",
          get_TILT_PITCH: "get_TILT_PITCH",
          get_isSupported: "get_isSupported",
        },
      };
      var Bl = function (a) {
        this.gamepad = a;
      };
      g["flixel.input.gamepad.lists.FlxGamepadPointerValueList"] = Bl;
      Bl.__name__ = "flixel.input.gamepad.lists.FlxGamepadPointerValueList";
      Bl.prototype = {
        get_X: function () {
          return this.gamepad.mapping.supportsPointer
            ? this.gamepad.getAxis(28)
            : 0;
        },
        get_Y: function () {
          return this.gamepad.mapping.supportsPointer
            ? this.gamepad.getAxis(29)
            : 0;
        },
        getAxis: function (a) {
          return this.gamepad.mapping.supportsPointer
            ? this.gamepad.getAxis(a)
            : 0;
        },
        get_isSupported: function () {
          return this.gamepad.mapping.supportsPointer;
        },
        __class__: Bl,
        __properties__: {
          get_Y: "get_Y",
          get_X: "get_X",
          get_isSupported: "get_isSupported",
        },
      };
      var ub = function (a) {
        this.attachment = yn.NONE;
        this.supportsMotion = this.supportsPointer = !1;
        null != a && this.set_attachment(a);
        this.initValues();
      };
      g["flixel.input.gamepad.mappings.FlxGamepadMapping"] = ub;
      ub.__name__ = "flixel.input.gamepad.mappings.FlxGamepadMapping";
      ub.prototype = {
        initValues: function () {},
        getAnalogStick: function (a) {
          switch (a) {
            case 19:
              return this.leftStick;
            case 20:
              return this.rightStick;
            default:
              return null;
          }
        },
        getRawID: function (a) {
          return -1;
        },
        isAxisFlipped: function (a) {
          return !1;
        },
        set_attachment: function (a) {
          return (this.attachment = a);
        },
        __class__: ub,
        __properties__: { set_attachment: "set_attachment" },
      };
      var qj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.LogitechMapping"] = qj;
      qj.__name__ = "flixel.input.gamepad.mappings.LogitechMapping";
      qj.__super__ = ub;
      qj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = de.LEFT_ANALOG_STICK;
          this.rightStick = de.RIGHT_ANALOG_STICK;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 1;
            case 1:
              return 2;
            case 2:
              return 0;
            case 3:
              return 3;
            case 4:
              return 4;
            case 5:
              return 5;
            case 6:
              return 8;
            case 7:
              return 9;
            case 8:
              return 10;
            case 9:
              return 11;
            case 10:
              return -5;
            case 11:
              return 16;
            case 12:
              return 17;
            case 13:
              return 18;
            case 14:
              return 19;
            case 17:
              return 6;
            case 18:
              return 7;
            case 34:
              return de.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return de.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return de.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return de.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return de.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return de.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return de.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return de.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: qj,
      });
      var wj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.MFiMapping"] = wj;
      wj.__name__ = "flixel.input.gamepad.mappings.MFiMapping";
      wj.__super__ = ub;
      wj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = ee.LEFT_ANALOG_STICK;
          this.rightStick = ee.RIGHT_ANALOG_STICK;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 6:
              return 10;
            case 7:
              return 12;
            case 8:
              return 13;
            case 9:
              return 14;
            case 10:
              return 11;
            case 11:
              return 17;
            case 12:
              return 18;
            case 13:
              return 19;
            case 14:
              return 20;
            case 17:
              return 4;
            case 18:
              return 5;
            case 34:
              return ee.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return ee.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return ee.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return ee.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return ee.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return ee.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return ee.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return ee.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: wj,
      });
      var uj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.MayflashWiiRemoteMapping"] = uj;
      uj.__name__ = "flixel.input.gamepad.mappings.MayflashWiiRemoteMapping";
      uj.__super__ = ub;
      uj.prototype = r(ub.prototype, {
        initValues: function () {
          this.supportsPointer = !0;
        },
        getRawID: function (a) {
          switch (this.attachment._hx_index) {
            case 0:
              return this.getRawNunchuk(a);
            case 1:
              return this.getRawClassicController(a);
            case 2:
              return this.getRawDefault(a);
          }
        },
        getRawClassicController: function (a) {
          switch (a) {
            case 0:
              return 10;
            case 1:
              return 11;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 14;
            case 5:
              return 15;
            case 6:
              return 16;
            case 7:
              return 17;
            case 10:
              return 19;
            case 11:
              return 4;
            case 12:
              return 5;
            case 13:
              return 6;
            case 14:
              return 7;
            case 17:
              return 12;
            case 18:
              return 13;
            case 30:
              return -1;
            case 31:
              return -1;
            case 34:
              return Rc.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return Rc.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return Rc.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return Rc.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return Rc.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return Rc.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return Rc.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return Rc.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return this.getRawDefault(a);
          }
        },
        getRawNunchuk: function (a) {
          switch (a) {
            case 0:
              return 10;
            case 1:
              return 11;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 6:
              return 12;
            case 7:
              return 13;
            case 10:
              return 19;
            case 11:
              return 4;
            case 12:
              return 5;
            case 13:
              return 6;
            case 14:
              return 7;
            case 17:
              return 14;
            case 28:
              return 2;
            case 29:
              return 3;
            case 34:
              return Rc.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return Rc.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return Rc.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return Rc.LEFT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        getRawDefault: function (a) {
          switch (a) {
            case 0:
              return 10;
            case 1:
              return 11;
            case 2:
              return 8;
            case 3:
              return 9;
            case 6:
              return 12;
            case 7:
              return 13;
            case 10:
              return 19;
            case 11:
              return 22;
            case 12:
              return 23;
            case 13:
              return 24;
            case 14:
              return 25;
            default:
              return -1;
          }
        },
        set_attachment: function (a) {
          switch (a._hx_index) {
            case 0:
            case 1:
              var b = Rc.LEFT_ANALOG_STICK;
              break;
            case 2:
              b = Rc.REMOTE_DPAD;
          }
          this.leftStick = b;
          this.rightStick = 1 == a._hx_index ? Rc.RIGHT_ANALOG_STICK : null;
          return ub.prototype.set_attachment.call(this, a);
        },
        __class__: uj,
      });
      var rj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.OUYAMapping"] = rj;
      rj.__name__ = "flixel.input.gamepad.mappings.OUYAMapping";
      rj.__super__ = ub;
      rj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = fe.LEFT_ANALOG_STICK;
          this.rightStick = fe.RIGHT_ANALOG_STICK;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 8:
              return 13;
            case 9:
              return 14;
            case 10:
              return 16777234;
            case 11:
              return 17;
            case 12:
              return 18;
            case 13:
              return 19;
            case 14:
              return 20;
            case 17:
              return 4;
            case 18:
              return 5;
            case 34:
              return fe.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return fe.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return fe.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return fe.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return fe.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return fe.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return fe.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return fe.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: rj,
      });
      var sj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.PS4Mapping"] = sj;
      sj.__name__ = "flixel.input.gamepad.mappings.PS4Mapping";
      sj.__super__ = ub;
      sj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = ge.LEFT_ANALOG_STICK;
          this.rightStick = ge.RIGHT_ANALOG_STICK;
          this.supportsPointer = this.supportsMotion = !0;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 6:
              return 10;
            case 7:
              return 12;
            case 8:
              return 13;
            case 9:
              return 14;
            case 10:
              return 11;
            case 11:
              return 17;
            case 12:
              return 18;
            case 13:
              return 19;
            case 14:
              return 20;
            case 17:
              return 4;
            case 18:
              return 5;
            case 34:
              return ge.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return ge.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return ge.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return ge.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return ge.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return ge.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return ge.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return ge.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: sj,
      });
      var tj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.PSVitaMapping"] = tj;
      tj.__name__ = "flixel.input.gamepad.mappings.PSVitaMapping";
      tj.__super__ = ub;
      tj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = Ad.LEFT_ANALOG_STICK;
          this.rightStick = Ad.RIGHT_ANALOG_STICK;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 6:
              return 10;
            case 7:
              return 12;
            case 11:
              return 17;
            case 12:
              return 18;
            case 13:
              return 19;
            case 14:
              return 20;
            case 34:
              return Ad.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return Ad.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return Ad.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return Ad.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return Ad.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return Ad.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return Ad.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return Ad.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        isAxisFlipped: function (a) {
          return a != Ad.LEFT_ANALOG_STICK.y
            ? a == Ad.RIGHT_ANALOG_STICK.y
            : !0;
        },
        __class__: tj,
      });
      var yj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.SwitchJoyconLeftMapping"] = yj;
      yj.__name__ = "flixel.input.gamepad.mappings.SwitchJoyconLeftMapping";
      yj.__super__ = ub;
      yj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = Rg.LEFT_ANALOG_STICK;
          this.supportsMotion = !0;
          this.supportsPointer = !1;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 7:
              return 12;
            case 8:
              return 13;
            case 17:
              return 4;
            case 30:
              return 10;
            case 34:
              return Rg.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return Rg.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return Rg.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return Rg.LEFT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: yj,
      });
      var zj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.SwitchJoyconRightMapping"] = zj;
      zj.__name__ = "flixel.input.gamepad.mappings.SwitchJoyconRightMapping";
      zj.__super__ = ub;
      zj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = Sg.LEFT_ANALOG_STICK;
          this.supportsMotion = !0;
          this.supportsPointer = !1;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 7:
              return 12;
            case 8:
              return 13;
            case 10:
              return 11;
            case 18:
              return 5;
            case 30:
              return 10;
            case 34:
              return Sg.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return Sg.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return Sg.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return Sg.LEFT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: zj,
      });
      var xj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.SwitchProMapping"] = xj;
      xj.__name__ = "flixel.input.gamepad.mappings.SwitchProMapping";
      xj.__super__ = ub;
      xj.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = he.LEFT_ANALOG_STICK;
          this.rightStick = he.RIGHT_ANALOG_STICK;
          this.supportsMotion = !0;
          this.supportsPointer = !1;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 6:
              return 10;
            case 7:
              return 12;
            case 8:
              return 13;
            case 9:
              return 14;
            case 10:
              return 11;
            case 11:
              return 17;
            case 12:
              return 18;
            case 13:
              return 19;
            case 14:
              return 20;
            case 17:
              return 4;
            case 18:
              return 5;
            case 30:
              return 21;
            case 34:
              return he.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return he.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return he.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return he.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return he.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return he.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return he.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return he.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: xj,
      });
      var vj = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.WiiRemoteMapping"] = vj;
      vj.__name__ = "flixel.input.gamepad.mappings.WiiRemoteMapping";
      vj.__super__ = ub;
      vj.prototype = r(ub.prototype, {
        initValues: function () {
          this.supportsMotion = !0;
          this.supportsPointer = !1;
        },
        getRawID: function (a) {
          switch (this.attachment._hx_index) {
            case 0:
              return this.getRawNunchuk(a);
            case 1:
              return this.getRawClassicController(a);
            case 2:
              return this.getRawDefault(a);
          }
        },
        getRawClassicController: function (a) {
          switch (a) {
            case 0:
              return 10;
            case 1:
              return 9;
            case 2:
              return 11;
            case 3:
              return 12;
            case 4:
              return 15;
            case 5:
              return 16;
            case 6:
              return 18;
            case 7:
              return 17;
            case 10:
              return 19;
            case 11:
              return 5;
            case 12:
              return 6;
            case 13:
              return 7;
            case 14:
              return 8;
            case 17:
              return 13;
            case 18:
              return 14;
            case 30:
              return 20;
            case 31:
              return 21;
            case 34:
              return Sc.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return Sc.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return Sc.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return Sc.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return Sc.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return Sc.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return Sc.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return Sc.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        getRawNunchuk: function (a) {
          switch (a) {
            case 0:
              return 9;
            case 1:
              return 10;
            case 2:
              return 13;
            case 3:
              return 14;
            case 4:
              return 11;
            case 6:
              return 16;
            case 7:
              return 15;
            case 10:
              return 17;
            case 11:
              return 5;
            case 12:
              return 6;
            case 13:
              return 7;
            case 14:
              return 8;
            case 17:
              return 12;
            case 26:
              return 3;
            case 27:
              return 2;
            case 34:
              return Sc.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return Sc.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return Sc.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return Sc.LEFT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        getRawDefault: function (a) {
          switch (a) {
            case 0:
              return 11;
            case 1:
              return 12;
            case 2:
              return 9;
            case 3:
              return 10;
            case 6:
              return 14;
            case 7:
              return 13;
            case 10:
              return 15;
            case 11:
              return 22;
            case 12:
              return 23;
            case 13:
              return 24;
            case 14:
              return 25;
            case 26:
              return 2;
            case 27:
              return 3;
            default:
              return -1;
          }
        },
        isAxisFlipped: function (a) {
          return 4 == a;
        },
        set_attachment: function (a) {
          switch (a._hx_index) {
            case 0:
            case 1:
              var b = Sc.LEFT_ANALOG_STICK;
              break;
            case 2:
              b = Sc.REMOTE_DPAD;
          }
          this.leftStick = b;
          this.rightStick = 1 == a._hx_index ? Sc.RIGHT_ANALOG_STICK : null;
          return ub.prototype.set_attachment.call(this, a);
        },
        __class__: vj,
      });
      var Rh = function (a) {
        ub.call(this, a);
      };
      g["flixel.input.gamepad.mappings.XInputMapping"] = Rh;
      Rh.__name__ = "flixel.input.gamepad.mappings.XInputMapping";
      Rh.__super__ = ub;
      Rh.prototype = r(ub.prototype, {
        initValues: function () {
          this.leftStick = ie.LEFT_ANALOG_STICK;
          this.rightStick = ie.RIGHT_ANALOG_STICK;
        },
        getRawID: function (a) {
          switch (a) {
            case 0:
              return 6;
            case 1:
              return 7;
            case 2:
              return 8;
            case 3:
              return 9;
            case 4:
              return 15;
            case 5:
              return 16;
            case 6:
              return 10;
            case 7:
              return 12;
            case 8:
              return 13;
            case 9:
              return 14;
            case 10:
              return -1;
            case 11:
              return 17;
            case 12:
              return 18;
            case 13:
              return 19;
            case 14:
              return 20;
            case 17:
              return 4;
            case 18:
              return 5;
            case 34:
              return ie.LEFT_ANALOG_STICK.rawUp;
            case 35:
              return ie.LEFT_ANALOG_STICK.rawRight;
            case 36:
              return ie.LEFT_ANALOG_STICK.rawDown;
            case 37:
              return ie.LEFT_ANALOG_STICK.rawLeft;
            case 38:
              return ie.RIGHT_ANALOG_STICK.rawUp;
            case 39:
              return ie.RIGHT_ANALOG_STICK.rawRight;
            case 40:
              return ie.RIGHT_ANALOG_STICK.rawDown;
            case 41:
              return ie.RIGHT_ANALOG_STICK.rawLeft;
            default:
              return -1;
          }
        },
        __class__: Rh,
      });
      var on = {},
        Bj = function (a, b) {
          Qh.call(this, a, b);
        };
      g["flixel.input.keyboard.FlxKeyList"] = Bj;
      Bj.__name__ = "flixel.input.keyboard.FlxKeyList";
      Bj.__super__ = Qh;
      Bj.prototype = r(Qh.prototype, { __class__: Bj });
      var Wi = function () {
        Nf.call(this, function (a, b) {
          return new Bj(a, b);
        });
        this.preventDefaultKeys = [38, 40, 37, 39, 32, 9];
        for (var a = ea.valueIterator(on.fromStringMap.h); a.hasNext(); ) {
          var b = a.next();
          if (-2 != b && -1 != b) {
            var c = new hd(b);
            this._keyListArray.push(c);
            this._keyListMap.h[b] = c;
          }
        }
      };
      g["flixel.input.keyboard.FlxKeyboard"] = Wi;
      Wi.__name__ = "flixel.input.keyboard.FlxKeyboard";
      Wi.__super__ = Nf;
      Wi.prototype = r(Nf.prototype, {
        onKeyUp: function (a) {
          Nf.prototype.onKeyUp.call(this, a);
        },
        onKeyDown: function (a) {
          Nf.prototype.onKeyDown.call(this, a);
        },
        resolveKeyCode: function (a) {
          return a.keyCode;
        },
        __class__: Wi,
      });
      var Kd = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Kd.preload) this.__fromImage(Kd.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Kd.resourceName), Kd.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Kd.preload && (Kd.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.input.mouse._FlxMouse.GraphicCursor"] = Kd;
      Kd.__name__ = "flixel.input.mouse._FlxMouse.GraphicCursor";
      Kd.__super__ = J;
      Kd.prototype = r(J.prototype, { __class__: Kd });
      var ef = function (a) {
        this.justPressedTimeInTicks = -1;
        var b = U._pool.get().set(0, 0);
        b._inPool = !1;
        this.justPressedPosition = b;
        hd.call(this, a);
      };
      g["flixel.input.mouse.FlxMouseButton"] = ef;
      ef.__name__ = "flixel.input.mouse.FlxMouseButton";
      ef.__interfaces__ = [T];
      ef.getByID = function (a) {
        switch (a) {
          case -3:
            return p.mouse._rightButton;
          case -2:
            return p.mouse._middleButton;
          case -1:
            return p.mouse._leftButton;
        }
      };
      ef.__super__ = hd;
      ef.prototype = r(hd.prototype, {
        update: function () {
          hd.prototype.update.call(this);
          2 == this.current
            ? (this.justPressedPosition.set(p.mouse.screenX, p.mouse.screenY),
              (this.justPressedTimeInTicks = p.game.ticks))
            : -1 == this.current &&
              p.swipes.push(
                new kj(
                  this.ID,
                  this.justPressedPosition,
                  p.mouse.getScreenPosition(),
                  this.justPressedTimeInTicks
                )
              );
        },
        destroy: function () {
          this.justPressedPosition = Z.put(this.justPressedPosition);
        },
        onDown: function (a) {
          p.mouse.enabled && this.press();
        },
        onUp: function (a) {
          p.mouse.enabled && this.release();
        },
        __class__: ef,
      });
      var Th = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.justPressedTimeInTicks = -1;
        var d = U._pool.get().set(0, 0);
        d._inPool = !1;
        this.justPressedPosition = d;
        this.flashPoint = new Ra();
        rc.call(this);
        this.input = new hd(c);
        this.setXY(a, b);
      };
      g["flixel.input.touch.FlxTouch"] = Th;
      Th.__name__ = "flixel.input.touch.FlxTouch";
      Th.__interfaces__ = [kg, T];
      Th.__super__ = rc;
      Th.prototype = r(rc.prototype, {
        destroy: function () {
          this.input = null;
          this.justPressedPosition = Z.put(this.justPressedPosition);
          this.flashPoint = null;
        },
        recycle: function (a, b, c) {
          this.setXY(a, b);
          this.input.ID = c;
          this.input.reset();
        },
        update: function () {
          this.input.update();
          2 == this.input.current
            ? (this.justPressedPosition.set(this.screenX, this.screenY),
              (this.justPressedTimeInTicks = p.game.ticks))
            : -1 == this.input.current &&
              p.swipes.push(
                new kj(
                  this.input.ID,
                  this.justPressedPosition,
                  this.getScreenPosition(),
                  this.justPressedTimeInTicks
                )
              );
        },
        setXY: function (a, b) {
          this.flashPoint.setTo(a, b);
          this.flashPoint = p.game.globalToLocal(this.flashPoint);
          this._globalScreenX = (this.flashPoint.x / p.scaleMode.scale.x) | 0;
          this._globalScreenY = (this.flashPoint.y / p.scaleMode.scale.y) | 0;
          this.updatePositions();
        },
        get_justReleased: function () {
          return -1 == this.input.current;
        },
        get_pressed: function () {
          var a = this.input;
          return 1 != a.current ? 2 == a.current : !0;
        },
        get_justPressed: function () {
          return 2 == this.input.current;
        },
        __class__: Th,
        __properties__: {
          get_justPressed: "get_justPressed",
          get_pressed: "get_pressed",
          get_justReleased: "get_justReleased",
        },
      });
      var Kg = function () {
        this.list = [];
        this._inactiveTouches = [];
        this._touchesCache = new lc();
        Kg.maxTouchPoints = Tg.maxTouchPoints;
        Tg.inputMode = 2;
        na.get_current().stage.addEventListener(
          "touchBegin",
          q(this, this.handleTouchBegin)
        );
        na.get_current().stage.addEventListener(
          "touchEnd",
          q(this, this.handleTouchEnd)
        );
        na.get_current().stage.addEventListener(
          "touchMove",
          q(this, this.handleTouchMove)
        );
      };
      g["flixel.input.touch.FlxTouchManager"] = Kg;
      Kg.__name__ = "flixel.input.touch.FlxTouchManager";
      Kg.__interfaces__ = [Mf];
      Kg.prototype = {
        destroy: function () {
          for (var a = 0, b = this.list; a < b.length; ) {
            var c = b[a];
            ++a;
            c.destroy();
          }
          this.list = null;
          a = 0;
          for (b = this._inactiveTouches; a < b.length; )
            (c = b[a]), ++a, c.destroy();
          this._touchesCache = this._inactiveTouches = null;
        },
        reset: function () {
          for (var a = this._touchesCache.keys(); a.hasNext(); ) {
            var b = a.next();
            this._touchesCache.remove(b);
          }
          a = 0;
          for (b = this.list; a < b.length; ) {
            var c = b[a];
            ++a;
            c.input.reset();
            this._inactiveTouches.push(c);
          }
          this.list.splice(0, this.list.length);
        },
        handleTouchBegin: function (a) {
          var b = this._touchesCache.h[a.touchPointID];
          null != b
            ? b.setXY(a.stageX | 0, a.stageY | 0)
            : (b = this.recycle(a.stageX | 0, a.stageY | 0, a.touchPointID));
          b.input.press();
        },
        handleTouchEnd: function (a) {
          a = this._touchesCache.h[a.touchPointID];
          null != a && a.input.release();
        },
        handleTouchMove: function (a) {
          var b = this._touchesCache.h[a.touchPointID];
          null != b && b.setXY(a.stageX | 0, a.stageY | 0);
        },
        add: function (a) {
          this.list.push(a);
          return (this._touchesCache.h[a.input.ID] = a);
        },
        recycle: function (a, b, c) {
          if (0 < this._inactiveTouches.length) {
            var d = this._inactiveTouches.pop();
            d.recycle(a, b, c);
            return this.add(d);
          }
          return this.add(new Th(a, b, c));
        },
        update: function () {
          for (var a = this.list.length - 1, b; 0 <= a; ) {
            b = this.list[a];
            var c = b.input;
            (0 != c.current && -1 != c.current) || -1 == b.input.current
              ? b.update()
              : (b.input.reset(),
                this._touchesCache.remove(b.input.ID),
                this.list.splice(a, 1),
                this._inactiveTouches.push(b));
            --a;
          }
        },
        onFocus: function () {},
        onFocusLost: function () {
          this.reset();
        },
        __class__: Kg,
      };
      var Ye = function () {};
      g["flixel.math.FlxMath"] = Ye;
      Ye.__name__ = "flixel.math.FlxMath";
      Ye.roundDecimal = function (a, b) {
        for (var c = 1, d = 0; d < b; ) d++, (c *= 10);
        return Math.round(a * c) / c;
      };
      Ye.remapToRange = function (a, b, c, d, e) {
        return d + ((e - d) / (c - b)) * (a - b);
      };
      var $f = function (a, b, c, d, e, f) {
        Ea.call(this, a, b, c, d, e, f);
      };
      g["flixel.math.FlxMatrix"] = $f;
      $f.__name__ = "flixel.math.FlxMatrix";
      $f.__super__ = Ea;
      $f.prototype = r(Ea.prototype, { __class__: $f });
      var ag = function (a, b, c) {
        U.call(this);
        this._setXCallback = a;
        this._setXYCallback = this._setYCallback = c;
        null != this._setXCallback &&
          (null == this._setYCallback && (this._setYCallback = a),
          null == this._setXYCallback && (this._setXYCallback = a));
      };
      g["flixel.math.FlxCallbackPoint"] = ag;
      ag.__name__ = "flixel.math.FlxCallbackPoint";
      ag.__super__ = U;
      ag.prototype = r(U.prototype, {
        set: function (a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          U.prototype.set.call(this, a, b);
          null != this._setXYCallback && this._setXYCallback(this);
          return this;
        },
        set_x: function (a) {
          U.prototype.set_x.call(this, a);
          null != this._setXCallback && this._setXCallback(this);
          return a;
        },
        set_y: function (a) {
          U.prototype.set_y.call(this, a);
          null != this._setYCallback && this._setYCallback(this);
          return a;
        },
        destroy: function () {
          U.prototype.destroy.call(this);
          this._setXYCallback = this._setYCallback = this._setXCallback = null;
        },
        put: function () {},
        __class__: ag,
      });
      var ni = function () {};
      g["flixel.math.FlxVelocity"] = ni;
      ni.__name__ = "flixel.math.FlxVelocity";
      ni.computeVelocity = function (a, b, c, d, e) {
        0 != b
          ? (a += b * e)
          : 0 != c &&
            ((b = c * e), (a = 0 < a - b ? a - b : 0 > a + b ? a + b : 0));
        0 != a && 0 != d && (a > d ? (a = d) : a < -d && (a = -d));
        return a;
      };
      var Ge = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Ge.preload) this.__fromImage(Ge.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Ge.resourceName), Ge.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Ge.preload && (Ge.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.GraphicLogo"] = Ge;
      Ge.__name__ = "flixel.system.GraphicLogo";
      Ge.__super__ = J;
      Ge.prototype = r(J.prototype, { __class__: Ge });
      var He = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != He.preload) this.__fromImage(He.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(He.resourceName), He.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == He.preload && (He.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.GraphicVirtualInput"] = He;
      He.__name__ = "flixel.system.GraphicVirtualInput";
      He.__super__ = J;
      He.prototype = r(J.prototype, { __class__: He });
      var gb = function (a) {
        this.length = a.byteLength;
        this.b = new Uint8Array(a);
        this.b.bufferValue = a;
        a.hxBytes = this;
        a.bytes = this.b;
      };
      g["haxe.io.Bytes"] = gb;
      gb.__name__ = "haxe.io.Bytes";
      gb.ofString = function (a, b) {
        b = [];
        for (var c = 0; c < a.length; ) {
          var d = a.charCodeAt(c++);
          55296 <= d &&
            56319 >= d &&
            (d = ((d - 55232) << 10) | (a.charCodeAt(c++) & 1023));
          127 >= d
            ? b.push(d)
            : (2047 >= d
                ? b.push(192 | (d >> 6))
                : (65535 >= d
                    ? b.push(224 | (d >> 12))
                    : (b.push(240 | (d >> 18)), b.push(128 | ((d >> 12) & 63))),
                  b.push(128 | ((d >> 6) & 63))),
              b.push(128 | (d & 63)));
        }
        return new gb(new Uint8Array(b).buffer);
      };
      gb.ofData = function (a) {
        var b = a.hxBytes;
        return null != b ? b : new gb(a);
      };
      gb.prototype = {
        blit: function (a, b, c, d) {
          if (
            0 > a ||
            0 > c ||
            0 > d ||
            a + d > this.length ||
            c + d > b.length
          )
            throw C.thrown(Ug.OutsideBounds);
          0 == c && d == b.b.byteLength
            ? this.b.set(b.b, a)
            : this.b.set(b.b.subarray(c, c + d), a);
        },
        getString: function (a, b, c) {
          if (0 > a || 0 > b || a + b > this.length)
            throw C.thrown(Ug.OutsideBounds);
          c = "";
          var d = this.b,
            e = Gm.fromCharCode,
            f = a;
          for (a += b; f < a; )
            if (((b = d[f++]), 128 > b)) {
              if (0 == b) break;
              c += e(b);
            } else if (224 > b) c += e(((b & 63) << 6) | (d[f++] & 127));
            else if (240 > b) {
              var h = d[f++];
              c += e(((b & 31) << 12) | ((h & 127) << 6) | (d[f++] & 127));
            } else {
              h = d[f++];
              var m = d[f++];
              b =
                ((b & 15) << 18) |
                ((h & 127) << 12) |
                ((m & 127) << 6) |
                (d[f++] & 127);
              c += e((b >> 10) + 55232);
              c += e((b & 1023) | 56320);
            }
          return c;
        },
        toString: function () {
          return this.getString(0, this.length);
        },
        __class__: gb,
      };
      var Km = function () {};
      g["openfl.utils.IDataOutput"] = Km;
      Km.__name__ = "openfl.utils.IDataOutput";
      Km.__isInterface__ = !0;
      var Lm = function () {};
      g["openfl.utils.IDataInput"] = Lm;
      Lm.__name__ = "openfl.utils.IDataInput";
      Lm.__isInterface__ = !0;
      var id = function (a) {
        null == a && (a = 0);
        var b = new gb(new ArrayBuffer(a));
        gb.call(this, b.b.buffer);
        this.__length = a;
        null == id.__defaultEndian &&
          (nc.get_endianness() == fn.LITTLE_ENDIAN
            ? (id.__defaultEndian = 1)
            : (id.__defaultEndian = 0));
        this.__endian = id.__defaultEndian;
        this.objectEncoding = id.defaultObjectEncoding;
        this.position = 0;
      };
      g["openfl.utils.ByteArrayData"] = id;
      id.__name__ = "openfl.utils.ByteArrayData";
      id.__interfaces__ = [Km, Lm];
      id.fromBytes = function (a) {
        var b = new id();
        b.__fromBytes(a);
        return b;
      };
      id.__super__ = gb;
      id.prototype = r(gb.prototype, {
        readByte: function () {
          var a = this.readUnsignedByte();
          return 0 != (a & 128) ? a - 256 : a;
        },
        readInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedByte: function () {
          if (this.position < this.length) return this.b[this.position++];
          throw C.thrown(new Uh());
        },
        readUnsignedInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedShort: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte();
          return 1 == this.__endian ? (b << 8) + a : (a << 8) | b;
        },
        readUTF: function () {
          var a = this.readUnsignedShort();
          return this.readUTFBytes(a);
        },
        readUTFBytes: function (a) {
          if (this.position + a > this.length) throw C.thrown(new Uh());
          this.position += a;
          return this.getString(this.position - a, a);
        },
        writeByte: function (a) {
          this.__resize(this.position + 1);
          this.b[this.position++] = a & 255;
        },
        writeInt: function (a) {
          this.__resize(this.position + 4);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 24) & 255))
            : ((this.b[this.position++] = (a >> 24) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeShort: function (a) {
          this.__resize(this.position + 2);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255))
            : ((this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeUnsignedInt: function (a) {
          this.writeInt(a);
        },
        __fromBytes: function (a) {
          this.b = a.b;
          this.__length = a.length;
          this.data = a.data;
          this.length = a.length;
        },
        __resize: function (a) {
          if (a > this.__length) {
            var b = new gb(new ArrayBuffer((3 * (a + 1)) >> 1));
            if (0 < this.__length) {
              var c = this.length;
              this.length = this.__length;
              b.blit(0, this, 0, this.__length);
              this.length = c;
            }
            this.b = b.b;
            this.__length = b.length;
            this.data = b.data;
          }
          this.length < a && (this.length = a);
        },
        __class__: id,
      });
      var Xd = function () {};
      g["flixel.system.FlxAssets"] = Xd;
      Xd.__name__ = "flixel.system.FlxAssets";
      Xd.drawLogo = function (a) {
        a.beginFill(47394);
        a.moveTo(50, 13);
        a.lineTo(51, 13);
        a.lineTo(87, 50);
        a.lineTo(87, 51);
        a.lineTo(51, 87);
        a.lineTo(50, 87);
        a.lineTo(13, 51);
        a.lineTo(13, 50);
        a.lineTo(50, 13);
        a.endFill();
        a.beginFill(16761138);
        a.moveTo(0, 0);
        a.lineTo(25, 0);
        a.lineTo(50, 13);
        a.lineTo(13, 50);
        a.lineTo(0, 25);
        a.lineTo(0, 0);
        a.endFill();
        a.beginFill(16066382);
        a.moveTo(100, 0);
        a.lineTo(75, 0);
        a.lineTo(51, 13);
        a.lineTo(87, 50);
        a.lineTo(100, 25);
        a.lineTo(100, 0);
        a.endFill();
        a.beginFill(3555839);
        a.moveTo(0, 100);
        a.lineTo(25, 100);
        a.lineTo(50, 87);
        a.lineTo(13, 51);
        a.lineTo(0, 75);
        a.lineTo(0, 100);
        a.endFill();
        a.beginFill(314875);
        a.moveTo(100, 100);
        a.lineTo(75, 100);
        a.lineTo(51, 87);
        a.lineTo(87, 51);
        a.lineTo(100, 75);
        a.lineTo(100, 100);
        a.endFill();
      };
      var xi = function () {
        H.call(this);
        this.makeGraphic(1, 1, -1, !0, p.bitmap.getUniqueKey("bg_graphic_"));
        this.scrollFactor.set();
      };
      g["flixel.system.FlxBGSprite"] = xi;
      xi.__name__ = "flixel.system.FlxBGSprite";
      xi.__super__ = H;
      xi.prototype = r(H.prototype, {
        draw: function () {
          for (var a = 0, b = this.get_cameras(); a < b.length; ) {
            var c = b[a];
            ++a;
            c.visible &&
              c.exists &&
              (this._matrix.identity(),
              this._matrix.scale(c.viewWidth, c.viewHeight),
              c.drawPixels(
                this.frame,
                null,
                this._matrix,
                this.colorTransform
              ));
          }
        },
        __class__: xi,
      });
      var Of = function () {
        fa.call(this);
        this.addEventListener("addedToStage", q(this, this.onAddedToStage));
      };
      g["flixel.system._FlxBasePreloader.DefaultPreloader"] = Of;
      Of.__name__ = "flixel.system._FlxBasePreloader.DefaultPreloader";
      Of.__super__ = fa;
      Of.prototype = r(fa.prototype, {
        onAddedToStage: function (a) {
          this.removeEventListener(
            "addedToStage",
            q(this, this.onAddedToStage)
          );
          this.onInit();
          this.onUpdate(
            this.get_loaderInfo().bytesLoaded,
            this.get_loaderInfo().bytesTotal
          );
          this.addEventListener("progress", q(this, this.onProgress));
          this.addEventListener("complete", q(this, this.onComplete));
        },
        onComplete: function (a) {
          a.preventDefault();
          this.removeEventListener("progress", q(this, this.onProgress));
          this.removeEventListener("complete", q(this, this.onComplete));
          this.onLoaded();
        },
        onProgress: function (a) {
          this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0);
        },
        onInit: function () {},
        onLoaded: function () {
          this.dispatchEvent(new Ca("unload"));
        },
        onUpdate: function (a, b) {},
        __class__: Of,
      });
      var Pf = function (a, b) {
        null == a && (a = 0);
        this._loaded = this._urlChecked = this._destroyed = !1;
        this._percent = 0;
        this.siteLockBodyText =
          "It appears the website you are using is hosting an unauthorized copy of this game. Storage or redistribution of this content, without the express permission of the developer or other copyright holder, is prohibited under copyright law.\n\nThank you for your interest in this game! Please support the developer by visiting the following website to play the game:";
        this.siteLockTitleText = "Sorry.";
        this.minDisplayTime = this.siteLockURLIndex = 0;
        Of.call(this);
        this.minDisplayTime = a;
        this.allowedURLs = null != b ? b : [];
        this._startTime = new Date().getTime();
      };
      g["flixel.system.FlxBasePreloader"] = Pf;
      Pf.__name__ = "flixel.system.FlxBasePreloader";
      Pf.__super__ = Of;
      Pf.prototype = r(Of.prototype, {
        create: function () {},
        onInit: function () {
          Of.prototype.onInit.call(this);
          na.get_current().stage.set_scaleMode(2);
          na.get_current().stage.align = 6;
          this.create();
          this.addEventListener("enterFrame", q(this, this.onEnterFrame));
          this.checkSiteLock();
        },
        onUpdate: function (a, b) {
          this._percent = 0 != b ? a / b : 0;
        },
        onEnterFrame: function (a) {
          a = new Date().getTime() - this._startTime;
          var b = 1e3 * this.minDisplayTime,
            c = this._percent;
          0 < b && this._percent > a / b && (c = a / b);
          this._destroyed || this.update(c);
          this._loaded &&
            (0 >= b || 1 <= a / b) &&
            (this.removeEventListener("enterFrame", q(this, this.onEnterFrame)),
            Of.prototype.onLoaded.call(this),
            this.destroy(),
            (this._destroyed = !0));
        },
        destroy: function () {},
        update: function (a) {},
        onLoaded: function () {
          this._loaded = !0;
          this._percent = 1;
        },
        createBitmap: function (a, b) {
          var c = new Ob();
          c.set_bitmapData(
            Ya.createInstance(a, [
              0,
              0,
              !0,
              -1,
              function (a) {
                b(c);
              },
            ])
          );
          return c;
        },
        checkSiteLock: function () {
          this._urlChecked ||
            (this.isHostUrlAllowed()
              ? (this._urlChecked = !0)
              : (this.removeChildren(),
                this.removeEventListener(
                  "enterFrame",
                  q(this, this.onEnterFrame)
                ),
                this.createSiteLockFailureScreen()));
        },
        createSiteLockFailureScreen: function () {
          this.addChild(
            this.createSiteLockFailureBackground(16777215, 15066597)
          );
          this.addChild(this.createSiteLockFailureIcon(15066597, 0.9));
          this.addChild(this.createSiteLockFailureText(30));
        },
        createSiteLockFailureBackground: function (a, b) {
          var c = new vf(),
            d = c.get_graphics();
          d.clear();
          var e = new Ea();
          e.createGradientBox(1, 1, 0, -0.5, -0.5);
          var f = Math.max(this.stage.stageWidth, this.stage.stageHeight);
          e.scale(f, f);
          e.translate(
            0.5 * this.stage.stageWidth,
            0.5 * this.stage.stageHeight
          );
          d.beginGradientFill(1, [a, b], [1, 1], [0, 255], e);
          d.drawRect(0, 0, this.stage.stageWidth, this.stage.stageHeight);
          d.endFill();
          return c;
        },
        createSiteLockFailureIcon: function (a, b) {
          var c = new vf(),
            d = c.get_graphics();
          d.clear();
          d.beginFill(a);
          a = [
            1, 6, 2, 2, 2, 6, 6, 2, 2, 2, 6, 1, 6, 2, 6, 2, 6, 2, 6, 1, 6, 6, 2,
            2, 2, 6, 6,
          ];
          for (var e = rb.toIntVector(null), f = 0, h = a.length; f < h; ) {
            var m = f++;
            e.set(m, a[m]);
          }
          var n = e;
          a = [
            120, 0, 164, 0, 200, 35, 200, 79, 200, 130, 160, 130, 160, 79, 160,
            57, 142, 40, 120, 40, 97, 40, 79, 57, 79, 79, 80, 130, 40, 130, 40,
            79, 40, 35, 75, 0, 120, 0, 220, 140, 231, 140, 240, 148, 240, 160,
            240, 300, 240, 311, 231, 320, 220, 320, 20, 320, 8, 320, 0, 311, 0,
            300, 0, 160, 0, 148, 8, 140, 20, 140, 120, 190, 108, 190, 100, 198,
            100, 210, 100, 217, 104, 223, 110, 227, 110, 270, 130, 270, 130,
            227, 135, 223, 140, 217, 140, 210, 140, 198, 131, 190, 120, 190,
          ];
          e = rb.toFloatVector(null);
          f = 0;
          for (h = a.length; f < h; ) (m = f++), e.set(m, a[m]);
          d.drawPath(n, e, 1);
          d.endFill();
          d = new Ea();
          d.translate(-0.5 * c.get_width(), -0.5 * c.get_height());
          b *= Math.min(
            this.stage.stageWidth / c.get_width(),
            this.stage.stageHeight / c.get_height()
          );
          d.scale(b, b);
          d.translate(
            0.5 * this.stage.stageWidth,
            0.5 * this.stage.stageHeight
          );
          c.get_transform().set_matrix(d);
          return c;
        },
        createSiteLockFailureText: function (a) {
          var b = new fa(),
            c = new ma(0, 0, this.stage.stageWidth, this.stage.stageHeight);
          c.inflate(-a, -a);
          a = new ec();
          var d = new zc("_sans", 33, 3355443, !0);
          d.align = 3;
          a.set_defaultTextFormat(d);
          a.set_selectable(!1);
          a.set_width(c.width);
          a.set_text(this.siteLockTitleText);
          d = new ec();
          var e = new zc("_sans", 22, 3355443);
          e.align = 2;
          d.set_defaultTextFormat(e);
          d.set_multiline(!0);
          d.set_wordWrap(!0);
          d.set_selectable(!1);
          d.set_width(c.width);
          d.set_text(this.siteLockBodyText);
          e = new ec();
          var f = new zc("_sans", 22, 7247820, !0, !1, !0);
          f.align = 0;
          f.url = this.allowedURLs[this.siteLockURLIndex];
          e.set_defaultTextFormat(f);
          e.set_selectable(!0);
          e.set_width(c.width);
          e.set_text(this.allowedURLs[this.siteLockURLIndex]);
          this.adjustSiteLockTextFields(a, d, e);
          a.set_height(a.get_textHeight() + 4);
          d.set_height(d.get_textHeight() + 4);
          e.set_height(e.get_textHeight() + 4);
          a.set_x(d.set_x(e.set_x(c.get_left())));
          a.set_y(c.get_top());
          d.set_y(a.get_y() + 2 * a.get_height());
          e.set_y(d.get_y() + d.get_height() + e.get_height());
          b.addChild(a);
          b.addChild(d);
          b.addChild(e);
          return b;
        },
        adjustSiteLockTextFields: function (a, b, c) {},
        isHostUrlAllowed: function () {
          if (0 == this.allowedURLs.length) return !0;
          for (
            var a = yb.getDomain(E.location.href), b = 0, c = this.allowedURLs;
            b < c.length;

          ) {
            var d = c[b];
            ++b;
            if (yb.getDomain(d) == a) return !0;
          }
          return !1;
        },
        __class__: Pf,
      });
      var Tc = function () {
        this.exists = !0;
      };
      g["flixel.system.FlxLinkedList"] = Tc;
      Tc.__name__ = "flixel.system.FlxLinkedList";
      Tc.__interfaces__ = [T];
      Tc.recycle = function () {
        if (null != Tc._cachedListsHead) {
          var a = Tc._cachedListsHead;
          Tc._cachedListsHead = Tc._cachedListsHead.next;
          Tc._NUM_CACHED_FLX_LIST--;
          a.exists = !0;
          a.next = null;
          return a;
        }
        return new Tc();
      };
      Tc.prototype = {
        destroy: function () {
          this.exists &&
            ((this.object = null),
            null != this.next && this.next.destroy(),
            (this.exists = !1),
            (this.next = Tc._cachedListsHead),
            (Tc._cachedListsHead = this),
            Tc._NUM_CACHED_FLX_LIST++);
        },
        __class__: Tc,
      };
      var je = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != je.preload) this.__fromImage(je.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(je.resourceName), je.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == je.preload && (je.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system._FlxPreloader.GraphicLogoLight"] = je;
      je.__name__ = "flixel.system._FlxPreloader.GraphicLogoLight";
      je.__super__ = J;
      je.prototype = r(J.prototype, { __class__: je });
      var ke = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != ke.preload) this.__fromImage(ke.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(ke.resourceName), ke.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == ke.preload && (ke.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system._FlxPreloader.GraphicLogoCorners"] = ke;
      ke.__name__ = "flixel.system._FlxPreloader.GraphicLogoCorners";
      ke.__super__ = J;
      ke.prototype = r(J.prototype, { __class__: ke });
      var qi = function (a, b) {
        null == a && (a = 0);
        Pf.call(this, a, b);
      };
      g["flixel.system.FlxPreloader"] = qi;
      qi.__name__ = "flixel.system.FlxPreloader";
      qi.__super__ = Pf;
      qi.prototype = r(Pf.prototype, {
        create: function () {
          var a = this;
          this._buffer = new fa();
          this._buffer.set_scaleX(this._buffer.set_scaleY(2));
          this.addChild(this._buffer);
          this._width =
            (na.get_current().stage.stageWidth / this._buffer.get_scaleX()) | 0;
          this._height =
            (na.get_current().stage.stageHeight / this._buffer.get_scaleY()) |
            0;
          this._buffer.addChild(
            new Ob(new J(this._width, this._height, !1, 13406))
          );
          var b = this.createBitmap(je, function (b) {
            b.set_width(b.set_height(a._height));
            b.set_x((a._width - b.get_width()) / 2);
          });
          b.smoothing = !0;
          this._buffer.addChild(b);
          this._bmpBar = new Ob(new J(1, 7, !1, 6253311));
          this._bmpBar.set_x(4);
          this._bmpBar.set_y(this._height - 11);
          this._buffer.addChild(this._bmpBar);
          this._text = new ec();
          this._text.set_defaultTextFormat(new zc(Xd.FONT_DEFAULT, 8, 6253311));
          this._text.set_embedFonts(!0);
          this._text.set_selectable(!1);
          this._text.set_multiline(!1);
          this._text.set_x(2);
          this._text.set_y(this._bmpBar.get_y() - 11);
          this._text.set_width(200);
          this._buffer.addChild(this._text);
          this._logo = new fa();
          Xd.drawLogo(this._logo.get_graphics());
          this._logo.set_scaleX(
            this._logo.set_scaleY((this._height / 8) * 0.04)
          );
          this._logo.set_x((this._width - this._logo.get_width()) / 2);
          this._logo.set_y((this._height - this._logo.get_height()) / 2);
          this._buffer.addChild(this._logo);
          this._logoGlow = new fa();
          Xd.drawLogo(this._logoGlow.get_graphics());
          this._logoGlow.set_blendMode(12);
          this._logoGlow.set_scaleX(
            this._logoGlow.set_scaleY((this._height / 8) * 0.04)
          );
          this._logoGlow.set_x((this._width - this._logoGlow.get_width()) / 2);
          this._logoGlow.set_y(
            (this._height - this._logoGlow.get_height()) / 2
          );
          this._buffer.addChild(this._logoGlow);
          b = this.createBitmap(ke, function (b) {
            b.set_width(a._width);
            b.set_height(a.get_height());
          });
          b.smoothing = !0;
          this._buffer.addChild(b);
          b = new Ob(new J(this._width, this._height, !1, 16777215));
          for (var c = 0, d = 0; c < this._height; ) {
            for (d = 0; d < this._width; )
              b.get_bitmapData().setPixel(d++, c, 0);
            c += 2;
          }
          b.set_blendMode(11);
          b.set_alpha(0.25);
          this._buffer.addChild(b);
          Pf.prototype.create.call(this);
        },
        destroy: function () {
          null != this._buffer && this.removeChild(this._buffer);
          this._logoGlow =
            this._logo =
            this._text =
            this._bmpBar =
            this._buffer =
              null;
          Pf.prototype.destroy.call(this);
        },
        update: function (a) {
          this._bmpBar.set_scaleX(a * (this._width - 8));
          this._text.set_text(
            I.string(p.VERSION) + " " + ((100 * a) | 0) + "%"
          );
          0.1 > a
            ? (this._logoGlow.set_alpha(0), this._logo.set_alpha(0))
            : 0.15 > a
            ? (this._logoGlow.set_alpha(Math.random()), this._logo.set_alpha(0))
            : 0.2 > a
            ? (this._logoGlow.set_alpha(0), this._logo.set_alpha(0))
            : 0.25 > a
            ? (this._logoGlow.set_alpha(0), this._logo.set_alpha(Math.random()))
            : 0.7 > a
            ? (this._logoGlow.set_alpha((a - 0.45) / 0.45),
              this._logo.set_alpha(1))
            : 0.8 < a && 0.9 > a
            ? (this._logoGlow.set_alpha(1 - (a - 0.8) / 0.1),
              this._logo.set_alpha(0))
            : 0.9 < a && this._buffer.set_alpha(1 - (a - 0.9) / 0.1);
        },
        __class__: qi,
      });
      var Bd = function (a, b, c, d, e) {
        ya.call(this);
        var f = a,
          h = b,
          m = c,
          n = d;
        null == n && (n = 0);
        null == m && (m = 0);
        null == h && (h = 0);
        null == f && (f = 0);
        this.x = f;
        this.y = h;
        this.width = m;
        this.height = n;
        this.reset(a, b, c, d, e);
      };
      g["flixel.system.FlxQuadTree"] = Bd;
      Bd.__name__ = "flixel.system.FlxQuadTree";
      Bd.__super__ = ya;
      Bd.prototype = r(ya.prototype, {
        reset: function (a, b, c, d, e) {
          this.exists = !0;
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
          this._headA = this._tailA = Tc.recycle();
          this._headB = this._tailB = Tc.recycle();
          if (null != e) {
            if (null != e._headA.object)
              for (d = e._headA; null != d; )
                null != this._tailA.object &&
                  ((a = this._tailA),
                  (this._tailA = Tc.recycle()),
                  (a.next = this._tailA)),
                  (this._tailA.object = d.object),
                  (d = d.next);
            if (null != e._headB.object)
              for (d = e._headB; null != d; )
                null != this._tailB.object &&
                  ((a = this._tailB),
                  (this._tailB = Tc.recycle()),
                  (a.next = this._tailB)),
                  (this._tailB.object = d.object),
                  (d = d.next);
          } else
            Bd._min = Math.floor(
              (this.width + this.height) / (2 * Bd.divisions)
            );
          this._canSubdivide = this.width > Bd._min || this.height > Bd._min;
          this._southWestTree =
            this._southEastTree =
            this._northEastTree =
            this._northWestTree =
              null;
          this._leftEdge = this.x;
          this._rightEdge = this.x + this.width;
          this._halfWidth = this.width / 2;
          this._midpointX = this._leftEdge + this._halfWidth;
          this._topEdge = this.y;
          this._bottomEdge = this.y + this.height;
          this._halfHeight = this.height / 2;
          this._midpointY = this._topEdge + this._halfHeight;
        },
        destroy: function () {
          this._headA = Z.destroy(this._headA);
          this._headB = Z.destroy(this._headB);
          this._tailA = Z.destroy(this._tailA);
          this._tailB = Z.destroy(this._tailB);
          this._northWestTree = Z.destroy(this._northWestTree);
          this._northEastTree = Z.destroy(this._northEastTree);
          this._southWestTree = Z.destroy(this._southWestTree);
          this._southEastTree = Z.destroy(this._southEastTree);
          Bd._object = null;
          Bd._processingCallback = null;
          Bd._notifyCallback = null;
          this.exists = !1;
          this.next = Bd._cachedTreesHead;
          Bd._cachedTreesHead = this;
          Bd._NUM_CACHED_QUAD_TREES++;
          ya.prototype.destroy.call(this);
        },
        __class__: Bd,
      });
      var of = function () {
        this._alreadyPaused = !1;
        this._volumeAdjust = 1;
        this.loopTime = this._time = this._length = 0;
        ca.call(this);
        this.reset();
      };
      g["flixel.system.FlxSound"] = of;
      of.__name__ = "flixel.system.FlxSound";
      of.__super__ = ca;
      of.prototype = r(ca.prototype, {
        reset: function () {
          this.destroy();
          this._time = this.y = this.x = 0;
          this._paused = !1;
          this._volumeAdjust = this._volume = 1;
          this.looped = !1;
          this.endTime = this.loopTime = 0;
          this._target = null;
          this._radius = 0;
          this._proximityPan = !1;
          this.set_visible(!1);
          this.amplitudeRight = this.amplitudeLeft = this.amplitude = 0;
          this.autoDestroy = !1;
          null == this._transform && (this._transform = new tf());
          this._transform.pan = 0;
        },
        destroy: function () {
          this._transform = null;
          this.set_exists(!1);
          this.set_active(!1);
          this.artist = this.name = this._target = null;
          null != this._channel &&
            (this._channel.removeEventListener(
              "soundComplete",
              q(this, this.stopped)
            ),
            this._channel.stop(),
            (this._channel = null));
          null != this._sound &&
            (this._sound.removeEventListener("id3", q(this, this.gotID3)),
            (this._sound = null));
          this.onComplete = null;
          ca.prototype.destroy.call(this);
        },
        update: function (a) {
          if (null != this._channel) {
            this._time = this._channel.get_position();
            var b = 1;
            if (null != this._target) {
              a = this._target.getPosition();
              var c = this.x;
              b = this.y;
              null == b && (b = 0);
              null == c && (c = 0);
              null == b && (b = 0);
              null == c && (c = 0);
              b = U._pool.get().set(c, b);
              b._inPool = !1;
              b._weak = !0;
              b = a.distanceTo(b) / this._radius;
              a.put();
              a = 0 > b ? 0 : b;
              b = 1 - (1 < a ? 1 : a);
              this._proximityPan &&
                ((a = (this.x - this._target.x) / this._radius),
                (a = -1 > a ? -1 : a),
                (this._transform.pan = 1 < a ? 1 : a));
            }
            this._volumeAdjust = b;
            this.updateTransform();
            0 < this._transform.volume
              ? ((this.amplitudeLeft =
                  this._channel.leftPeak / this._transform.volume),
                (this.amplitudeRight =
                  this._channel.rightPeak / this._transform.volume),
                (this.amplitude =
                  0.5 * (this.amplitudeLeft + this.amplitudeRight)))
              : (this.amplitude = this.amplitudeRight = this.amplitudeLeft = 0);
            null != this.endTime &&
              this._time >= this.endTime &&
              this.stopped();
          }
        },
        kill: function () {
          ca.prototype.kill.call(this);
          this.cleanup(!1);
        },
        loadEmbedded: function (a, b, c, d) {
          null == c && (c = !1);
          null == b && (b = !1);
          if (null == a) return this;
          this.cleanup(!0);
          a instanceof Wd
            ? (this._sound = a)
            : pa.__instanceof(a, hl)
            ? (this._sound = Ya.createInstance(a, []))
            : "string" == typeof a &&
              (la.exists(a, "SOUND") || la.exists(a, "MUSIC")) &&
              (this._sound = la.getSound(a));
          return this.init(b, c, d);
        },
        loadStream: function (a, b, c, d) {
          null == c && (c = !1);
          null == b && (b = !1);
          this.cleanup(!0);
          this._sound = new Wd();
          this._sound.addEventListener("id3", q(this, this.gotID3));
          this._sound.load(new xh(a));
          return this.init(b, c, d);
        },
        init: function (a, b, c) {
          null == b && (b = !1);
          null == a && (a = !1);
          this.looped = a;
          this.autoDestroy = b;
          this.updateTransform();
          this.set_exists(!0);
          this.onComplete = c;
          this.endTime = this._length =
            null == this._sound ? 0 : this._sound.get_length();
          return this;
        },
        play: function (a, b, c) {
          null == b && (b = 0);
          null == a && (a = !1);
          if (!this.exists) return this;
          if (a) this.cleanup(!1, !0);
          else if (null != this._channel) return this;
          this._paused ? this.resume() : this.startSound(b);
          this.endTime = c;
          return this;
        },
        resume: function () {
          this._paused && this.startSound(this._time);
          return this;
        },
        pause: function () {
          if (null == this._channel) return this;
          this._time = this._channel.get_position();
          this._paused = !0;
          this.cleanup(!1, !1);
          return this;
        },
        volumeTween: function (a) {
          this.set_volume(a);
        },
        updateTransform: function () {
          this._transform.volume =
            (p.sound.muted ? 0 : 1) *
            p.sound.volume *
            (null != this.group ? this.group.volume : 1) *
            this._volume *
            this._volumeAdjust;
          null != this._channel &&
            this._channel.set_soundTransform(this._transform);
        },
        startSound: function (a) {
          null != this._sound &&
            ((this._time = a),
            (this._paused = !1),
            (this._channel = this._sound.play(this._time, 0, this._transform)),
            null != this._channel
              ? (this._channel.addEventListener(
                  "soundComplete",
                  q(this, this.stopped)
                ),
                this.set_active(!0))
              : (this.set_exists(!1), this.set_active(!1)));
        },
        stopped: function (a) {
          if (null != this.onComplete) this.onComplete();
          this.looped
            ? (this.cleanup(!1), this.play(!1, this.loopTime, this.endTime))
            : this.cleanup(this.autoDestroy);
        },
        cleanup: function (a, b) {
          null == b && (b = !0);
          a
            ? this.reset()
            : (null != this._channel &&
                (this._channel.removeEventListener(
                  "soundComplete",
                  q(this, this.stopped)
                ),
                this._channel.stop(),
                (this._channel = null)),
              this.set_active(!1),
              b && ((this._time = 0), (this._paused = !1)));
        },
        gotID3: function (a) {
          this.name = this._sound.get_id3().songName;
          this.artist = this._sound.get_id3().artist;
          this._sound.removeEventListener("id3", q(this, this.gotID3));
        },
        onFocus: function () {
          this._alreadyPaused || this.resume();
        },
        onFocusLost: function () {
          this._alreadyPaused = this._paused;
          this.pause();
        },
        set_group: function (a) {
          if (this.group != a) {
            var b = this.group;
            this.group = a;
            null != b && b.remove(this);
            null != a && a.add(this);
            this.updateTransform();
          }
          return a;
        },
        set_volume: function (a) {
          var b = 0 > a ? 0 : a;
          this._volume = 1 < b ? 1 : b;
          this.updateTransform();
          return a;
        },
        set_time: function (a) {
          null != this._channel && (this.cleanup(!1, !0), this.startSound(a));
          return (this._time = a);
        },
        __class__: of,
        __properties__: r(ca.prototype.__properties__, {
          set_time: "set_time",
          set_volume: "set_volume",
          set_group: "set_group",
        }),
      });
      var Cj = function (a) {
        null == a && (a = 1);
        this.sounds = [];
        this.set_volume(a);
      };
      g["flixel.system.FlxSoundGroup"] = Cj;
      Cj.__name__ = "flixel.system.FlxSoundGroup";
      Cj.prototype = {
        add: function (a) {
          return 0 > this.sounds.indexOf(a)
            ? (this.sounds.push(a), a.set_group(this), !0)
            : !1;
        },
        remove: function (a) {
          return 0 <= this.sounds.indexOf(a)
            ? (a.set_group(null), ba.remove(this.sounds, a))
            : !1;
        },
        set_volume: function (a) {
          this.volume = a;
          for (var b = 0, c = this.sounds; b < c.length; ) {
            var d = c[b];
            ++b;
            d.updateTransform();
          }
          return a;
        },
        __class__: Cj,
        __properties__: { set_volume: "set_volume" },
      };
      var xd = function (a) {
        this._curPart = 0;
        $b.call(this, a);
      };
      g["flixel.system.FlxSplash"] = xd;
      xd.__name__ = "flixel.system.FlxSplash";
      xd.__super__ = $b;
      xd.prototype = r($b.prototype, {
        create: function () {
          this._cachedBgColor = p.cameras.get_bgColor();
          p.cameras.set_bgColor(-16777216);
          this._cachedTimestep = p.fixedTimestep;
          p.fixedTimestep = !1;
          this._cachedAutoPause = p.autoPause;
          p.autoPause = !1;
          p.keys.enabled = !1;
          this._times = [0.041, 0.184, 0.334, 0.495, 0.636];
          this._colors = [47394, 16761138, 16066382, 3555839, 314875];
          this._functions = [
            q(this, this.drawGreen),
            q(this, this.drawYellow),
            q(this, this.drawRed),
            q(this, this.drawBlue),
            q(this, this.drawLightBlue),
          ];
          for (var a = 0, b = this._times; a < b.length; ) {
            var c = b[a];
            ++a;
            new hc().start(c, q(this, this.timerCallback));
          }
          a = na.get_current().stage.stageWidth;
          b = na.get_current().stage.stageHeight;
          this._sprite = new fa();
          na.get_current().stage.addChild(this._sprite);
          this._gfx = this._sprite.get_graphics();
          this._text = new ec();
          this._text.set_selectable(!1);
          this._text.set_embedFonts(!0);
          c = new zc(Xd.FONT_DEFAULT, 16, 16777215);
          c.align = 0;
          this._text.set_defaultTextFormat(c);
          this._text.set_text("HaxeFlixel");
          na.get_current().stage.addChild(this._text);
          this.onResize(a, b);
          xd.muted ||
            p.sound.load(la.getSound("flixel/sounds/flixel.ogg")).play();
        },
        destroy: function () {
          this._functions =
            this._colors =
            this._times =
            this._text =
            this._gfx =
            this._sprite =
              null;
          $b.prototype.destroy.call(this);
        },
        onResize: function (a, b) {
          $b.prototype.onResize.call(this, a, b);
          this._sprite.set_x(a / 2);
          this._sprite.set_y(b / 2 - 20 * p.game.get_scaleY());
          this._text.set_width(a / p.game.get_scaleX());
          this._text.set_x(0);
          this._text.set_y(this._sprite.get_y() + 80 * p.game.get_scaleY());
          this._sprite.set_scaleX(this._text.set_scaleX(p.game.get_scaleX()));
          this._sprite.set_scaleY(this._text.set_scaleY(p.game.get_scaleY()));
        },
        timerCallback: function (a) {
          this._functions[this._curPart]();
          this._text.set_textColor(this._colors[this._curPart]);
          this._text.set_text("HaxeFlixel");
          this._curPart++;
          5 == this._curPart &&
            (mb.tween(this._sprite, { alpha: 0 }, 3, {
              ease: ac.quadOut,
              onComplete: q(this, this.onComplete),
            }),
            mb.tween(this._text, { alpha: 0 }, 3, { ease: ac.quadOut }));
        },
        drawGreen: function () {
          this._gfx.beginFill(47394);
          this._gfx.moveTo(0, -37);
          this._gfx.lineTo(1, -37);
          this._gfx.lineTo(37, 0);
          this._gfx.lineTo(37, 1);
          this._gfx.lineTo(1, 37);
          this._gfx.lineTo(0, 37);
          this._gfx.lineTo(-37, 1);
          this._gfx.lineTo(-37, 0);
          this._gfx.lineTo(0, -37);
          this._gfx.endFill();
        },
        drawYellow: function () {
          this._gfx.beginFill(16761138);
          this._gfx.moveTo(-50, -50);
          this._gfx.lineTo(-25, -50);
          this._gfx.lineTo(0, -37);
          this._gfx.lineTo(-37, 0);
          this._gfx.lineTo(-50, -25);
          this._gfx.lineTo(-50, -50);
          this._gfx.endFill();
        },
        drawRed: function () {
          this._gfx.beginFill(16066382);
          this._gfx.moveTo(50, -50);
          this._gfx.lineTo(25, -50);
          this._gfx.lineTo(1, -37);
          this._gfx.lineTo(37, 0);
          this._gfx.lineTo(50, -25);
          this._gfx.lineTo(50, -50);
          this._gfx.endFill();
        },
        drawBlue: function () {
          this._gfx.beginFill(3555839);
          this._gfx.moveTo(-50, 50);
          this._gfx.lineTo(-25, 50);
          this._gfx.lineTo(0, 37);
          this._gfx.lineTo(-37, 1);
          this._gfx.lineTo(-50, 25);
          this._gfx.lineTo(-50, 50);
          this._gfx.endFill();
        },
        drawLightBlue: function () {
          this._gfx.beginFill(314875);
          this._gfx.moveTo(50, 50);
          this._gfx.lineTo(25, 50);
          this._gfx.lineTo(1, 37);
          this._gfx.lineTo(37, 1);
          this._gfx.lineTo(50, 25);
          this._gfx.lineTo(50, 50);
          this._gfx.endFill();
        },
        onComplete: function (a) {
          p.cameras.set_bgColor(this._cachedBgColor);
          p.fixedTimestep = this._cachedTimestep;
          p.autoPause = this._cachedAutoPause;
          p.keys.enabled = !0;
          na.get_current().stage.removeChild(this._sprite);
          na.get_current().stage.removeChild(this._text);
          a = Ya.createInstance(xd.nextState, []);
          p.game._state.switchTo(a) && (p.game._requestedState = a);
          p.game._gameJustStarted = !0;
        },
        __class__: xd,
      });
      var hf = function () {};
      g["flixel.system.debug.DebuggerUtil"] = hf;
      hf.__name__ = "flixel.system.debug.DebuggerUtil";
      hf.createTextField = function (a, b, c, d) {
        null == d && (d = 12);
        null == c && (c = -1);
        null == b && (b = 0);
        null == a && (a = 0);
        return hf.initTextField(new ec(), a, b, c, d);
      };
      hf.initTextField = function (a, b, c, d, e) {
        null == e && (e = 12);
        null == d && (d = -1);
        null == c && (c = 0);
        null == b && (b = 0);
        a.set_x(b);
        a.set_y(c);
        a.set_multiline(!1);
        a.set_wordWrap(!1);
        a.set_embedFonts(!0);
        a.set_selectable(!1);
        a.set_defaultTextFormat(new zc(Xd.FONT_DEBUGGER, e, d & 16777215));
        a.set_alpha(((d >> 24) & 255) / 255);
        a.set_autoSize(1);
        return a;
      };
      hf.fixSize = function (a) {
        ia.setProperty(a, "width", 11);
        ia.setProperty(a, "height", 11);
        return a;
      };
      var Ie = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Ie.preload) this.__fromImage(Ie.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Ie.resourceName), Ie.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Ie.preload && (Ie.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug._FlxDebugger.GraphicFlixel"] = Ie;
      Ie.__name__ = "flixel.system.debug._FlxDebugger.GraphicFlixel";
      Ie.__super__ = J;
      Ie.prototype = r(J.prototype, { __class__: Ie });
      var Je = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Je.preload) this.__fromImage(Je.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Je.resourceName), Je.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Je.preload && (Je.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug._FlxDebugger.GraphicDrawDebug"] = Je;
      Je.__name__ = "flixel.system.debug._FlxDebugger.GraphicDrawDebug";
      Je.__super__ = J;
      Je.prototype = r(J.prototype, { __class__: Je });
      var Ke = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Ke.preload) this.__fromImage(Ke.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Ke.resourceName), Ke.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Ke.preload && (Ke.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicLog"] = Ke;
      Ke.__name__ = "flixel.system.debug.GraphicLog";
      Ke.__super__ = J;
      Ke.prototype = r(J.prototype, { __class__: Ke });
      var Le = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Le.preload) this.__fromImage(Le.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Le.resourceName), Le.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Le.preload && (Le.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicStats"] = Le;
      Le.__name__ = "flixel.system.debug.GraphicStats";
      Le.__super__ = J;
      Le.prototype = r(J.prototype, { __class__: Le });
      var Me = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Me.preload) this.__fromImage(Me.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Me.resourceName), Me.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Me.preload && (Me.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicWatch"] = Me;
      Me.__name__ = "flixel.system.debug.GraphicWatch";
      Me.__super__ = J;
      Me.prototype = r(J.prototype, { __class__: Me });
      var Ne = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Ne.preload) this.__fromImage(Ne.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Ne.resourceName), Ne.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Ne.preload && (Ne.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicBitmapLog"] = Ne;
      Ne.__name__ = "flixel.system.debug.GraphicBitmapLog";
      Ne.__super__ = J;
      Ne.prototype = r(J.prototype, { __class__: Ne });
      var Oe = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Oe.preload) this.__fromImage(Oe.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Oe.resourceName), Oe.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Oe.preload && (Oe.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicConsole"] = Oe;
      Oe.__name__ = "flixel.system.debug.GraphicConsole";
      Oe.__super__ = J;
      Oe.prototype = r(J.prototype, { __class__: Oe });
      var Pe = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Pe.preload) this.__fromImage(Pe.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Pe.resourceName), Pe.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Pe.preload && (Pe.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicArrowLeft"] = Pe;
      Pe.__name__ = "flixel.system.debug.GraphicArrowLeft";
      Pe.__super__ = J;
      Pe.prototype = r(J.prototype, { __class__: Pe });
      var Qe = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Qe.preload) this.__fromImage(Qe.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Qe.resourceName), Qe.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Qe.preload && (Qe.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicArrowRight"] = Qe;
      Qe.__name__ = "flixel.system.debug.GraphicArrowRight";
      Qe.__super__ = J;
      Qe.prototype = r(J.prototype, { __class__: Qe });
      var le = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != le.preload) this.__fromImage(le.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(le.resourceName), le.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == le.preload && (le.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicCloseButton"] = le;
      le.__name__ = "flixel.system.debug.GraphicCloseButton";
      le.__super__ = J;
      le.prototype = r(J.prototype, { __class__: le });
      var me = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != me.preload) this.__fromImage(me.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(me.resourceName), me.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == me.preload && (me.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.GraphicInteractive"] = me;
      me.__name__ = "flixel.system.debug.GraphicInteractive";
      me.__super__ = J;
      me.prototype = r(J.prototype, { __class__: me });
      var Dj = function () {
        fa.call(this);
      };
      g["flixel.system.debug.FlxDebugger"] = Dj;
      Dj.__name__ = "flixel.system.debug.FlxDebugger";
      Dj.__super__ = fa;
      Dj.prototype = r(fa.prototype, { __class__: Dj });
      var Vg = function () {};
      g["flixel.system.debug.Tooltip"] = Vg;
      Vg.__name__ = "flixel.system.debug.Tooltip";
      Vg.add = function (a, b) {
        a = new Ej(a, b);
        Vg._container.addChild(a);
        Vg._tooltips.push(a);
        return a;
      };
      var Ej = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        fa.call(this);
        this.owner = a;
        this.maxSize = new Ra(c, d);
        this._shadow = new Ob(new J(1, 2, !0, -16777216));
        this._background = new Ob(new J(1, 1, !0, -12961222));
        this.textField = hf.createTextField(2, 1);
        this.textField.set_alpha(0.8);
        this.textField.set_text(b);
        this.textField.set_wordWrap(!0);
        this.addChild(this._shadow);
        this.addChild(this._background);
        this.addChild(this.textField);
        this.updateSize();
        this.setVisible(!1);
        null != this.owner &&
          (this.owner.addEventListener(
            "mouseOver",
            q(this, this.handleMouseEvents)
          ),
          this.owner.addEventListener(
            "mouseOut",
            q(this, this.handleMouseEvents)
          ));
      };
      g["flixel.system.debug.TooltipOverlay"] = Ej;
      Ej.__name__ = "flixel.system.debug.TooltipOverlay";
      Ej.__super__ = fa;
      Ej.prototype = r(fa.prototype, {
        setVisible: function (a) {
          this.set_visible(a);
          this.get_visible() &&
            (this.parent.addChild(this), this.ensureOnScreen());
        },
        updateSize: function () {
          this._width =
            ((0 >= this.maxSize.x
              ? this.textField.get_textWidth()
              : Math.abs(this.maxSize.x)) |
              0) +
            8;
          this._height =
            ((0 >= this.maxSize.y
              ? this.textField.get_textHeight()
              : Math.abs(this.maxSize.y)) |
              0) +
            8;
          this._background.set_scaleX(this._width);
          this._background.set_scaleY(this._height);
          this._shadow.set_scaleX(this._width);
          this._shadow.set_y(this._height);
          this.textField.set_width(this._width);
        },
        ensureOnScreen: function () {
          this.set_x(0 > this.get_x() ? 0 : this.get_x());
          this.set_y(0 > this.get_y() ? 0 : this.get_y());
          var a =
              this.get_x() + this.get_width() >=
              na.get_current().stage.stageWidth
                ? na.get_current().stage.stageWidth -
                  (this.get_x() + this.get_width())
                : 0,
            b =
              this.get_y() + this.get_height() >=
              na.get_current().stage.stageHeight
                ? na.get_current().stage.stageHeight -
                  (this.get_y() + this.get_height())
                : 0,
            c = this;
          c.set_x(c.get_x() + a);
          c = this;
          c.set_y(c.get_y() + b);
        },
        handleMouseEvents: function (a) {
          "mouseOver" != a.type || this.get_visible()
            ? "mouseOut" == a.type && this.setVisible(!1)
            : (this.set_x(a.stageX + 10),
              this.set_y(a.stageY + 10),
              this.setVisible(!0));
        },
        __class__: Ej,
      });
      var ne = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != ne.preload) this.__fromImage(ne.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(ne.resourceName), ne.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == ne.preload && (ne.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug._Window.GraphicWindowHandle"] = ne;
      ne.__name__ = "flixel.system.debug._Window.GraphicWindowHandle";
      ne.__super__ = J;
      ne.prototype = r(J.prototype, { __class__: ne });
      var Nd = function (a, b, c, d, e, f, h, m) {
        null == m && (m = !0);
        null == h && (h = !1);
        null == e && (e = !0);
        null == d && (d = 0);
        null == c && (c = 0);
        fa.call(this);
        this.minSize = new Ra(50, 30);
        this._width = Math.abs(c) | 0;
        this._height = Math.abs(d) | 0;
        this.updateBounds(f);
        this._drag = new Ra();
        this._resizable = e;
        this._closable = h;
        this._alwaysOnTop = m;
        this._shadow = new Ob(new J(1, 2, !0, -16777216));
        this._background = new Ob(new J(1, 1, !0, -580952225));
        this._header = new Ob(new J(1, 15, !0, -1157627904));
        this._background.set_y(this._header.get_height());
        this._title = hf.createTextField(2, -1);
        this._title.set_alpha(0.8);
        this._title.set_text(a);
        this.addChild(this._shadow);
        this.addChild(this._background);
        this.addChild(this._header);
        this.addChild(this._title);
        null != b &&
          (hf.fixSize(b),
          (this._icon = new Ob(b)),
          this._icon.set_x(5),
          this._icon.set_y(2),
          this._icon.set_alpha(0.8),
          this._title.set_x(this._icon.get_x() + this._icon.get_width() + 2),
          this.addChild(this._icon));
        this._resizable &&
          ((this._handle = new Ob(hf.fixSize(new ne(0, 0)))),
          this.addChild(this._handle));
        h
          ? ((this._closeButton = new Wg(new le(0, 0), q(this, this.close))),
            this._closeButton.set_alpha(0.8),
            this.addChild(this._closeButton))
          : ((this._id = Nd.WINDOW_AMOUNT),
            this.loadSaveData(),
            Nd.WINDOW_AMOUNT++);
        (0 == this._width && 0 == this._height) || this.updateSize();
        this.bound();
        this.addEventListener("enterFrame", q(this, this.init));
      };
      g["flixel.system.debug.Window"] = Nd;
      Nd.__name__ = "flixel.system.debug.Window";
      Nd.__super__ = fa;
      Nd.prototype = r(fa.prototype, {
        destroy: function () {
          this._bounds = this.maxSize = this.minSize = null;
          null != this._shadow && this.removeChild(this._shadow);
          this._shadow = null;
          null != this._background && this.removeChild(this._background);
          this._background = null;
          null != this._header && this.removeChild(this._header);
          this._header = null;
          null != this._title && this.removeChild(this._title);
          this._title = null;
          null != this._handle && this.removeChild(this._handle);
          this._drag = this._handle = null;
          this._closeButton = Z.destroy(this._closeButton);
          var a = na.get_current().stage;
          a.hasEventListener("mouseMove") &&
            a.removeEventListener("mouseMove", q(this, this.onMouseMove));
          this.hasEventListener("mouseDown") &&
            this.removeEventListener("mouseDown", q(this, this.onMouseDown));
          a.hasEventListener("mouseUp") &&
            a.removeEventListener("mouseUp", q(this, this.onMouseUp));
        },
        resize: function (a, b) {
          this._width = Math.abs(a) | 0;
          this._height = Math.abs(b) | 0;
          this.updateSize();
        },
        reposition: function (a, b) {
          this.set_x(a);
          this.set_y(b);
          this.bound();
        },
        updateBounds: function (a) {
          this._bounds = a;
          this.maxSize =
            null != this._bounds
              ? new Ra(this._bounds.width, this._bounds.height)
              : new Ra(1.79e308, 1.79e308);
        },
        loadSaveData: function () {
          null != p.save.data.windowSettings
            ? this.set_visible(p.save.data.windowSettings[this._id])
            : (this.initSaveData(), this.loadSaveData());
        },
        initSaveData: function () {
          p.save.data.windowSettings = [!0, !0, !0, !0, !0, !0, !0, !0, !0, !0];
          p.save.flush();
        },
        init: function (a) {
          null != this.stage &&
            (this.removeEventListener("enterFrame", q(this, this.init)),
            this.stage.addEventListener("mouseMove", q(this, this.onMouseMove)),
            this.stage.addEventListener("mouseUp", q(this, this.onMouseUp)),
            this.addEventListener("mouseDown", q(this, this.onMouseDown)));
        },
        onMouseMove: function (a) {
          a = 0 > this.get_mouseX() ? 0 : this.get_mouseX();
          var b = 0 > this.get_mouseY() ? 0 : this.get_mouseY();
          this.parent.get_visible()
            ? this._dragging
              ? ((this._overHeader = !0),
                this.reposition(
                  this.parent.get_mouseX() - this._drag.x,
                  this.parent.get_mouseY() - this._drag.y
                ))
              : this._resizing
              ? ((this._overHandle = !0),
                this.resize(a - this._drag.x, b - this._drag.y))
              : 0 <= a && a <= this._width && 0 <= b && b <= this._height
              ? ((this._overHeader =
                  a <= this._header.get_width() &&
                  b <= this._header.get_height()),
                this._resizable &&
                  (this._overHandle =
                    a >= this._width - this._handle.get_width() &&
                    b >= this._height - this._handle.get_height()))
              : (this._overHandle = this._overHeader = !1)
            : (this._overHandle = this._overHeader = !1);
        },
        onMouseDown: function (a) {
          if (this._overHeader)
            this._alwaysOnTop && this.parent.addChild(this),
              (this._dragging = !0),
              (this._drag.x = this.get_mouseX()),
              (this._drag.y = this.get_mouseY());
          else if (this._overHandle) {
            this._alwaysOnTop && this.parent.addChild(this);
            this._resizing = !0;
            a = this._width;
            var b = this.get_mouseX();
            this._drag.x = a - b;
            a = this._height;
            b = this.get_mouseY();
            this._drag.y = a - b;
          }
        },
        onMouseUp: function (a) {
          this._resizing = this._dragging = !1;
        },
        bound: function () {
          if (null != this._bounds) {
            var a = this.get_x(),
              b = this._bounds.get_left(),
              c = this._bounds.get_right() - this._width;
            a = null != b && a < b ? b : a;
            this.set_x(null != c && a > c ? c : a);
            a = this.get_y();
            b = this._bounds.get_top();
            c = this._bounds.get_bottom() - this._height;
            a = null != b && a < b ? b : a;
            this.set_y(null != c && a > c ? c : a);
          }
        },
        updateSize: function () {
          var a = this._width,
            b = this.minSize.x,
            c = this.maxSize.x;
          a = null != b && a < b ? b : a;
          this._width = (null != c && a > c ? c : a) | 0;
          a = this._height;
          b = this.minSize.y;
          c = this.maxSize.y;
          a = null != b && a < b ? b : a;
          this._height = (null != c && a > c ? c : a) | 0;
          this._header.set_scaleX(this._width);
          this._background.set_scaleX(this._width);
          this._background.set_scaleY(this._height - this._header.get_height());
          this._shadow.set_scaleX(this._width);
          this._shadow.set_y(this._height);
          this._title.set_width(this._width - 4);
          this._resizable &&
            (this._handle.set_x(this._width - this._handle.get_width()),
            this._handle.set_y(this._height - this._handle.get_height()));
          null != this._closeButton &&
            (this._closeButton.set_x(
              this._width - this._closeButton.get_width() - 3
            ),
            this._closeButton.set_y(3));
        },
        close: function () {
          this.destroy();
        },
        __class__: Nd,
      });
      var El = function (a) {
        this.selectedIndex =
          this.lowerVisibleIndex =
          this.upperVisibleIndex =
            0;
        this.entries = [];
        fa.call(this);
        this.set_visible(!1);
        this.upperVisibleIndex = a - 1;
        this.actualHeight = 20 * a;
        this.createPopupEntries(a);
        this.createScrollBar();
        this.updateSelectedItem();
        na.get_current().stage.addEventListener(
          "keyDown",
          q(this, this.onKeyDown)
        );
      };
      g["flixel.system.debug.completion.CompletionList"] = El;
      El.__name__ = "flixel.system.debug.completion.CompletionList";
      El.__super__ = fa;
      El.prototype = r(fa.prototype, {
        close: function () {
          this.set_visible(!1);
          this.set_filter(null);
          null != this.closed && this.closed();
        },
        createPopupEntries: function (a) {
          for (var b = 0; b < a; ) {
            var c = b++,
              d = new Re();
            this.entries.push(d);
            this.addChild(d);
            d.set_y(20 * c);
          }
        },
        createScrollBar: function () {
          this.scrollBar = new Fj(150, 0, 5, this.actualHeight);
          this.addChild(this.scrollBar);
        },
        onKeyDown: function (a) {
          if (this.get_visible()) {
            switch (a.keyCode) {
              case 13:
                null != this.completed &&
                  this.completed(this.items[this.selectedIndex]);
                this.close();
                return;
              case 27:
                this.close();
                return;
              case 38:
                this.updateIndices(-1);
                break;
              case 40:
                this.updateIndices(1);
            }
            this.updateEntries();
          }
        },
        updateIndices: function (a) {
          var b = (this.selectedIndex = this.bound(this.selectedIndex + a)),
            c = this.lowerVisibleIndex,
            d = this.upperVisibleIndex;
          ((null == c || b >= c) && (null == d || b <= d)) ||
            ((this.lowerVisibleIndex = this.bound(this.lowerVisibleIndex + a)),
            (this.upperVisibleIndex = this.bound(this.upperVisibleIndex + a)),
            this.upperVisibleIndex - this.lowerVisibleIndex !=
              this.items.length &&
              (0 == this.lowerVisibleIndex
                ? (this.upperVisibleIndex = this.entries.length - 1)
                : this.upperVisibleIndex == this.items.length - 1 &&
                  (this.lowerVisibleIndex =
                    this.items.length - this.entries.length)));
        },
        bound: function (a) {
          var b = this.items.length - 1;
          a = 0 > a ? 0 : a;
          return (null != b && a > b ? b : a) | 0;
        },
        updateEntries: function () {
          this.updateLabels();
          this.updateSelectedItem();
          this.scrollBar.updateHandle(
            this.lowerVisibleIndex,
            this.items.length,
            this.entries.length
          );
        },
        updateLabels: function () {
          for (var a = 0, b = this.entries.length; a < b; ) {
            var c = a++,
              d = this.items[this.lowerVisibleIndex + c];
            null == d && (d = "");
            this.entries[c].setItem(d);
          }
        },
        updateSelectedItem: function () {
          for (var a = 0, b = this.entries; a < b.length; ) {
            var c = b[a];
            ++a;
            c.set_selected(!1);
          }
          this.entries[
            this.selectedIndex - this.lowerVisibleIndex
          ].set_selected(!0);
          null != this.selectionChanged &&
            this.selectionChanged(this.items[this.selectedIndex]);
        },
        setItems: function (a) {
          null != a &&
            (0 == a.length && this.close(),
            (this.items = a),
            (this.lowerVisibleIndex = this.selectedIndex = 0),
            (this.upperVisibleIndex = this.entries.length - 1),
            this.updateEntries());
        },
        filterItems: function (a) {
          null == a && (a = "");
          for (var b = [], c = 0, d = this.originalItems; c < d.length; ) {
            var e = d[c];
            ++c;
            -1 != e.toLowerCase().indexOf(a.toLowerCase()) && b.push(e);
          }
          return this.sortItems(a, b);
        },
        sortItems: function (a, b) {
          var c = this;
          if ("" == a) return b;
          b.sort(function (b, e) {
            var d = c.startsWithExt(b, a),
              h = c.startsWithExt(e, a);
            return d > h
              ? -d
              : h > d
              ? h
              : d == h
              ? (b.length - e.length) | 0
              : 0;
          });
          return b;
        },
        startsWithExt: function (a, b) {
          return K.startsWith(a, b)
            ? 2
            : K.startsWith(a.replace(/^[_]+/, ""), b)
            ? 1
            : 0;
        },
        set_filter: function (a) {
          if (a == this.filter) return a;
          this.setItems(this.filterItems(a));
          return (this.filter = a);
        },
        __class__: El,
        __properties__: r(fa.prototype.__properties__, {
          set_filter: "set_filter",
        }),
      });
      var Re = function () {
        this.selected = !1;
        fa.call(this);
        this.initBitmapDatas();
        this.addChild((this.background = new Ob()));
        this.background.set_bitmapData(Re.normalBitmapData);
        this.label = hf.createTextField();
        this.label.set_x(4);
        this.addChild(this.label);
      };
      g["flixel.system.debug.completion.CompletionListEntry"] = Re;
      Re.__name__ = "flixel.system.debug.completion.CompletionListEntry";
      Re.__super__ = fa;
      Re.prototype = r(fa.prototype, {
        initBitmapDatas: function () {
          null == Re.normalBitmapData &&
            (Re.normalBitmapData = new J(150, 20, !0, -10526881));
          null == Re.highlightBitmapData &&
            (Re.highlightBitmapData = new J(150, 20, !0, -9605779));
        },
        setItem: function (a) {
          this.label.set_text(a);
          150 < this.label.get_width() &&
            (this.label.set_width(150), this.label.set_autoSize(2));
        },
        set_selected: function (a) {
          if (a == this.selected) return a;
          this.background.set_bitmapData(
            a ? Re.highlightBitmapData : Re.normalBitmapData
          );
          return (this.selected = a);
        },
        __class__: Re,
        __properties__: r(fa.prototype.__properties__, {
          set_selected: "set_selected",
        }),
      });
      var Fj = function (a, b, c, d) {
        fa.call(this);
        this.set_x(a);
        this.set_y(b);
        this.addChild(new Ob(new J(c, d, !0, -12303292)));
        this.handle = new Ob(new J(c, 1, !0, -14540254));
        this.addChild(this.handle);
      };
      g["flixel.system.debug.completion.CompletionListScrollBar"] = Fj;
      Fj.__name__ = "flixel.system.debug.completion.CompletionListScrollBar";
      Fj.__super__ = fa;
      Fj.prototype = r(fa.prototype, {
        updateHandle: function (a, b, c) {
          this.handle.set_scaleY(
            Math.min((this.get_height() / b) * c, this.get_height())
          );
          this.handle.set_y((this.get_height() / b) * a);
          a = this.handle;
          c = this.handle.get_y();
          b = this.get_height() - this.handle.get_scaleY();
          c = 0 > c ? 0 : c;
          a.set_y(null != b && c > b ? b : c);
        },
        __class__: Fj,
      });
      var Fl = function (a) {
        this._flixelPointer = new rc();
        this._debuggerInteraction = !1;
        this._keysUp = new lc();
        this._keysDown = new lc();
        this._turn = 2;
        this._tools = [];
        this.shouldDrawItemsSelection = !0;
        this.pointerJustPressed =
          this.pointerJustReleased =
          this.pointerPressed =
            !1;
        this.flixelPointer = new U();
        this.selectedItems = new nb();
        Nd.call(this, "Tools", new me(0, 0), 40, 25, !1);
        this.reposition(2, 100);
        this._container = a;
        this._customCursor = new fa();
        this._customCursor.mouseEnabled = !1;
        this._container.addChild(this._customCursor);
        this.addTool(new Gj());
        this.addTool(new Hj());
        this.addTool(new Ij());
        this.addTool(new Jj());
        p.signals.postDraw.add(q(this, this.postDraw));
        p.debugger.visibilityChanged.add(
          q(this, this.handleDebuggerVisibilityChanged)
        );
        na.get_current().stage.addEventListener(
          "mouseMove",
          q(this, this.updateMouse)
        );
        na.get_current().stage.addEventListener(
          "mouseDown",
          q(this, this.handleMouseClick)
        );
        na.get_current().stage.addEventListener(
          "mouseUp",
          q(this, this.handleMouseClick)
        );
        na.get_current().stage.addEventListener(
          "keyDown",
          q(this, this.handleKeyEvent)
        );
        na.get_current().stage.addEventListener(
          "keyUp",
          q(this, this.handleKeyEvent)
        );
        this._container.addEventListener(
          "mouseOver",
          q(this, this.handleMouseInDebugger)
        );
        this._container.addEventListener(
          "mouseOut",
          q(this, this.handleMouseInDebugger)
        );
      };
      g["flixel.system.debug.interaction.Interaction"] = Fl;
      Fl.__name__ = "flixel.system.debug.interaction.Interaction";
      Fl.__super__ = Nd;
      Fl.prototype = r(Nd.prototype, {
        handleDebuggerVisibilityChanged: function () {
          p.debugger.visible
            ? this.saveSystemCursorInfo()
            : this.restoreSystemCursor();
        },
        updateMouse: function (a) {
          if (null != a.stageX && null != a.stageY) {
            var b = 0,
              c = 0;
            if (null != this.activeTool) {
              var d = this.activeTool.cursor;
              null != d &&
                ((b = d.width / p.scaleMode.scale.x / 2),
                (c = d.height / p.scaleMode.scale.y / 2));
            }
            this._customCursor.set_x(a.stageX + b);
            this._customCursor.set_y(a.stageY + c);
            d = this._flixelPointer;
            d._globalScreenX = (a.stageX / p.scaleMode.scale.x) | 0;
            d._globalScreenY = (a.stageY / p.scaleMode.scale.y) | 0;
            d.updatePositions();
            this.flixelPointer.set_x(this._flixelPointer.x + b);
            this.flixelPointer.set_y(this._flixelPointer.y + c);
          }
        },
        handleMouseClick: function (a) {
          ("mouseDown" == a.type && this.belongsToDebugger(a.target)) ||
            ((this.pointerJustPressed = "mouseDown" == a.type),
            (this.pointerJustReleased = "mouseUp" == a.type),
            this.pointerJustPressed
              ? (this.pointerPressed = !0)
              : this.pointerJustReleased && (this.pointerPressed = !1));
        },
        belongsToDebugger: function (a) {
          return null == a
            ? !1
            : a instanceof Dj
            ? !0
            : this.belongsToDebugger(a.parent);
        },
        handleMouseInDebugger: function (a) {
          this.isActive() &&
            ("mouseOver" == a.type
              ? (this._debuggerInteraction = !0)
              : "mouseOut" == a.type && (this._debuggerInteraction = !1),
            a.stopPropagation());
        },
        handleKeyEvent: function (a) {
          "keyDown" == a.type
            ? (this._keysDown.h[a.keyCode] = !0)
            : "keyUp" == a.type &&
              ((this._keysDown.h[a.keyCode] = !1),
              (this._keysUp.h[a.keyCode] = this._turn));
        },
        countToolsWithUIButton: function () {
          for (var a = 0, b = 0, c = this._tools; b < c.length; ) {
            var d = c[b];
            ++b;
            null != d.button && ++a;
          }
          return a;
        },
        addTool: function (a) {
          a.init(this);
          this._tools.push(a);
          a = a.button;
          if (null != a) {
            var b = this.countToolsWithUIButton(),
              c = Math.ceil(b / 2) | 0;
            a.set_x(-15 + 25 * ((b / c) | 0));
            a.set_y(20 * c);
            this.addChild(a);
            this.resize(25 * Math.min(b, 2) + 10, 25 * c + 10);
          }
        },
        destroy: function () {
          p.signals.postDraw.remove(q(this, this.postDraw));
          p.debugger.visibilityChanged.remove(
            q(this, this.handleDebuggerVisibilityChanged)
          );
          na.get_current().stage.removeEventListener(
            "mouseMove",
            q(this, this.updateMouse)
          );
          na.get_current().stage.removeEventListener(
            "mouseDown",
            q(this, this.handleMouseClick)
          );
          na.get_current().stage.removeEventListener(
            "mouseUp",
            q(this, this.handleMouseClick)
          );
          na.get_current().stage.removeEventListener(
            "keyDown",
            q(this, this.handleKeyEvent)
          );
          na.get_current().stage.removeEventListener(
            "keyUp",
            q(this, this.handleKeyEvent)
          );
          null != this._container &&
            (this._container.removeEventListener(
              "mouseOver",
              q(this, this.handleMouseInDebugger)
            ),
            this._container.removeEventListener(
              "mouseOut",
              q(this, this.handleMouseInDebugger)
            ));
          null != this._customCursor &&
            (this._customCursor.parent.removeChild(this._customCursor),
            (this._customCursor = null));
          this._tools = Z.destroyArray(this._tools);
          this.selectedItems = Z.destroy(this.selectedItems);
          this.flixelPointer = Z.destroy(this.flixelPointer);
          this._keysUp = this._keysDown = null;
        },
        isActive: function () {
          return p.debugger.visible ? this.get_visible() : !1;
        },
        postDraw: function () {
          if (this.isActive()) {
            for (var a = 0, b = this._tools; a < b.length; ) {
              var c = b[a];
              ++a;
              c.draw();
            }
            this.shouldDrawItemsSelection && this.drawItemsSelection();
          }
        },
        getDebugGraphics: function () {
          return p.renderBlit ? (Qf.flashGfx.clear(), Qf.flashGfx) : null;
        },
        drawItemsSelection: function () {
          var a = this.getDebugGraphics();
          if (null != a) {
            for (
              var b = new Ph(this.selectedItems.members, null);
              b.hasNext();

            ) {
              var c = b.next();
              null != c &&
                null != c.scrollFactor &&
                c.isOnScreen() &&
                (a.lineStyle(0.9, 16711680),
                a.drawRect(
                  c.x - p.camera.scroll.x,
                  c.y - p.camera.scroll.y,
                  c.get_width(),
                  c.get_height()
                ));
            }
            p.renderBlit && p.camera.buffer.draw(Qf.flashGfxSprite);
          }
        },
        registerCustomCursor: function (a, b) {
          if (null != b) {
            var c = new fa();
            c.set_visible(!1);
            c.set_name(a);
            c.addChild(new Ob(b));
            this._customCursor.addChild(c);
          }
        },
        updateCustomCursors: function () {
          if (null == this.activeTool || this._debuggerInteraction)
            p.mouse.set_useSystemCursor(!0);
          else if (null != this.activeTool.cursor) {
            for (
              var a =
                  "" == this.activeTool.cursorInUse
                    ? this.activeTool.getName()
                    : this.activeTool.cursorInUse,
                b = 0,
                c = this._customCursor.get_numChildren();
              b < c;

            ) {
              var d = b++;
              d = this._customCursor.getChildAt(d);
              d.set_visible(d.get_name() == a);
            }
            p.mouse.visible && p.mouse.set_visible(!1);
          } else p.mouse.set_useSystemCursor(!0);
        },
        saveSystemCursorInfo: function () {
          this._wasMouseVisible = p.mouse.visible;
          this._wasUsingSystemCursor = p.mouse.useSystemCursor;
        },
        restoreSystemCursor: function () {
          p.mouse.set_useSystemCursor(this._wasUsingSystemCursor);
          p.mouse.set_visible(this._wasMouseVisible);
          this._customCursor.set_visible(!1);
        },
        setActiveTool: function (a) {
          null != this.activeTool &&
            (this.activeTool.deactivate(),
            this.activeTool.button.set_toggled(!0));
          this.activeTool == a && (a = null);
          this.activeTool = a;
          null != this.activeTool
            ? (this.setToolsCursorVisibility(!0),
              this.activeTool.button.set_toggled(!1),
              this.activeTool.activate(),
              this.updateCustomCursors())
            : this.setSystemCursorVisibility(!0);
          p.mouse.enabled = !this.isInUse();
        },
        setSystemCursorVisibility: function (a) {
          p.mouse.set_useSystemCursor(a);
          this._customCursor.set_visible(!a);
        },
        setToolsCursorVisibility: function (a) {
          p.mouse.set_useSystemCursor(!1);
          this._customCursor.set_visible(a);
          if (!a) {
            a = 0;
            for (var b = this._customCursor.get_numChildren(); a < b; ) {
              var c = a++;
              this._customCursor.getChildAt(c).set_visible(!1);
            }
          }
        },
        keyPressed: function (a) {
          return this._keysDown.h[a];
        },
        isInUse: function () {
          return p.debugger.visible && this.get_visible()
            ? null != this.activeTool
            : !1;
        },
        __class__: Fl,
      });
      var Se = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Se.preload) this.__fromImage(Se.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Se.resourceName), Se.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Se.preload && (Se.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.interaction.tools._Eraser.GraphicEraserTool"] = Se;
      Se.__name__ =
        "flixel.system.debug.interaction.tools._Eraser.GraphicEraserTool";
      Se.__super__ = J;
      Se.prototype = r(J.prototype, { __class__: Se });
      var Bc = function () {
        this._name = "(Unknown tool)";
        this.cursorInUse = "";
        fa.call(this);
      };
      g["flixel.system.debug.interaction.tools.Tool"] = Bc;
      Bc.__name__ = "flixel.system.debug.interaction.tools.Tool";
      Bc.__interfaces__ = [T];
      Bc.__super__ = fa;
      Bc.prototype = r(fa.prototype, {
        init: function (a) {
          this._brain = a;
          return this;
        },
        draw: function () {},
        activate: function () {},
        deactivate: function () {},
        destroy: function () {},
        isActive: function () {
          return this._brain.activeTool == this
            ? this._brain.get_visible()
            : !1;
        },
        setButton: function (a) {
          this.button = new Wg(
            Ya.createInstance(a, [0, 0]),
            q(this, this.onButtonClicked),
            !0
          );
          this.button.set_toggled(!0);
          a = this._name;
          null != this._shortcut && (a += " (" + this._shortcut + ")");
          Vg.add(this.button, a);
        },
        setCursor: function (a) {
          this.cursor = a;
          this._brain.registerCustomCursor(this._name, this.cursor);
        },
        onButtonClicked: function () {
          this._brain.setActiveTool(this);
        },
        getName: function () {
          return this._name;
        },
        __class__: Bc,
      });
      var Ij = function () {
        Bc.call(this);
      };
      g["flixel.system.debug.interaction.tools.Eraser"] = Ij;
      Ij.__name__ = "flixel.system.debug.interaction.tools.Eraser";
      Ij.__super__ = Bc;
      Ij.prototype = r(Bc.prototype, {
        init: function (a) {
          Bc.prototype.init.call(this, a);
          this._name = "Eraser";
          return this;
        },
        activate: function () {
          this.doDeletion(this._brain.keyPressed(16));
          this._brain.setActiveTool(null);
        },
        doDeletion: function (a) {
          var b = this._brain.selectedItems;
          null != b && (this.findAndDelete(b, a), b.clear());
        },
        findAndDelete: function (a, b) {
          null == b && (b = !1);
          for (a = new Ph(a.members, null); a.hasNext(); ) {
            var c = a.next();
            null == c ||
              c instanceof nb ||
              (c.kill(), b && this.removeFromMemory(c, p.game._state));
          }
        },
        removeFromMemory: function (a, b) {
          for (var c = 0, d = b.members; c < d.length; ) {
            var e = d[c];
            ++c;
            null != e &&
              (e instanceof nb
                ? this.removeFromMemory(a, e)
                : e == a && b.remove(e));
          }
        },
        __class__: Ij,
      });
      var Od = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Od.preload) this.__fromImage(Od.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Od.resourceName), Od.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Od.preload && (Od.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.interaction.tools._Mover.GraphicMoverTool"] = Od;
      Od.__name__ =
        "flixel.system.debug.interaction.tools._Mover.GraphicMoverTool";
      Od.__super__ = J;
      Od.prototype = r(J.prototype, { __class__: Od });
      var Hj = function () {
        Bc.call(this);
      };
      g["flixel.system.debug.interaction.tools.Mover"] = Hj;
      Hj.__name__ = "flixel.system.debug.interaction.tools.Mover";
      Hj.__super__ = Bc;
      Hj.prototype = r(Bc.prototype, {
        init: function (a) {
          Bc.prototype.init.call(this, a);
          this._lastCursorPosition = new U(
            a.flixelPointer.x,
            a.flixelPointer.x
          );
          this._name = "Mover";
          this._shortcut = "Shift";
          this.setButton(Od);
          this.setCursor(new Od(0, 0));
          return this;
        },
        __class__: Hj,
      });
      var Pd = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Pd.preload) this.__fromImage(Pd.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Pd.resourceName), Pd.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Pd.preload && (Pd.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.interaction.tools.GraphicCursorCross"] = Pd;
      Pd.__name__ = "flixel.system.debug.interaction.tools.GraphicCursorCross";
      Pd.__super__ = J;
      Pd.prototype = r(J.prototype, { __class__: Pd });
      var Gj = function () {
        this._selectionArea = new ya();
        this._selectionHappening = !1;
        Bc.call(this);
      };
      g["flixel.system.debug.interaction.tools.Pointer"] = Gj;
      Gj.__name__ = "flixel.system.debug.interaction.tools.Pointer";
      Gj.__super__ = Bc;
      Gj.prototype = r(Bc.prototype, {
        init: function (a) {
          Bc.prototype.init.call(this, a);
          this._name = "Pointer";
          this.setButton(Pd);
          this.setCursor(new Pd(0, 0));
          return this;
        },
        draw: function () {
          var a = this._brain.getDebugGraphics();
          null != a &&
            (this._selectionHappening &&
              (a.lineStyle(0.9, 12255232),
              a.drawRect(
                this._selectionArea.x - p.camera.scroll.x,
                this._selectionArea.y - p.camera.scroll.y,
                this._selectionArea.width,
                this._selectionArea.height
              )),
            p.renderBlit && p.camera.buffer.draw(Qf.flashGfxSprite));
        },
        __class__: Gj,
      });
      var oe = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != oe.preload) this.__fromImage(oe.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(oe.resourceName), oe.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == oe.preload && (oe.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g[
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformTool"
      ] = oe;
      oe.__name__ =
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformTool";
      oe.__super__ = J;
      oe.prototype = r(J.prototype, { __class__: oe });
      var pe = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != pe.preload) this.__fromImage(pe.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(pe.resourceName), pe.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == pe.preload && (pe.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g[
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorDefault"
      ] = pe;
      pe.__name__ =
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorDefault";
      pe.__super__ = J;
      pe.prototype = r(J.prototype, { __class__: pe });
      var qe = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != qe.preload) this.__fromImage(qe.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(qe.resourceName), qe.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == qe.preload && (qe.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g[
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleY"
      ] = qe;
      qe.__name__ =
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleY";
      qe.__super__ = J;
      qe.prototype = r(J.prototype, { __class__: qe });
      var re = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != re.preload) this.__fromImage(re.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(re.resourceName), re.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == re.preload && (re.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g[
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleX"
      ] = re;
      re.__name__ =
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleX";
      re.__super__ = J;
      re.prototype = r(J.prototype, { __class__: re });
      var se = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != se.preload) this.__fromImage(se.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(se.resourceName), se.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == se.preload && (se.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g[
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY"
      ] = se;
      se.__name__ =
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY";
      se.__super__ = J;
      se.prototype = r(J.prototype, { __class__: se });
      var te = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != te.preload) this.__fromImage(te.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(te.resourceName), te.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == te.preload && (te.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g[
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorRotate"
      ] = te;
      te.__name__ =
        "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorRotate";
      te.__super__ = J;
      te.prototype = r(J.prototype, { __class__: te });
      var Jj = function () {
        this._markers = [];
        Bc.call(this);
      };
      g["flixel.system.debug.interaction.tools.Transform"] = Jj;
      Jj.__name__ = "flixel.system.debug.interaction.tools.Transform";
      Jj.__super__ = Bc;
      Jj.prototype = r(Bc.prototype, {
        init: function (a) {
          var b = this;
          Bc.prototype.init.call(this, a);
          this._name = "Transform";
          this.setButton(oe);
          this.setCursor(new pe(0, 0));
          a.registerCustomCursor("transformRotate", new te(0, 0));
          a.registerCustomCursor("transformScaleX", new re(0, 0));
          a.registerCustomCursor("transformScaleY", new qe(0, 0));
          a.registerCustomCursor("transformScaleXY", new se(0, 0));
          this._tooltip = Vg.add(null, "");
          this._tooltip.textField.set_wordWrap(!1);
          this._markers.push(new U());
          this._markers.push(new U());
          this._markers.push(new U());
          this._markers.push(new U());
          this.stopAction();
          p.signals.preStateSwitch.add(function () {
            b._target = null;
          });
          return this;
        },
        stopAction: function () {
          this._actionHappening = !1;
          this._actionMarker = -1;
          this._tooltip.setVisible(!1);
        },
        drawTargetAreaOutline: function (a) {
          a.lineStyle(0.9, -65281, 1, !1, 2, 2);
          a.moveTo(this._markers[0].x, this._markers[0].y);
          for (var b = 0, c = this._markers.length; b < c; ) {
            var d = b++;
            a.lineTo(this._markers[d].x, this._markers[d].y);
          }
          a.lineTo(this._markers[0].x, this._markers[0].y);
        },
        drawMarkers: function (a) {
          a.lineStyle(0.9, -65281, 1, !1, 2, 2);
          a.beginFill(-65281);
          for (var b = 0, c = this._markers.length; b < c; ) {
            var d = b++;
            0 == d
              ? a.drawCircle(this._markers[d].x, this._markers[d].y, 2.7)
              : a.drawRect(
                  this._markers[d].x - 1.5,
                  this._markers[d].y - 1.5,
                  3,
                  3
                );
          }
          a.endFill();
        },
        draw: function () {
          var a = this._brain.getDebugGraphics();
          null != a &&
            null != this._target &&
            this.isActive() &&
            (this.drawTargetAreaOutline(a),
            this.drawMarkers(a),
            p.renderBlit && p.camera.buffer.draw(Qf.flashGfxSprite));
        },
        activate: function () {
          this._target = null;
          if (0 != this._brain.selectedItems.length) {
            for (
              var a = new Ph(this._brain.selectedItems.members, null);
              a.hasNext();

            ) {
              var b = a.next();
              if (null != b && null != b.scrollFactor && b.isOnScreen()) {
                this._target = b;
                break;
              }
            }
            this._brain.shouldDrawItemsSelection = !1;
          }
        },
        deactivate: function () {
          this._brain.shouldDrawItemsSelection = !0;
        },
        __class__: Jj,
      });
      var Te = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Te.preload) this.__fromImage(Te.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Te.resourceName), Te.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Te.preload && (Te.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.stats._Stats.GraphicMinimizeButton"] = Te;
      Te.__name__ = "flixel.system.debug.stats._Stats.GraphicMinimizeButton";
      Te.__super__ = J;
      Te.prototype = r(J.prototype, { __class__: Te });
      var Ue = function (a, b, c, d, e) {
        null == d && (d = -1);
        null == c && (c = !0);
        J.call(this, 0, 0, c, d);
        if (null != Ue.preload) this.__fromImage(Ue.preload);
        else {
          var f = this;
          Da.loadFromBase64(zb.getString(Ue.resourceName), Ue.resourceType)
            .then(function (a) {
              f.__fromImage(a);
              return Ja.withValue(f);
            })
            .onComplete(function (a) {
              null == Ue.preload && (Ue.preload = a.image);
              null != e && ia.isFunction(e) && e(a);
            });
        }
      };
      g["flixel.system.debug.stats._Stats.GraphicMaximizeButton"] = Ue;
      Ue.__name__ = "flixel.system.debug.stats._Stats.GraphicMaximizeButton";
      Ue.__super__ = J;
      Ue.prototype = r(J.prototype, { __class__: Ue });
      var Vh = function (a, b, c, d, e, f, h, m) {
        Nd.call(this, a, b, c, d, e, f, h, m);
      };
      g["flixel.system.debug.watch.Watch"] = Vh;
      Vh.__name__ = "flixel.system.debug.watch.Watch";
      Vh.__super__ = Nd;
      Vh.prototype = r(Nd.prototype, { __class__: Vh });
      var Gl = function (a, b, c, d, e, f, h, m) {
        Nd.call(this, a, b, c, d, e, f, h, m);
      };
      g["flixel.system.debug.watch.Tracker"] = Gl;
      Gl.__name__ = "flixel.system.debug.watch.Tracker";
      Gl.__super__ = Vh;
      Gl.prototype = r(Vh.prototype, { __class__: Gl });
      var ll = function () {
        this.list = [];
        this.add_flixel_util_FlxTimerManager((hc.globalManager = new Kj()));
        this.add_flixel_tweens_FlxTweenManager((mb.globalManager = new Lj()));
      };
      g["flixel.system.frontEnds.PluginFrontEnd"] = ll;
      ll.__name__ = "flixel.system.frontEnds.PluginFrontEnd";
      ll.prototype = {
        add_flixel_tweens_FlxTweenManager: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            if (yb.getClassName(a, !0) == yb.getClassName(d, !0)) return a;
          }
          this.list.push(a);
          return a;
        },
        add_flixel_util_FlxTimerManager: function (a) {
          for (var b = 0, c = this.list; b < c.length; ) {
            var d = c[b];
            ++b;
            if (yb.getClassName(a, !0) == yb.getClassName(d, !0)) return a;
          }
          this.list.push(a);
          return a;
        },
        __class__: ll,
      };
      var nl = function () {
        this.volume = 1;
        this.list = new nb();
        this.defaultSoundGroup = new Cj();
        this.defaultMusicGroup = new Cj();
        this.soundTrayEnabled = !0;
        this.muteKeys = [48, 96];
        this.volumeDownKeys = [189, 109];
        this.volumeUpKeys = [187, 107];
        this.muted = !1;
        this.loadSavedPrefs();
      };
      g["flixel.system.frontEnds.SoundFrontEnd"] = nl;
      nl.__name__ = "flixel.system.frontEnds.SoundFrontEnd";
      nl.prototype = {
        playMusic: function (a, b, c, d) {
          null == c && (c = !0);
          null == b && (b = 1);
          if (null == this.music) this.music = new of();
          else if (this.music.active) {
            var e = this.music;
            e.cleanup(e.autoDestroy, !0);
          }
          this.music.loadEmbedded(a, c);
          this.music.set_volume(b);
          this.music.persist = !0;
          this.music.set_group(null == d ? this.defaultMusicGroup : d);
          this.music.play();
        },
        load: function (a, b, c, d, e, f, h, m) {
          null == f && (f = !1);
          null == e && (e = !1);
          null == c && (c = !1);
          null == b && (b = 1);
          if (null == a && null == h) return null;
          var n = this.list.recycle(of);
          null != a ? n.loadEmbedded(a, c, e, m) : n.loadStream(h, c, e, m);
          n.set_volume(b);
          f && n.play();
          n.set_group(null == d ? this.defaultSoundGroup : d);
          return n;
        },
        play: function (a, b, c, d, e, f) {
          null == e && (e = !0);
          null == c && (c = !1);
          null == b && (b = 1);
          "string" == typeof a &&
            (a =
              la.exists(a, "SOUND") || la.exists(a, "MUSIC")
                ? la.getSound(a, !0)
                : null);
          a = this.list.recycle(of).loadEmbedded(a, c, e, f);
          a.set_volume(b);
          a.set_group(null == d ? this.defaultSoundGroup : d);
          return a.play();
        },
        destroy: function (a) {
          null == a && (a = !1);
          null == this.music ||
            (!a && this.music.persist) ||
            (this.destroySound(this.music), (this.music = null));
          for (var b = 0, c = this.list.members; b < c.length; ) {
            var d = c[b];
            ++b;
            null == d || (!a && d.persist) || this.destroySound(d);
          }
        },
        destroySound: function (a) {
          this.defaultMusicGroup.remove(a);
          this.defaultSoundGroup.remove(a);
          a.destroy();
        },
        toggleMuted: function () {
          this.muted = !this.muted;
          null != this.volumeHandler &&
            this.volumeHandler(this.muted ? 0 : this.volume);
          this.showSoundTray();
        },
        changeVolume: function (a) {
          this.muted = !1;
          this.set_volume(this.volume + a);
          this.showSoundTray();
        },
        showSoundTray: function () {
          null != p.game.soundTray &&
            this.soundTrayEnabled &&
            p.game.soundTray.show();
        },
        update: function (a) {
          null != this.music && this.music.active && this.music.update(a);
          null != this.list && this.list.active && this.list.update(a);
          p.keys.checkKeyArrayState(this.muteKeys, -1)
            ? this.toggleMuted()
            : p.keys.checkKeyArrayState(this.volumeUpKeys, -1)
            ? this.changeVolume(0.1)
            : p.keys.checkKeyArrayState(this.volumeDownKeys, -1) &&
              this.changeVolume(-0.1);
        },
        onFocusLost: function () {
          if (null != this.music) this.music.onFocusLost();
          for (var a = 0, b = this.list.members; a < b.length; ) {
            var c = b[a];
            ++a;
            if (null != c) c.onFocusLost();
          }
        },
        onFocus: function () {
          if (null != this.music) this.music.onFocus();
          for (var a = 0, b = this.list.members; a < b.length; ) {
            var c = b[a];
            ++a;
            if (null != c) c.onFocus();
          }
        },
        loadSavedPrefs: function () {
          null != p.save.data.volume && this.set_volume(p.save.data.volume);
          null != p.save.data.mute && (this.muted = p.save.data.mute);
        },
        set_volume: function (a) {
          a = 0 > a ? 0 : a;
          a = 1 < a ? 1 : a;
          null != this.volumeHandler && this.volumeHandler(this.muted ? 0 : a);
          return (this.volume = a);
        },
        __class__: nl,
        __properties__: { set_volume: "set_volume" },
      };
      var ml = function () {
        this.paused = this.stepRequested = !1;
      };
      g["flixel.system.frontEnds.VCRFrontEnd"] = ml;
      ml.__name__ = "flixel.system.frontEnds.VCRFrontEnd";
      ml.prototype = { __class__: ml };
      var Xi = function () {
        this._defaultScale = 2;
        this._width = 80;
        fa.call(this);
        this.set_visible(!1);
        this.set_scaleX(this._defaultScale);
        this.set_scaleY(this._defaultScale);
        var a = new Ob(new J(this._width, 30, !0, 2130706432));
        this.screenCenter();
        this.addChild(a);
        var b = new ec();
        b.set_width(a.get_width());
        b.set_height(a.get_height());
        b.set_multiline(!0);
        b.set_wordWrap(!0);
        b.set_selectable(!1);
        a = new zc(Xd.FONT_DEFAULT, 10, 16777215);
        a.align = 0;
        b.set_defaultTextFormat(a);
        this.addChild(b);
        b.set_text("VOLUME");
        b.set_y(16);
        b = 10;
        var c = 14;
        this._bars = [];
        for (var d = 0; 10 > d; )
          (a = d++),
            (a = new Ob(new J(4, a + 1, !1, -1))),
            a.set_x(b),
            a.set_y(c),
            this.addChild(a),
            this._bars.push(a),
            (b += 6),
            --c;
        this.set_y(-this.get_height());
        this.set_visible(!1);
      };
      g["flixel.system.ui.FlxSoundTray"] = Xi;
      Xi.__name__ = "flixel.system.ui.FlxSoundTray";
      Xi.__super__ = fa;
      Xi.prototype = r(fa.prototype, {
        update: function (a) {
          0 < this._timer
            ? (this._timer -= a / 1e3)
            : this.get_y() > -this.get_height() &&
              (this.set_y(this.get_y() - (a / 1e3) * p.height * 2),
              this.get_y() <= -this.get_height() &&
                (this.set_visible(!1),
                (this.active = !1),
                (p.save.data.mute = p.sound.muted),
                (p.save.data.volume = p.sound.volume),
                p.save.flush()));
        },
        show: function (a) {
          null == a && (a = !1);
          a ||
            ((a = la.getSound("flixel/sounds/beep.ogg")),
            null != a && p.sound.load(a).play());
          this._timer = 1;
          this.set_y(0);
          this.set_visible(!0);
          this.active = !0;
          a = Math.round(10 * p.sound.volume);
          p.sound.muted && (a = 0);
          for (var b = 0, c = this._bars.length; b < c; ) {
            var d = b++;
            d < a ? this._bars[d].set_alpha(1) : this._bars[d].set_alpha(0.5);
          }
        },
        screenCenter: function () {
          this.set_scaleX(this._defaultScale);
          this.set_scaleY(this._defaultScale);
          this.set_x(
            0.5 *
              (na.get_current().stage.stageWidth -
                this._width * this._defaultScale) -
              p.game.get_x()
          );
        },
        __class__: Xi,
      });
      var Wg = function (a, b, c) {
        null == c && (c = !1);
        this.toggleMode = this.toggled = this._mouseDown = !1;
        this.enabled = !0;
        fa.call(this);
        null != a && this.changeIcon(a);
        this.upHandler = b;
        this.toggleMode = c;
        this.addEventListener("mouseUp", q(this, this.onMouseUp));
        this.addEventListener("mouseDown", q(this, this.onMouseDown));
        this.addEventListener("mouseOut", q(this, this.onMouseOut));
        this.addEventListener("mouseOver", q(this, this.onMouseOver));
      };
      g["flixel.system.ui.FlxSystemButton"] = Wg;
      Wg.__name__ = "flixel.system.ui.FlxSystemButton";
      Wg.__interfaces__ = [T];
      Wg.__super__ = fa;
      Wg.prototype = r(fa.prototype, {
        changeIcon: function (a) {
          null != this._icon && this.removeChild(this._icon);
          hf.fixSize(a);
          this._icon = new Ob(a);
          this.addChild(this._icon);
        },
        destroy: function () {
          this.removeEventListener("mouseUp", q(this, this.onMouseUp));
          this.removeEventListener("mouseDown", q(this, this.onMouseDown));
          this.removeEventListener("mouseOut", q(this, this.onMouseOut));
          this.removeEventListener("mouseOver", q(this, this.onMouseOver));
          this.upHandler = this._icon = null;
        },
        onMouseUp: function (a) {
          this.enabled &&
            this._mouseDown &&
            (this.set_toggled(!this.toggled),
            (this._mouseDown = !1),
            null != this.upHandler && this.upHandler());
        },
        onMouseDown: function (a) {
          this._mouseDown = !0;
        },
        onMouseOver: function (a) {
          this.enabled && this.set_alpha(this.get_alpha() - 0.2);
        },
        onMouseOut: function (a) {
          this.enabled && this.set_alpha(this.get_alpha() + 0.2);
        },
        set_toggled: function (a) {
          this.toggleMode && this.set_alpha(a ? 0.3 : 1);
          return (this.toggled = a);
        },
        __class__: Wg,
        __properties__: r(fa.prototype.__properties__, {
          set_toggled: "set_toggled",
        }),
      });
      var Mm = function (a, b, c, d) {
        this.format = new zc(null, null, a, b, c);
        this.borderColor = null == d ? 0 : d;
      };
      g["flixel.text.FlxTextFormat"] = Mm;
      Mm.__name__ = "flixel.text.FlxTextFormat";
      Mm.prototype = { __class__: Mm };
      var Nm = function (a, b, c) {
        this.range = new Hl(b, c);
        this.format = a;
      };
      g["flixel.text._FlxText.FlxTextFormatRange"] = Nm;
      Nm.__name__ = "flixel.text._FlxText.FlxTextFormatRange";
      Nm.prototype = { __class__: Nm };
      var Vb = (z["flixel.text.FlxTextBorderStyle"] = {
          __ename__: "flixel.text.FlxTextBorderStyle",
          __constructs__: ["NONE", "SHADOW", "OUTLINE", "OUTLINE_FAST"],
          NONE: {
            _hx_index: 0,
            __enum__: "flixel.text.FlxTextBorderStyle",
            toString: l,
          },
          SHADOW: {
            _hx_index: 1,
            __enum__: "flixel.text.FlxTextBorderStyle",
            toString: l,
          },
          OUTLINE: {
            _hx_index: 2,
            __enum__: "flixel.text.FlxTextBorderStyle",
            toString: l,
          },
          OUTLINE_FAST: {
            _hx_index: 3,
            __enum__: "flixel.text.FlxTextBorderStyle",
            toString: l,
          },
        }),
        ul = {
          fromOpenFL: function (a) {
            switch (a) {
              case 0:
                return "center";
              case 2:
                return "justify";
              case 3:
                return "left";
              case 4:
                return "right";
              default:
                return "left";
            }
          },
          toOpenFL: function (a) {
            switch (a) {
              case "center":
                return 0;
              case "justify":
                return 2;
              case "left":
                return 3;
              case "right":
                return 4;
              default:
                return 3;
            }
          },
        },
        Il = function () {
          this._tileObjects = [];
          L.call(this);
          this.flixelType = 3;
          this.set_immovable(!0);
          this.set_moves(!1);
        };
      g["flixel.tile.FlxBaseTilemap"] = Il;
      Il.__name__ = "flixel.tile.FlxBaseTilemap";
      Il.__super__ = L;
      Il.prototype = r(L.prototype, {
        getTileIndexByCoords: function (a) {
          throw C.thrown("getTileIndexByCoords must be implemented");
        },
        destroy: function () {
          this._data = null;
          L.prototype.destroy.call(this);
        },
        overlapsPoint: function (a, b, c) {
          null == b && (b = !1);
          b &&
            (null == c && (c = p.camera),
            a.subtractPoint(c.scroll),
            a._weak && a.put());
          return this.tileAtPointAllowsCollisions(a);
        },
        tileAtPointAllowsCollisions: function (a) {
          a = this.getTileIndexByCoords(a);
          return 0 > a || a >= this._data.length
            ? !1
            : 0 < this._tileObjects[this._data[a]].allowCollisions;
        },
        __class__: Il,
      });
      var Jl = function (a, b, c, d) {
        H.call(this, a, b);
        this.makeGraphic(c, d, 0, !0);
        this.set_active(!1);
        this.set_immovable(!0);
        this.set_moves(!1);
      };
      g["flixel.tile.FlxTileblock"] = Jl;
      Jl.__name__ = "flixel.tile.FlxTileblock";
      Jl.__super__ = H;
      Jl.prototype = r(H.prototype, {
        destroy: function () {
          this.tileSprite = Z.destroy(this.tileSprite);
          H.prototype.destroy.call(this);
        },
        __class__: Jl,
      });
      var ac = function () {};
      g["flixel.tweens.FlxEase"] = ac;
      ac.__name__ = "flixel.tweens.FlxEase";
      ac.quadOut = function (a) {
        return -a * (a - 2);
      };
      ac.quadInOut = function (a) {
        return 0.5 >= a ? a * a * 2 : 1 - --a * a * 2;
      };
      ac.cubeInOut = function (a) {
        return 0.5 >= a ? a * a * a * 4 : 1 + --a * a * a * 4;
      };
      ac.quartInOut = function (a) {
        if (0.5 >= a) return a * a * a * a * 8;
        a = 2 * a - 2;
        return (1 - a * a * a * a) / 2 + 0.5;
      };
      ac.circOut = function (a) {
        return Math.sqrt(1 - (a - 1) * (a - 1));
      };
      ac.elasticInOut = function (a) {
        return 0.5 > a
          ? -0.5 *
              Math.pow(2, 10 * (a -= 0.5)) *
              Math.sin(
                (2 * (a - ac.ELASTIC_PERIOD / 4) * Math.PI) / ac.ELASTIC_PERIOD
              )
          : Math.pow(2, -10 * (a -= 0.5)) *
              Math.sin(
                (2 * (a - ac.ELASTIC_PERIOD / 4) * Math.PI) / ac.ELASTIC_PERIOD
              ) *
              0.5 +
              1;
      };
      var mb = function (a, b) {
        this._running = this._waitingForRestart = !1;
        this.duration =
          this.scale =
          this.executions =
          this.startDelay =
          this.loopDelay =
          this._secondsSinceStart =
          this._delayToUse =
            0;
        this.active = !1;
        a = this.resolveTweenOptions(a);
        this.set_type(a.type);
        this.onStart = a.onStart;
        this.onUpdate = a.onUpdate;
        this.onComplete = a.onComplete;
        this.ease = a.ease;
        this.setDelays(a.startDelay, a.loopDelay);
        this.manager = null != b ? b : mb.globalManager;
      };
      g["flixel.tweens.FlxTween"] = mb;
      mb.__name__ = "flixel.tweens.FlxTween";
      mb.__interfaces__ = [T];
      mb.tween = function (a, b, c, d) {
        null == c && (c = 1);
        return mb.globalManager.tween(a, b, c, d);
      };
      mb.num = function (a, b, c, d, e) {
        null == c && (c = 1);
        return mb.globalManager.num(a, b, c, d, e);
      };
      mb.prototype = {
        resolveTweenOptions: function (a) {
          null == a && (a = { type: 8 });
          null == a.type && (a.type = 8);
          return a;
        },
        destroy: function () {
          this._nextTweenInChain =
            this._chainedTweens =
            this.manager =
            this.ease =
            this.onComplete =
            this.onUpdate =
            this.onStart =
              null;
        },
        update: function (a) {
          this._secondsSinceStart += a;
          a = 0 < this.executions ? this.loopDelay : this.startDelay;
          if (!(this._secondsSinceStart < a)) {
            this.scale =
              Math.max(this._secondsSinceStart - a, 0) / this.duration;
            null != this.ease && (this.scale = this.ease(this.scale));
            this.backward && (this.scale = 1 - this.scale);
            if (
              this._secondsSinceStart > a &&
              !this._running &&
              ((this._running = !0), null != this.onStart)
            )
              this.onStart(this);
            if (this._secondsSinceStart >= this.duration + a)
              (this.scale = this.backward ? 0 : 1), (this.finished = !0);
            else if (null != this.onUpdate) this.onUpdate(this);
          }
        },
        start: function () {
          this._waitingForRestart = !1;
          this._secondsSinceStart = 0;
          this._delayToUse =
            0 < this.executions ? this.loopDelay : this.startDelay;
          if (0 == this.duration) return this.set_active(!1), this;
          this.set_active(!0);
          this.finished = this._running = !1;
          return this;
        },
        cancel: function () {
          this.onEnd();
          null != this.manager && this.manager.remove(this);
        },
        finish: function () {
          this.executions++;
          if (null != this.onComplete) this.onComplete(this);
          var a = this.type & -17;
          if (1 == a || 8 == a)
            this.onEnd(),
              (this._secondsSinceStart = this.duration + this.startDelay),
              8 == a && null != this.manager && this.manager.remove(this);
          if (2 == a || 4 == a)
            (this._secondsSinceStart =
              ((this._secondsSinceStart - this._delayToUse) % this.duration) +
              this._delayToUse),
              (this.scale =
                Math.max(this._secondsSinceStart - this._delayToUse, 0) /
                this.duration),
              null != this.ease &&
                0 < this.scale &&
                1 > this.scale &&
                (this.scale = this.ease(this.scale)),
              4 == a &&
                (this.backward = !this.backward) &&
                (this.scale = 1 - this.scale),
              this.restart();
        },
        onEnd: function () {
          this.setVarsOnEnd();
          this.processTweenChain();
        },
        setVarsOnEnd: function () {
          this.set_active(!1);
          this._running = !1;
          this.finished = !0;
        },
        processTweenChain: function () {
          null == this._chainedTweens ||
            0 >= this._chainedTweens.length ||
            ((this._nextTweenInChain = this._chainedTweens.shift()),
            this.doNextTween(this._nextTweenInChain),
            (this._chainedTweens = null));
        },
        doNextTween: function (a) {
          a.active || (a.start(), this.manager.add_flixel_tweens_FlxTween(a));
          a.setChain(this._chainedTweens);
        },
        setChain: function (a) {
          null != a &&
            (this._chainedTweens =
              null == this._chainedTweens ? a : this._chainedTweens.concat(a));
        },
        restart: function () {
          this.active ? this.start() : (this._waitingForRestart = !0);
        },
        setDelays: function (a, b) {
          this.set_startDelay(null != a ? a : 0);
          this.set_loopDelay(null != b ? b : 0);
          return this;
        },
        set_startDelay: function (a) {
          a = Math.abs(a);
          0 == this.executions &&
            ((this._secondsSinceStart =
              (Math.max(this._secondsSinceStart - this._delayToUse, 0) /
                this.duration) *
                this.duration +
              Math.max(a - this.startDelay, 0)),
            (this._delayToUse = a));
          return (this.startDelay = a);
        },
        set_loopDelay: function (a) {
          a = Math.abs(a);
          0 < this.executions &&
            ((this._secondsSinceStart =
              (Math.max(this._secondsSinceStart - this._delayToUse, 0) /
                this.duration) *
                this.duration +
              Math.max(a - this.loopDelay, 0)),
            (this._delayToUse = a));
          return (this.loopDelay = a);
        },
        set_type: function (a) {
          0 == a ? (a = 8) : 16 == a && (a = 17);
          this.backward = 0 < (a & 16);
          return (this.type = a);
        },
        set_active: function (a) {
          this.active = a;
          this._waitingForRestart && this.restart();
          return a;
        },
        __class__: mb,
        __properties__: {
          set_loopDelay: "set_loopDelay",
          set_startDelay: "set_startDelay",
          set_type: "set_type",
          set_active: "set_active",
        },
      };
      var Lj = function () {
        this._tweens = [];
        ca.call(this);
        this.set_visible(!1);
        p.signals.preStateSwitch.add(q(this, this.clear));
      };
      g["flixel.tweens.FlxTweenManager"] = Lj;
      Lj.__name__ = "flixel.tweens.FlxTweenManager";
      Lj.__super__ = ca;
      Lj.prototype = r(ca.prototype, {
        add_flixel_tweens_misc_NumTween: function (a, b) {
          null == b && (b = !1);
          if (null == a) return null;
          this._tweens.push(a);
          b && a.start();
          return a;
        },
        add_flixel_tweens_FlxTween: function (a, b) {
          null == b && (b = !1);
          if (null == a) return null;
          this._tweens.push(a);
          b && a.start();
          return a;
        },
        add_flixel_tweens_misc_VarTween: function (a, b) {
          null == b && (b = !1);
          if (null == a) return null;
          this._tweens.push(a);
          b && a.start();
          return a;
        },
        tween: function (a, b, c, d) {
          null == c && (c = 1);
          d = new Mj(d, this);
          d.tween(a, b, c);
          return this.add_flixel_tweens_misc_VarTween(d);
        },
        num: function (a, b, c, d, e) {
          null == c && (c = 1);
          d = new Nj(d, this);
          d.tween(a, b, c, e);
          return this.add_flixel_tweens_misc_NumTween(d);
        },
        destroy: function () {
          ca.prototype.destroy.call(this);
          p.signals.preStateSwitch.remove(q(this, this.clear));
        },
        update: function (a) {
          for (var b = null, c = 0, d = this._tweens; c < d.length; ) {
            var e = d[c];
            ++c;
            e.active &&
              (e.update(a), e.finished && (null == b && (b = []), b.push(e)));
          }
          if (null != b) for (; 0 < b.length; ) b.shift().finish();
        },
        remove: function (a, b) {
          null == b && (b = !0);
          if (null == a) return null;
          a.set_active(!1);
          b && a.destroy();
          b = this._tweens;
          var c = b.indexOf(a);
          -1 != c && ((b[c] = b[b.length - 1]), b.pop());
          return a;
        },
        clear: function () {
          for (var a = 0, b = this._tweens; a < b.length; ) {
            var c = b[a];
            ++a;
            null != c && (c.set_active(!1), c.destroy());
          }
          this._tweens.splice(0, this._tweens.length);
        },
        __class__: Lj,
      });
      var Nj = function (a, b) {
        mb.call(this, a, b);
      };
      g["flixel.tweens.misc.NumTween"] = Nj;
      Nj.__name__ = "flixel.tweens.misc.NumTween";
      Nj.__super__ = mb;
      Nj.prototype = r(mb.prototype, {
        destroy: function () {
          mb.prototype.destroy.call(this);
          this._tweenFunction = null;
        },
        tween: function (a, b, c, d) {
          this._tweenFunction = d;
          this._start = this.value = a;
          this._range = b - this.value;
          this.duration = c;
          this.start();
          return this;
        },
        update: function (a) {
          mb.prototype.update.call(this, a);
          this.value = this._start + this._range * this.scale;
          null != this._tweenFunction && this._tweenFunction(this.value);
        },
        __class__: Nj,
      });
      var Mj = function (a, b) {
        mb.call(this, a, b);
      };
      g["flixel.tweens.misc.VarTween"] = Mj;
      Mj.__name__ = "flixel.tweens.misc.VarTween";
      Mj.__super__ = mb;
      Mj.prototype = r(mb.prototype, {
        tween: function (a, b, c) {
          this._object = a;
          this._properties = b;
          this._propertyInfos = [];
          this.duration = c;
          this.start();
          return this;
        },
        update: function (a) {
          if (
            this._secondsSinceStart <
            (0 < this.executions ? this.loopDelay : this.startDelay)
          )
            mb.prototype.update.call(this, a);
          else {
            0 == this._propertyInfos.length && this.initializeVars();
            mb.prototype.update.call(this, a);
            a = 0;
            for (var b = this._propertyInfos; a < b.length; ) {
              var c = b[a];
              ++a;
              ia.setProperty(
                c.object,
                c.field,
                c.startValue + c.range * this.scale
              );
            }
          }
        },
        initializeVars: function () {
          if (ia.isObject(this._properties))
            var a = ia.fields(this._properties);
          else
            throw C.thrown(
              "Unsupported properties container - use an object containing key/value pairs."
            );
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            for (
              var d = this._object, e = c.split("."), f = e.pop(), h = 0;
              h < e.length;

            ) {
              var m = e[h];
              ++h;
              d = ia.getProperty(d, m);
              if (!ia.isObject(d))
                throw C.thrown(
                  'The object does not have the property "' +
                    m +
                    '" in "' +
                    c +
                    '"'
                );
            }
            if (null == ia.getProperty(d, f))
              throw C.thrown(
                'The object does not have the property "' + f + '"'
              );
            e = ia.getProperty(d, f);
            if (isNaN(e))
              throw C.thrown('The property "' + f + '" is not numeric.');
            c = ia.getProperty(this._properties, c);
            this._propertyInfos.push({
              object: d,
              field: f,
              startValue: e,
              range: c - e,
            });
          }
        },
        destroy: function () {
          mb.prototype.destroy.call(this);
          this._propertyInfos = this._properties = this._object = null;
        },
        __class__: Mj,
      });
      var xe = (z["flixel.ui.FlxBarFillDirection"] = {
          __ename__: "flixel.ui.FlxBarFillDirection",
          __constructs__:
            "LEFT_TO_RIGHT RIGHT_TO_LEFT TOP_TO_BOTTOM BOTTOM_TO_TOP HORIZONTAL_INSIDE_OUT HORIZONTAL_OUTSIDE_IN VERTICAL_INSIDE_OUT VERTICAL_OUTSIDE_IN".split(
              " "
            ),
          LEFT_TO_RIGHT: {
            _hx_index: 0,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
          RIGHT_TO_LEFT: {
            _hx_index: 1,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
          TOP_TO_BOTTOM: {
            _hx_index: 2,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
          BOTTOM_TO_TOP: {
            _hx_index: 3,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
          HORIZONTAL_INSIDE_OUT: {
            _hx_index: 4,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
          HORIZONTAL_OUTSIDE_IN: {
            _hx_index: 5,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
          VERTICAL_INSIDE_OUT: {
            _hx_index: 6,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
          VERTICAL_OUTSIDE_IN: {
            _hx_index: 7,
            __enum__: "flixel.ui.FlxBarFillDirection",
            toString: l,
          },
        }),
        Rf = function (a, b, c) {
          null == b && (b = 0);
          null == a && (a = 0);
          this.lastStatus = -1;
          this.maxInputMovement = Infinity;
          this.mouseButtons = [-1];
          this.allowSwiping = !0;
          this.statusAnimations = ["normal", "highlight", "pressed"];
          this.labelAlphas = [0.8, 1, 0.5];
          var d = U._pool.get().set(0, 0);
          d._inPool = !1;
          var e = U._pool.get().set(0, 0);
          e._inPool = !1;
          var f = U._pool.get().set(0, 1);
          f._inPool = !1;
          this.labelOffsets = [d, e, f];
          H.call(this, a, b);
          this.loadDefaultGraphic();
          this.onUp = new Ee(c);
          this.onDown = new Ee();
          this.onOver = new Ee();
          this.onOut = new Ee();
          this.set_status(0);
          this.scrollFactor.set();
          na.get_current().stage.addEventListener(
            "mouseUp",
            q(this, this.onUpEventListener)
          );
          this.input = new hd(0);
        };
      g["flixel.ui.FlxTypedButton_flixel_text_FlxText"] = Rf;
      Rf.__name__ = "flixel.ui.FlxTypedButton_flixel_text_FlxText";
      Rf.__interfaces__ = [kg];
      Rf.__super__ = H;
      Rf.prototype = r(H.prototype, {
        graphicLoaded: function () {
          H.prototype.graphicLoaded.call(this);
          this.setupAnimation("normal", 0);
          this.setupAnimation("highlight", 1);
          this.setupAnimation("pressed", 2);
        },
        loadDefaultGraphic: function () {
          this.loadGraphic("flixel/images/ui/button.png", !0, 80, 20);
        },
        setupAnimation: function (a, b) {
          b = Math.min(b, this.animation._sprite.numFrames - 1) | 0;
          this.animation.add(a, [b]);
        },
        destroy: function () {
          this.set_label(Z.destroy(this.label));
          this._spriteLabel = null;
          this.onUp = Z.destroy(this.onUp);
          this.onDown = Z.destroy(this.onDown);
          this.onOver = Z.destroy(this.onOver);
          this.onOut = Z.destroy(this.onOut);
          this.labelOffsets = Z.putArray(this.labelOffsets);
          this.input = this.currentInput = this.labelAlphas = null;
          na.get_current().stage.removeEventListener(
            "mouseUp",
            q(this, this.onUpEventListener)
          );
          H.prototype.destroy.call(this);
        },
        update: function (a) {
          H.prototype.update.call(this, a);
          this.visible &&
            (this.updateButton(),
            this.lastStatus != this.status &&
              (this.updateStatusAnimation(), (this.lastStatus = this.status)));
          this.input.update();
        },
        updateStatusAnimation: function () {
          this.animation.play(this.statusAnimations[this.status]);
        },
        draw: function () {
          H.prototype.draw.call(this);
          null != this._spriteLabel &&
            this._spriteLabel.visible &&
            (this._spriteLabel.set_cameras(this.get_cameras()),
            this._spriteLabel.draw());
        },
        updateButton: function () {
          var a = this.checkMouseOverlap();
          a || (a = this.checkTouchOverlap());
          if (
            null != this.currentInput &&
            this.currentInput.get_justReleased() &&
            a
          )
            this.onUpHandler();
          if (
            0 != this.status &&
            (!a ||
              (null != this.currentInput &&
                this.currentInput.get_justReleased()))
          )
            this.onOutHandler();
        },
        checkMouseOverlap: function () {
          for (var a = !1, b = 0, c = this.get_cameras(); b < c.length; ) {
            var d = c[b];
            ++b;
            for (var e = 0, f = this.mouseButtons; e < f.length; ) {
              var h = f[e];
              ++e;
              h = ef.getByID(h);
              null != h &&
                this.checkInput(p.mouse, h, h.justPressedPosition, d) &&
                (a = !0);
            }
          }
          return a;
        },
        checkTouchOverlap: function () {
          for (var a = !1, b = 0, c = this.get_cameras(); b < c.length; ) {
            var d = c[b];
            ++b;
            for (var e = 0, f = p.touches.list; e < f.length; ) {
              var h = f[e];
              ++e;
              this.checkInput(h, h, h.justPressedPosition, d) && (a = !0);
            }
          }
          return a;
        },
        checkInput: function (a, b, c, d) {
          if (Infinity != this.maxInputMovement) {
            var e = 0,
              f = 0;
            null == f && (f = 0);
            null == e && (e = 0);
            e = U._pool.get().set(e, f);
            e._inPool = !1;
            e._weak = !0;
            c =
              c.distanceTo(a.getScreenPosition(null, e)) >
              this.maxInputMovement;
          } else c = !1;
          if (c && b == this.currentInput) this.currentInput = null;
          else if (
            this.overlapsPoint(a.getWorldPosition(d, this._point), !0, d)
          )
            return this.updateStatus(b), !0;
          return !1;
        },
        updateStatus: function (a) {
          if (a.get_justPressed())
            (this.currentInput = a), this.onDownHandler();
          else if (0 == this.status)
            if (this.allowSwiping && a.get_pressed()) this.onDownHandler();
            else this.onOverHandler();
        },
        updateLabelPosition: function () {
          null != this._spriteLabel &&
            (this._spriteLabel.set_x(
              (this.pixelPerfectPosition ? Math.floor(this.x) : this.x) +
                this.labelOffsets[this.status].x
            ),
            this._spriteLabel.set_y(
              (this.pixelPerfectPosition ? Math.floor(this.y) : this.y) +
                this.labelOffsets[this.status].y
            ));
        },
        updateLabelAlpha: function () {
          null != this._spriteLabel &&
            this.labelAlphas.length > this.status &&
            this._spriteLabel.set_alpha(
              this.alpha * this.labelAlphas[this.status]
            );
        },
        onUpEventListener: function (a) {
          if (this.visible && this.exists && this.active && 2 == this.status)
            this.onUpHandler();
        },
        onUpHandler: function () {
          this.set_status(0);
          this.input.release();
          this.currentInput = null;
          var a = this.onUp;
          null != a.callback && a.callback();
          null != a.sound && a.sound.play(!0);
        },
        onDownHandler: function () {
          this.set_status(2);
          this.input.press();
          var a = this.onDown;
          null != a.callback && a.callback();
          null != a.sound && a.sound.play(!0);
        },
        onOverHandler: function () {
          if (p.mouse.enabled) {
            this.set_status(1);
            var a = this.onOver;
            null != a.callback && a.callback();
            null != a.sound && a.sound.play(!0);
          } else this.set_status(0);
        },
        onOutHandler: function () {
          this.set_status(0);
          this.input.release();
          var a = this.onOut;
          null != a.callback && a.callback();
          null != a.sound && a.sound.play(!0);
        },
        set_label: function (a) {
          null != a &&
            (a.scrollFactor.put(), (a.scrollFactor = this.scrollFactor));
          this._spriteLabel = this.label = a;
          this.updateLabelPosition();
          return a;
        },
        set_status: function (a) {
          this.status = a;
          this.updateLabelAlpha();
          return this.status;
        },
        set_alpha: function (a) {
          H.prototype.set_alpha.call(this, a);
          this.updateLabelAlpha();
          return this.alpha;
        },
        set_x: function (a) {
          H.prototype.set_x.call(this, a);
          this.updateLabelPosition();
          return this.x;
        },
        set_y: function (a) {
          H.prototype.set_y.call(this, a);
          this.updateLabelPosition();
          return this.y;
        },
        get_justReleased: function () {
          return -1 == this.input.current;
        },
        get_pressed: function () {
          var a = this.input;
          return 1 != a.current ? 2 == a.current : !0;
        },
        get_justPressed: function () {
          return 2 == this.input.current;
        },
        __class__: Rf,
        __properties__: r(H.prototype.__properties__, {
          get_justPressed: "get_justPressed",
          get_pressed: "get_pressed",
          get_justReleased: "get_justReleased",
          set_status: "set_status",
          set_label: "set_label",
        }),
      });
      var Kl = function (a, b, c, d) {
        null == b && (b = 0);
        null == a && (a = 0);
        Rf.call(this, a, b, d);
        a = 0;
        for (b = this.labelOffsets; a < b.length; )
          (d = b[a]), ++a, d.set(d.x - 1, d.y + 3);
        null != c &&
          (this.set_label(
            new ab(
              this.x + this.labelOffsets[0].x,
              this.y + this.labelOffsets[0].y,
              80,
              c
            )
          ),
          this.label.setFormat(null, 8, 3355443, "center"),
          this.label.set_alpha(this.labelAlphas[this.status]),
          this.label.drawFrame(!0));
      };
      g["flixel.ui.FlxButton"] = Kl;
      Kl.__name__ = "flixel.ui.FlxButton";
      Kl.__super__ = Rf;
      Kl.prototype = r(Rf.prototype, {
        resetHelpers: function () {
          Rf.prototype.resetHelpers.call(this);
          if (null != this.label) {
            var a = this.label,
              b = this.get_width() | 0;
            a.set_fieldWidth((this.label.frameWidth = b));
            this.label.set_size(this.label._defaultFormat.size | 0);
          }
        },
        __class__: Kl,
      });
      var Ee = function (a, b) {
        this.callback = a;
        this.sound = b;
      };
      g["flixel.ui._FlxButton.FlxButtonEvent"] = Ee;
      Ee.__name__ = "flixel.ui._FlxButton.FlxButtonEvent";
      Ee.__interfaces__ = [T];
      Ee.prototype = {
        destroy: function () {
          this.callback = null;
          this.sound = Z.destroy(this.sound);
        },
        __class__: Ee,
      };
      var Mc = function () {};
      g["flixel.util.FlxArrayUtil"] = Mc;
      Mc.__name__ = "flixel.util.FlxArrayUtil";
      Mc.setLength_cacheValue_T = function (a, b) {
        if (0 > b) return a;
        var c = b - a.length;
        if (0 <= c) return a;
        b = 0;
        for (c = -c; b < c; ) b++, a.pop();
        return a;
      };
      Mc.setLength_flixel_group_FlxTypedGroup_T = function (a, b) {
        if (0 > b) return a;
        var c = b - a.length;
        if (0 <= c) return a;
        b = 0;
        for (c = -c; b < c; ) b++, a.pop();
        return a;
      };
      Mc.clearArray = function (a, b) {
        null == b && (b = !1);
        if (null == a) return a;
        if (b)
          for (; 0 < a.length; )
            a.pop() instanceof Array && Mc.clearArray(a, b);
        else for (; 0 < a.length; ) a.pop();
        return a;
      };
      Mc.equals = function (a, b) {
        if (null == a && null == b) return !0;
        if (
          (null == a && null != b) ||
          (null != a && null == b) ||
          a.length != b.length
        )
          return !1;
        for (var c = 0, d = a.length; c < d; ) {
          var e = c++;
          if (a[e] != b[e]) return !1;
        }
        return !0;
      };
      var od = (z["flixel.util.FlxAxes"] = {
          __ename__: "flixel.util.FlxAxes",
          __constructs__: ["X", "Y", "XY"],
          X: { _hx_index: 0, __enum__: "flixel.util.FlxAxes", toString: l },
          Y: { _hx_index: 1, __enum__: "flixel.util.FlxAxes", toString: l },
          XY: { _hx_index: 2, __enum__: "flixel.util.FlxAxes", toString: l },
        }),
        Xb = {
          fromString: function (a) {
            var b = null;
            a = K.trim(a);
            if (Xb.COLOR_REGEX.match(a))
              (a = "0x" + Xb.COLOR_REGEX.matched(2)),
                (b = Xb._new(I.parseInt(a))),
                8 == a.length && (b = (b & 16777215) | -16777216);
            else {
              a = a.toUpperCase();
              for (var c = ea.keysIterator(Xb.colorLookup.h); c.hasNext(); ) {
                var d = c.next();
                if (d.toUpperCase() == a) {
                  b = Xb._new(Xb.colorLookup.h[d]);
                  break;
                }
              }
            }
            return b;
          },
          _new: function (a) {
            null == a && (a = 0);
            return a;
          },
        },
        ve = function () {};
      g["flixel.util.FlxColorTransformUtil"] = ve;
      ve.__name__ = "flixel.util.FlxColorTransformUtil";
      ve.setMultipliers = function (a, b, c, d, e) {
        a.redMultiplier = b;
        a.greenMultiplier = c;
        a.blueMultiplier = d;
        a.alphaMultiplier = e;
        return a;
      };
      ve.hasRGBMultipliers = function (a) {
        return 1 == a.redMultiplier && 1 == a.greenMultiplier
          ? 1 != a.blueMultiplier
          : !0;
      };
      ve.hasRGBOffsets = function (a) {
        return 0 == a.redOffset && 0 == a.greenOffset ? 0 != a.blueOffset : !0;
      };
      ve.hasRGBAOffsets = function (a) {
        return ve.hasRGBOffsets(a) ? !0 : 0 != a.alphaOffset;
      };
      var Z = function () {};
      g["flixel.util.FlxDestroyUtil"] = Z;
      Z.__name__ = "flixel.util.FlxDestroyUtil";
      Z.destroy = function (a) {
        null != a && a.destroy();
        return null;
      };
      Z.destroyArray = function (a) {
        if (null != a) {
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            Z.destroy(c);
          }
          a.splice(0, a.length);
        }
        return null;
      };
      Z.put = function (a) {
        null != a && a.put();
        return null;
      };
      Z.putArray = function (a) {
        if (null != a) {
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            Z.put(c);
          }
          a.splice(0, a.length);
        }
        return null;
      };
      Z.dispose = function (a) {
        null != a && a.dispose();
        return null;
      };
      Z.disposeIfNotEqual = function (a, b, c) {
        if (null != a && (a.width != b || a.height != c)) a.dispose();
        else if (null != a) return a;
        return null;
      };
      Z.removeChild = function (a, b) {
        null != a && null != b && a.contains(b) && a.removeChild(b);
        return null;
      };
      var sd = function () {};
      g["flixel.util.FlxGradient"] = sd;
      sd.__name__ = "flixel.util.FlxGradient";
      sd.createGradientMatrix = function (a, b, c, d, e) {
        null == e && (e = 90);
        null == d && (d = 1);
        var f = new Ea();
        e *= Math.PI / 180;
        f.createGradientBox(a, Hc.toFloat(b) / Hc.toFloat(d), e, 0, 0);
        a = [];
        b = 0;
        for (d = c.length; b < d; )
          (e = b++), a.push(((c[e] >> 24) & 255) / 255);
        e = [];
        if (2 == c.length) (e[0] = 0), (e[1] = 255);
        else {
          var h = (255 / (c.length - 1)) | 0;
          e.push(0);
          b = 1;
          for (d = c.length - 1; b < d; ) (c = b++), e.push(c * h);
          e.push(255);
        }
        return { matrix: f, alpha: a, ratio: e };
      };
      sd.createGradientBitmapData = function (a, b, c, d, e, f) {
        null == f && (f = !0);
        null == e && (e = 90);
        null == d && (d = 1);
        Hc.gt(1, a) && (a = 1);
        Hc.gt(1, b) && (b = 1);
        var h = sd.createGradientMatrix(a, b, c, d, e);
        e = new vf();
        f = f ? 1 : 0;
        e.get_graphics().beginGradientFill(
          0,
          c,
          h.alpha,
          h.ratio,
          h.matrix,
          0,
          f,
          0
        );
        e.get_graphics().drawRect(
          0,
          0,
          Hc.toFloat(a),
          Hc.toFloat(b) / Hc.toFloat(d)
        );
        c = new J(a, b, !0, 0);
        1 == d
          ? c.draw(e)
          : ((a = new Ob(new J(a, (Hc.toFloat(b) / Hc.toFloat(d)) | 0, !0, 0))),
            a.get_bitmapData().draw(e),
            a.set_scaleY(Hc.toFloat(d)),
            (d = new Ea()),
            d.scale(a.get_scaleX(), a.get_scaleY()),
            c.draw(a, d));
        return c;
      };
      sd.overlayGradientOnBitmapData = function (a, b, c, d, e, f, h, m, n) {
        null == n && (n = !0);
        null == m && (m = 90);
        null == h && (h = 1);
        null == f && (f = 0);
        null == e && (e = 0);
        b > a.width && (b = a.width);
        c > a.height && (c = a.height);
        b = sd.createGradientBitmapData(b, c, d, h, m, n);
        a.copyPixels(
          b,
          new ma(0, 0, b.width, b.height),
          new Ra(e, f),
          null,
          null,
          !0
        );
        b.dispose();
        return a;
      };
      var vn = (z["flixel.util.FlxHorizontalAlign"] = {
          __ename__: "flixel.util.FlxHorizontalAlign",
          __constructs__: ["LEFT", "CENTER", "RIGHT"],
          LEFT: {
            _hx_index: 0,
            __enum__: "flixel.util.FlxHorizontalAlign",
            toString: l,
          },
          CENTER: {
            _hx_index: 1,
            __enum__: "flixel.util.FlxHorizontalAlign",
            toString: l,
          },
          RIGHT: {
            _hx_index: 2,
            __enum__: "flixel.util.FlxHorizontalAlign",
            toString: l,
          },
        }),
        Cc = function (a) {
          this._firstUpdate = !1;
          this._wasObjectImmovable = null;
          this._autoRotate = !1;
          this._inc = 1;
          this.finished = !1;
          this.nodeIndex = 0;
          this.active = !1;
          this.autoCenter = !0;
          this.speed = this.angle = 0;
          this._nodes = null != a ? a.slice() : [];
        };
      g["flixel.util.FlxPath"] = Cc;
      Cc.__name__ = "flixel.util.FlxPath";
      Cc.__interfaces__ = [T];
      Cc.prototype = {
        update: function (a) {
          if (null != this.object) {
            this._firstUpdate &&
              ((this._wasObjectImmovable = this.object.immovable),
              this.object.set_immovable(!0),
              (this._firstUpdate = !1));
            Cc._point.set_x(this.object.x);
            Cc._point.set_y(this.object.y);
            if (this.autoCenter) {
              var b = Cc._point,
                c = 0.5 * this.object.get_width(),
                d = 0.5 * this.object.get_height();
              null == d && (d = 0);
              null == c && (c = 0);
              var e = b;
              e.set_x(e.x + c);
              e = b;
              e.set_y(e.y + d);
            }
            var f = this._nodes[this.nodeIndex];
            b = f.x - Cc._point.x;
            c = f.y - Cc._point.y;
            var h = 0 < (this._mode & 65536),
              m = 0 < (this._mode & 1048576);
            h
              ? (0 < b ? b : -b) < this.speed * a && (f = this.advancePath())
              : m
              ? (0 < c ? c : -c) < this.speed * a && (f = this.advancePath())
              : Math.sqrt(b * b + c * c) < this.speed * a &&
                (f = this.advancePath());
            null != this.object &&
              0 != this.speed &&
              (Cc._point.set_x(this.object.x),
              Cc._point.set_y(this.object.y),
              this.autoCenter &&
                ((b = Cc._point),
                (c = 0.5 * this.object.get_width()),
                (d = 0.5 * this.object.get_height()),
                null == d && (d = 0),
                null == c && (c = 0),
                (e = b),
                e.set_x(e.x + c),
                (e = b),
                e.set_y(e.y + d)),
              (b = Cc._point),
              (a = 1e-7 >= Math.abs(b.x - f.x) && 1e-7 >= Math.abs(b.y - f.y)),
              f._weak && f.put(),
              a ? this.object.velocity.set() : this.calculateVelocity(f, h, m),
              this._autoRotate &&
                ((this.object.angularVelocity = 0),
                (this.object.angularAcceleration = 0),
                this.object.set_angle(this.angle)),
              this.finished && this.cancel());
          }
        },
        calculateVelocity: function (a, b, c) {
          b || Cc._point.y == a.y
            ? (this.object.velocity.set_x(
                Cc._point.x < a.x ? this.speed : -this.speed
              ),
              (this.angle = 0 > this.object.velocity.x ? -90 : 90),
              b || this.object.velocity.set_y(0))
            : c || Cc._point.x == a.x
            ? (this.object.velocity.set_y(
                Cc._point.y < a.y ? this.speed : -this.speed
              ),
              (this.angle = 0 > this.object.velocity.y ? 0 : 180),
              c || this.object.velocity.set_x(0))
            : (this.object.velocity.set_x(
                Cc._point.x < a.x ? this.speed : -this.speed
              ),
              this.object.velocity.set_y(
                Cc._point.y < a.y ? this.speed : -this.speed
              ),
              (this.angle = Cc._point.angleBetween(a)),
              this.object.velocity.set(0, -this.speed),
              (a = this.object.velocity),
              (b = c = 0),
              null == b && (b = 0),
              null == c && (c = 0),
              null == b && (b = 0),
              null == c && (c = 0),
              (b = U._pool.get().set(c, b)),
              (b._inPool = !1),
              (b._weak = !0),
              a.rotate(b, this.angle));
        },
        advancePath: function (a) {
          null == a && (a = !0);
          if (a && ((a = this._nodes[this.nodeIndex]), null != a)) {
            if (
              0 == (this._mode & 1048576) &&
              (this.object.set_x(a.x), this.autoCenter)
            ) {
              var b = this.object;
              b.set_x(b.x - 0.5 * this.object.get_width());
            }
            0 == (this._mode & 65536) &&
              (this.object.set_y(a.y),
              this.autoCenter &&
                ((b = this.object),
                b.set_y(b.y - 0.5 * this.object.get_height())));
          }
          a = !1;
          this.nodeIndex += this._inc;
          0 < (this._mode & 1)
            ? 0 > this.nodeIndex &&
              ((this.nodeIndex = 0), (a = !0), this.onEnd())
            : 0 < (this._mode & 16)
            ? this.nodeIndex >= this._nodes.length &&
              ((a = !0), (this.nodeIndex = 0))
            : 0 < (this._mode & 256)
            ? 0 > this.nodeIndex &&
              ((this.nodeIndex = this._nodes.length - 1),
              (a = !0),
              0 > this.nodeIndex && (this.nodeIndex = 0))
            : 0 < (this._mode & 4096)
            ? 0 < this._inc
              ? this.nodeIndex >= this._nodes.length &&
                ((this.nodeIndex = this._nodes.length - 2),
                (a = !0),
                0 > this.nodeIndex && (this.nodeIndex = 0),
                (this._inc = -this._inc))
              : 0 > this.nodeIndex &&
                ((this.nodeIndex = 1),
                (a = !0),
                this.nodeIndex >= this._nodes.length &&
                  (this.nodeIndex = this._nodes.length - 1),
                0 > this.nodeIndex && (this.nodeIndex = 0),
                (this._inc = -this._inc))
            : this.nodeIndex >= this._nodes.length &&
              ((this.nodeIndex = this._nodes.length - 1),
              (a = !0),
              this.onEnd());
          if (a && null != this.onComplete) this.onComplete(this);
          return this._nodes[this.nodeIndex];
        },
        cancel: function () {
          this.onEnd();
          null != this.object && this.object.velocity.set(0, 0);
          return this;
        },
        onEnd: function () {
          this.finished = !0;
          this.active = !1;
          null != this._wasObjectImmovable &&
            this.object.set_immovable(this._wasObjectImmovable);
          this._wasObjectImmovable = null;
        },
        destroy: function () {
          Z.putArray(this._nodes);
          this.onComplete = this.object = this._nodes = null;
        },
        __class__: Cc,
      };
      var Oj = function (a) {
        this._count = 0;
        this._pool = [];
        this._class = a;
      };
      g["flixel.util.FlxPool_flixel_util_LabelValuePair"] = Oj;
      Oj.__name__ = "flixel.util.FlxPool_flixel_util_LabelValuePair";
      Oj.__interfaces__ = [B];
      Oj.prototype = {
        get: function () {
          return 0 == this._count
            ? Ya.createInstance(this._class, [])
            : this._pool[--this._count];
        },
        put: function (a) {
          if (null != a) {
            var b = this._pool.indexOf(a);
            if (-1 == b || b >= this._count)
              (a.label = null),
                (a.value = null),
                (this._pool[this._count++] = a);
          }
        },
        __class__: Oj,
      };
      var il = (z["flixel.util.FlxSaveStatus"] = {
          __ename__: "flixel.util.FlxSaveStatus",
          __constructs__: ["SUCCESS", "PENDING", "ERROR"],
          SUCCESS: {
            _hx_index: 0,
            __enum__: "flixel.util.FlxSaveStatus",
            toString: l,
          },
          PENDING: {
            _hx_index: 1,
            __enum__: "flixel.util.FlxSaveStatus",
            toString: l,
          },
          ERROR: {
            _hx_index: 2,
            __enum__: "flixel.util.FlxSaveStatus",
            toString: l,
          },
        }),
        Pj = function (a, b) {
          this.dispatchOnce = !1;
          this.listener = a;
          this.dispatchOnce = b;
        };
      g["flixel.util._FlxSignal.FlxSignalHandler"] = Pj;
      Pj.__name__ = "flixel.util._FlxSignal.FlxSignalHandler";
      Pj.__interfaces__ = [T];
      Pj.prototype = {
        destroy: function () {
          this.listener = null;
        },
        __class__: Pj,
      };
      var Ll = function () {};
      g["flixel.util.IFlxSignal"] = Ll;
      Ll.__name__ = "flixel.util.IFlxSignal";
      Ll.__isInterface__ = !0;
      Ll.__interfaces__ = [T];
      var ue = function () {
        this.processingListeners = !1;
        this.handlers = [];
        this.pendingRemove = [];
      };
      g["flixel.util._FlxSignal.FlxBaseSignal"] = ue;
      ue.__name__ = "flixel.util._FlxSignal.FlxBaseSignal";
      ue.__interfaces__ = [Ll];
      ue.prototype = {
        add: function (a) {
          null != a && this.registerListener(a, !1);
        },
        remove: function (a) {
          null != a &&
            ((a = this.getHandler(a)),
            null != a &&
              (this.processingListeners
                ? this.pendingRemove.push(a)
                : (ba.remove(this.handlers, a), a.destroy())));
        },
        destroy: function () {
          Z.destroyArray(this.handlers);
          this.pendingRemove = this.handlers = null;
        },
        registerListener: function (a, b) {
          var c = this.getHandler(a);
          if (null == c) return (c = new Pj(a, b)), this.handlers.push(c), c;
          if (c.dispatchOnce != b)
            throw C.thrown(
              "You cannot addOnce() then add() the same listener without removing the relationship first."
            );
          return c;
        },
        getHandler: function (a) {
          for (var b = 0, c = this.handlers; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d.listener == a) return d;
          }
          return null;
        },
        __class__: ue,
      };
      var fd = function () {
        ue.call(this);
        this.dispatch = q(this, this.dispatch0);
      };
      g["flixel.util._FlxSignal.FlxSignal0"] = fd;
      fd.__name__ = "flixel.util._FlxSignal.FlxSignal0";
      fd.__super__ = ue;
      fd.prototype = r(ue.prototype, {
        dispatch0: function () {
          this.processingListeners = !0;
          for (var a = 0, b = this.handlers; a < b.length; ) {
            var c = b[a];
            ++a;
            c.listener();
            c.dispatchOnce && this.remove(c.listener);
          }
          this.processingListeners = !1;
          a = 0;
          for (b = this.pendingRemove; a < b.length; )
            (c = b[a]), ++a, this.remove(c.listener);
          0 < this.pendingRemove.length && (this.pendingRemove = []);
        },
        __class__: fd,
      });
      var qf = function () {
        ue.call(this);
        this.dispatch = q(this, this.dispatch1);
      };
      g["flixel.util._FlxSignal.FlxSignal1"] = qf;
      qf.__name__ = "flixel.util._FlxSignal.FlxSignal1";
      qf.__super__ = ue;
      qf.prototype = r(ue.prototype, {
        dispatch1: function (a) {
          this.processingListeners = !0;
          for (var b = 0, c = this.handlers; b < c.length; ) {
            var d = c[b];
            ++b;
            d.listener(a);
            d.dispatchOnce && this.remove(d.listener);
          }
          this.processingListeners = !1;
          b = 0;
          for (c = this.pendingRemove; b < c.length; )
            (d = c[b]), ++b, this.remove(d.listener);
          0 < this.pendingRemove.length && (this.pendingRemove = []);
        },
        __class__: qf,
      });
      var Vi = function () {
        ue.call(this);
        this.dispatch = q(this, this.dispatch2);
      };
      g["flixel.util._FlxSignal.FlxSignal2"] = Vi;
      Vi.__name__ = "flixel.util._FlxSignal.FlxSignal2";
      Vi.__super__ = ue;
      Vi.prototype = r(ue.prototype, {
        dispatch2: function (a, b) {
          this.processingListeners = !0;
          for (var c = 0, d = this.handlers; c < d.length; ) {
            var e = d[c];
            ++c;
            e.listener(a, b);
            e.dispatchOnce && this.remove(e.listener);
          }
          this.processingListeners = !1;
          c = 0;
          for (d = this.pendingRemove; c < d.length; )
            (e = d[c]), ++c, this.remove(e.listener);
          0 < this.pendingRemove.length && (this.pendingRemove = []);
        },
        __class__: Vi,
      });
      var Fm = function () {};
      g["flixel.util.FlxSort"] = Fm;
      Fm.__name__ = "flixel.util.FlxSort";
      Fm.byY = function (a, b, c) {
        b = b.y;
        c = c.y;
        var d = 0;
        b < c ? (d = a) : b > c && (d = -a);
        return d;
      };
      var Qf = function () {};
      g["flixel.util.FlxSpriteUtil"] = Qf;
      Qf.__name__ = "flixel.util.FlxSpriteUtil";
      var yb = function () {};
      g["flixel.util.FlxStringUtil"] = yb;
      yb.__name__ = "flixel.util.FlxStringUtil";
      yb.getClassName = function (a, b) {
        null == b && (b = !1);
        a = pa.__instanceof(a, hl) ? a : pa.getClass(a);
        return yb.formatPackage(a.__name__, b);
      };
      yb.formatPackage = function (a, b) {
        if (null == a) return null;
        a = K.replace(a, "::", ".");
        b && (a = ba.substr(a, a.lastIndexOf(".") + 1, null));
        return a;
      };
      yb.getHost = function (a) {
        var b = new Ua(
          "^(?:[a-z][a-z0-9+\\-.]*://)?(?:[a-z0-9\\-._~%!$&'()*+,;=]+@)?([a-z0-9\\-._~%]{3,}|\\[[a-f0-9:.]+\\])?(?::[0-9]+)?",
          "i"
        );
        return b.match(a) && ((a = b.matched(1)), null != a)
          ? decodeURIComponent(a.split("+").join(" ")).toLowerCase()
          : "";
      };
      yb.getDomain = function (a) {
        a = yb.getHost(a);
        var b = new Ua("^(localhost|[0-9.]+|\\[[a-f0-9:.]+\\])$", "i"),
          c = new Ua(
            "^(?:[a-z0-9\\-]+\\.)*([a-z0-9\\-]+\\.[a-z0-9\\-]+)$",
            "i"
          );
        return !b.match(a) && c.match(a) && ((a = c.matched(1)), null != a)
          ? a.toLowerCase()
          : "";
      };
      yb.toIntArray = function (a) {
        if (null != a && "" != a) {
          a = a.split(",");
          for (var b = [], c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            b.push(I.parseInt(d));
          }
          return b;
        }
        return null;
      };
      yb.getDebugString = function (a) {
        for (var b = "(", c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b += d.label + ": ";
          var e = d.value;
          "number" == typeof e &&
            (e = Ye.roundDecimal(e, p.debugger.precision));
          b += I.string(e) + " | ";
          Sb._pool.put(d);
        }
        b = K.trim(ba.substr(b, 0, b.length - 2));
        return b + ")";
      };
      var Sb = function () {};
      g["flixel.util.LabelValuePair"] = Sb;
      Sb.__name__ = "flixel.util.LabelValuePair";
      Sb.__interfaces__ = [T];
      Sb.prototype = {
        destroy: function () {
          this.value = this.label = null;
        },
        __class__: Sb,
      };
      var hc = function (a) {
        this._inManager = !1;
        this._timeCounter = this._loopsCounter = 0;
        this.active = this.finished = !1;
        this.time = this.loops = 0;
        this.manager = null != a ? a : hc.globalManager;
      };
      g["flixel.util.FlxTimer"] = hc;
      hc.__name__ = "flixel.util.FlxTimer";
      hc.__interfaces__ = [T];
      hc.prototype = {
        destroy: function () {
          this.onComplete = null;
        },
        start: function (a, b, c) {
          null == c && (c = 1);
          null == a && (a = 1);
          null == this.manager ||
            this._inManager ||
            (this.manager.add(this), (this._inManager = !0));
          this.active = !0;
          this.finished = !1;
          this.time = Math.abs(a);
          0 > c && (c *= -1);
          this.loops = c;
          this.onComplete = b;
          this._loopsCounter = this._timeCounter = 0;
          return this;
        },
        reset: function (a) {
          null == a && (a = -1);
          0 > a && (a = this.time);
          this.start(a, this.onComplete, this.loops);
          return this;
        },
        cancel: function () {
          this.finished = !0;
          this.active = !1;
          null != this.manager &&
            this._inManager &&
            (this.manager.remove(this), (this._inManager = !1));
        },
        update: function (a) {
          for (
            this._timeCounter += a;
            this._timeCounter >= this.time && this.active && !this.finished;

          )
            (this._timeCounter -= this.time),
              this._loopsCounter++,
              0 < this.loops &&
                this._loopsCounter >= this.loops &&
                (this.finished = !0);
        },
        onLoopFinished: function () {
          this.finished && this.cancel();
          if (null != this.onComplete) this.onComplete(this);
        },
        __class__: hc,
      };
      var Kj = function () {
        this._timers = [];
        ca.call(this);
        this.set_visible(!1);
        p.signals.preStateSwitch.add(q(this, this.clear));
      };
      g["flixel.util.FlxTimerManager"] = Kj;
      Kj.__name__ = "flixel.util.FlxTimerManager";
      Kj.__super__ = ca;
      Kj.prototype = r(ca.prototype, {
        destroy: function () {
          Mc.clearArray(this._timers);
          this._timers = null;
          p.signals.preStateSwitch.remove(q(this, this.clear));
          ca.prototype.destroy.call(this);
        },
        update: function (a) {
          for (var b = null, c = 0, d = this._timers; c < d.length; ) {
            var e = d[c];
            ++c;
            if (e.active && !e.finished && 0 <= e.time) {
              var f = e._loopsCounter;
              e.update(a);
              f != e._loopsCounter && (null == b && (b = []), b.push(e));
            }
          }
          if (null != b) for (; 0 < b.length; ) b.shift().onLoopFinished();
        },
        add: function (a) {
          this._timers.push(a);
        },
        remove: function (a) {
          var b = this._timers;
          a = b.indexOf(a);
          -1 != a && ((b[a] = b[b.length - 1]), b.pop());
        },
        clear: function () {
          Mc.clearArray(this._timers);
        },
        __class__: Kj,
      });
      var un = (z["flixel.util.FlxVerticalAlign"] = {
          __ename__: "flixel.util.FlxVerticalAlign",
          __constructs__: ["TOP", "CENTER", "BOTTOM"],
          TOP: {
            _hx_index: 0,
            __enum__: "flixel.util.FlxVerticalAlign",
            toString: l,
          },
          CENTER: {
            _hx_index: 1,
            __enum__: "flixel.util.FlxVerticalAlign",
            toString: l,
          },
          BOTTOM: {
            _hx_index: 2,
            __enum__: "flixel.util.FlxVerticalAlign",
            toString: l,
          },
        }),
        Hl = function (a, b) {
          this.start = a;
          this.end = null == b ? a : b;
        };
      g["flixel.util.helpers.FlxRange"] = Hl;
      Hl.__name__ = "flixel.util.helpers.FlxRange";
      Hl.prototype = { __class__: Hl };
      var Wh = (z["haxe.StackItem"] = {
          __ename__: "haxe.StackItem",
          __constructs__: [
            "CFunction",
            "Module",
            "FilePos",
            "Method",
            "LocalFunction",
          ],
          CFunction: { _hx_index: 0, __enum__: "haxe.StackItem", toString: l },
          Module:
            ((y = function (a) {
              return {
                _hx_index: 1,
                m: a,
                __enum__: "haxe.StackItem",
                toString: l,
              };
            }),
            (y.__params__ = ["m"]),
            y),
          FilePos:
            ((y = function (a, b, c, d) {
              return {
                _hx_index: 2,
                s: a,
                file: b,
                line: c,
                column: d,
                __enum__: "haxe.StackItem",
                toString: l,
              };
            }),
            (y.__params__ = ["s", "file", "line", "column"]),
            y),
          Method:
            ((y = function (a, b) {
              return {
                _hx_index: 3,
                classname: a,
                method: b,
                __enum__: "haxe.StackItem",
                toString: l,
              };
            }),
            (y.__params__ = ["classname", "method"]),
            y),
          LocalFunction:
            ((y = function (a) {
              return {
                _hx_index: 4,
                v: a,
                __enum__: "haxe.StackItem",
                toString: l,
              };
            }),
            (y.__params__ = ["v"]),
            y),
        }),
        Sf = {
          callStack: function () {
            return Ba.toHaxe(Ba.callStack());
          },
          exceptionStack: function (a) {
            null == a && (a = !1);
            var b = Ba.toHaxe(Ba.exceptionStack());
            return a ? b : Sf.subtract(b, Sf.callStack());
          },
          toString: function (a) {
            for (var b = new cf(), c = 0; c < a.length; ) {
              var d = a[c];
              ++c;
              b.b += "\nCalled from ";
              Sf.itemToString(b, d);
            }
            return b.b;
          },
          subtract: function (a, b) {
            for (var c = -1, d = -1; ++d < a.length; ) {
              for (var e = 0, f = b.length; e < f; ) {
                var h = e++;
                if (Sf.equalItems(a[d], b[h])) {
                  if ((0 > c && (c = d), ++d, d >= a.length)) break;
                } else c = -1;
              }
              if (0 <= c) break;
            }
            return 0 <= c ? a.slice(0, c) : a;
          },
          equalItems: function (a, b) {
            if (null == a) return null == b ? !0 : !1;
            switch (a._hx_index) {
              case 0:
                return null == b ? !1 : 0 == b._hx_index ? !0 : !1;
              case 1:
                return null == b ? !1 : 1 == b._hx_index ? a.m == b.m : !1;
              case 2:
                if (null == b) return !1;
                if (2 == b._hx_index) {
                  var c = a.s,
                    d = a.line,
                    e = a.column,
                    f = b.column,
                    h = b.line,
                    m = b.s;
                  return a.file == b.file && d == h && e == f
                    ? Sf.equalItems(c, m)
                    : !1;
                }
                return !1;
              case 3:
                return null == b
                  ? !1
                  : 3 == b._hx_index
                  ? ((c = a.method),
                    (d = b.method),
                    a.classname == b.classname ? c == d : !1)
                  : !1;
              case 4:
                return null == b ? !1 : 4 == b._hx_index ? a.v == b.v : !1;
            }
          },
          itemToString: function (a, b) {
            switch (b._hx_index) {
              case 0:
                a.b += "a C function";
                break;
              case 1:
                b = b.m;
                a.b += "module ";
                a.b += null == b ? "null" : "" + b;
                break;
              case 2:
                var c = b.column,
                  d = b.line,
                  e = b.file;
                b = b.s;
                null != b && (Sf.itemToString(a, b), (a.b += " ("));
                a.b += null == e ? "null" : "" + e;
                a.b += " line ";
                a.b += null == d ? "null" : "" + d;
                null != c &&
                  ((a.b += " column "), (a.b += null == c ? "null" : "" + c));
                null != b && (a.b += ")");
                break;
              case 3:
                c = b.method;
                b = b.classname;
                a.b += I.string(null == b ? "<unknown>" : b);
                a.b += ".";
                a.b += null == c ? "null" : "" + c;
                break;
              case 4:
                (b = b.v),
                  (a.b += "local function #"),
                  (a.b += null == b ? "null" : "" + b);
            }
          },
        },
        C = function (a, b, c) {
          Error.call(this, a);
          this.message = a;
          this.__previousException = b;
          this.__nativeException = null != c ? c : this;
          this.__skipStack = 0;
          a = Error.prepareStackTrace;
          Error.prepareStackTrace = function (a) {
            return a.stack;
          };
          if (c instanceof Error) this.stack = c.stack;
          else {
            c = null;
            if (Error.captureStackTrace)
              Error.captureStackTrace(this, C), (c = this);
            else if (((c = Error()), "undefined" == typeof c.stack)) {
              try {
                throw c;
              } catch (d) {}
              this.__skipStack++;
            }
            this.stack = c.stack;
          }
          Error.prepareStackTrace = a;
        };
      g["haxe.Exception"] = C;
      C.__name__ = "haxe.Exception";
      C.caught = function (a) {
        return a instanceof C
          ? a
          : a instanceof Error
          ? new C(a.message, null, a)
          : new Xh(a, null, a);
      };
      C.thrown = function (a) {
        if (a instanceof C) return a.get_native();
        if (a instanceof Error) return a;
        a = new Xh(a);
        a.__skipStack++;
        return a;
      };
      C.__super__ = Error;
      C.prototype = r(Error.prototype, {
        unwrap: function () {
          return this.__nativeException;
        },
        __shiftStack: function () {
          this.__skipStack++;
        },
        get_native: function () {
          return this.__nativeException;
        },
        get_stack: function () {
          var a = this.__exceptionStack;
          null == a &&
            ((a = Ba.toHaxe(Ba.normalize(this.stack), this.__skipStack)),
            this.setProperty("__exceptionStack", a));
          return a;
        },
        setProperty: function (a, b) {
          try {
            Object.defineProperty(this, a, { value: b });
          } catch (c) {
            this[a] = b;
          }
        },
        __class__: C,
        __properties__: { get_native: "get_native", get_stack: "get_stack" },
      });
      var eb = function (a, b) {
        this.high = a;
        this.low = b;
      };
      g["haxe._Int64.___Int64"] = eb;
      eb.__name__ = "haxe._Int64.___Int64";
      eb.prototype = { __class__: eb };
      var Ba = function () {};
      g["haxe.NativeStackTrace"] = Ba;
      Ba.__name__ = "haxe.NativeStackTrace";
      Ba.saveStack = function (a) {
        Ba.lastError = a;
      };
      Ba.callStack = function () {
        var a = Error(""),
          b = Ba.tryHaxeStack(a);
        if ("undefined" == typeof b) {
          try {
            throw a;
          } catch (c) {}
          b = a.stack;
        }
        return Ba.normalize(b, 2);
      };
      Ba.exceptionStack = function () {
        return Ba.normalize(Ba.tryHaxeStack(Ba.lastError));
      };
      Ba.toHaxe = function (a, b) {
        null == b && (b = 0);
        if (null == a) return [];
        if ("string" == typeof a) {
          a = a.split("\n");
          "Error" == a[0] && a.shift();
          for (var c = [], d = 0, e = a.length; d < e; ) {
            var f = d++;
            if (!(b > f)) {
              var h = a[f];
              f = h.match(
                /^    at ([A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/
              );
              if (null != f) {
                h = f[1].split(".");
                "$hxClasses" == h[0] && h.shift();
                var m = h.pop(),
                  n = f[2],
                  p = I.parseInt(f[3]);
                f = I.parseInt(f[4]);
                c.push(
                  Wh.FilePos(
                    "Anonymous function" == m
                      ? Wh.LocalFunction()
                      : "Global code" == m
                      ? null
                      : Wh.Method(h.join("."), m),
                    n,
                    p,
                    f
                  )
                );
              } else c.push(Wh.Module(K.trim(h)));
            }
          }
          return c;
        }
        return 0 < b && Array.isArray(a) ? a.slice(b) : a;
      };
      Ba.tryHaxeStack = function (a) {
        if (null == a) return [];
        var b = Error.prepareStackTrace;
        Error.prepareStackTrace = Ba.prepareHxStackTrace;
        a = a.stack;
        Error.prepareStackTrace = b;
        return a;
      };
      Ba.prepareHxStackTrace = function (a, b) {
        a = [];
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          null != Ba.wrapCallSite && (d = Ba.wrapCallSite(d));
          var e = null,
            f = d.getFunctionName();
          if (null != f) {
            var h = f.lastIndexOf(".");
            0 <= h
              ? ((e = f.substring(0, h)),
                (f = f.substring(h + 1)),
                (e = Wh.Method(e, f)))
              : (e = Wh.Method(null, f));
          }
          f = d.getFileName();
          h = null == f ? -1 : f.indexOf("file:");
          null != Ba.wrapCallSite && 0 < h && (f = f.substring(h + 6));
          a.push(Wh.FilePos(e, f, d.getLineNumber(), d.getColumnNumber()));
        }
        return a;
      };
      Ba.normalize = function (a, b) {
        null == b && (b = 0);
        if (Array.isArray(a) && 0 < b) return a.slice(b);
        if ("string" == typeof a) {
          switch (a.substring(0, 6)) {
            case "Error\n":
            case "Error:":
              ++b;
          }
          return Ba.skipLines(a, b);
        }
        return a;
      };
      Ba.skipLines = function (a, b, c) {
        null == c && (c = 0);
        return 0 < b
          ? ((c = a.indexOf("\n", c)), 0 > c ? "" : Ba.skipLines(a, --b, c + 1))
          : a.substring(c);
      };
      var zb = function () {};
      g["haxe.Resource"] = zb;
      zb.__name__ = "haxe.Resource";
      zb.getString = function (a) {
        for (var b = 0, c = zb.content; b < c.length; ) {
          var d = c[b];
          ++b;
          if (d.name == a)
            return null != d.str ? d.str : Xg.decode(d.data).toString();
        }
        return null;
      };
      var ud = function () {
        this.buf = new cf();
        this.cache = [];
        this.useCache = ud.USE_CACHE;
        this.useEnumIndex = ud.USE_ENUM_INDEX;
        this.shash = new ea();
        this.scount = 0;
      };
      g["haxe.Serializer"] = ud;
      ud.__name__ = "haxe.Serializer";
      ud.run = function (a) {
        var b = new ud();
        b.serialize(a);
        return b.toString();
      };
      ud.prototype = {
        toString: function () {
          return this.buf.b;
        },
        serializeString: function (a) {
          var b = this.shash.h[a];
          null != b
            ? ((this.buf.b += "R"), (this.buf.b += null == b ? "null" : "" + b))
            : ((this.shash.h[a] = this.scount++),
              (this.buf.b += "y"),
              (a = encodeURIComponent(a)),
              (this.buf.b += I.string(a.length)),
              (this.buf.b += ":"),
              (this.buf.b += null == a ? "null" : "" + a));
        },
        serializeRef: function (a) {
          for (var b = typeof a, c = 0, d = this.cache.length; c < d; ) {
            var e = c++,
              f = this.cache[e];
            if (typeof f == b && f == a)
              return (
                (this.buf.b += "r"),
                (this.buf.b += null == e ? "null" : "" + e),
                !0
              );
          }
          this.cache.push(a);
          return !1;
        },
        serializeFields: function (a) {
          for (var b = 0, c = ia.fields(a); b < c.length; ) {
            var d = c[b];
            ++b;
            this.serializeString(d);
            this.serialize(ia.field(a, d));
          }
          this.buf.b += "g";
        },
        serialize: function (a) {
          var b = Ya.typeof(a);
          switch (b._hx_index) {
            case 0:
              this.buf.b += "n";
              break;
            case 1:
              if (0 == a) {
                this.buf.b += "z";
                break;
              }
              this.buf.b += "i";
              this.buf.b += null == a ? "null" : "" + a;
              break;
            case 2:
              isNaN(a)
                ? (this.buf.b += "k")
                : isFinite(a)
                ? ((this.buf.b += "d"),
                  (this.buf.b += null == a ? "null" : "" + a))
                : (this.buf.b += 0 > a ? "m" : "p");
              break;
            case 3:
              this.buf.b += a ? "t" : "f";
              break;
            case 4:
              pa.__instanceof(a, hl)
                ? ((a = a.__name__),
                  (this.buf.b += "A"),
                  this.serializeString(a))
                : pa.__instanceof(a, nn)
                ? ((this.buf.b += "B"), this.serializeString(a.__ename__))
                : (this.useCache && this.serializeRef(a)) ||
                  ((this.buf.b += "o"), this.serializeFields(a));
              break;
            case 5:
              throw C.thrown("Cannot serialize function");
            case 6:
              b = b.c;
              if (b == String) {
                this.serializeString(a);
                break;
              }
              if (this.useCache && this.serializeRef(a)) break;
              switch (b) {
                case Array:
                  var c = 0;
                  this.buf.b += "a";
                  for (var d = 0, e = a.length; d < e; )
                    (b = d++),
                      null == a[b]
                        ? ++c
                        : (0 < c &&
                            (1 == c
                              ? (this.buf.b += "n")
                              : ((this.buf.b += "u"),
                                (this.buf.b += null == c ? "null" : "" + c)),
                            (c = 0)),
                          this.serialize(a[b]));
                  0 < c &&
                    (1 == c
                      ? (this.buf.b += "n")
                      : ((this.buf.b += "u"),
                        (this.buf.b += null == c ? "null" : "" + c)));
                  this.buf.b += "h";
                  break;
                case Date:
                  this.buf.b += "v";
                  this.buf.b += I.string(a.getTime());
                  break;
                case lc:
                  this.buf.b += "q";
                  for (b = a.keys(); b.hasNext(); )
                    (c = b.next()),
                      (this.buf.b += ":"),
                      (this.buf.b += null == c ? "null" : "" + c),
                      this.serialize(a.h[c]);
                  this.buf.b += "h";
                  break;
                case A:
                  this.buf.b += "l";
                  for (a = a.h; null != a; )
                    (b = a.item), (a = a.next), this.serialize(b);
                  this.buf.b += "h";
                  break;
                case uc:
                  this.buf.b += "M";
                  for (b = a.keys(); b.hasNext(); ) {
                    c = b.next();
                    var f = ia.field(c, "__id__");
                    ia.deleteField(c, "__id__");
                    this.serialize(c);
                    c.__id__ = f;
                    this.serialize(a.h[c.__id__]);
                  }
                  this.buf.b += "h";
                  break;
                case ea:
                  this.buf.b += "b";
                  for (b = ea.keysIterator(a.h); b.hasNext(); )
                    (c = b.next()),
                      this.serializeString(c),
                      this.serialize(a.h[c]);
                  this.buf.b += "h";
                  break;
                case gb:
                  this.buf.b += "s";
                  this.buf.b += I.string(Math.ceil((8 * a.length) / 6));
                  this.buf.b += ":";
                  b = 0;
                  c = a.length - 2;
                  f = ud.BASE64_CODES;
                  if (null == f) {
                    f = Array(ud.BASE64.length);
                    d = 0;
                    for (e = ud.BASE64.length; d < e; ) {
                      var h = d++;
                      f[h] = ba.cca(ud.BASE64, h);
                    }
                    ud.BASE64_CODES = f;
                  }
                  for (; b < c; )
                    (d = a.b[b++]),
                      (e = a.b[b++]),
                      (h = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(f[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        f[((d << 4) | (e >> 4)) & 63]
                      )),
                      (this.buf.b += String.fromCodePoint(
                        f[((e << 2) | (h >> 6)) & 63]
                      )),
                      (this.buf.b += String.fromCodePoint(f[h & 63]));
                  b == c
                    ? ((d = a.b[b++]),
                      (e = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(f[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        f[((d << 4) | (e >> 4)) & 63]
                      )),
                      (this.buf.b += String.fromCodePoint(f[(e << 2) & 63])))
                    : b == c + 1 &&
                      ((d = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(f[d >> 2])),
                      (this.buf.b += String.fromCodePoint(f[(d << 4) & 63])));
                  break;
                default:
                  this.useCache && this.cache.pop(),
                    null != a.hxSerialize
                      ? ((this.buf.b += "C"),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        a.hxSerialize(this),
                        (this.buf.b += "g"))
                      : ((this.buf.b += "c"),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        this.serializeFields(a));
              }
              break;
            case 7:
              b = b.e;
              if (this.useCache) {
                if (this.serializeRef(a)) break;
                this.cache.pop();
              }
              this.buf.b += I.string(this.useEnumIndex ? "j" : "w");
              this.serializeString(b.__ename__);
              this.useEnumIndex
                ? ((this.buf.b += ":"), (this.buf.b += I.string(a._hx_index)))
                : ((b = a),
                  this.serializeString(
                    z[b.__enum__].__constructs__[b._hx_index]
                  ));
              this.buf.b += ":";
              c = Ya.enumParameters(a);
              this.buf.b += I.string(c.length);
              for (b = 0; b < c.length; ) (f = c[b]), ++b, this.serialize(f);
              this.useCache && this.cache.push(a);
              break;
            default:
              throw C.thrown("Cannot serialize " + I.string(a));
          }
        },
        __class__: ud,
      };
      var Tf = function (a) {
        var b = this;
        this.id = setInterval(function () {
          b.run();
        }, a);
      };
      g["haxe.Timer"] = Tf;
      Tf.__name__ = "haxe.Timer";
      Tf.delay = function (a, b) {
        var c = new Tf(b);
        c.run = function () {
          c.stop();
          a();
        };
        return c;
      };
      Tf.prototype = {
        stop: function () {
          null != this.id && (clearInterval(this.id), (this.id = null));
        },
        run: function () {},
        __class__: Tf,
      };
      var Qj = function () {};
      g["haxe._Unserializer.DefaultResolver"] = Qj;
      Qj.__name__ = "haxe._Unserializer.DefaultResolver";
      Qj.prototype = {
        resolveClass: function (a) {
          return g[a];
        },
        resolveEnum: function (a) {
          return z[a];
        },
        __class__: Qj,
      };
      var jd = function (a) {
        this.buf = a;
        this.length = a.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        a = jd.DEFAULT_RESOLVER;
        null == a && ((a = new Qj()), (jd.DEFAULT_RESOLVER = a));
        this.resolver = a;
      };
      g["haxe.Unserializer"] = jd;
      jd.__name__ = "haxe.Unserializer";
      jd.initCodes = function () {
        for (var a = [], b = 0, c = jd.BASE64.length; b < c; ) {
          var d = b++;
          a[jd.BASE64.charCodeAt(d)] = d;
        }
        return a;
      };
      jd.run = function (a) {
        return new jd(a).unserialize();
      };
      jd.prototype = {
        setResolver: function (a) {
          null == a
            ? (null == Yg.instance && (Yg.instance = new Yg()),
              (this.resolver = Yg.instance))
            : (this.resolver = a);
        },
        readDigits: function () {
          for (var a = 0, b = !1, c = this.pos; ; ) {
            var d = this.buf.charCodeAt(this.pos);
            if (d != d) break;
            if (45 == d) {
              if (this.pos != c) break;
              b = !0;
            } else {
              if (48 > d || 57 < d) break;
              a = 10 * a + (d - 48);
            }
            this.pos++;
          }
          b && (a *= -1);
          return a;
        },
        readFloat: function () {
          for (var a = this.pos; ; ) {
            var b = this.buf.charCodeAt(this.pos);
            if (b != b) break;
            if ((43 <= b && 58 > b) || 101 == b || 69 == b) this.pos++;
            else break;
          }
          return parseFloat(ba.substr(this.buf, a, this.pos - a));
        },
        unserializeObject: function (a) {
          for (;;) {
            if (this.pos >= this.length) throw C.thrown("Invalid object");
            if (103 == this.buf.charCodeAt(this.pos)) break;
            var b = this.unserialize();
            if ("string" != typeof b) throw C.thrown("Invalid object key");
            var c = this.unserialize();
            a[b] = c;
          }
          this.pos++;
        },
        unserializeEnum: function (a, b) {
          if (58 != this.buf.charCodeAt(this.pos++))
            throw C.thrown("Invalid enum format");
          var c = this.readDigits();
          if (0 == c) return Ya.createEnum(a, b);
          for (var d = []; 0 < c--; ) d.push(this.unserialize());
          return Ya.createEnum(a, b, d);
        },
        unserialize: function () {
          switch (this.buf.charCodeAt(this.pos++)) {
            case 65:
              var a = this.unserialize(),
                b = this.resolver.resolveClass(a);
              if (null == b) throw C.thrown("Class not found " + a);
              return b;
            case 66:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw C.thrown("Enum not found " + a);
              return b;
            case 67:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw C.thrown("Class not found " + a);
              a = Object.create(b.prototype);
              this.cache.push(a);
              a.hxUnserialize(this);
              if (103 != this.buf.charCodeAt(this.pos++))
                throw C.thrown("Invalid custom data");
              return a;
            case 77:
              b = new uc();
              this.cache.push(b);
              for (var c; 104 != this.buf.charCodeAt(this.pos); )
                (a = this.unserialize()), b.set(a, this.unserialize());
              this.pos++;
              return b;
            case 82:
              b = this.readDigits();
              if (0 > b || b >= this.scache.length)
                throw C.thrown("Invalid string reference");
              return this.scache[b];
            case 97:
              a = [];
              for (this.cache.push(a); ; ) {
                c = this.buf.charCodeAt(this.pos);
                if (104 == c) {
                  this.pos++;
                  break;
                }
                117 == c
                  ? (this.pos++,
                    (b = this.readDigits()),
                    (a[a.length + b - 1] = null))
                  : a.push(this.unserialize());
              }
              return a;
            case 98:
              b = new ea();
              for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos); )
                (a = this.unserialize()),
                  (c = this.unserialize()),
                  (b.h[a] = c);
              this.pos++;
              return b;
            case 99:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw C.thrown("Class not found " + a);
              a = Object.create(b.prototype);
              this.cache.push(a);
              this.unserializeObject(a);
              return a;
            case 100:
              return this.readFloat();
            case 102:
              return !1;
            case 105:
              return this.readDigits();
            case 106:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw C.thrown("Enum not found " + a);
              this.pos++;
              c = this.readDigits();
              var d = b.__constructs__.slice()[c];
              if (null == d)
                throw C.thrown("Unknown enum index " + a + "@" + c);
              b = this.unserializeEnum(b, d);
              this.cache.push(b);
              return b;
            case 107:
              return NaN;
            case 108:
              a = new A();
              for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
                a.add(this.unserialize());
              this.pos++;
              return a;
            case 109:
              return -Infinity;
            case 110:
              return null;
            case 111:
              return (a = {}), this.cache.push(a), this.unserializeObject(a), a;
            case 112:
              return Infinity;
            case 113:
              b = new lc();
              this.cache.push(b);
              for (c = this.buf.charCodeAt(this.pos++); 58 == c; )
                (a = this.readDigits()),
                  (c = this.unserialize()),
                  (b.h[a] = c),
                  (c = this.buf.charCodeAt(this.pos++));
              if (104 != c) throw C.thrown("Invalid IntMap format");
              return b;
            case 114:
              b = this.readDigits();
              if (0 > b || b >= this.cache.length)
                throw C.thrown("Invalid reference");
              return this.cache[b];
            case 115:
              b = this.readDigits();
              c = this.buf;
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < b
              )
                throw C.thrown("Invalid bytes length");
              d = jd.CODES;
              null == d && ((d = jd.initCodes()), (jd.CODES = d));
              a = this.pos;
              for (
                var e = b & 3,
                  f = a + (b - e),
                  h = new gb(
                    new ArrayBuffer(3 * (b >> 2) + (2 <= e ? e - 1 : 0))
                  ),
                  m = 0;
                a < f;

              ) {
                var n = d[c.charCodeAt(a++)],
                  p = d[c.charCodeAt(a++)];
                h.b[m++] = ((n << 2) | (p >> 4)) & 255;
                n = d[c.charCodeAt(a++)];
                h.b[m++] = ((p << 4) | (n >> 2)) & 255;
                p = d[c.charCodeAt(a++)];
                h.b[m++] = ((n << 6) | p) & 255;
              }
              2 <= e &&
                ((n = d[c.charCodeAt(a++)]),
                (p = d[c.charCodeAt(a++)]),
                (h.b[m++] = ((n << 2) | (p >> 4)) & 255),
                3 == e &&
                  ((n = d[c.charCodeAt(a++)]),
                  (h.b[m++] = ((p << 4) | (n >> 2)) & 255)));
              this.pos += b;
              this.cache.push(h);
              return h;
            case 116:
              return !0;
            case 118:
              return (
                48 <= this.buf.charCodeAt(this.pos) &&
                57 >= this.buf.charCodeAt(this.pos) &&
                48 <= this.buf.charCodeAt(this.pos + 1) &&
                57 >= this.buf.charCodeAt(this.pos + 1) &&
                48 <= this.buf.charCodeAt(this.pos + 2) &&
                57 >= this.buf.charCodeAt(this.pos + 2) &&
                48 <= this.buf.charCodeAt(this.pos + 3) &&
                57 >= this.buf.charCodeAt(this.pos + 3) &&
                45 == this.buf.charCodeAt(this.pos + 4)
                  ? ((a = ba.strDate(ba.substr(this.buf, this.pos, 19))),
                    (this.pos += 19))
                  : (a = new Date(this.readFloat())),
                this.cache.push(a),
                a
              );
            case 119:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw C.thrown("Enum not found " + a);
              b = this.unserializeEnum(b, this.unserialize());
              this.cache.push(b);
              return b;
            case 120:
              throw C.thrown(this.unserialize());
            case 121:
              b = this.readDigits();
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < b
              )
                throw C.thrown("Invalid string length");
              a = ba.substr(this.buf, this.pos, b);
              this.pos += b;
              a = decodeURIComponent(a.split("+").join(" "));
              this.scache.push(a);
              return a;
            case 122:
              return 0;
          }
          this.pos--;
          throw C.thrown(
            "Invalid char " +
              this.buf.charAt(this.pos) +
              " at position " +
              this.pos
          );
        },
        __class__: jd,
      };
      var Yg = function () {};
      g["haxe._Unserializer.NullResolver"] = Yg;
      Yg.__name__ = "haxe._Unserializer.NullResolver";
      Yg.prototype = {
        resolveClass: function (a) {
          return null;
        },
        resolveEnum: function (a) {
          return null;
        },
        __class__: Yg,
      };
      var Ml = function () {};
      g["haxe.Utf8"] = Ml;
      Ml.__name__ = "haxe.Utf8";
      Ml.iter = function (a, b) {
        for (var c = 0, d = a.length; c < d; ) {
          var e = c++;
          b(ba.cca(a, e));
        }
      };
      var Xh = function (a, b, c) {
        C.call(this, String(a), b, c);
        this.value = a;
        this.__skipStack++;
      };
      g["haxe.ValueException"] = Xh;
      Xh.__name__ = "haxe.ValueException";
      Xh.__super__ = C;
      Xh.prototype = r(C.prototype, {
        unwrap: function () {
          return this.value;
        },
        __class__: Xh,
      });
      var Zg = function () {
        this.a1 = 1;
        this.a2 = 0;
      };
      g["haxe.crypto.Adler32"] = Zg;
      Zg.__name__ = "haxe.crypto.Adler32";
      Zg.read = function (a) {
        var b = new Zg(),
          c = a.readByte(),
          d = a.readByte(),
          e = a.readByte();
        a = a.readByte();
        b.a1 = (e << 8) | a;
        b.a2 = (c << 8) | d;
        return b;
      };
      Zg.prototype = {
        update: function (a, b, c) {
          var d = this.a1,
            e = this.a2,
            f = b;
          for (b += c; f < b; )
            (c = f++), (d = (d + a.b[c]) % 65521), (e = (e + d) % 65521);
          this.a1 = d;
          this.a2 = e;
        },
        equals: function (a) {
          return a.a1 == this.a1 ? a.a2 == this.a2 : !1;
        },
        __class__: Zg,
      };
      var Xg = function () {};
      g["haxe.crypto.Base64"] = Xg;
      Xg.__name__ = "haxe.crypto.Base64";
      Xg.decode = function (a, b) {
        null == b && (b = !0);
        if (b) for (; 61 == ba.cca(a, a.length - 1); ) a = ba.substr(a, 0, -1);
        return new Nl(Xg.BYTES).decodeBytes(gb.ofString(a));
      };
      var Nl = function (a) {
        for (var b = a.length, c = 1; b > 1 << c; ) ++c;
        if (8 < c || b != 1 << c)
          throw C.thrown("BaseCode : base length must be a power of two.");
        this.base = a;
        this.nbits = c;
      };
      g["haxe.crypto.BaseCode"] = Nl;
      Nl.__name__ = "haxe.crypto.BaseCode";
      Nl.prototype = {
        initTable: function () {
          for (var a = [], b = 0; 256 > b; ) {
            var c = b++;
            a[c] = -1;
          }
          b = 0;
          for (var d = this.base.length; b < d; )
            (c = b++), (a[this.base.b[c]] = c);
          this.tbl = a;
        },
        decodeBytes: function (a) {
          var b = this.nbits;
          null == this.tbl && this.initTable();
          for (
            var c = this.tbl,
              d = (a.length * b) >> 3,
              e = new gb(new ArrayBuffer(d)),
              f = 0,
              h = 0,
              m = 0,
              n = 0;
            n < d;

          ) {
            for (; 8 > h; ) {
              h += b;
              f <<= b;
              var p = c[a.b[m++]];
              if (-1 == p) throw C.thrown("BaseCode : invalid encoded char");
              f |= p;
            }
            h -= 8;
            e.b[n++] = (f >> h) & 255;
          }
          return e;
        },
        __class__: Nl,
      };
      var jc = function () {};
      g["haxe.ds.ArraySort"] = jc;
      jc.__name__ = "haxe.ds.ArraySort";
      jc.sort = function (a, b) {
        jc.rec(a, b, 0, a.length);
      };
      jc.rec = function (a, b, c, d) {
        var e = (c + d) >> 1;
        if (12 > d - c) {
          if (!(d <= c))
            for (e = c + 1; e < d; )
              for (var f = e++; f > c; ) {
                if (0 > b(a[f], a[f - 1])) jc.swap(a, f - 1, f);
                else break;
                --f;
              }
        } else
          jc.rec(a, b, c, e),
            jc.rec(a, b, e, d),
            jc.doMerge(a, b, c, e, d, e - c, d - e);
      };
      jc.doMerge = function (a, b, c, d, e, f, h) {
        if (0 != f && 0 != h)
          if (2 == f + h) 0 > b(a[d], a[c]) && jc.swap(a, d, c);
          else {
            if (f > h) {
              var m = f >> 1;
              var n = c + m;
              var p = jc.lower(a, b, d, e, n);
              var g = p - d;
            } else
              (g = h >> 1),
                (p = d + g),
                (n = jc.upper(a, b, c, d, p)),
                (m = n - c);
            jc.rotate(a, b, n, d, p);
            d = n + g;
            jc.doMerge(a, b, c, n, d, m, g);
            jc.doMerge(a, b, d, p, e, f - m, h - g);
          }
      };
      jc.rotate = function (a, b, c, d, e) {
        if (c != d && d != e)
          for (b = jc.gcd(e - c, d - c); 0 != b--; ) {
            for (
              var f = a[c + b], h = d - c, m = c + b, n = c + b + h;
              n != c + b;

            )
              (a[m] = a[n]),
                (m = n),
                (n = e - n > h ? n + h : c + (h - (e - n)));
            a[m] = f;
          }
      };
      jc.gcd = function (a, b) {
        for (; 0 != b; ) {
          var c = a % b;
          a = b;
          b = c;
        }
        return a;
      };
      jc.upper = function (a, b, c, d, e) {
        d -= c;
        for (var f, h; 0 < d; )
          (f = d >> 1),
            (h = c + f),
            0 > b(a[e], a[h]) ? (d = f) : ((c = h + 1), (d = d - f - 1));
        return c;
      };
      jc.lower = function (a, b, c, d, e) {
        d -= c;
        for (var f, h; 0 < d; )
          (f = d >> 1),
            (h = c + f),
            0 > b(a[h], a[e]) ? ((c = h + 1), (d = d - f - 1)) : (d = f);
        return c;
      };
      jc.swap = function (a, b, c) {
        var d = a[b];
        a[b] = a[c];
        a[c] = d;
      };
      var Yh = function () {};
      g["haxe.ds.BalancedTree"] = Yh;
      Yh.__name__ = "haxe.ds.BalancedTree";
      Yh.__interfaces__ = [Lb];
      Yh.prototype = {
        set: function (a, b) {
          this.root = this.setLoop(a, b, this.root);
        },
        get: function (a) {
          for (var b = this.root; null != b; ) {
            var c = this.compare(a, b.key);
            if (0 == c) return b.value;
            b = 0 > c ? b.left : b.right;
          }
          return null;
        },
        remove: function (a) {
          try {
            return (this.root = this.removeLoop(a, this.root)), !0;
          } catch (b) {
            Ba.lastError = b;
            if ("string" == typeof C.caught(b).unwrap()) return !1;
            throw b;
          }
        },
        keys: function () {
          var a = [];
          this.keysLoop(this.root, a);
          return new Xe(a);
        },
        setLoop: function (a, b, c) {
          if (null == c) return new vd(null, a, b, null);
          var d = this.compare(a, c.key);
          if (0 == d)
            return new vd(c.left, a, b, c.right, null == c ? 0 : c._height);
          if (0 > d)
            return (
              (a = this.setLoop(a, b, c.left)),
              this.balance(a, c.key, c.value, c.right)
            );
          a = this.setLoop(a, b, c.right);
          return this.balance(c.left, c.key, c.value, a);
        },
        removeLoop: function (a, b) {
          if (null == b) throw C.thrown("Not_found");
          var c = this.compare(a, b.key);
          return 0 == c
            ? this.merge(b.left, b.right)
            : 0 > c
            ? this.balance(this.removeLoop(a, b.left), b.key, b.value, b.right)
            : this.balance(b.left, b.key, b.value, this.removeLoop(a, b.right));
        },
        keysLoop: function (a, b) {
          null != a &&
            (this.keysLoop(a.left, b),
            b.push(a.key),
            this.keysLoop(a.right, b));
        },
        merge: function (a, b) {
          if (null == a) return b;
          if (null == b) return a;
          var c = this.minBinding(b);
          return this.balance(a, c.key, c.value, this.removeMinBinding(b));
        },
        minBinding: function (a) {
          if (null == a) throw C.thrown("Not_found");
          return null == a.left ? a : this.minBinding(a.left);
        },
        removeMinBinding: function (a) {
          return null == a.left
            ? a.right
            : this.balance(
                this.removeMinBinding(a.left),
                a.key,
                a.value,
                a.right
              );
        },
        balance: function (a, b, c, d) {
          var e = null == a ? 0 : a._height,
            f = null == d ? 0 : d._height;
          return e > f + 2
            ? ((e = a.left),
              (f = a.right),
              (null == e ? 0 : e._height) >= (null == f ? 0 : f._height)
                ? new vd(a.left, a.key, a.value, new vd(a.right, b, c, d))
                : new vd(
                    new vd(a.left, a.key, a.value, a.right.left),
                    a.right.key,
                    a.right.value,
                    new vd(a.right.right, b, c, d)
                  ))
            : f > e + 2
            ? ((e = d.right),
              (f = d.left),
              (null == e ? 0 : e._height) > (null == f ? 0 : f._height)
                ? new vd(new vd(a, b, c, d.left), d.key, d.value, d.right)
                : new vd(
                    new vd(a, b, c, d.left.left),
                    d.left.key,
                    d.left.value,
                    new vd(d.left.right, d.key, d.value, d.right)
                  ))
            : new vd(a, b, c, d, (e > f ? e : f) + 1);
        },
        compare: function (a, b) {
          return ia.compare(a, b);
        },
        __class__: Yh,
      };
      var vd = function (a, b, c, d, e) {
        null == e && (e = -1);
        this.left = a;
        this.key = b;
        this.value = c;
        this.right = d;
        -1 == e
          ? ((a = this.left),
            (b = this.right),
            (a =
              (null == a ? 0 : a._height) > (null == b ? 0 : b._height)
                ? this.left
                : this.right),
            (this._height = (null == a ? 0 : a._height) + 1))
          : (this._height = e);
      };
      g["haxe.ds.TreeNode"] = vd;
      vd.__name__ = "haxe.ds.TreeNode";
      vd.prototype = { __class__: vd };
      var Fg = function () {};
      g["haxe.ds.EnumValueMap"] = Fg;
      Fg.__name__ = "haxe.ds.EnumValueMap";
      Fg.__interfaces__ = [Lb];
      Fg.__super__ = Yh;
      Fg.prototype = r(Yh.prototype, {
        compare: function (a, b) {
          var c = a._hx_index - b._hx_index;
          if (0 != c) return c;
          a = Ya.enumParameters(a);
          b = Ya.enumParameters(b);
          return 0 == a.length && 0 == b.length ? 0 : this.compareArgs(a, b);
        },
        compareArgs: function (a, b) {
          var c = a.length - b.length;
          if (0 != c) return c;
          c = 0;
          for (var d = a.length; c < d; ) {
            var e = c++;
            e = this.compareArg(a[e], b[e]);
            if (0 != e) return e;
          }
          return 0;
        },
        compareArg: function (a, b) {
          return ia.isEnumValue(a) && ia.isEnumValue(b)
            ? this.compare(a, b)
            : a instanceof Array && b instanceof Array
            ? this.compareArgs(a, b)
            : ia.compare(a, b);
        },
        __class__: Fg,
      });
      var lc = function () {
        this.h = {};
      };
      g["haxe.ds.IntMap"] = lc;
      lc.__name__ = "haxe.ds.IntMap";
      lc.__interfaces__ = [Lb];
      lc.prototype = {
        set: function (a, b) {
          this.h[a] = b;
        },
        get: function (a) {
          return this.h[a];
        },
        remove: function (a) {
          if (!this.h.hasOwnProperty(a)) return !1;
          delete this.h[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h) this.h.hasOwnProperty(b) && a.push(b | 0);
          return new Xe(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a];
            },
          };
        },
        __class__: lc,
      };
      var ri = function (a, b) {
        this.item = a;
        this.next = b;
      };
      g["haxe.ds._List.ListNode"] = ri;
      ri.__name__ = "haxe.ds._List.ListNode";
      ri.prototype = { __class__: ri };
      var Wk = function (a) {
        this.head = a;
      };
      g["haxe.ds._List.ListIterator"] = Wk;
      Wk.__name__ = "haxe.ds._List.ListIterator";
      Wk.prototype = {
        hasNext: function () {
          return null != this.head;
        },
        next: function () {
          var a = this.head.item;
          this.head = this.head.next;
          return a;
        },
        __class__: Wk,
      };
      var ea = function () {
        this.h = Object.create(null);
      };
      g["haxe.ds.StringMap"] = ea;
      ea.__name__ = "haxe.ds.StringMap";
      ea.__interfaces__ = [Lb];
      ea.keysIterator = function (a) {
        var b = Object.keys(a),
          c = b.length,
          d = 0;
        return {
          hasNext: function () {
            return d < c;
          },
          next: function () {
            d += 1;
            return b[d - 1];
          },
        };
      };
      ea.valueIterator = function (a) {
        var b = Object.keys(a),
          c = b.length,
          d = 0;
        return {
          hasNext: function () {
            return d < c;
          },
          next: function () {
            d += 1;
            return a[b[d - 1]];
          },
        };
      };
      ea.prototype = {
        get: function (a) {
          return this.h[a];
        },
        set: function (a, b) {
          this.h[a] = b;
        },
        remove: function (a) {
          return Object.prototype.hasOwnProperty.call(this.h, a)
            ? (delete this.h[a], !0)
            : !1;
        },
        keys: function () {
          return ea.keysIterator(this.h);
        },
        __class__: ea,
      };
      var Zh = function (a) {
        this.url = a;
        this.headers = [];
        this.params = [];
        this.emptyOnData = q(this, this.onData);
      };
      g["haxe.http.HttpBase"] = Zh;
      Zh.__name__ = "haxe.http.HttpBase";
      Zh.prototype = {
        setParameter: function (a, b) {
          for (var c = 0, d = this.params.length; c < d; ) {
            var e = c++;
            if (this.params[e].name == a) {
              this.params[e] = { name: a, value: b };
              return;
            }
          }
          this.params.push({ name: a, value: b });
        },
        onData: function (a) {},
        onBytes: function (a) {},
        onError: function (a) {},
        onStatus: function (a) {},
        hasOnData: function () {
          return !ia.compareMethods(q(this, this.onData), this.emptyOnData);
        },
        success: function (a) {
          this.responseBytes = a;
          this.responseAsString = null;
          if (this.hasOnData()) this.onData(this.get_responseData());
          this.onBytes(this.responseBytes);
        },
        get_responseData: function () {
          null == this.responseAsString &&
            null != this.responseBytes &&
            (this.responseAsString = this.responseBytes.getString(
              0,
              this.responseBytes.length,
              zn.UTF8
            ));
          return this.responseAsString;
        },
        __class__: Zh,
        __properties__: { get_responseData: "get_responseData" },
      };
      var Rj = function (a) {
        this.async = !0;
        this.withCredentials = !1;
        Zh.call(this, a);
      };
      g["haxe.http.HttpJs"] = Rj;
      Rj.__name__ = "haxe.http.HttpJs";
      Rj.__super__ = Zh;
      Rj.prototype = r(Zh.prototype, {
        request: function (a) {
          var b = this;
          this.responseBytes = this.responseAsString = null;
          var c = (this.req = $h.createXMLHttpRequest()),
            d = function (a) {
              if (4 == c.readyState) {
                try {
                  var d = c.status;
                } catch (Xk) {
                  (Ba.lastError = Xk), (d = null);
                }
                0 == d &&
                  "undefined" != typeof window &&
                  null != E.location &&
                  ((a = E.location.protocol.toLowerCase()),
                  new Ua(
                    "^(?:about|app|app-storage|.+-extension|file|res|widget):$",
                    ""
                  ).match(a) && (d = null != c.response ? 200 : 404));
                void 0 == d && (d = null);
                if (null != d) b.onStatus(d);
                if (null != d && 200 <= d && 400 > d)
                  (b.req = null), b.success(gb.ofData(c.response));
                else if (null == d || (0 == d && null == c.response))
                  (b.req = null),
                    b.onError("Failed to connect or resolve host");
                else if (null == d)
                  (b.req = null),
                    (d = null != c.response ? gb.ofData(c.response) : null),
                    (b.responseBytes = d),
                    b.onError("Http Error #" + c.status);
                else
                  switch (d) {
                    case 12007:
                      b.req = null;
                      b.onError("Unknown host");
                      break;
                    case 12029:
                      b.req = null;
                      b.onError("Failed to connect to host");
                      break;
                    default:
                      (b.req = null),
                        (d = null != c.response ? gb.ofData(c.response) : null),
                        (b.responseBytes = d),
                        b.onError("Http Error #" + c.status);
                  }
              }
            };
          this.async && (c.onreadystatechange = d);
          var e = this.postBytes,
            f = this.postData;
          var h =
            null == f
              ? null == e
                ? null
                : new Blob([e.b.bufferValue])
              : null == e
              ? f
              : null;
          if (null != h) a = !0;
          else
            for (e = 0, f = this.params; e < f.length; ) {
              var m = f[e];
              ++e;
              h = null == h ? "" : (null == h ? "null" : I.string(h)) + "&";
              var n = m.name;
              h =
                (null == h ? "null" : I.string(h)) +
                encodeURIComponent(n) +
                "=" +
                encodeURIComponent(m.value);
            }
          try {
            if (a) c.open("POST", this.url, this.async);
            else if (null != h) {
              var p = 1 >= this.url.split("?").length;
              c.open(
                "GET",
                this.url + (p ? "?" : "&") + (null == h ? "null" : I.string(h)),
                this.async
              );
              h = null;
            } else c.open("GET", this.url, this.async);
            c.responseType = "arraybuffer";
          } catch (kn) {
            Ba.lastError = kn;
            d = C.caught(kn).unwrap();
            this.req = null;
            this.onError(d.toString());
            return;
          }
          c.withCredentials = this.withCredentials;
          !vh.exists(this.headers, function (a) {
            return "Content-Type" == a.name;
          }) &&
            a &&
            null == this.postData &&
            c.setRequestHeader(
              "Content-Type",
              "application/x-www-form-urlencoded"
            );
          e = 0;
          for (f = this.headers; e < f.length; )
            (a = f[e]), ++e, c.setRequestHeader(a.name, a.value);
          c.send(h);
          this.async || d(null);
        },
        __class__: Rj,
      });
      var Sj = function () {
        this.size = this.pos = 0;
      };
      g["haxe.io.BytesBuffer"] = Sj;
      Sj.__name__ = "haxe.io.BytesBuffer";
      Sj.prototype = {
        addByte: function (a) {
          this.pos == this.size && this.grow(1);
          this.view.setUint8(this.pos++, a);
        },
        add: function (a) {
          this.pos + a.length > this.size && this.grow(a.length);
          if (0 != this.size) {
            var b = new Uint8Array(a.b.buffer, a.b.byteOffset, a.length);
            this.u8.set(b, this.pos);
            this.pos += a.length;
          }
        },
        addBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw C.thrown(Ug.OutsideBounds);
          this.pos + c > this.size && this.grow(c);
          0 != this.size &&
            ((a = new Uint8Array(a.b.buffer, a.b.byteOffset + b, c)),
            this.u8.set(a, this.pos),
            (this.pos += c));
        },
        grow: function (a) {
          var b = this.pos + a;
          for (a = 0 == this.size ? 16 : this.size; a < b; ) a = (3 * a) >> 1;
          b = new ArrayBuffer(a);
          var c = new Uint8Array(b);
          0 < this.size && c.set(this.u8);
          this.size = a;
          this.buffer = b;
          this.u8 = c;
          this.view = new DataView(this.buffer);
        },
        getBytes: function () {
          if (0 == this.size) return new gb(new ArrayBuffer(0));
          var a = new gb(this.buffer);
          a.length = this.pos;
          return a;
        },
        __class__: Sj,
      };
      var Tj = function () {};
      g["haxe.io.Input"] = Tj;
      Tj.__name__ = "haxe.io.Input";
      Tj.prototype = {
        readByte: function () {
          throw C.thrown("Not implemented");
        },
        readBytes: function (a, b, c) {
          var d = c,
            e = a.b;
          if (0 > b || 0 > c || b + c > a.length)
            throw C.thrown(Ug.OutsideBounds);
          try {
            for (; 0 < d; ) (e[b] = this.readByte()), ++b, --d;
          } catch (f) {
            if (((Ba.lastError = f), !(C.caught(f).unwrap() instanceof ai)))
              throw f;
          }
          return c - d;
        },
        readFullBytes: function (a, b, c) {
          for (; 0 < c; ) {
            var d = this.readBytes(a, b, c);
            if (0 == d) throw C.thrown(Ug.Blocked);
            b += d;
            c -= d;
          }
        },
        read: function (a) {
          for (var b = new gb(new ArrayBuffer(a)), c = 0; 0 < a; ) {
            var d = this.readBytes(b, c, a);
            if (0 == d) throw C.thrown(Ug.Blocked);
            c += d;
            a -= d;
          }
          return b;
        },
        readInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          a = this.bigEndian ? b | (a << 8) : a | (b << 8);
          return 0 != (a & 32768) ? a - 65536 : a;
        },
        readUInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          return this.bigEndian ? b | (a << 8) : a | (b << 8);
        },
        readInt32: function () {
          var a = this.readByte(),
            b = this.readByte(),
            c = this.readByte(),
            d = this.readByte();
          return this.bigEndian
            ? d | (c << 8) | (b << 16) | (a << 24)
            : a | (b << 8) | (c << 16) | (d << 24);
        },
        readString: function (a, b) {
          var c = new gb(new ArrayBuffer(a));
          this.readFullBytes(c, 0, a);
          return c.getString(0, a, b);
        },
        __class__: Tj,
      };
      var Uj = function (a, b, c) {
        null == b && (b = 0);
        null == c && (c = a.length - b);
        if (0 > b || 0 > c || b + c > a.length)
          throw C.thrown(Ug.OutsideBounds);
        this.b = a.b;
        this.pos = b;
        this.totlen = this.len = c;
      };
      g["haxe.io.BytesInput"] = Uj;
      Uj.__name__ = "haxe.io.BytesInput";
      Uj.__super__ = Tj;
      Uj.prototype = r(Tj.prototype, {
        readByte: function () {
          if (0 == this.len) throw C.thrown(new ai());
          this.len--;
          return this.b[this.pos++];
        },
        readBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw C.thrown(Ug.OutsideBounds);
          if (0 == this.len && 0 < c) throw C.thrown(new ai());
          this.len < c && (c = this.len);
          var d = this.b;
          a = a.b;
          for (var e = 0, f = c; e < f; ) {
            var h = e++;
            a[b + h] = d[this.pos + h];
          }
          this.pos += c;
          this.len -= c;
          return c;
        },
        __class__: Uj,
      });
      var zn = (z["haxe.io.Encoding"] = {
          __ename__: "haxe.io.Encoding",
          __constructs__: ["UTF8", "RawNative"],
          UTF8: { _hx_index: 0, __enum__: "haxe.io.Encoding", toString: l },
          RawNative: {
            _hx_index: 1,
            __enum__: "haxe.io.Encoding",
            toString: l,
          },
        }),
        ai = function () {};
      g["haxe.io.Eof"] = ai;
      ai.__name__ = "haxe.io.Eof";
      ai.prototype = {
        toString: function () {
          return "Eof";
        },
        __class__: ai,
      };
      var Ug = (z["haxe.io.Error"] = {
          __ename__: "haxe.io.Error",
          __constructs__: ["Blocked", "Overflow", "OutsideBounds", "Custom"],
          Blocked: { _hx_index: 0, __enum__: "haxe.io.Error", toString: l },
          Overflow: { _hx_index: 1, __enum__: "haxe.io.Error", toString: l },
          OutsideBounds: {
            _hx_index: 2,
            __enum__: "haxe.io.Error",
            toString: l,
          },
          Custom:
            ((y = function (a) {
              return {
                _hx_index: 3,
                e: a,
                __enum__: "haxe.io.Error",
                toString: l,
              };
            }),
            (y.__params__ = ["e"]),
            y),
        }),
        nf = function (a) {
          switch (a) {
            case ".":
            case "..":
              this.dir = a;
              this.file = "";
              return;
          }
          var b = a.lastIndexOf("/"),
            c = a.lastIndexOf("\\");
          b < c
            ? ((this.dir = ba.substr(a, 0, c)),
              (a = ba.substr(a, c + 1, null)),
              (this.backslash = !0))
            : c < b
            ? ((this.dir = ba.substr(a, 0, b)), (a = ba.substr(a, b + 1, null)))
            : (this.dir = null);
          b = a.lastIndexOf(".");
          -1 != b
            ? ((this.ext = ba.substr(a, b + 1, null)),
              (this.file = ba.substr(a, 0, b)))
            : ((this.ext = null), (this.file = a));
        };
      g["haxe.io.Path"] = nf;
      nf.__name__ = "haxe.io.Path";
      nf.directory = function (a) {
        a = new nf(a);
        return null == a.dir ? "" : a.dir;
      };
      nf.prototype = { __class__: nf };
      var Xe = function (a) {
        this.current = 0;
        this.array = a;
      };
      g["haxe.iterators.ArrayIterator"] = Xe;
      Xe.__name__ = "haxe.iterators.ArrayIterator";
      Xe.prototype = {
        hasNext: function () {
          return this.current < this.array.length;
        },
        next: function () {
          return this.array[this.current++];
        },
        __class__: Xe,
      };
      var $k = function (a) {
        this.map = a;
        this.keys = a.keys();
      };
      g["haxe.iterators.MapKeyValueIterator"] = $k;
      $k.__name__ = "haxe.iterators.MapKeyValueIterator";
      $k.prototype = {
        hasNext: function () {
          return this.keys.hasNext();
        },
        next: function () {
          var a = this.keys.next();
          return { value: this.map.get(a), key: a };
        },
        __class__: $k,
      };
      var Xa = {
          resolve: function (a, b) {
            var c = a.elementsNamed(b).next();
            if (null == c) {
              if (a.nodeType == D.Document) a = "Document";
              else {
                if (a.nodeType != D.Element)
                  throw C.thrown(
                    "Bad node type, expected Element but found " +
                      (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                  );
                a = a.nodeName;
              }
              throw C.thrown(a + " is missing element " + b);
            }
            if (c.nodeType != D.Document && c.nodeType != D.Element)
              throw C.thrown(
                "Invalid nodeType " +
                  (null == c.nodeType ? "null" : ha.toString(c.nodeType))
              );
            return c;
          },
        },
        Pb = {
          resolve: function (a, b) {
            if (a.nodeType == D.Document)
              throw C.thrown("Cannot access document attribute " + b);
            var c = a.get(b);
            if (null == c) {
              if (a.nodeType != D.Element)
                throw C.thrown(
                  "Bad node type, expected Element but found " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              throw C.thrown(a.nodeName + " is missing attribute " + b);
            }
            return c;
          },
        },
        Ib = {
          resolve: function (a, b) {
            if (a.nodeType == D.Document)
              throw C.thrown("Cannot access document attribute " + b);
            return a.exists(b);
          },
        },
        Ma = {
          resolve: function (a, b) {
            return a.elementsNamed(b).hasNext();
          },
        },
        Ab = {
          resolve: function (a, b) {
            var c = [];
            for (b = a.elementsNamed(b); b.hasNext(); ) {
              a = b.next();
              if (a.nodeType != D.Document && a.nodeType != D.Element)
                throw C.thrown(
                  "Invalid nodeType " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              c.push(a);
            }
            return c;
          },
        },
        tc = function (a, b, c) {
          this.xml = b;
          this.message = a;
          this.position = c;
          this.lineNumber = 1;
          for (a = this.positionAtLine = 0; a < c; ) {
            var d = a++;
            d = b.charCodeAt(d);
            10 == d
              ? (this.lineNumber++, (this.positionAtLine = 0))
              : 13 != d && this.positionAtLine++;
          }
        };
      g["haxe.xml.XmlParserException"] = tc;
      tc.__name__ = "haxe.xml.XmlParserException";
      tc.prototype = {
        toString: function () {
          return (
            pa.getClass(this).__name__ +
            ": " +
            this.message +
            " at line " +
            this.lineNumber +
            " char " +
            this.positionAtLine
          );
        },
        __class__: tc,
      };
      var Ff = function () {};
      g["haxe.xml.Parser"] = Ff;
      Ff.__name__ = "haxe.xml.Parser";
      Ff.parse = function (a, b) {
        null == b && (b = !1);
        var c = D.createDocument();
        Ff.doParse(a, b, 0, c);
        return c;
      };
      Ff.doParse = function (a, b, c, d) {
        null == c && (c = 0);
        for (
          var e = null,
            f = 1,
            h = 1,
            m = null,
            n = 0,
            p = 0,
            g = 0,
            k = a.charCodeAt(c),
            l = new cf(),
            u = 1,
            q = -1;
          k == k;

        ) {
          switch (f) {
            case 0:
              switch (k) {
                case 9:
                case 10:
                case 13:
                case 32:
                  break;
                default:
                  f = h;
                  continue;
              }
              break;
            case 1:
              if (60 == k) (f = 0), (h = 2);
              else {
                n = c;
                f = 13;
                continue;
              }
              break;
            case 2:
              switch (k) {
                case 33:
                  if (91 == a.charCodeAt(c + 1)) {
                    c += 2;
                    if ("CDATA[" != ba.substr(a, c, 6).toUpperCase())
                      throw C.thrown(new tc("Expected <![CDATA[", a, c));
                    c += 5;
                    f = 17;
                  } else if (
                    68 == a.charCodeAt(c + 1) ||
                    100 == a.charCodeAt(c + 1)
                  ) {
                    if ("OCTYPE" != ba.substr(a, c + 2, 6).toUpperCase())
                      throw C.thrown(new tc("Expected <!DOCTYPE", a, c));
                    c += 8;
                    f = 16;
                  } else {
                    if (45 != a.charCodeAt(c + 1) || 45 != a.charCodeAt(c + 2))
                      throw C.thrown(new tc("Expected \x3c!--", a, c));
                    c += 2;
                    f = 15;
                  }
                  n = c + 1;
                  break;
                case 47:
                  if (null == d)
                    throw C.thrown(new tc("Expected node name", a, c));
                  n = c + 1;
                  f = 0;
                  h = 10;
                  break;
                case 63:
                  f = 14;
                  n = c;
                  break;
                default:
                  f = 3;
                  n = c;
                  continue;
              }
              break;
            case 3:
              if (
                !(
                  (97 <= k && 122 >= k) ||
                  (65 <= k && 90 >= k) ||
                  (48 <= k && 57 >= k) ||
                  58 == k ||
                  46 == k ||
                  95 == k ||
                  45 == k
                )
              ) {
                if (c == n) throw C.thrown(new tc("Expected node name", a, c));
                e = D.createElement(ba.substr(a, n, c - n));
                d.addChild(e);
                ++p;
                f = 0;
                h = 4;
                continue;
              }
              break;
            case 4:
              switch (k) {
                case 47:
                  f = 11;
                  break;
                case 62:
                  f = 9;
                  break;
                default:
                  f = 5;
                  n = c;
                  continue;
              }
              break;
            case 5:
              if (
                !(
                  (97 <= k && 122 >= k) ||
                  (65 <= k && 90 >= k) ||
                  (48 <= k && 57 >= k) ||
                  58 == k ||
                  46 == k ||
                  95 == k ||
                  45 == k
                )
              ) {
                if (n == c)
                  throw C.thrown(new tc("Expected attribute name", a, c));
                m = ba.substr(a, n, c - n);
                if (e.exists(m))
                  throw C.thrown(
                    new tc("Duplicate attribute [" + m + "]", a, c)
                  );
                f = 0;
                h = 6;
                continue;
              }
              break;
            case 6:
              if (61 == k) (f = 0), (h = 7);
              else throw C.thrown(new tc("Expected =", a, c));
              break;
            case 7:
              switch (k) {
                case 34:
                case 39:
                  l = new cf();
                  f = 8;
                  n = c + 1;
                  q = k;
                  break;
                default:
                  throw C.thrown(new tc('Expected "', a, c));
              }
              break;
            case 8:
              switch (k) {
                case 38:
                  u = c - n;
                  l.b += null == u ? ba.substr(a, n, null) : ba.substr(a, n, u);
                  f = 18;
                  u = 8;
                  n = c + 1;
                  break;
                case 60:
                case 62:
                  if (b)
                    throw C.thrown(
                      new tc(
                        "Invalid unescaped " +
                          String.fromCodePoint(k) +
                          " in attribute value",
                        a,
                        c
                      )
                    );
                  k == q &&
                    ((h = c - n),
                    (l.b +=
                      null == h ? ba.substr(a, n, null) : ba.substr(a, n, h)),
                    (h = l.b),
                    (l = new cf()),
                    e.set(m, h),
                    (f = 0),
                    (h = 4));
                  break;
                default:
                  k == q &&
                    ((h = c - n),
                    (l.b +=
                      null == h ? ba.substr(a, n, null) : ba.substr(a, n, h)),
                    (h = l.b),
                    (l = new cf()),
                    e.set(m, h),
                    (f = 0),
                    (h = 4));
              }
              break;
            case 9:
              n = c = Ff.doParse(a, b, c, e);
              f = 1;
              break;
            case 10:
              if (
                !(
                  (97 <= k && 122 >= k) ||
                  (65 <= k && 90 >= k) ||
                  (48 <= k && 57 >= k) ||
                  58 == k ||
                  46 == k ||
                  95 == k ||
                  45 == k
                )
              ) {
                if (n == c) throw C.thrown(new tc("Expected node name", a, c));
                h = ba.substr(a, n, c - n);
                if (null == d || 0 != d.nodeType)
                  throw C.thrown(
                    new tc("Unexpected </" + h + ">, tag is not open", a, c)
                  );
                if (d.nodeType != D.Element)
                  throw C.thrown(
                    "Bad node type, expected Element but found " +
                      (null == d.nodeType ? "null" : ha.toString(d.nodeType))
                  );
                if (h != d.nodeName) {
                  if (d.nodeType != D.Element)
                    throw C.thrown(
                      "Bad node type, expected Element but found " +
                        (null == d.nodeType ? "null" : ha.toString(d.nodeType))
                    );
                  throw C.thrown(
                    new tc("Expected </" + d.nodeName + ">", a, c)
                  );
                }
                f = 0;
                h = 12;
                continue;
              }
              break;
            case 11:
              if (62 == k) f = 1;
              else throw C.thrown(new tc("Expected >", a, c));
              break;
            case 12:
              if (62 == k) return 0 == p && d.addChild(D.createPCData("")), c;
              throw C.thrown(new tc("Expected >", a, c));
            case 13:
              60 == k
                ? ((h = c - n),
                  (l.b +=
                    null == h ? ba.substr(a, n, null) : ba.substr(a, n, h)),
                  (h = D.createPCData(l.b)),
                  (l = new cf()),
                  d.addChild(h),
                  ++p,
                  (f = 0),
                  (h = 2))
                : 38 == k &&
                  ((u = c - n),
                  (l.b +=
                    null == u ? ba.substr(a, n, null) : ba.substr(a, n, u)),
                  (f = 18),
                  (u = 13),
                  (n = c + 1));
              break;
            case 14:
              63 == k &&
                62 == a.charCodeAt(c + 1) &&
                (++c,
                (k = ba.substr(a, n + 1, c - n - 2)),
                d.addChild(D.createProcessingInstruction(k)),
                ++p,
                (f = 1));
              break;
            case 15:
              45 == k &&
                45 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                (d.addChild(D.createComment(ba.substr(a, n, c - n))),
                ++p,
                (c += 2),
                (f = 1));
              break;
            case 16:
              91 == k
                ? ++g
                : 93 == k
                ? --g
                : 62 == k &&
                  0 == g &&
                  (d.addChild(D.createDocType(ba.substr(a, n, c - n))),
                  ++p,
                  (f = 1));
              break;
            case 17:
              93 == k &&
                93 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                ((k = D.createCData(ba.substr(a, n, c - n))),
                d.addChild(k),
                ++p,
                (c += 2),
                (f = 1));
              break;
            case 18:
              if (59 == k) {
                n = ba.substr(a, n, c - n);
                if (35 == n.charCodeAt(0))
                  (n =
                    120 == n.charCodeAt(1)
                      ? I.parseInt("0" + ba.substr(n, 1, n.length - 1))
                      : I.parseInt(ba.substr(n, 1, n.length - 1))),
                    (l.b += String.fromCodePoint(n));
                else if (Object.prototype.hasOwnProperty.call(Ff.escapes.h, n))
                  l.b += I.string(Ff.escapes.h[n]);
                else {
                  if (b) throw C.thrown(new tc("Undefined entity: " + n, a, c));
                  l.b += I.string("&" + n + ";");
                }
                n = c + 1;
                f = u;
              } else if (
                !(
                  (97 <= k && 122 >= k) ||
                  (65 <= k && 90 >= k) ||
                  (48 <= k && 57 >= k) ||
                  58 == k ||
                  46 == k ||
                  95 == k ||
                  45 == k
                ) &&
                35 != k
              ) {
                if (b)
                  throw C.thrown(
                    new tc(
                      "Invalid character in entity: " + String.fromCodePoint(k),
                      a,
                      c
                    )
                  );
                l.b += String.fromCodePoint(38);
                k = c - n;
                l.b += null == k ? ba.substr(a, n, null) : ba.substr(a, n, k);
                --c;
                n = c + 1;
                f = u;
              }
          }
          k = a.charCodeAt(++c);
        }
        1 == f && ((n = c), (f = 13));
        if (13 == f) {
          if (0 == d.nodeType) {
            if (d.nodeType != D.Element)
              throw C.thrown(
                "Bad node type, expected Element but found " +
                  (null == d.nodeType ? "null" : ha.toString(d.nodeType))
              );
            throw C.thrown(new tc("Unclosed node <" + d.nodeName + ">", a, c));
          }
          if (c != n || 0 == p)
            (u = c - n),
              (l.b += null == u ? ba.substr(a, n, null) : ba.substr(a, n, u)),
              d.addChild(D.createPCData(l.b));
          return c;
        }
        if (!b && 18 == f && 13 == u)
          return (
            (l.b += String.fromCodePoint(38)),
            (u = c - n),
            (l.b += null == u ? ba.substr(a, n, null) : ba.substr(a, n, u)),
            d.addChild(D.createPCData(l.b)),
            c
          );
        throw C.thrown(new tc("Unexpected end", a, c));
      };
      var pf = function (a) {
        this.output = new cf();
        this.pretty = a;
      };
      g["haxe.xml.Printer"] = pf;
      pf.__name__ = "haxe.xml.Printer";
      pf.print = function (a, b) {
        null == b && (b = !1);
        b = new pf(b);
        b.writeNode(a, "");
        return b.output.b;
      };
      pf.prototype = {
        writeNode: function (a, b) {
          switch (a.nodeType) {
            case 0:
              this.output.b += I.string(b + "<");
              if (a.nodeType != D.Element)
                throw C.thrown(
                  "Bad node type, expected Element but found " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              this.output.b += I.string(a.nodeName);
              for (var c = a.attributes(); c.hasNext(); ) {
                var d = c.next();
                this.output.b += I.string(" " + d + '="');
                d = K.htmlEscape(a.get(d), !0);
                this.output.b += I.string(d);
                this.output.b += '"';
              }
              if (this.hasChildren(a)) {
                this.output.b += ">";
                this.pretty && (this.output.b += "\n");
                if (a.nodeType != D.Document && a.nodeType != D.Element)
                  throw C.thrown(
                    "Bad node type, expected Element or Document but found " +
                      (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                  );
                c = 0;
                for (d = a.children; c < d.length; ) {
                  var e = d[c++];
                  this.writeNode(e, this.pretty ? b + "\t" : b);
                }
                this.output.b += I.string(b + "</");
                if (a.nodeType != D.Element)
                  throw C.thrown(
                    "Bad node type, expected Element but found " +
                      (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                  );
                this.output.b += I.string(a.nodeName);
                this.output.b += ">";
              } else this.output.b += "/>";
              this.pretty && (this.output.b += "\n");
              break;
            case 1:
              if (a.nodeType == D.Document || a.nodeType == D.Element)
                throw C.thrown(
                  "Bad node type, unexpected " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              a = a.nodeValue;
              0 != a.length &&
                ((d = b + K.htmlEscape(a)),
                (this.output.b += I.string(d)),
                this.pretty && (this.output.b += "\n"));
              break;
            case 2:
              this.output.b += I.string(b + "<![CDATA[");
              if (a.nodeType == D.Document || a.nodeType == D.Element)
                throw C.thrown(
                  "Bad node type, unexpected " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              this.output.b += I.string(a.nodeValue);
              this.output.b += "]]\x3e";
              this.pretty && (this.output.b += "\n");
              break;
            case 3:
              if (a.nodeType == D.Document || a.nodeType == D.Element)
                throw C.thrown(
                  "Bad node type, unexpected " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              a = a.nodeValue;
              a = a.replace(/[\n\r\t]+/g, "");
              this.output.b += null == b ? "null" : "" + b;
              d = K.trim("\x3c!--" + a + "--\x3e");
              this.output.b += I.string(d);
              this.pretty && (this.output.b += "\n");
              break;
            case 4:
              if (a.nodeType == D.Document || a.nodeType == D.Element)
                throw C.thrown(
                  "Bad node type, unexpected " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              this.output.b += I.string("<!DOCTYPE " + a.nodeValue + ">");
              this.pretty && (this.output.b += "\n");
              break;
            case 5:
              if (a.nodeType == D.Document || a.nodeType == D.Element)
                throw C.thrown(
                  "Bad node type, unexpected " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              this.output.b += I.string("<?" + a.nodeValue + "?>");
              this.pretty && (this.output.b += "\n");
              break;
            case 6:
              if (a.nodeType != D.Document && a.nodeType != D.Element)
                throw C.thrown(
                  "Bad node type, expected Element or Document but found " +
                    (null == a.nodeType ? "null" : ha.toString(a.nodeType))
                );
              c = 0;
              for (d = a.children; c < d.length; )
                (e = d[c++]), this.writeNode(e, b);
          }
        },
        hasChildren: function (a) {
          if (a.nodeType != D.Document && a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element or Document but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          var b = 0;
          for (a = a.children; b < a.length; ) {
            var c = a[b++];
            switch (c.nodeType) {
              case 0:
              case 1:
                return !0;
              case 2:
              case 3:
                if (c.nodeType == D.Document || c.nodeType == D.Element)
                  throw C.thrown(
                    "Bad node type, unexpected " +
                      (null == c.nodeType ? "null" : ha.toString(c.nodeType))
                  );
                if (0 != K.ltrim(c.nodeValue).length) return !0;
            }
          }
          return !1;
        },
        __class__: pf,
      };
      var Om = (z["haxe.zip.ExtraField"] = {
          __ename__: "haxe.zip.ExtraField",
          __constructs__: ["FUnknown", "FInfoZipUnicodePath", "FUtf8"],
          FUnknown:
            ((y = function (a, b) {
              return {
                _hx_index: 0,
                tag: a,
                bytes: b,
                __enum__: "haxe.zip.ExtraField",
                toString: l,
              };
            }),
            (y.__params__ = ["tag", "bytes"]),
            y),
          FInfoZipUnicodePath:
            ((y = function (a, b) {
              return {
                _hx_index: 1,
                name: a,
                crc: b,
                __enum__: "haxe.zip.ExtraField",
                toString: l,
              };
            }),
            (y.__params__ = ["name", "crc"]),
            y),
          FUtf8: { _hx_index: 2, __enum__: "haxe.zip.ExtraField", toString: l },
        }),
        mg = (z["haxe.zip.Huffman"] = {
          __ename__: "haxe.zip.Huffman",
          __constructs__: ["Found", "NeedBit", "NeedBits"],
          Found:
            ((y = function (a) {
              return {
                _hx_index: 0,
                i: a,
                __enum__: "haxe.zip.Huffman",
                toString: l,
              };
            }),
            (y.__params__ = ["i"]),
            y),
          NeedBit:
            ((y = function (a, b) {
              return {
                _hx_index: 1,
                left: a,
                right: b,
                __enum__: "haxe.zip.Huffman",
                toString: l,
              };
            }),
            (y.__params__ = ["left", "right"]),
            y),
          NeedBits:
            ((y = function (a, b) {
              return {
                _hx_index: 2,
                n: a,
                table: b,
                __enum__: "haxe.zip.Huffman",
                toString: l,
              };
            }),
            (y.__params__ = ["n", "table"]),
            y),
        }),
        Ol = function () {};
      g["haxe.zip.HuffTools"] = Ol;
      Ol.__name__ = "haxe.zip.HuffTools";
      Ol.prototype = {
        treeDepth: function (a) {
          switch (a._hx_index) {
            case 0:
              return 0;
            case 1:
              var b = a.right;
              a = this.treeDepth(a.left);
              b = this.treeDepth(b);
              return 1 + (a < b ? a : b);
            case 2:
              throw C.thrown("assert");
          }
        },
        treeCompress: function (a) {
          var b = this.treeDepth(a);
          if (0 == b) return a;
          if (1 == b) {
            if (1 == a._hx_index)
              return (
                (b = a.right),
                mg.NeedBit(this.treeCompress(a.left), this.treeCompress(b))
              );
            throw C.thrown("assert");
          }
          for (var c = [], d = 0, e = 1 << b; d < e; )
            d++, c.push(mg.Found(-1));
          this.treeWalk(c, 0, 0, b, a);
          return mg.NeedBits(b, c);
        },
        treeWalk: function (a, b, c, d, e) {
          if (1 == e._hx_index) {
            var f = e.right,
              h = e.left;
            0 < d
              ? (this.treeWalk(a, b, c + 1, d - 1, h),
                this.treeWalk(a, b | (1 << c), c + 1, d - 1, f))
              : (a[b] = this.treeCompress(e));
          } else a[b] = this.treeCompress(e);
        },
        treeMake: function (a, b, c, d) {
          if (d > b) throw C.thrown("Invalid huffman");
          var e = (c << 5) | d;
          if (a.h.hasOwnProperty(e)) return mg.Found(a.h[e]);
          c <<= 1;
          ++d;
          return mg.NeedBit(
            this.treeMake(a, b, c, d),
            this.treeMake(a, b, c | 1, d)
          );
        },
        make: function (a, b, c, d) {
          if (1 == c) return mg.NeedBit(mg.Found(0), mg.Found(0));
          var e = [],
            f = [];
          if (32 < d) throw C.thrown("Invalid huffman");
          for (var h = 0, m = d; h < m; ) h++, e.push(0), f.push(0);
          h = 0;
          for (m = c; h < m; ) {
            var n = h++;
            n = a[n + b];
            if (n >= d) throw C.thrown("Invalid huffman");
            e[n]++;
          }
          var p = 0;
          h = 1;
          for (m = d - 1; h < m; ) (n = h++), (p = (p + e[n]) << 1), (f[n] = p);
          e = new lc();
          h = 0;
          for (m = c; h < m; )
            (n = h++),
              (c = a[n + b]),
              0 != c &&
                ((p = f[c - 1]), (f[c - 1] = p + 1), (e.h[(p << 5) | c] = n));
          return this.treeCompress(
            mg.NeedBit(this.treeMake(e, d, 0, 1), this.treeMake(e, d, 1, 1))
          );
        },
        __class__: Ol,
      };
      var Pl = function (a) {
        this.buffer = new gb(new ArrayBuffer(65536));
        this.pos = 0;
        a && (this.crc = new Zg());
      };
      g["haxe.zip._InflateImpl.Window"] = Pl;
      Pl.__name__ = "haxe.zip._InflateImpl.Window";
      Pl.prototype = {
        slide: function () {
          null != this.crc && this.crc.update(this.buffer, 0, 32768);
          var a = new gb(new ArrayBuffer(65536));
          this.pos -= 32768;
          a.blit(0, this.buffer, 32768, this.pos);
          this.buffer = a;
        },
        addBytes: function (a, b, c) {
          65536 < this.pos + c && this.slide();
          this.buffer.blit(this.pos, a, b, c);
          this.pos += c;
        },
        addByte: function (a) {
          65536 == this.pos && this.slide();
          this.buffer.b[this.pos] = a & 255;
          this.pos++;
        },
        getLastChar: function () {
          return this.buffer.b[this.pos - 1];
        },
        available: function () {
          return this.pos;
        },
        checksum: function () {
          null != this.crc && this.crc.update(this.buffer, 0, this.pos);
          return this.crc;
        },
        __class__: Pl,
      };
      var Cd = (z["haxe.zip._InflateImpl.State"] = {
          __ename__: "haxe.zip._InflateImpl.State",
          __constructs__: "Head Block CData Flat Crc Dist DistOne Done".split(
            " "
          ),
          Head: {
            _hx_index: 0,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
          Block: {
            _hx_index: 1,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
          CData: {
            _hx_index: 2,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
          Flat: {
            _hx_index: 3,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
          Crc: {
            _hx_index: 4,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
          Dist: {
            _hx_index: 5,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
          DistOne: {
            _hx_index: 6,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
          Done: {
            _hx_index: 7,
            __enum__: "haxe.zip._InflateImpl.State",
            toString: l,
          },
        }),
        Uc = function (a, b, c) {
          null == c && (c = !0);
          null == b && (b = !0);
          this.isFinal = !1;
          this.htools = new Ol();
          this.huffman = this.buildFixedHuffman();
          this.huffdist = null;
          this.dist = this.len = 0;
          this.state = b ? Cd.Head : Cd.Block;
          this.input = a;
          this.needed = this.nbits = this.bits = 0;
          this.output = null;
          this.outpos = 0;
          this.lengths = [];
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.lengths.push(-1);
          this.window = new Pl(c);
        };
      g["haxe.zip.InflateImpl"] = Uc;
      Uc.__name__ = "haxe.zip.InflateImpl";
      Uc.prototype = {
        buildFixedHuffman: function () {
          if (null != Uc.FIXED_HUFFMAN) return Uc.FIXED_HUFFMAN;
          for (var a = [], b = 0; 288 > b; ) {
            var c = b++;
            a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8);
          }
          Uc.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
          return Uc.FIXED_HUFFMAN;
        },
        readBytes: function (a, b, c) {
          this.needed = c;
          this.outpos = b;
          this.output = a;
          if (0 < c) for (; this.inflateLoop(); );
          return c - this.needed;
        },
        getBits: function (a) {
          for (; this.nbits < a; )
            (this.bits |= this.input.readByte() << this.nbits),
              (this.nbits += 8);
          var b = this.bits & ((1 << a) - 1);
          this.nbits -= a;
          this.bits >>= a;
          return b;
        },
        getBit: function () {
          0 == this.nbits &&
            ((this.nbits = 8), (this.bits = this.input.readByte()));
          var a = 1 == (this.bits & 1);
          this.nbits--;
          this.bits >>= 1;
          return a;
        },
        getRevBits: function (a) {
          return 0 == a
            ? 0
            : this.getBit()
            ? (1 << (a - 1)) | this.getRevBits(a - 1)
            : this.getRevBits(a - 1);
        },
        resetBits: function () {
          this.nbits = this.bits = 0;
        },
        addBytes: function (a, b, c) {
          this.window.addBytes(a, b, c);
          this.output.blit(this.outpos, a, b, c);
          this.needed -= c;
          this.outpos += c;
        },
        addByte: function (a) {
          this.window.addByte(a);
          this.output.b[this.outpos] = a & 255;
          this.needed--;
          this.outpos++;
        },
        addDistOne: function (a) {
          for (var b = this.window.getLastChar(), c = 0; c < a; )
            c++, this.addByte(b);
        },
        addDist: function (a, b) {
          this.addBytes(this.window.buffer, this.window.pos - a, b);
        },
        applyHuffman: function (a) {
          switch (a._hx_index) {
            case 0:
              return (a = a.i);
            case 1:
              var b = a.right;
              a = a.left;
              return this.applyHuffman(this.getBit() ? b : a);
            case 2:
              return (
                (b = a.table), (a = a.n), this.applyHuffman(b[this.getBits(a)])
              );
          }
        },
        inflateLengths: function (a, b) {
          for (var c = 0, d = 0; c < b; ) {
            var e = this.applyHuffman(this.huffman);
            switch (e) {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
                d = e;
                a[c] = e;
                ++c;
                break;
              case 16:
                e = c + 3 + this.getBits(2);
                if (e > b) throw C.thrown("Invalid data");
                for (; c < e; ) (a[c] = d), ++c;
                break;
              case 17:
                c += 3 + this.getBits(3);
                if (c > b) throw C.thrown("Invalid data");
                break;
              case 18:
                c += 11 + this.getBits(7);
                if (c > b) throw C.thrown("Invalid data");
                break;
              default:
                throw C.thrown("Invalid data");
            }
          }
        },
        inflateLoop: function () {
          switch (this.state._hx_index) {
            case 0:
              var a = this.input.readByte();
              if (8 != (a & 15)) throw C.thrown("Invalid data");
              var b = this.input.readByte(),
                c = 0 != (b & 32);
              if (0 != ((a << 8) + b) % 31) throw C.thrown("Invalid data");
              if (c) throw C.thrown("Unsupported dictionary");
              this.state = Cd.Block;
              return !0;
            case 1:
              switch (((this.isFinal = this.getBit()), this.getBits(2))) {
                case 0:
                  this.len = this.input.readUInt16();
                  if (this.input.readUInt16() != 65535 - this.len)
                    throw C.thrown("Invalid data");
                  this.state = Cd.Flat;
                  a = this.inflateLoop();
                  this.resetBits();
                  return a;
                case 1:
                  return (
                    (this.huffman = this.buildFixedHuffman()),
                    (this.huffdist = null),
                    (this.state = Cd.CData),
                    !0
                  );
                case 2:
                  a = this.getBits(5) + 257;
                  b = this.getBits(5) + 1;
                  var d = this.getBits(4) + 4;
                  c = 0;
                  for (var e = d; c < e; ) {
                    var f = c++;
                    this.lengths[Uc.CODE_LENGTHS_POS[f]] = this.getBits(3);
                  }
                  c = d;
                  for (e = 19; c < e; )
                    (f = c++), (this.lengths[Uc.CODE_LENGTHS_POS[f]] = 0);
                  this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                  d = [];
                  c = 0;
                  for (e = a + b; c < e; ) c++, d.push(0);
                  this.inflateLengths(d, a + b);
                  this.huffdist = this.htools.make(d, a, b, 16);
                  this.huffman = this.htools.make(d, 0, a, 16);
                  this.state = Cd.CData;
                  return !0;
                default:
                  throw C.thrown("Invalid data");
              }
            case 2:
              b = this.applyHuffman(this.huffman);
              if (256 > b) return this.addByte(b), 0 < this.needed;
              if (256 == b) this.state = this.isFinal ? Cd.Crc : Cd.Block;
              else {
                b -= 257;
                a = Uc.LEN_EXTRA_BITS_TBL[b];
                if (-1 == a) throw C.thrown("Invalid data");
                this.len = Uc.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                b =
                  null == this.huffdist
                    ? this.getRevBits(5)
                    : this.applyHuffman(this.huffdist);
                a = Uc.DIST_EXTRA_BITS_TBL[b];
                if (-1 == a) throw C.thrown("Invalid data");
                this.dist = Uc.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                if (this.dist > this.window.available())
                  throw C.thrown("Invalid data");
                this.state = 1 == this.dist ? Cd.DistOne : Cd.Dist;
              }
              return !0;
            case 3:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                (b = this.input.read(a)),
                (this.len -= a),
                this.addBytes(b, 0, a),
                0 == this.len &&
                  (this.state = this.isFinal ? Cd.Crc : Cd.Block),
                0 < this.needed
              );
            case 4:
              a = this.window.checksum();
              if (null == a) return (this.state = Cd.Done), !0;
              b = Zg.read(this.input);
              if (!a.equals(b)) throw C.thrown("Invalid CRC");
              this.state = Cd.Done;
              return !0;
            case 5:
              for (; 0 < this.len && 0 < this.needed; )
                (a = this.len < this.dist ? this.len : this.dist),
                  (a = this.needed < a ? this.needed : a),
                  this.addDist(this.dist, a),
                  (this.len -= a);
              0 == this.len && (this.state = Cd.CData);
              return 0 < this.needed;
            case 6:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                this.addDistOne(a),
                (this.len -= a),
                0 == this.len && (this.state = Cd.CData),
                0 < this.needed
              );
            case 7:
              return !1;
          }
        },
        __class__: Uc,
      };
      var bi = function (a) {
        this.i = a;
      };
      g["haxe.zip.Reader"] = bi;
      bi.__name__ = "haxe.zip.Reader";
      bi.readZip = function (a) {
        return new bi(a).read();
      };
      bi.prototype = {
        readZipDate: function () {
          var a = this.i.readUInt16(),
            b = (a >> 11) & 31,
            c = (a >> 5) & 63;
          a &= 31;
          var d = this.i.readUInt16();
          return new Date(
            (d >> 9) + 1980,
            ((d >> 5) & 15) - 1,
            d & 31,
            b,
            c,
            a << 1
          );
        },
        readExtraFields: function (a) {
          for (var b = new A(); 0 < a; ) {
            if (4 > a) throw C.thrown("Invalid extra fields data");
            var c = this.i.readUInt16(),
              d = this.i.readUInt16();
            if (a < d) throw C.thrown("Invalid extra fields data");
            if (28789 == c) {
              var e = this.i.readByte();
              if (1 != e) {
                var f = new Sj();
                f.addByte(e);
                f.add(this.i.read(d - 1));
                b.add(Om.FUnknown(c, f.getBytes()));
              } else
                (c = this.i.readInt32()),
                  (e = this.i.read(d - 5).toString()),
                  b.add(Om.FInfoZipUnicodePath(e, c));
            } else b.add(Om.FUnknown(c, this.i.read(d)));
            a -= 4 + d;
          }
          return b;
        },
        readEntryHeader: function () {
          var a = this.i,
            b = a.readInt32();
          if (33639248 == b || 101010256 == b) return null;
          if (67324752 != b) throw C.thrown("Invalid Zip Data");
          a.readUInt16();
          b = a.readUInt16();
          var c = 0 != (b & 2048),
            d = a.readUInt16(),
            e = 0 != d;
          if (e && 8 != d) throw C.thrown("Unsupported compression " + d);
          d = this.readZipDate();
          var f = a.readInt32(),
            h = a.readInt32(),
            m = a.readInt32(),
            n = a.readInt16(),
            p = a.readInt16();
          a = a.readString(n);
          p = this.readExtraFields(p);
          c && p.push(Om.FUtf8);
          0 != (b & 8) && (h = -1);
          return {
            fileName: a,
            fileSize: m,
            fileTime: d,
            compressed: e,
            dataSize: h,
            data: null,
            crc32: f,
            extraFields: p,
          };
        },
        read: function () {
          for (var a = new A(), b = null; ; ) {
            var c = this.readEntryHeader();
            if (null == c) break;
            if (0 > c.dataSize) {
              null == b && (b = new gb(new ArrayBuffer(65536)));
              for (var d = new Sj(), e = new Uc(this.i, !1, !1); ; ) {
                var f = e.readBytes(b, 0, 65536);
                d.addBytes(b, 0, f);
                if (65536 > f) break;
              }
              c.data = d.getBytes();
              c.crc32 = this.i.readInt32();
              134695760 == c.crc32 && (c.crc32 = this.i.readInt32());
              c.dataSize = this.i.readInt32();
              c.fileSize = this.i.readInt32();
              c.dataSize = c.fileSize;
              c.compressed = !1;
            } else c.data = this.i.read(c.dataSize);
            a.add(c);
          }
          return a;
        },
        __class__: bi,
      };
      var Vj = function () {};
      g["io.newgrounds.ICallable"] = Vj;
      Vj.__name__ = "io.newgrounds.ICallable";
      Vj.__isInterface__ = !0;
      Vj.prototype = { __class__: Vj };
      var $g = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !1);
        this._core = a;
        this.component = b;
        this._requireSession = c;
        this._isSecure = d && null != a.encryptionHandler;
      };
      g["io.newgrounds.Call"] = $g;
      $g.__name__ = "io.newgrounds.Call";
      $g.__interfaces__ = [Vj];
      $g.prototype = {
        addProperty: function (a, b) {
          null == this._properties && (this._properties = new ea());
          this._properties.h[a] = b;
          return this;
        },
        addComponentParameter: function (a, b, c) {
          if (b == c) return this;
          null == this._parameters && (this._parameters = new ea());
          this._parameters.h[a] = b;
          return this;
        },
        addDataHandler: function (a) {
          null == this._dataHandlers && (this._dataHandlers = new Wj());
          this._dataHandlers.add(a);
          return this;
        },
        addErrorHandler: function (a) {
          null == this._httpErrorHandlers &&
            (this._httpErrorHandlers = new Wj());
          this._httpErrorHandlers.add(a);
          return this;
        },
        send: function () {
          var a = {};
          a.app_id = this._core.appId;
          a.call = {};
          a.call.component = this.component;
          this._core.debug && this.addProperty("debug", !0);
          if (
            null == this._properties ||
            !Object.prototype.hasOwnProperty.call(
              this._properties.h,
              "session_id"
            )
          )
            if (null != this._core.sessionId)
              this.addProperty("session_id", this._core.sessionId);
            else if (this._requireSession) {
              this._core.logError(
                {
                  message:
                    'cannot send "' +
                    this.component +
                    '" call without a sessionId',
                  code: null,
                },
                {
                  fileName: "io/newgrounds/Call.hx",
                  lineNumber: 137,
                  className: "io.newgrounds.Call",
                  methodName: "send",
                }
              );
              return;
            }
          if (null != this._properties)
            for (var b = ea.keysIterator(this._properties.h); b.hasNext(); ) {
              var c = b.next();
              a[c] = this._properties.h[c];
            }
          if (null != this._parameters)
            for (
              a.call.parameters = {}, b = ea.keysIterator(this._parameters.h);
              b.hasNext();

            )
              (c = b.next()), (a.call.parameters[c] = this._parameters.h[c]);
          b = this._core;
          c = "Post  - " + JSON.stringify(a);
          b.verbose &&
            b.log(c, {
              fileName: "io/newgrounds/Call.hx",
              lineNumber: 156,
              className: "io.newgrounds.Call",
              methodName: "send",
            });
          this._isSecure &&
            ((c = this._core.encryptionHandler(JSON.stringify(a.call))),
            (a.call = {}),
            (a.call.secure = c),
            (b = this._core),
            b.verbose &&
              b.log("    secure - " + c, {
                fileName: "io/newgrounds/Call.hx",
                lineNumber: 164,
                className: "io.newgrounds.Call",
                methodName: "send",
              }));
          this._core.markCallPending_io_newgrounds_Call_T(this);
          Xj.send(
            this._core,
            JSON.stringify(a),
            q(this, this.onData),
            q(this, this.onHttpError),
            q(this, this.onStatus)
          );
        },
        onData: function (a) {
          var b = this._core;
          b.verbose &&
            b.log("Reply - " + a, {
              fileName: "io/newgrounds/Call.hx",
              lineNumber: 180,
              className: "io.newgrounds.Call",
              methodName: "onData",
            });
          if (null != this._dataHandlers || null != this._successHandlers)
            (a = An._new(this._core, a)),
              null != this._dataHandlers && this._dataHandlers.dispatch(a),
              a.success &&
                a.result.data.success &&
                null != this._successHandlers &&
                this._successHandlers.dispatch(),
              this.destroy();
        },
        onHttpError: function (a) {
          this._core.logError(a, {
            fileName: "io/newgrounds/Call.hx",
            lineNumber: 198,
            className: "io.newgrounds.Call",
            methodName: "onHttpError",
          });
          null != this._httpErrorHandlers &&
            this._httpErrorHandlers.dispatch({ message: a, code: null });
        },
        onStatus: function (a) {
          null != this._statusHandlers && this._statusHandlers.dispatch(a);
        },
        destroy: function () {
          this._statusHandlers =
            this._httpErrorHandlers =
            this._successHandlers =
            this._dataHandlers =
            this._parameters =
            this._properties =
            this._core =
              null;
        },
        __class__: $g,
      };
      var Uf = function () {
        this._list = [];
        this._once = [];
      };
      g["io.newgrounds.utils.Dispatcher"] = Uf;
      Uf.__name__ = "io.newgrounds.utils.Dispatcher";
      Uf.prototype = {
        dispatch: function () {
          for (var a = this._list.length - 1; 0 <= a; ) {
            var b = this._list[a];
            ba.remove(this._once, b) && ba.remove(this._list, b);
            b();
            --a;
          }
        },
        __class__: Uf,
      };
      var ah = function (a, b, c, d) {
        null == c && (c = !1);
        null == a && (a = "test");
        this._pendingCalls = [];
        this._queuedCalls = [];
        this.appId = a;
        this.set_sessionId(b);
        this.debug = c;
        this.calls = new Ql(this);
        if (null != this.sessionId) {
          var e = q(this, this.checkInitialSession),
            f = q(this, this.initialSessionFail);
          this.calls.app
            .checkSession()
            .addDataHandler(function (a) {
              e(d, a);
            })
            .addErrorHandler(function (a) {
              f(d, a);
            })
            .send();
        }
      };
      g["io.newgrounds.NGLite"] = ah;
      ah.__name__ = "io.newgrounds.NGLite";
      ah.prototype = {
        markCallPending_io_newgrounds_Call_T: function (a) {
          var b = this;
          this._pendingCalls.push(a);
          a.addDataHandler(function (c) {
            b.onCallComplete(a);
          });
          a.addErrorHandler(function (c) {
            b.onCallComplete(a);
          });
        },
        set_sessionId: function (a) {
          return (this.sessionId = "" == a ? null : a);
        },
        checkInitialSession: function (a, b) {
          (b.success &&
            b.result.data.success &&
            !b.result.data.session.expired) ||
            this.initialSessionFail(
              a,
              b.success ? b.result.data.error : b.error
            );
        },
        initialSessionFail: function (a, b) {
          this.set_sessionId(null);
          null != a && a(b);
        },
        onCallComplete: function (a) {
          ba.remove(this._pendingCalls, a);
          this.checkQueue();
        },
        checkQueue: function () {
          0 == this._pendingCalls.length &&
            0 < this._queuedCalls.length &&
            this._queuedCalls.shift().send();
        },
        log: function (a, b) {
          Db.trace("[Newgrounds API] :: " + I.string(a), b);
        },
        logError: function (a, b) {
          this.log("Error: " + I.string(a), b);
        },
        __class__: ah,
        __properties__: { set_sessionId: "set_sessionId" },
      };
      var dd = function (a, b, c, d) {
        null == c && (c = !1);
        null == a && (a = "test");
        this.host = dd.getHost();
        this.onLogin = new Uf();
        this.onLogOut = new Uf();
        this.onMedalsLoaded = new Uf();
        this.onScoreBoardsLoaded = new Uf();
        this.attemptingLogin = null != b;
        ah.call(this, a, b, c, d);
      };
      g["io.newgrounds.NG"] = dd;
      dd.__name__ = "io.newgrounds.NG";
      dd.openPassportHelper = function (a) {
        window.open(a, "_blank");
      };
      dd.getHost = function () {
        var a = window.document.location.href;
        return null == a || "" == a
          ? "AppView"
          : 0 == a.indexOf("file") || -1 != a.indexOf("127.0.0.1")
          ? "LocalHost"
          : dd.urlParser.match(a)
          ? dd.urlParser.matched(1)
          : "Unknown";
      };
      dd.__super__ = ah;
      dd.prototype = r(ah.prototype, {
        get_passportUrl: function () {
          return null == this._session ||
            "request-login" != Rl.get_status(this._session)
            ? null
            : this._session.passport_url;
        },
        checkInitialSession: function (a, b) {
          this.onSessionReceive(b, null, null, a);
        },
        onSessionReceive: function (a, b, c, d, e) {
          if (a.success && a.result.data.success)
            if (
              ((this._session = a.result.data.session),
              this.set_sessionId(this._session.id),
              (d = "session started - status: " + Rl.get_status(this._session)),
              this.verbose &&
                this.log(d, {
                  fileName: "io/newgrounds/NG.hx",
                  lineNumber: 202,
                  className: "io.newgrounds.NG",
                  methodName: "onSessionReceive",
                }),
              "request-login" == Rl.get_status(this._session))
            ) {
              var f = q(this, this.checkSession);
              a = null;
              this._passportCallback = function () {
                f(a, b, e);
              };
              null != c ? c() : this.openPassportUrl();
            } else this.checkSession(null, b, e);
          else
            this.set_sessionId(null),
              this.endLoginAndCall(null),
              null != d && d(a.success ? a.result.data.error : a.error);
        },
        openPassportUrl: function () {
          if (null != this.get_passportUrl()) {
            var a = "loading passport: " + this.get_passportUrl();
            this.verbose &&
              this.log(a, {
                fileName: "io/newgrounds/NG.hx",
                lineNumber: 224,
                className: "io.newgrounds.NG",
                methodName: "openPassportUrl",
              });
            dd.openPassportHelper(this.get_passportUrl());
            this.dispatchPassportCallback();
          } else
            this.logError("Cannot open passport", {
              fileName: "io/newgrounds/NG.hx",
              lineNumber: 229,
              className: "io.newgrounds.NG",
              methodName: "openPassportUrl",
            });
        },
        dispatchPassportCallback: function () {
          if (null != this._passportCallback) {
            this.verbose &&
              this.log("dispatching passport callback", {
                fileName: "io/newgrounds/NG.hx",
                lineNumber: 271,
                className: "io.newgrounds.NG",
                methodName: "dispatchPassportCallback",
              });
            var a = this._passportCallback;
            this._passportCallback = null;
            a();
          }
        },
        checkSession: function (a, b, c) {
          var d = this;
          if (this._loginCancelled)
            this.log("login cancelled via cancelLoginRequest", {
              fileName: "io/newgrounds/NG.hx",
              lineNumber: 282,
              className: "io.newgrounds.NG",
              methodName: "checkSession",
            }),
              this.endLoginAndCall(c);
          else {
            if (null != a) {
              if (!a.success || !a.result.data.success) {
                this.log("login cancelled via passport", {
                  fileName: "io/newgrounds/NG.hx",
                  lineNumber: 292,
                  className: "io.newgrounds.NG",
                  methodName: "checkSession",
                });
                this.endLoginAndCall(c);
                return;
              }
              this.verbose &&
                this.log("Session received", {
                  fileName: "io/newgrounds/NG.hx",
                  lineNumber: 298,
                  className: "io.newgrounds.NG",
                  methodName: "checkSession",
                });
              this._session = a.result.data.session;
            }
            if ("user-loaded" == Rl.get_status(this._session))
              (this.loggedIn = !0),
                this.endLoginAndCall(b),
                this.onLogin.dispatch();
            else if ("request-login" == Rl.get_status(this._session)) {
              var e = q(this, this.checkSession),
                f = this.calls.app.checkSession().addDataHandler(function (a) {
                  e(a, b, c);
                });
              this.timer(3, function () {
                d.verbose &&
                  d.log("3s elapsed, checking session again", {
                    fileName: "io/newgrounds/NG.hx",
                    lineNumber: 317,
                    className: "io.newgrounds.NG",
                    methodName: "checkSession",
                  });
                d._loginCancelled
                  ? (d.log("login cancelled via cancelLoginRequest", {
                      fileName: "io/newgrounds/NG.hx",
                      lineNumber: 324,
                      className: "io.newgrounds.NG",
                      methodName: "checkSession",
                    }),
                    d.endLoginAndCall(c))
                  : f.send();
              });
            } else
              this.log("login cancelled via passport", {
                fileName: "io/newgrounds/NG.hx",
                lineNumber: 332,
                className: "io.newgrounds.NG",
                methodName: "checkSession",
              }),
                this.endLoginAndCall(c);
          }
        },
        endLoginAndCall: function (a) {
          this._loginCancelled = this.attemptingLogin = !1;
          null != a && a();
        },
        timer: function (a, b) {
          var c = new Tf((1e3 * a) | 0);
          c.run = function () {
            c.stop();
            b();
          };
        },
        __class__: dd,
        __properties__: r(ah.prototype.__properties__, {
          get_passportUrl: "get_passportUrl",
        }),
      });
      var Dd = function (a) {
        this._core = a;
      };
      g["io.newgrounds.components.Component"] = Dd;
      Dd.__name__ = "io.newgrounds.components.Component";
      Dd.prototype = { __class__: Dd };
      var Yj = function (a) {
        this._core = a;
      };
      g["io.newgrounds.components.AppComponent"] = Yj;
      Yj.__name__ = "io.newgrounds.components.AppComponent";
      Yj.__super__ = Dd;
      Yj.prototype = r(Dd.prototype, {
        checkSession: function () {
          return new $g(this._core, "App.checkSession", !0);
        },
        __class__: Yj,
      });
      var Ql = function (a) {
        this._core = a;
        this.medal = new Zj(this._core);
        this.app = new Yj(this._core);
        this.event = new ak(this._core);
        this.scoreBoard = new bk(this._core);
        this.loader = new ck(this._core);
        this.gateway = new dk(this._core);
      };
      g["io.newgrounds.components.ComponentList"] = Ql;
      Ql.__name__ = "io.newgrounds.components.ComponentList";
      Ql.prototype = { __class__: Ql };
      var ak = function (a) {
        this._core = a;
      };
      g["io.newgrounds.components.EventComponent"] = ak;
      ak.__name__ = "io.newgrounds.components.EventComponent";
      ak.__super__ = Dd;
      ak.prototype = r(Dd.prototype, { __class__: ak });
      var dk = function (a) {
        this._core = a;
      };
      g["io.newgrounds.components.GatewayComponent"] = dk;
      dk.__name__ = "io.newgrounds.components.GatewayComponent";
      dk.__super__ = Dd;
      dk.prototype = r(Dd.prototype, { __class__: dk });
      var ck = function (a) {
        this._core = a;
      };
      g["io.newgrounds.components.LoaderComponent"] = ck;
      ck.__name__ = "io.newgrounds.components.LoaderComponent";
      ck.__super__ = Dd;
      ck.prototype = r(Dd.prototype, { __class__: ck });
      var Zj = function (a) {
        this._core = a;
      };
      g["io.newgrounds.components.MedalComponent"] = Zj;
      Zj.__name__ = "io.newgrounds.components.MedalComponent";
      Zj.__super__ = Dd;
      Zj.prototype = r(Dd.prototype, {
        unlock: function (a) {
          return new $g(
            this._core,
            "Medal.unlock",
            !0,
            !0
          ).addComponentParameter("id", a);
        },
        __class__: Zj,
      });
      var bk = function (a) {
        this._core = a;
      };
      g["io.newgrounds.components.ScoreBoardComponent"] = bk;
      bk.__name__ = "io.newgrounds.components.ScoreBoardComponent";
      bk.__super__ = Dd;
      bk.prototype = r(Dd.prototype, {
        postScore: function (a, b, c) {
          return new $g(this._core, "ScoreBoard.postScore", !0, !0)
            .addComponentParameter("id", a)
            .addComponentParameter("value", b)
            .addComponentParameter("tag", c, null);
        },
        __class__: bk,
      });
      var wf = function (a, b) {
        this._core = a;
        this.onUpdate = new Uf();
        null != b && this.parse(b);
      };
      g["io.newgrounds.objects.Object"] = wf;
      wf.__name__ = "io.newgrounds.objects.Object";
      wf.prototype = {
        parse: function (a) {
          this._data = a;
          this.onUpdate.dispatch();
        },
        __class__: wf,
      };
      var Sl = function (a, b) {
        this.onUnlock = new Uf();
        wf.call(this, a, b);
      };
      g["io.newgrounds.objects.Medal"] = Sl;
      Sl.__name__ = "io.newgrounds.objects.Medal";
      Sl.__super__ = wf;
      Sl.prototype = r(wf.prototype, {
        parse: function (a) {
          var b = null == this._data || !this._data.unlocked;
          wf.prototype.parse.call(this, a);
          b && this._data.unlocked && this.onUnlock.dispatch();
        },
        sendUnlock: function () {
          null == this._core.sessionId &&
            ((this._data.unlocked = !0), this.onUnlock.dispatch());
          this._core.calls.medal
            .unlock(this._data.id)
            .addDataHandler(q(this, this.onUnlockResponse))
            .send();
        },
        onUnlockResponse: function (a) {
          a.success &&
            a.result.data.success &&
            (this.parse(a.result.data.medal),
            this._data.unlocked ||
              ((this._data.unlocked = !0), this.onUnlock.dispatch()));
        },
        __class__: Sl,
      });
      var Tl = function (a, b) {
        wf.call(this, a, b);
      };
      g["io.newgrounds.objects.ScoreBoard"] = Tl;
      Tl.__name__ = "io.newgrounds.objects.ScoreBoard";
      Tl.__super__ = wf;
      Tl.prototype = r(wf.prototype, {
        postScore: function (a, b) {
          this._core.calls.scoreBoard
            .postScore(this._data.id, a, b)
            .addDataHandler(q(this, this.onScorePosted))
            .send();
        },
        onScorePosted: function (a) {},
        __class__: Tl,
      });
      var Rl = {
          __properties__: { get_status: "get_status" },
          get_status: function (a) {
            return a.expired || null == a.id || "" == a.id
              ? "session-expired"
              : null != a.user && null != a.user.name && "" != a.user.name
              ? "user-loaded"
              : "request-login";
          },
        },
        An = {
          _new: function (a, b) {
            try {
              var c = JSON.parse(b);
            } catch (d) {
              (Ba.lastError = d),
                (c = C.caught(d).unwrap()),
                (c = JSON.parse(
                  '{"success":false,"error":{"message":"Error parsing reply:\'' +
                    b +
                    "' error:'" +
                    I.string(c) +
                    '\'","code":0}}'
                ));
            }
            c.success
              ? c.result.data.success ||
                ((b = c.result.data.error),
                a.logError(
                  "" +
                    c.result.component +
                    " fail: " +
                    (null == b
                      ? "null"
                      : (null != b.code ? "#" + b.code + " - " : "") +
                        b.message),
                  {
                    fileName: "io/newgrounds/objects/events/Response.hx",
                    lineNumber: 42,
                    className:
                      "io.newgrounds.objects.events._Response.Response_Impl_",
                    methodName: "_new",
                  }
                ))
              : ((b = c.error),
                a.logError(
                  "Call unseccessful: " +
                    (null == b
                      ? "null"
                      : (null != b.code ? "#" + b.code + " - " : "") +
                        b.message),
                  {
                    fileName: "io/newgrounds/objects/events/Response.hx",
                    lineNumber: 40,
                    className:
                      "io.newgrounds.objects.events._Response.Response_Impl_",
                    methodName: "_new",
                  }
                ));
            return c;
          },
        },
        Xj = function () {};
      g["io.newgrounds.utils.AsyncHttp"] = Xj;
      Xj.__name__ = "io.newgrounds.utils.AsyncHttp";
      Xj.send = function (a, b, c, d, e) {
        a.verbose &&
          a.log("sending: " + b, {
            fileName: "io/newgrounds/utils/AsyncHttp.hx",
            lineNumber: 35,
            className: "io.newgrounds.utils.AsyncHttp",
            methodName: "send",
          });
        Xj.sendSync(a, b, c, d, e);
      };
      Xj.sendSync = function (a, b, c, d, e) {
        a = new Rj("https://newgrounds.io/gateway_v3.php");
        a.setParameter("input", b);
        a.onData = c;
        a.onError = d;
        a.onStatus = e;
        a.request(!0);
      };
      var Wj = function () {
        this._list = [];
        this._once = [];
      };
      g["io.newgrounds.utils.TypedDispatcher"] = Wj;
      Wj.__name__ = "io.newgrounds.utils.TypedDispatcher";
      Wj.prototype = {
        add: function (a, b) {
          null == b && (b = !1);
          if (-1 != this._list.indexOf(a))
            return (
              b || -1 == this._once.indexOf(a) || ba.remove(this._once, a), !1
            );
          this._list.unshift(a);
          b && this._once.unshift(a);
          return !0;
        },
        dispatch: function (a) {
          for (var b = this._list.length - 1; 0 <= b; ) {
            var c = this._list[b];
            ba.remove(this._once, c) && ba.remove(this._list, c);
            c(a);
            --b;
          }
        },
        __class__: Wj,
      };
      var $h = function () {};
      g["js.Browser"] = $h;
      $h.__name__ = "js.Browser";
      $h.getLocalStorage = function () {
        try {
          var a = window.localStorage;
          a.getItem("");
          if (0 == a.length) {
            var b = "_hx_" + Math.random();
            a.setItem(b, b);
            a.removeItem(b);
          }
          return a;
        } catch (c) {
          return (Ba.lastError = c), null;
        }
      };
      $h.createXMLHttpRequest = function () {
        if ("undefined" != typeof XMLHttpRequest) return new XMLHttpRequest();
        if ("undefined" != typeof ActiveXObject)
          return new ActiveXObject("Microsoft.XMLHTTP");
        throw C.thrown("Unable to create XMLHttpRequest object.");
      };
      var Pm = function () {};
      g["js.html._CanvasElement.CanvasUtil"] = Pm;
      Pm.__name__ = "js.html._CanvasElement.CanvasUtil";
      Pm.getContextWebGL = function (a, b) {
        var c = a.getContext("webgl", b);
        if (null != c) return c;
        c = a.getContext("experimental-webgl", b);
        return null != c ? c : null;
      };
      var Tk = function () {
        this.connected = !0;
        this.buttons = [];
        this.axes = [];
      };
      g["lime._internal.backend.html5.GameDeviceData"] = Tk;
      Tk.__name__ = "lime._internal.backend.html5.GameDeviceData";
      Tk.prototype = { __class__: Tk };
      var Vl = function (a) {
        this.parent = a;
        this.id = -1;
        this.gain = 1;
        this.position = new Ul();
      };
      g["lime._internal.backend.html5.HTML5AudioSource"] = Vl;
      Vl.__name__ = "lime._internal.backend.html5.HTML5AudioSource";
      Vl.prototype = {
        dispose: function () {},
        init: function () {},
        play: function () {
          if (
            !this.playing &&
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            this.playing = !0;
            var a = this.getCurrentTime();
            this.completed = !1;
            var b = this.parent.buffer.__srcHowl._volume;
            this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
            this.id = this.parent.buffer.__srcHowl.play();
            this.parent.buffer.__srcHowl._volume = b;
            this.setPosition(this.parent.get_position());
            this.parent.buffer.__srcHowl.on(
              "end",
              q(this, this.howl_onEnd),
              this.id
            );
            this.setCurrentTime(a);
          }
        },
        stop: function () {
          this.playing = !1;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            (this.parent.buffer.__srcHowl.stop(this.id),
            this.parent.buffer.__srcHowl.off(
              "end",
              q(this, this.howl_onEnd),
              this.id
            ));
        },
        howl_onEnd: function () {
          this.playing = !1;
          0 < this.loops
            ? (this.loops--, this.stop(), this.play())
            : (null != this.parent.buffer &&
                null != this.parent.buffer.__srcHowl &&
                (this.parent.buffer.__srcHowl.stop(this.id),
                this.parent.buffer.__srcHowl.off(
                  "end",
                  q(this, this.howl_onEnd),
                  this.id
                )),
              (this.completed = !0),
              this.parent.onComplete.dispatch());
        },
        getCurrentTime: function () {
          if (-1 == this.id) return 0;
          if (this.completed) return this.getLength();
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var a =
              ((1e3 * this.parent.buffer.__srcHowl.seek(this.id)) | 0) -
              this.parent.offset;
            return 0 > a ? 0 : a;
          }
          return 0;
        },
        setCurrentTime: function (a) {
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var b = (a + this.parent.offset) / 1e3;
            0 > b && (b = 0);
            this.parent.buffer.__srcHowl.seek(b, this.id);
          }
          return a;
        },
        getGain: function () {
          return this.gain;
        },
        setGain: function (a) {
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            -1 != this.id &&
            this.parent.buffer.__srcHowl.volume(a, this.id);
          return (this.gain = a);
        },
        getLength: function () {
          return 0 != this.length
            ? this.length
            : null != this.parent.buffer && null != this.parent.buffer.__srcHowl
            ? (1e3 * this.parent.buffer.__srcHowl.duration()) | 0
            : 0;
        },
        setLength: function (a) {
          return (this.length = a);
        },
        setLoops: function (a) {
          return (this.loops = a);
        },
        getPosition: function () {
          return this.position;
        },
        setPosition: function (a) {
          this.position.x = a.x;
          this.position.y = a.y;
          this.position.z = a.z;
          this.position.w = a.w;
          null != this.parent.buffer.__srcHowl &&
            null != this.parent.buffer.__srcHowl.pos &&
            this.parent.buffer.__srcHowl.pos(
              this.position.x,
              this.position.y,
              this.position.z,
              this.id
            );
          return this.position;
        },
        __class__: Vl,
      };
      var Aa = function () {
        this.validStatus0 = new Ua("Tizen", "gi").match(
          window.navigator.userAgent
        );
      };
      g["lime._internal.backend.html5.HTML5HTTPRequest"] = Aa;
      Aa.__name__ = "lime._internal.backend.html5.HTML5HTTPRequest";
      Aa.loadImage = function (a) {
        var b = new Wc();
        Aa.activeRequests < Aa.requestLimit
          ? (Aa.activeRequests++, Aa.__loadImage(a, b, 0))
          : Aa.requestQueue.add({
              instance: null,
              uri: a,
              promise: b,
              type: "IMAGE",
              options: 0,
            });
        return b.future;
      };
      Aa.loadImageFromBytes = function (a, b) {
        var c = URL.createObjectURL(new Blob([a.b.bufferValue], { type: b }));
        return null != c
          ? ((a = new Wc()),
            Aa.activeRequests < Aa.requestLimit
              ? (Aa.activeRequests++, Aa.__loadImage(c, a, 1))
              : Aa.requestQueue.add({
                  instance: null,
                  uri: c,
                  promise: a,
                  type: "IMAGE",
                  options: 1,
                }),
            a.future)
          : Aa.loadImage("data:" + b + ";base64," + jf.encode(a));
      };
      Aa.processQueue = function () {
        if (Aa.activeRequests < Aa.requestLimit && 0 < Aa.requestQueue.length) {
          Aa.activeRequests++;
          var a = Aa.requestQueue.pop();
          switch (a.type) {
            case "BINARY":
              a.instance.__loadData(a.uri, a.promise);
              break;
            case "IMAGE":
              Aa.__loadImage(a.uri, a.promise, a.options);
              break;
            case "TEXT":
              a.instance.__loadText(a.uri, a.promise);
              break;
            default:
              Aa.activeRequests--;
          }
        }
      };
      Aa.__fixHostname = function (a) {
        return null == a ? "" : a;
      };
      Aa.__fixPort = function (a, b) {
        if (null == a || "" == a)
          switch (b) {
            case "ftp:":
              return "21";
            case "gopher:":
              return "70";
            case "http:":
              return "80";
            case "https:":
              return "443";
            case "ws:":
              return "80";
            case "wss:":
              return "443";
            default:
              return "";
          }
        return a;
      };
      Aa.__fixProtocol = function (a) {
        return null == a || "" == a ? "http:" : a;
      };
      Aa.__isInMemoryURI = function (a) {
        return K.startsWith(a, "data:") ? !0 : K.startsWith(a, "blob:");
      };
      Aa.__isSameOrigin = function (a) {
        if (null == a || "" == a || Aa.__isInMemoryURI(a)) return !0;
        null == Aa.originElement &&
          ((Aa.originElement = window.document.createElement("a")),
          (Aa.originHostname = Aa.__fixHostname(E.location.hostname)),
          (Aa.originProtocol = Aa.__fixProtocol(E.location.protocol)),
          (Aa.originPort = Aa.__fixPort(E.location.port, Aa.originProtocol)));
        var b = Aa.originElement;
        b.href = a;
        "" == b.hostname && (b.href = b.href);
        var c = Aa.__fixHostname(b.hostname);
        a = Aa.__fixProtocol(b.protocol);
        b = Aa.__fixPort(b.port, a);
        c = "" == c || c == Aa.originHostname;
        b = "" == b || b == Aa.originPort;
        return "file:" != a && c ? b : !1;
      };
      Aa.__loadImage = function (a, b, c) {
        var d = new Image();
        Aa.__isSameOrigin(a) || (d.crossOrigin = "Anonymous");
        null == Aa.supportsImageProgress &&
          (Aa.supportsImageProgress = "onprogress" in d);
        if (Aa.supportsImageProgress || Aa.__isInMemoryURI(a))
          d.addEventListener(
            "load",
            function (e) {
              Aa.__revokeBlobURI(a, c);
              e = new xf(null, d.width, d.height);
              e.__srcImage = d;
              Aa.activeRequests--;
              Aa.processQueue();
              b.complete(new Da(e));
            },
            !1
          ),
            d.addEventListener(
              "progress",
              function (a) {
                b.progress(a.loaded, a.total);
              },
              !1
            ),
            d.addEventListener(
              "error",
              function (d) {
                Aa.__revokeBlobURI(a, c);
                Aa.activeRequests--;
                Aa.processQueue();
                b.error(d.detail);
              },
              !1
            ),
            (d.src = a);
        else {
          var e = new XMLHttpRequest();
          e.onload = function (a) {
            Aa.activeRequests--;
            Aa.processQueue();
            new Da().__fromBytes(gb.ofData(e.response), function (a) {
              b.complete(a);
            });
          };
          e.onerror = function (a) {
            b.error(a.message);
          };
          e.onprogress = function (a) {
            a.lengthComputable && b.progress(a.loaded, a.total);
          };
          e.open("GET", a, !0);
          e.responseType = "arraybuffer";
          e.overrideMimeType("text/plain; charset=x-user-defined");
          e.send(null);
        }
      };
      Aa.__revokeBlobURI = function (a, b) {
        0 != (b & 1) && URL.revokeObjectURL(a);
      };
      Aa.prototype = {
        init: function (a) {
          this.parent = a;
        },
        load: function (a, b, c) {
          this.request = new XMLHttpRequest();
          "POST" == this.parent.method
            ? this.request.upload.addEventListener("progress", b, !1)
            : this.request.addEventListener("progress", b, !1);
          this.request.onreadystatechange = c;
          b = "";
          if (null == this.parent.data) {
            for (c = ea.keysIterator(this.parent.formData.h); c.hasNext(); ) {
              var d = c.next();
              0 < b.length && (b += "&");
              var e = this.parent.formData.h[d];
              if (-1 < d.indexOf("[]") && e instanceof Array) {
                var f = [];
                for (e = F(e); e.hasNext(); ) {
                  var h = e.next();
                  f.push(encodeURIComponent(h));
                }
                f = f.join("&amp;" + d + "=");
                b += encodeURIComponent(d) + "=" + f;
              } else
                (f = encodeURIComponent(d) + "="),
                  (d = I.string(e)),
                  (b += f + encodeURIComponent(d));
            }
            "GET" == this.parent.method &&
              "" != b &&
              ((a = -1 < a.indexOf("?") ? a + ("&" + b) : a + ("?" + b)),
              (b = ""));
          }
          this.request.open(I.string(this.parent.method), a, !0);
          0 < this.parent.timeout &&
            (this.request.timeout = this.parent.timeout);
          this.binary && (this.request.responseType = "arraybuffer");
          a = null;
          f = 0;
          for (c = this.parent.headers; f < c.length; )
            (d = c[f]),
              ++f,
              "Content-Type" == d.name
                ? (a = d.value)
                : this.request.setRequestHeader(d.name, d.value);
          null != this.parent.contentType && (a = this.parent.contentType);
          null == a &&
            (null != this.parent.data
              ? (a = "application/octet-stream")
              : "" != b && (a = "application/x-www-form-urlencoded"));
          null != a && this.request.setRequestHeader("Content-Type", a);
          this.parent.withCredentials && (this.request.withCredentials = !0);
          null != this.parent.data
            ? this.request.send(this.parent.data.b.bufferValue)
            : this.request.send(b);
        },
        loadData: function (a) {
          var b = new Wc();
          Aa.activeRequests < Aa.requestLimit
            ? (Aa.activeRequests++, this.__loadData(a, b))
            : Aa.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: "BINARY",
                options: 0,
              });
          return b.future;
        },
        loadText: function (a) {
          var b = new Wc();
          Aa.activeRequests < Aa.requestLimit
            ? (Aa.activeRequests++, this.__loadText(a, b))
            : Aa.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: "TEXT",
                options: 0,
              });
          return b.future;
        },
        processResponse: function () {
          if (this.parent.enableResponseHeaders) {
            this.parent.responseHeaders = [];
            for (
              var a,
                b,
                c = 0,
                d = this.request.getAllResponseHeaders().split("\n");
              c < d.length;

            )
              (b = d[c]),
                ++c,
                (a = K.trim(ba.substr(b, 0, b.indexOf(":")))),
                (b = K.trim(ba.substr(b, b.indexOf(":") + 1, null))),
                "" != a && this.parent.responseHeaders.push(new ek(a, b));
          }
          this.parent.responseStatus = this.request.status;
        },
        __loadData: function (a, b) {
          var c = this;
          this.binary = !0;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                (null != c.request.status &&
                ((200 <= c.request.status && 400 > c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? ((a = null),
                    "" == c.request.responseType
                      ? null != c.request.responseText &&
                        (a = gb.ofString(c.request.responseText))
                      : null != c.request.response &&
                        (a = gb.ofData(c.request.response)),
                    c.processResponse(),
                    b.complete(a))
                  : (c.processResponse(), b.error(c.request.status)),
                (c.request = null),
                Aa.activeRequests--,
                Aa.processQueue());
            }
          );
        },
        __loadText: function (a, b) {
          var c = this;
          this.binary = !1;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                (null != c.request.status &&
                ((200 <= c.request.status && 400 >= c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? (c.processResponse(), b.complete(c.request.responseText))
                  : (c.processResponse(), b.error(c.request.status)),
                (c.request = null),
                Aa.activeRequests--,
                Aa.processQueue());
            }
          );
        },
        __class__: Aa,
      };
      var Ka = function (a) {
        this.inputing = !1;
        this.unusedTouchesPool = new A();
        this.scale = 1;
        this.currentTouches = new lc();
        this.parent = a;
        this.cursor = Ub.DEFAULT;
        this.cacheMouseY = this.cacheMouseX = 0;
        var b = a.__attributes;
        Object.prototype.hasOwnProperty.call(b, "context") || (b.context = {});
        this.renderType = b.context.type;
        Object.prototype.hasOwnProperty.call(b, "element") &&
          (a.element = b.element);
        var c = a.element;
        Object.prototype.hasOwnProperty.call(b, "allowHighDPI") &&
          b.allowHighDPI &&
          "dom" != this.renderType &&
          (this.scale = window.devicePixelRatio);
        a.__scale = this.scale;
        this.setWidth = Object.prototype.hasOwnProperty.call(b, "width")
          ? b.width
          : 0;
        this.setHeight = Object.prototype.hasOwnProperty.call(b, "height")
          ? b.height
          : 0;
        a.__width = this.setWidth;
        a.__height = this.setHeight;
        a.id = Ka.windowID++;
        c instanceof HTMLCanvasElement
          ? (this.canvas = c)
          : "dom" == this.renderType
          ? (this.div = window.document.createElement("div"))
          : (this.canvas = window.document.createElement("canvas"));
        if (null != this.canvas) {
          var d = this.canvas.style;
          d.setProperty("-webkit-transform", "translateZ(0)", null);
          d.setProperty("transform", "translateZ(0)", null);
        } else
          null != this.div &&
            ((d = this.div.style),
            d.setProperty("-webkit-transform", "translate3D(0,0,0)", null),
            d.setProperty("transform", "translate3D(0,0,0)", null),
            (d.position = "relative"),
            (d.overflow = "hidden"),
            d.setProperty("-webkit-user-select", "none", null),
            d.setProperty("-moz-user-select", "none", null),
            d.setProperty("-ms-user-select", "none", null),
            d.setProperty("-o-user-select", "none", null));
        0 == a.__width &&
          0 == a.__height &&
          (null != c
            ? ((a.__width = c.clientWidth), (a.__height = c.clientHeight))
            : ((a.__width = window.innerWidth),
              (a.__height = window.innerHeight)),
          (this.cacheElementWidth = a.__width),
          (this.cacheElementHeight = a.__height),
          (this.resizeElement = !0));
        null != this.canvas
          ? ((this.canvas.width = Math.round(a.__width * this.scale)),
            (this.canvas.height = Math.round(a.__height * this.scale)),
            (this.canvas.style.width = a.__width + "px"),
            (this.canvas.style.height = a.__height + "px"))
          : ((this.div.style.width = a.__width + "px"),
            (this.div.style.height = a.__height + "px"));
        if (
          (Object.prototype.hasOwnProperty.call(b, "resizable") &&
            b.resizable) ||
          (!Object.prototype.hasOwnProperty.call(b, "width") &&
            0 == this.setWidth &&
            0 == this.setHeight)
        )
          a.__resizable = !0;
        this.updateSize();
        if (null != c) {
          null != this.canvas
            ? c != this.canvas && c.appendChild(this.canvas)
            : c.appendChild(this.div);
          b = "mousedown mouseenter mouseleave mousemove mouseup wheel".split(
            " "
          );
          for (d = 0; d < b.length; ) {
            var e = b[d];
            ++d;
            c.addEventListener(e, q(this, this.handleMouseEvent), !0);
          }
          c.addEventListener(
            "contextmenu",
            q(this, this.handleContextMenuEvent),
            !0
          );
          c.addEventListener("dragstart", q(this, this.handleDragEvent), !0);
          c.addEventListener("dragover", q(this, this.handleDragEvent), !0);
          c.addEventListener("drop", q(this, this.handleDragEvent), !0);
          c.addEventListener("touchstart", q(this, this.handleTouchEvent), !0);
          c.addEventListener("touchmove", q(this, this.handleTouchEvent), !0);
          c.addEventListener("touchend", q(this, this.handleTouchEvent), !0);
          c.addEventListener("touchcancel", q(this, this.handleTouchEvent), !0);
          c.addEventListener(
            "gamepadconnected",
            q(this, this.handleGamepadEvent),
            !0
          );
          c.addEventListener(
            "gamepaddisconnected",
            q(this, this.handleGamepadEvent),
            !0
          );
        }
        this.createContext();
        "webgl" == a.context.type &&
          (this.canvas.addEventListener(
            "webglcontextlost",
            q(this, this.handleContextEvent),
            !1
          ),
          this.canvas.addEventListener(
            "webglcontextrestored",
            q(this, this.handleContextEvent),
            !1
          ));
      };
      g["lime._internal.backend.html5.HTML5Window"] = Ka;
      Ka.__name__ = "lime._internal.backend.html5.HTML5Window";
      Ka.prototype = {
        close: function () {
          this.parent.application.__removeWindow(this.parent);
        },
        createContext: function () {
          var a = new Wl(),
            b = this.parent.__attributes.context;
          a.window = this.parent;
          a.attributes = b;
          if (null != this.div)
            (a.dom = this.div), (a.type = "dom"), (a.version = "");
          else if (null != this.canvas) {
            var c = null,
              d = "canvas" == this.renderType,
              e =
                "opengl" == this.renderType ||
                "opengles" == this.renderType ||
                "webgl" == this.renderType,
              f =
                !Object.prototype.hasOwnProperty.call(b, "version") ||
                "1" != b.version,
              h = !1;
            if (
              e ||
              (!d &&
                (!Object.prototype.hasOwnProperty.call(b, "hardware") ||
                  b.hardware))
            ) {
              d =
                Object.prototype.hasOwnProperty.call(b, "background") &&
                null == b.background;
              e = Object.prototype.hasOwnProperty.call(b, "colorDepth")
                ? b.colorDepth
                : 16;
              var m =
                  Object.prototype.hasOwnProperty.call(b, "antialiasing") &&
                  0 < b.antialiasing,
                n = Object.prototype.hasOwnProperty.call(b, "depth")
                  ? b.depth
                  : !0;
              b =
                Object.prototype.hasOwnProperty.call(b, "stencil") && b.stencil;
              b = {
                alpha: d || 16 < e,
                antialias: m,
                depth: n,
                premultipliedAlpha: !0,
                stencil: b,
                preserveDrawingBuffer: !1,
                failIfMajorPerformanceCaveat: !1,
              };
              d = ["webgl", "experimental-webgl"];
              f && d.unshift("webgl2");
              for (
                f = 0;
                f < d.length &&
                ((e = d[f]),
                ++f,
                (c = this.canvas.getContext(e, b)),
                null != c && "webgl2" == e && (h = !0),
                null == c);

              );
            }
            null == c
              ? ((a.canvas2D = this.canvas.getContext("2d")),
                (a.type = "canvas"),
                (a.version = ""))
              : ((a.webgl = yc.fromWebGL2RenderContext(c)),
                h && (a.webgl2 = c),
                null == ci.context &&
                  ((ci.context = c),
                  (ci.type = "webgl"),
                  (ci.version = h ? 2 : 1)),
                (a.type = "webgl"),
                (a.version = h ? "2" : "1"));
          }
          this.parent.context = a;
        },
        handleContextEvent: function (a) {
          switch (a.type) {
            case "webglcontextlost":
              a.cancelable && a.preventDefault();
              this.parent.context = null;
              this.parent.onRenderContextLost.dispatch();
              break;
            case "webglcontextrestored":
              this.createContext(),
                this.parent.onRenderContextRestored.dispatch(
                  this.parent.context
                );
          }
        },
        handleContextMenuEvent: function (a) {
          (this.parent.onMouseUp.canceled ||
            this.parent.onMouseDown.canceled) &&
            a.cancelable &&
            a.preventDefault();
        },
        handleCutOrCopyEvent: function (a) {
          a.clipboardData.setData("text/plain", Dc.get_text());
          a.cancelable && a.preventDefault();
        },
        handleDragEvent: function (a) {
          switch (a.type) {
            case "dragover":
              return a.preventDefault(), !1;
            case "dragstart":
              if (
                "img" ==
                  pa.__cast(a.target, HTMLElement).nodeName.toLowerCase() &&
                a.cancelable
              )
                return a.preventDefault(), !1;
              break;
            case "drop":
              if (null != a.dataTransfer && 0 < a.dataTransfer.files.length)
                return (
                  this.parent.onDropFile.dispatch(a.dataTransfer.files),
                  a.preventDefault(),
                  !1
                );
          }
          return !0;
        },
        handleFocusEvent: function (a) {
          var b = this;
          this.textInputEnabled &&
            (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) &&
            Tf.delay(function () {
              b.textInputEnabled && Ka.textInput.focus();
            }, 20);
        },
        handleFullscreenEvent: function (a) {
          if (
            null !=
            (document.fullscreenElement ||
              document.mozFullScreenElement ||
              document.webkitFullscreenElement ||
              document.msFullscreenElement)
          )
            (this.isFullscreen = !0),
              (this.parent.__fullscreen = !0),
              this.requestedFullscreen &&
                ((this.requestedFullscreen = !1),
                this.parent.onFullscreen.dispatch());
          else {
            this.isFullscreen = !1;
            this.parent.__fullscreen = !1;
            this.parent.onRestore.dispatch();
            a = [
              "fullscreenchange",
              "mozfullscreenchange",
              "webkitfullscreenchange",
              "MSFullscreenChange",
            ];
            for (
              var b = [
                  "fullscreenerror",
                  "mozfullscreenerror",
                  "webkitfullscreenerror",
                  "MSFullscreenError",
                ],
                c = 0,
                d = a.length;
              c < d;

            ) {
              var e = c++;
              window.document.removeEventListener(
                a[e],
                q(this, this.handleFullscreenEvent),
                !1
              );
              window.document.removeEventListener(
                b[e],
                q(this, this.handleFullscreenEvent),
                !1
              );
            }
          }
        },
        handleGamepadEvent: function (a) {
          switch (a.type) {
            case "gamepadconnected":
              cc.__connect(a.gamepad.index);
              "standard" == a.gamepad.mapping && mc.__connect(a.gamepad.index);
              break;
            case "gamepaddisconnected":
              cc.__disconnect(a.gamepad.index),
                mc.__disconnect(a.gamepad.index);
          }
        },
        handleInputEvent: function (a) {
          this.inputing ||
            Ka.textInput.value == Ka.dummyCharacter ||
            ((a = K.replace(Ka.textInput.value, Ka.dummyCharacter, "")),
            0 < a.length && this.parent.onTextInput.dispatch(a),
            (Ka.textInput.value = Ka.dummyCharacter));
        },
        handleMouseEvent: function (a) {
          if ("wheel" != a.type) {
            if (null != this.parent.element)
              if (null != this.canvas) {
                var b = this.canvas.getBoundingClientRect();
                var c = (this.parent.__width / b.width) * (a.clientX - b.left);
                b = (this.parent.__height / b.height) * (a.clientY - b.top);
              } else
                null != this.div
                  ? ((b = this.div.getBoundingClientRect()),
                    (c = a.clientX - b.left),
                    (b = a.clientY - b.top))
                  : ((b = this.parent.element.getBoundingClientRect()),
                    (c =
                      (this.parent.__width / b.width) * (a.clientX - b.left)),
                    (b =
                      (this.parent.__height / b.height) * (a.clientY - b.top)));
            else (c = a.clientX), (b = a.clientY);
            switch (a.type) {
              case "mousedown":
                a.currentTarget == this.parent.element &&
                  window.addEventListener(
                    "mouseup",
                    q(this, this.handleMouseEvent)
                  );
                this.parent.onMouseDown.dispatch(c, b, a.button);
                this.parent.onMouseDown.canceled &&
                  a.cancelable &&
                  a.preventDefault();
                break;
              case "mouseenter":
                a.target == this.parent.element &&
                  (this.parent.onEnter.dispatch(),
                  this.parent.onEnter.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case "mouseleave":
                a.target == this.parent.element &&
                  (this.parent.onLeave.dispatch(),
                  this.parent.onLeave.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case "mousemove":
                if (c != this.cacheMouseX || b != this.cacheMouseY)
                  this.parent.onMouseMove.dispatch(c, b),
                    this.parent.onMouseMoveRelative.dispatch(
                      c - this.cacheMouseX,
                      b - this.cacheMouseY
                    ),
                    (this.parent.onMouseMove.canceled ||
                      this.parent.onMouseMoveRelative.canceled) &&
                      a.cancelable &&
                      a.preventDefault();
                break;
              case "mouseup":
                window.removeEventListener(
                  "mouseup",
                  q(this, this.handleMouseEvent)
                ),
                  a.currentTarget == this.parent.element && a.stopPropagation(),
                  this.parent.onMouseUp.dispatch(c, b, a.button),
                  this.parent.onMouseUp.canceled &&
                    a.cancelable &&
                    a.preventDefault();
            }
            this.cacheMouseX = c;
            this.cacheMouseY = b;
          } else {
            switch (a.deltaMode) {
              case 0:
                c = Xl.PIXELS;
                break;
              case 1:
                c = Xl.LINES;
                break;
              case 2:
                c = Xl.PAGES;
                break;
              default:
                c = Xl.UNKNOWN;
            }
            this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
            this.parent.onMouseWheel.canceled &&
              a.cancelable &&
              a.preventDefault();
          }
        },
        handlePasteEvent: function (a) {
          if (-1 < a.clipboardData.types.indexOf("text/plain")) {
            var b = a.clipboardData.getData("text/plain");
            Dc.set_text(b);
            this.textInputEnabled && this.parent.onTextInput.dispatch(b);
            a.cancelable && a.preventDefault();
          }
        },
        handleResizeEvent: function (a) {
          this.primaryTouch = null;
          this.updateSize();
        },
        handleTouchEvent: function (a) {
          a.cancelable && a.preventDefault();
          var b = null;
          null != this.parent.element &&
            (b =
              null != this.canvas
                ? this.canvas.getBoundingClientRect()
                : null != this.div
                ? this.div.getBoundingClientRect()
                : this.parent.element.getBoundingClientRect());
          var c = this.setWidth,
            d = this.setHeight;
          if (0 == c || 0 == d)
            null != b ? ((c = b.width), (d = b.height)) : (d = c = 1);
          for (var e, f, h, m, n, p = 0, g = a.changedTouches; p < g.length; ) {
            var k = g[p];
            ++p;
            null != b
              ? ((f = (c / b.width) * (k.clientX - b.left)),
                (h = (d / b.height) * (k.clientY - b.top)))
              : ((f = k.clientX), (h = k.clientY));
            if ("touchstart" == a.type)
              (e = this.unusedTouchesPool.pop()),
                null == e
                  ? (e = new Fc(
                      f / c,
                      h / d,
                      k.identifier,
                      0,
                      0,
                      k.force,
                      this.parent.id
                    ))
                  : ((e.x = f / c),
                    (e.y = h / d),
                    (e.id = k.identifier),
                    (e.dx = 0),
                    (e.dy = 0),
                    (e.pressure = k.force),
                    (e.device = this.parent.id)),
                (this.currentTouches.h[k.identifier] = e),
                Fc.onStart.dispatch(e),
                null == this.primaryTouch && (this.primaryTouch = e),
                e == this.primaryTouch &&
                  this.parent.onMouseDown.dispatch(f, h, 0);
            else if (((e = this.currentTouches.h[k.identifier]), null != e))
              switch (
                ((m = e.x),
                (n = e.y),
                (e.x = f / c),
                (e.y = h / d),
                (e.dx = e.x - m),
                (e.dy = e.y - n),
                (e.pressure = k.force),
                a.type)
              ) {
                case "touchcancel":
                  Fc.onCancel.dispatch(e);
                  this.currentTouches.remove(k.identifier);
                  this.unusedTouchesPool.add(e);
                  e == this.primaryTouch && (this.primaryTouch = null);
                  break;
                case "touchend":
                  Fc.onEnd.dispatch(e);
                  this.currentTouches.remove(k.identifier);
                  this.unusedTouchesPool.add(e);
                  e == this.primaryTouch &&
                    (this.parent.onMouseUp.dispatch(f, h, 0),
                    (this.primaryTouch = null));
                  break;
                case "touchmove":
                  Fc.onMove.dispatch(e),
                    e == this.primaryTouch &&
                      this.parent.onMouseMove.dispatch(f, h);
              }
          }
        },
        isDescendent: function (a) {
          if (a == this.parent.element) return !0;
          for (; null != a; ) {
            if (a.parentNode == this.parent.element) return !0;
            a = a.parentNode;
          }
          return !1;
        },
        setClipboard: function (a) {
          null == Ka.textArea &&
            ((Ka.textArea = window.document.createElement("textarea")),
            (Ka.textArea.style.height = "0px"),
            (Ka.textArea.style.left = "-100px"),
            (Ka.textArea.style.opacity = "0"),
            (Ka.textArea.style.position = "fixed"),
            (Ka.textArea.style.top = "-100px"),
            (Ka.textArea.style.width = "0px"),
            window.document.body.appendChild(Ka.textArea));
          Ka.textArea.value = a;
          Ka.textArea.focus();
          Ka.textArea.select();
          window.document.queryCommandEnabled("copy") &&
            window.document.execCommand("copy");
        },
        setCursor: function (a) {
          if (this.cursor != a) {
            if (null == a) this.parent.element.style.cursor = "none";
            else {
              switch (a._hx_index) {
                case 0:
                  var b = "default";
                  break;
                case 1:
                  b = "crosshair";
                  break;
                case 3:
                  b = "move";
                  break;
                case 4:
                  b = "pointer";
                  break;
                case 5:
                  b = "nesw-resize";
                  break;
                case 6:
                  b = "ns-resize";
                  break;
                case 7:
                  b = "nwse-resize";
                  break;
                case 8:
                  b = "ew-resize";
                  break;
                case 9:
                  b = "text";
                  break;
                case 10:
                  b = "wait";
                  break;
                case 11:
                  b = "wait";
                  break;
                default:
                  b = "auto";
              }
              this.parent.element.style.cursor = b;
            }
            this.cursor = a;
          }
          return this.cursor;
        },
        setFrameRate: function (a) {
          null != this.parent.application &&
            (60 <= a
              ? this.parent == this.parent.application.__window &&
                (this.parent.application.__backend.framePeriod = -1)
              : 0 < a
              ? this.parent == this.parent.application.__window &&
                (this.parent.application.__backend.framePeriod = 1e3 / a)
              : this.parent == this.parent.application.__window &&
                (this.parent.application.__backend.framePeriod = 1e3));
          return a;
        },
        setFullscreen: function (a) {
          a
            ? this.requestedFullscreen ||
              this.isFullscreen ||
              ((this.requestedFullscreen = !0),
              ((y = this.parent.element), q(y, y.requestFullscreen))
                ? (document.addEventListener(
                    "fullscreenchange",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  document.addEventListener(
                    "fullscreenerror",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  this.parent.element.requestFullscreen())
                : this.parent.element.mozRequestFullScreen
                ? (document.addEventListener(
                    "mozfullscreenchange",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  document.addEventListener(
                    "mozfullscreenerror",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  this.parent.element.mozRequestFullScreen())
                : this.parent.element.webkitRequestFullscreen
                ? (document.addEventListener(
                    "webkitfullscreenchange",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  document.addEventListener(
                    "webkitfullscreenerror",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  this.parent.element.webkitRequestFullscreen())
                : this.parent.element.msRequestFullscreen &&
                  (document.addEventListener(
                    "MSFullscreenChange",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  document.addEventListener(
                    "MSFullscreenError",
                    q(this, this.handleFullscreenEvent),
                    !1
                  ),
                  this.parent.element.msRequestFullscreen()))
            : this.isFullscreen &&
              ((this.requestedFullscreen = !1),
              document.exitFullscreen
                ? document.exitFullscreen()
                : document.mozCancelFullScreen
                ? document.mozCancelFullScreen()
                : document.webkitExitFullscreen
                ? document.webkitExitFullscreen()
                : document.msExitFullscreen && document.msExitFullscreen());
          return a;
        },
        setTextInputEnabled: function (a) {
          a
            ? (null == Ka.textInput &&
                ((Ka.textInput = window.document.createElement("input")),
                (Ka.textInput.type = "text"),
                (Ka.textInput.style.position = "absolute"),
                (Ka.textInput.style.opacity = "0"),
                (Ka.textInput.style.color = "transparent"),
                (Ka.textInput.value = Ka.dummyCharacter),
                (Ka.textInput.autocapitalize = "off"),
                (Ka.textInput.autocorrect = "off"),
                (Ka.textInput.autocomplete = "off"),
                (Ka.textInput.style.left = "0px"),
                (Ka.textInput.style.top = "50%"),
                new Ua("(iPad|iPhone|iPod).*OS 8_", "gi").match(
                  window.navigator.userAgent
                )
                  ? ((Ka.textInput.style.fontSize = "0px"),
                    (Ka.textInput.style.width = "0px"),
                    (Ka.textInput.style.height = "0px"))
                  : ((Ka.textInput.style.width = "1px"),
                    (Ka.textInput.style.height = "1px")),
                (Ka.textInput.style.pointerEvents = "none"),
                (Ka.textInput.style.zIndex = "-10000000")),
              null == Ka.textInput.parentNode &&
                this.parent.element.appendChild(Ka.textInput),
              this.textInputEnabled ||
                (Ka.textInput.addEventListener(
                  "input",
                  q(this, this.handleInputEvent),
                  !0
                ),
                Ka.textInput.addEventListener(
                  "blur",
                  q(this, this.handleFocusEvent),
                  !0
                ),
                Ka.textInput.addEventListener(
                  "cut",
                  q(this, this.handleCutOrCopyEvent),
                  !0
                ),
                Ka.textInput.addEventListener(
                  "copy",
                  q(this, this.handleCutOrCopyEvent),
                  !0
                ),
                Ka.textInput.addEventListener(
                  "paste",
                  q(this, this.handlePasteEvent),
                  !0
                ),
                Ka.textInput.addEventListener(
                  "compositionstart",
                  q(this, this.handleCompositionstartEvent),
                  !0
                ),
                Ka.textInput.addEventListener(
                  "compositionend",
                  q(this, this.handleCompositionendEvent),
                  !0
                )),
              Ka.textInput.focus(),
              Ka.textInput.select())
            : null != Ka.textInput &&
              (Ka.textInput.removeEventListener(
                "input",
                q(this, this.handleInputEvent),
                !0
              ),
              Ka.textInput.removeEventListener(
                "blur",
                q(this, this.handleFocusEvent),
                !0
              ),
              Ka.textInput.removeEventListener(
                "cut",
                q(this, this.handleCutOrCopyEvent),
                !0
              ),
              Ka.textInput.removeEventListener(
                "copy",
                q(this, this.handleCutOrCopyEvent),
                !0
              ),
              Ka.textInput.removeEventListener(
                "paste",
                q(this, this.handlePasteEvent),
                !0
              ),
              Ka.textInput.removeEventListener(
                "compositionstart",
                q(this, this.handleCompositionstartEvent),
                !0
              ),
              Ka.textInput.removeEventListener(
                "compositionend",
                q(this, this.handleCompositionendEvent),
                !0
              ),
              Ka.textInput.blur());
          return (this.textInputEnabled = a);
        },
        handleCompositionstartEvent: function (a) {
          this.inputing = !0;
        },
        handleCompositionendEvent: function (a) {
          this.inputing = !1;
          this.handleInputEvent(a);
        },
        updateSize: function () {
          if (this.parent.__resizable) {
            if (null != this.parent.element) {
              var a = this.parent.element.clientWidth;
              var b = this.parent.element.clientHeight;
            } else (a = window.innerWidth), (b = window.innerHeight);
            if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
              this.cacheElementWidth = a;
              this.cacheElementHeight = b;
              var c =
                this.resizeElement ||
                (0 == this.setWidth && 0 == this.setHeight);
              if (
                null != this.parent.element &&
                (null == this.div || (null != this.div && c))
              )
                if (c) {
                  if (this.parent.__width != a || this.parent.__height != b)
                    (this.parent.__width = a),
                      (this.parent.__height = b),
                      null != this.canvas
                        ? this.parent.element != this.canvas &&
                          ((this.canvas.width = Math.round(a * this.scale)),
                          (this.canvas.height = Math.round(b * this.scale)),
                          (this.canvas.style.width = a + "px"),
                          (this.canvas.style.height = b + "px"))
                        : ((this.div.style.width = a + "px"),
                          (this.div.style.height = b + "px")),
                      this.parent.onResize.dispatch(a, b);
                } else {
                  c = 0 != this.setWidth ? a / this.setWidth : 1;
                  var d = 0 != this.setHeight ? b / this.setHeight : 1,
                    e = a,
                    f = b,
                    h = 0,
                    m = 0;
                  c < d
                    ? ((f = Math.floor(this.setHeight * c)),
                      (m = Math.floor((b - f) / 2)))
                    : ((e = Math.floor(this.setWidth * d)),
                      (h = Math.floor((a - e) / 2)));
                  null != this.canvas
                    ? this.parent.element != this.canvas &&
                      ((this.canvas.style.width = e + "px"),
                      (this.canvas.style.height = f + "px"),
                      (this.canvas.style.marginLeft = h + "px"),
                      (this.canvas.style.marginTop = m + "px"))
                    : ((this.div.style.width = e + "px"),
                      (this.div.style.height = f + "px"),
                      (this.div.style.marginLeft = h + "px"),
                      (this.div.style.marginTop = m + "px"));
                }
            }
          }
        },
        __class__: Ka,
      };
      var jf = function () {};
      g["lime._internal.format.Base64"] = jf;
      jf.__name__ = "lime._internal.format.Base64";
      jf.encode = function (a) {
        var b = [],
          c = jf.DICTIONARY,
          d = jf.EXTENDED_DICTIONARY,
          e = a.length,
          f = Math.floor(e / 3),
          h = 2 * f;
        b.length = 2 * Math.ceil(e / 3);
        for (var m = 0, n = 0, p; n < h; )
          (p = (a.b[m] << 16) | (a.b[m + 1] << 8) | a.b[m + 2]),
            (b[n] = d[(p >> 12) & 4095]),
            (b[n + 1] = d[p & 4095]),
            (m += 3),
            (n += 2);
        switch (e - 3 * f) {
          case 1:
            p = a.b[m] << 16;
            b[n] = d[(p >> 12) & 4095];
            b[n + 1] = "==";
            break;
          case 2:
            (p = (a.b[m] << 16) | (a.b[m + 1] << 8)),
              (b[n] = d[(p >> 12) & 4095]),
              (b[n + 1] = c[(p >> 6) & 63] + "=");
        }
        return b.join("");
      };
      var Qm = function () {};
      g["lime._internal.format.Deflate"] = Qm;
      Qm.__name__ = "lime._internal.format.Deflate";
      Qm.decompress = function (a) {
        a = pako.inflateRaw(a.b.bufferValue);
        return gb.ofData(a);
      };
      var Rm = function () {};
      g["lime._internal.format.GZip"] = Rm;
      Rm.__name__ = "lime._internal.format.GZip";
      Rm.decompress = function (a) {
        a = pako.ungzip(a.b.bufferValue);
        return gb.ofData(a);
      };
      var Sm = function () {};
      g["lime._internal.format.LZMA"] = Sm;
      Sm.__name__ = "lime._internal.format.LZMA";
      Sm.decompress = function (a) {
        return null;
      };
      var Tm = function () {};
      g["lime._internal.format.Zlib"] = Tm;
      Tm.__name__ = "lime._internal.format.Zlib";
      Tm.decompress = function (a) {
        a = pako.inflate(a.b.bufferValue);
        return gb.ofData(a);
      };
      var Oa = function () {};
      g["lime._internal.graphics.ImageCanvasUtil"] = Oa;
      Oa.__name__ = "lime._internal.graphics.ImageCanvasUtil";
      Oa.colorTransform = function (a, b, c) {
        Oa.convertToData(a);
        Ic.colorTransform(a, b, c);
      };
      Oa.convertToCanvas = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage
          ? (null == c.__srcCanvas &&
              (Oa.createCanvas(a, c.__srcImage.width, c.__srcImage.height),
              c.__srcContext.drawImage(c.__srcImage, 0, 0)),
            (c.__srcImage = null))
          : null == c.__srcCanvas && null != c.data
          ? (a.set_transparent(!0),
            Oa.createCanvas(a, c.width, c.height),
            Oa.createImageData(a),
            c.__srcContext.putImageData(c.__srcImageData, 0, 0))
          : a.type == Yd.DATA &&
            null != c.__srcImageData &&
            a.dirty &&
            (c.__srcContext.putImageData(c.__srcImageData, 0, 0),
            (a.dirty = !1));
        b
          ? ((c.data = null), (c.__srcImageData = null))
          : null == c.data &&
            null != c.__srcImageData &&
            (c.data = c.__srcImageData.data);
        a.type = Yd.CANVAS;
      };
      Oa.convertToData = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage && Oa.convertToCanvas(a);
        if (null != c.__srcCanvas && null == c.data)
          Oa.createImageData(a), a.type == Yd.CANVAS && (a.dirty = !1);
        else if (a.type == Yd.CANVAS && null != c.__srcCanvas && a.dirty) {
          if (null == c.__srcImageData) Oa.createImageData(a);
          else {
            c.__srcImageData = c.__srcContext.getImageData(
              0,
              0,
              c.width,
              c.height
            );
            var d = c.__srcImageData.data.buffer;
            d = null != d ? new Uint8Array(d) : null;
            c.data = d;
          }
          a.dirty = !1;
        }
        b && ((a.buffer.__srcCanvas = null), (a.buffer.__srcContext = null));
        a.type = Yd.DATA;
      };
      Oa.copyChannel = function (a, b, c, d, e, f) {
        Oa.convertToData(b);
        Oa.convertToData(a);
        Ic.copyChannel(a, b, c, d, e, f);
      };
      Oa.copyPixels = function (a, b, c, d, e, f, h) {
        null == h && (h = !1);
        null == d ||
          d.x >= a.width ||
          d.y >= a.height ||
          null == c ||
          1 > c.width ||
          1 > c.height ||
          (null != e &&
            e.get_transparent() &&
            (null == f && (f = new Lg()),
            (b = b.clone()),
            b.copyChannel(
              e,
              new ae(c.x + f.x, c.y + f.y, c.width, c.height),
              new Lg(c.x, c.y),
              uf.ALPHA,
              uf.ALPHA
            )),
          Oa.convertToCanvas(a, !0),
          h ||
            (a.get_transparent() &&
              b.get_transparent() &&
              a.buffer.__srcContext.clearRect(
                d.x + a.offsetX,
                d.y + a.offsetY,
                c.width + a.offsetX,
                c.height + a.offsetY
              )),
          Oa.convertToCanvas(b),
          null != b.buffer.get_src() &&
            ((a.buffer.__srcContext.globalCompositeOperation = "source-over"),
            a.buffer.__srcContext.drawImage(
              b.buffer.get_src(),
              (c.x + b.offsetX) | 0,
              (c.y + b.offsetY) | 0,
              c.width | 0,
              c.height | 0,
              (d.x + a.offsetX) | 0,
              (d.y + a.offsetY) | 0,
              c.width | 0,
              c.height | 0
            )),
          (a.dirty = !0),
          a.version++);
      };
      Oa.createCanvas = function (a, b, c) {
        var d = a.buffer;
        null == d.__srcCanvas &&
          ((d.__srcCanvas = window.document.createElement("canvas")),
          (d.__srcCanvas.width = b),
          (d.__srcCanvas.height = c),
          a.get_transparent()
            ? (d.__srcContext = d.__srcCanvas.getContext("2d"))
            : (a.get_transparent() ||
                d.__srcCanvas.setAttribute("moz-opaque", "true"),
              (d.__srcContext = d.__srcCanvas.getContext("2d", {
                alpha: !1,
              }))));
      };
      Oa.createImageData = function (a) {
        a = a.buffer;
        if (null == a.__srcImageData) {
          null == a.data
            ? (a.__srcImageData = a.__srcContext.getImageData(
                0,
                0,
                a.width,
                a.height
              ))
            : ((a.__srcImageData = a.__srcContext.createImageData(
                a.width,
                a.height
              )),
              a.__srcImageData.data.set(a.data));
          var b = a.__srcImageData.data.buffer;
          b = null != b ? new Uint8Array(b) : null;
          a.data = b;
        }
      };
      Oa.fillRect = function (a, b, c, d) {
        Oa.convertToCanvas(a);
        if (1 == d) {
          d = (c >> 16) & 255;
          var e = (c >> 8) & 255;
          var f = c & 255;
          c = a.get_transparent() ? (c >> 24) & 255 : 255;
        } else
          (d = (c >> 24) & 255),
            (e = (c >> 16) & 255),
            (f = (c >> 8) & 255),
            (c = a.get_transparent() ? c & 255 : 255);
        0 == b.x &&
        0 == b.y &&
        b.width == a.width &&
        b.height == a.height &&
        a.get_transparent() &&
        0 == c
          ? (a.buffer.__srcCanvas.width = a.buffer.width)
          : (255 > c &&
              a.buffer.__srcContext.clearRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY
              ),
            0 < c &&
              ((a.buffer.__srcContext.fillStyle =
                "rgba(" + d + ", " + e + ", " + f + ", " + c / 255 + ")"),
              a.buffer.__srcContext.fillRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY
              )),
            (a.dirty = !0),
            a.version++);
      };
      Oa.setPixel = function (a, b, c, d, e) {
        Oa.convertToData(a);
        Ic.setPixel(a, b, c, d, e);
      };
      Oa.setPixel32 = function (a, b, c, d, e) {
        Oa.convertToData(a);
        Ic.setPixel32(a, b, c, d, e);
      };
      Oa.sync = function (a, b) {
        null != a &&
          (a.type != Yd.CANVAS ||
          (null == a.buffer.__srcCanvas && null == a.buffer.data)
            ? a.type == Yd.DATA && Oa.convertToData(a, b)
            : Oa.convertToCanvas(a, b));
      };
      var Ic = function () {};
      g["lime._internal.graphics.ImageDataUtil"] = Ic;
      Ic.__name__ = "lime._internal.graphics.ImageDataUtil";
      Ic.colorTransform = function (a, b, c) {
        var d = a.buffer.data;
        if (null != d) {
          var e = a.buffer.format,
            f = a.buffer.premultiplied;
          b = new yf(a, b);
          var h = Ec.getAlphaTable(c),
            m = Ec.getRedTable(c),
            n = Ec.getGreenTable(c);
          c = Ec.getBlueTable(c);
          for (var p, g, k = 0, l = 0, u = b.height; l < u; ) {
            p = l++;
            p = b.byteOffset + b.stride * p;
            for (var q = 0, r = b.width; q < r; ) {
              g = q++;
              g = p + 4 * g;
              var z = e,
                v = f;
              null == v && (v = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  k =
                    ((d[g] & 255) << 24) |
                    ((d[g + 1] & 255) << 16) |
                    ((d[g + 2] & 255) << 8) |
                    (d[g + 3] & 255);
                  break;
                case 1:
                  k =
                    ((d[g + 1] & 255) << 24) |
                    ((d[g + 2] & 255) << 16) |
                    ((d[g + 3] & 255) << 8) |
                    (d[g] & 255);
                  break;
                case 2:
                  k =
                    ((d[g + 2] & 255) << 24) |
                    ((d[g + 1] & 255) << 16) |
                    ((d[g] & 255) << 8) |
                    (d[g + 3] & 255);
              }
              v &&
                0 != (k & 255) &&
                255 != (k & 255) &&
                ((R.unmult = 255 / (k & 255)),
                (k =
                  ((R.__clamp[Math.round(((k >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((k >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((k >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (k & 255)));
              k =
                ((m[(k >>> 24) & 255] & 255) << 24) |
                ((n[(k >>> 16) & 255] & 255) << 16) |
                ((c[(k >>> 8) & 255] & 255) << 8) |
                (h[k & 255] & 255);
              z = e;
              v = f;
              null == v && (v = !1);
              null == z && (z = 0);
              v &&
                (0 == (k & 255)
                  ? 0 != k && (k = 0)
                  : 255 != (k & 255) &&
                    ((R.a16 = R.__alpha16[k & 255]),
                    (k =
                      ((((((k >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((k >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((k >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (k & 255))));
              switch (z) {
                case 0:
                  d[g] = (k >>> 24) & 255;
                  d[g + 1] = (k >>> 16) & 255;
                  d[g + 2] = (k >>> 8) & 255;
                  d[g + 3] = k & 255;
                  break;
                case 1:
                  d[g] = k & 255;
                  d[g + 1] = (k >>> 24) & 255;
                  d[g + 2] = (k >>> 16) & 255;
                  d[g + 3] = (k >>> 8) & 255;
                  break;
                case 2:
                  (d[g] = (k >>> 8) & 255),
                    (d[g + 1] = (k >>> 16) & 255),
                    (d[g + 2] = (k >>> 24) & 255),
                    (d[g + 3] = k & 255);
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Ic.copyChannel = function (a, b, c, d, e, f) {
        switch (f._hx_index) {
          case 0:
            var h = 0;
            break;
          case 1:
            h = 1;
            break;
          case 2:
            h = 2;
            break;
          case 3:
            h = 3;
        }
        switch (e._hx_index) {
          case 0:
            var m = 0;
            break;
          case 1:
            m = 1;
            break;
          case 2:
            m = 2;
            break;
          case 3:
            m = 3;
        }
        e = b.buffer.data;
        f = a.buffer.data;
        if (null != e && null != f) {
          c = new yf(b, c);
          d = new yf(a, new ae(d.x, d.y, c.width, c.height));
          var n = b.buffer.format,
            p = a.buffer.format;
          b = b.buffer.premultiplied;
          for (
            var g = a.buffer.premultiplied,
              k,
              l,
              u = 0,
              q = 0,
              r = 0,
              z = 0,
              v = d.height;
            z < v;

          ) {
            l = z++;
            k = c.byteOffset + c.stride * l;
            l = d.byteOffset + d.stride * l;
            for (var y = 0, w = d.width; y < w; ) {
              y++;
              var O = n,
                x = b;
              null == x && (x = !1);
              null == O && (O = 0);
              switch (O) {
                case 0:
                  u =
                    ((e[k] & 255) << 24) |
                    ((e[k + 1] & 255) << 16) |
                    ((e[k + 2] & 255) << 8) |
                    (e[k + 3] & 255);
                  break;
                case 1:
                  u =
                    ((e[k + 1] & 255) << 24) |
                    ((e[k + 2] & 255) << 16) |
                    ((e[k + 3] & 255) << 8) |
                    (e[k] & 255);
                  break;
                case 2:
                  u =
                    ((e[k + 2] & 255) << 24) |
                    ((e[k + 1] & 255) << 16) |
                    ((e[k] & 255) << 8) |
                    (e[k + 3] & 255);
              }
              x &&
                0 != (u & 255) &&
                255 != (u & 255) &&
                ((R.unmult = 255 / (u & 255)),
                (u =
                  ((R.__clamp[Math.round(((u >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((u >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((u >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (u & 255)));
              O = p;
              x = g;
              null == x && (x = !1);
              null == O && (O = 0);
              switch (O) {
                case 0:
                  q =
                    ((f[l] & 255) << 24) |
                    ((f[l + 1] & 255) << 16) |
                    ((f[l + 2] & 255) << 8) |
                    (f[l + 3] & 255);
                  break;
                case 1:
                  q =
                    ((f[l + 1] & 255) << 24) |
                    ((f[l + 2] & 255) << 16) |
                    ((f[l + 3] & 255) << 8) |
                    (f[l] & 255);
                  break;
                case 2:
                  q =
                    ((f[l + 2] & 255) << 24) |
                    ((f[l + 1] & 255) << 16) |
                    ((f[l] & 255) << 8) |
                    (f[l + 3] & 255);
              }
              x &&
                0 != (q & 255) &&
                255 != (q & 255) &&
                ((R.unmult = 255 / (q & 255)),
                (q =
                  ((R.__clamp[Math.round(((q >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((q >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((q >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (q & 255)));
              switch (m) {
                case 0:
                  r = (u >>> 24) & 255;
                  break;
                case 1:
                  r = (u >>> 16) & 255;
                  break;
                case 2:
                  r = (u >>> 8) & 255;
                  break;
                case 3:
                  r = u & 255;
              }
              switch (h) {
                case 0:
                  q =
                    ((r & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  break;
                case 1:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    ((r & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  break;
                case 2:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    ((r & 255) << 8) |
                    (q & 255);
                  break;
                case 3:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (r & 255);
              }
              O = p;
              x = g;
              null == x && (x = !1);
              null == O && (O = 0);
              x &&
                (0 == (q & 255)
                  ? 0 != q && (q = 0)
                  : 255 != (q & 255) &&
                    ((R.a16 = R.__alpha16[q & 255]),
                    (q =
                      ((((((q >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((q >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((q >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (q & 255))));
              switch (O) {
                case 0:
                  f[l] = (q >>> 24) & 255;
                  f[l + 1] = (q >>> 16) & 255;
                  f[l + 2] = (q >>> 8) & 255;
                  f[l + 3] = q & 255;
                  break;
                case 1:
                  f[l] = q & 255;
                  f[l + 1] = (q >>> 24) & 255;
                  f[l + 2] = (q >>> 16) & 255;
                  f[l + 3] = (q >>> 8) & 255;
                  break;
                case 2:
                  (f[l] = (q >>> 8) & 255),
                    (f[l + 1] = (q >>> 16) & 255),
                    (f[l + 2] = (q >>> 24) & 255),
                    (f[l + 3] = q & 255);
              }
              k += 4;
              l += 4;
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Ic.copyPixels = function (a, b, c, d, e, f, h) {
        null == h && (h = !1);
        if (
          a.width == b.width &&
          a.height == b.height &&
          c.width == b.width &&
          c.height == b.height &&
          0 == c.x &&
          0 == c.y &&
          0 == d.x &&
          0 == d.y &&
          null == e &&
          null == f &&
          0 == h &&
          a.get_format() == b.get_format()
        )
          a.buffer.data.set(b.buffer.data);
        else {
          var m = b.buffer.data,
            n = a.buffer.data;
          if (null == m || null == n) return;
          c = new yf(b, c);
          var p = new ae(d.x, d.y, c.width, c.height);
          p = new yf(a, p);
          var g = b.buffer.format,
            k = a.buffer.format,
            l = 0,
            u = 0,
            q = b.buffer.premultiplied,
            r = a.buffer.premultiplied,
            z = (b.buffer.bitsPerPixel / 8) | 0,
            v = (a.buffer.bitsPerPixel / 8) | 0,
            y = null != e && e.get_transparent(),
            w =
              h ||
              (y && !a.get_transparent()) ||
              (!h && !a.get_transparent() && b.get_transparent());
          if (y)
            if (
              ((v = e.buffer.data),
              (b = e.buffer.format),
              (h = 0),
              (e = new yf(
                e,
                new ae(
                  c.x + (null == f ? 0 : f.x),
                  c.y + (null == f ? 0 : f.y),
                  c.width,
                  c.height
                )
              )),
              p.clip(d.x | 0, d.y | 0, e.width, e.height),
              w)
            )
              for (w = 0, z = p.height; w < z; )
                for (
                  y = w++,
                    d = c.byteOffset + c.stride * y,
                    f = p.byteOffset + p.stride * y,
                    y = e.byteOffset + e.stride * y,
                    t = 0,
                    D = p.width;
                  t < D;

                ) {
                  t++;
                  var O = g;
                  var x = q;
                  null == x && (x = !1);
                  null == O && (O = 0);
                  switch (O) {
                    case 0:
                      l =
                        ((m[d] & 255) << 24) |
                        ((m[d + 1] & 255) << 16) |
                        ((m[d + 2] & 255) << 8) |
                        (m[d + 3] & 255);
                      break;
                    case 1:
                      l =
                        ((m[d + 1] & 255) << 24) |
                        ((m[d + 2] & 255) << 16) |
                        ((m[d + 3] & 255) << 8) |
                        (m[d] & 255);
                      break;
                    case 2:
                      l =
                        ((m[d + 2] & 255) << 24) |
                        ((m[d + 1] & 255) << 16) |
                        ((m[d] & 255) << 8) |
                        (m[d + 3] & 255);
                  }
                  x &&
                    0 != (l & 255) &&
                    255 != (l & 255) &&
                    ((R.unmult = 255 / (l & 255)),
                    (l =
                      ((R.__clamp[Math.round(((l >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((l >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((l >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (l & 255)));
                  O = k;
                  x = r;
                  null == x && (x = !1);
                  null == O && (O = 0);
                  switch (O) {
                    case 0:
                      u =
                        ((n[f] & 255) << 24) |
                        ((n[f + 1] & 255) << 16) |
                        ((n[f + 2] & 255) << 8) |
                        (n[f + 3] & 255);
                      break;
                    case 1:
                      u =
                        ((n[f + 1] & 255) << 24) |
                        ((n[f + 2] & 255) << 16) |
                        ((n[f + 3] & 255) << 8) |
                        (n[f] & 255);
                      break;
                    case 2:
                      u =
                        ((n[f + 2] & 255) << 24) |
                        ((n[f + 1] & 255) << 16) |
                        ((n[f] & 255) << 8) |
                        (n[f + 3] & 255);
                  }
                  x &&
                    0 != (u & 255) &&
                    255 != (u & 255) &&
                    ((R.unmult = 255 / (u & 255)),
                    (u =
                      ((R.__clamp[Math.round(((u >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((u >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((u >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (u & 255)));
                  O = b;
                  x = !1;
                  null == x && (x = !1);
                  null == O && (O = 0);
                  switch (O) {
                    case 0:
                      h =
                        ((v[y] & 255) << 24) |
                        ((v[y + 1] & 255) << 16) |
                        ((v[y + 2] & 255) << 8) |
                        (v[y + 3] & 255);
                      break;
                    case 1:
                      h =
                        ((v[y + 1] & 255) << 24) |
                        ((v[y + 2] & 255) << 16) |
                        ((v[y + 3] & 255) << 8) |
                        (v[y] & 255);
                      break;
                    case 2:
                      h =
                        ((v[y + 2] & 255) << 24) |
                        ((v[y + 1] & 255) << 16) |
                        ((v[y] & 255) << 8) |
                        (v[y + 3] & 255);
                  }
                  x &&
                    0 != (h & 255) &&
                    255 != (h & 255) &&
                    ((R.unmult = 255 / (h & 255)),
                    (h =
                      ((R.__clamp[Math.round(((h >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((h >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((h >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (h & 255)));
                  x = ((h & 255) / 255) * ((l & 255) / 255);
                  if (0 < x) {
                    var C = (u & 255) / 255;
                    var A = 1 - x;
                    O = x + C * A;
                    G =
                      R.__clamp[
                        Math.round(
                          (((l >>> 24) & 255) * x +
                            ((u >>> 24) & 255) * C * A) /
                            O
                        )
                      ];
                    u =
                      ((G & 255) << 24) |
                      (((u >>> 16) & 255) << 16) |
                      (((u >>> 8) & 255) << 8) |
                      (u & 255);
                    G =
                      R.__clamp[
                        Math.round(
                          (((l >>> 16) & 255) * x +
                            ((u >>> 16) & 255) * C * A) /
                            O
                        )
                      ];
                    u =
                      (((u >>> 24) & 255) << 24) |
                      ((G & 255) << 16) |
                      (((u >>> 8) & 255) << 8) |
                      (u & 255);
                    x =
                      R.__clamp[
                        Math.round(
                          (((l >>> 8) & 255) * x + ((u >>> 8) & 255) * C * A) /
                            O
                        )
                      ];
                    u =
                      (((u >>> 24) & 255) << 24) |
                      (((u >>> 16) & 255) << 16) |
                      ((x & 255) << 8) |
                      (u & 255);
                    O = R.__clamp[Math.round(255 * O)];
                    u =
                      (((u >>> 24) & 255) << 24) |
                      (((u >>> 16) & 255) << 16) |
                      (((u >>> 8) & 255) << 8) |
                      (O & 255);
                    O = k;
                    x = r;
                    null == x && (x = !1);
                    null == O && (O = 0);
                    x &&
                      (0 == (u & 255)
                        ? 0 != u && (u = 0)
                        : 255 != (u & 255) &&
                          ((R.a16 = R.__alpha16[u & 255]),
                          (u =
                            ((((((u >>> 24) & 255) * R.a16) >> 16) & 255) <<
                              24) |
                            ((((((u >>> 16) & 255) * R.a16) >> 16) & 255) <<
                              16) |
                            ((((((u >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                            (u & 255))));
                    switch (O) {
                      case 0:
                        n[f] = (u >>> 24) & 255;
                        n[f + 1] = (u >>> 16) & 255;
                        n[f + 2] = (u >>> 8) & 255;
                        n[f + 3] = u & 255;
                        break;
                      case 1:
                        n[f] = u & 255;
                        n[f + 1] = (u >>> 24) & 255;
                        n[f + 2] = (u >>> 16) & 255;
                        n[f + 3] = (u >>> 8) & 255;
                        break;
                      case 2:
                        (n[f] = (u >>> 8) & 255),
                          (n[f + 1] = (u >>> 16) & 255),
                          (n[f + 2] = (u >>> 24) & 255),
                          (n[f + 3] = u & 255);
                    }
                  }
                  d += 4;
                  f += 4;
                  y += 4;
                }
            else
              for (w = 0, z = p.height; w < z; )
                for (
                  y = w++,
                    d = c.byteOffset + c.stride * y,
                    f = p.byteOffset + p.stride * y,
                    y = e.byteOffset + e.stride * y,
                    t = 0,
                    D = p.width;
                  t < D;

                ) {
                  t++;
                  O = g;
                  x = q;
                  null == x && (x = !1);
                  null == O && (O = 0);
                  switch (O) {
                    case 0:
                      l =
                        ((m[d] & 255) << 24) |
                        ((m[d + 1] & 255) << 16) |
                        ((m[d + 2] & 255) << 8) |
                        (m[d + 3] & 255);
                      break;
                    case 1:
                      l =
                        ((m[d + 1] & 255) << 24) |
                        ((m[d + 2] & 255) << 16) |
                        ((m[d + 3] & 255) << 8) |
                        (m[d] & 255);
                      break;
                    case 2:
                      l =
                        ((m[d + 2] & 255) << 24) |
                        ((m[d + 1] & 255) << 16) |
                        ((m[d] & 255) << 8) |
                        (m[d + 3] & 255);
                  }
                  x &&
                    0 != (l & 255) &&
                    255 != (l & 255) &&
                    ((R.unmult = 255 / (l & 255)),
                    (l =
                      ((R.__clamp[Math.round(((l >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((l >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((l >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (l & 255)));
                  O = b;
                  x = !1;
                  null == x && (x = !1);
                  null == O && (O = 0);
                  switch (O) {
                    case 0:
                      h =
                        ((v[y] & 255) << 24) |
                        ((v[y + 1] & 255) << 16) |
                        ((v[y + 2] & 255) << 8) |
                        (v[y + 3] & 255);
                      break;
                    case 1:
                      h =
                        ((v[y + 1] & 255) << 24) |
                        ((v[y + 2] & 255) << 16) |
                        ((v[y + 3] & 255) << 8) |
                        (v[y] & 255);
                      break;
                    case 2:
                      h =
                        ((v[y + 2] & 255) << 24) |
                        ((v[y + 1] & 255) << 16) |
                        ((v[y] & 255) << 8) |
                        (v[y + 3] & 255);
                  }
                  x &&
                    0 != (h & 255) &&
                    255 != (h & 255) &&
                    ((R.unmult = 255 / (h & 255)),
                    (h =
                      ((R.__clamp[Math.round(((h >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((h >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((h >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (h & 255)));
                  G = Math.round(((h & 255) / 255) * (l & 255));
                  l =
                    (((l >>> 24) & 255) << 24) |
                    (((l >>> 16) & 255) << 16) |
                    (((l >>> 8) & 255) << 8) |
                    (G & 255);
                  O = k;
                  x = r;
                  null == x && (x = !1);
                  null == O && (O = 0);
                  x &&
                    (0 == (l & 255)
                      ? 0 != l && (l = 0)
                      : 255 != (l & 255) &&
                        ((R.a16 = R.__alpha16[l & 255]),
                        (l =
                          ((((((l >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                          ((((((l >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                          ((((((l >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                          (l & 255))));
                  switch (O) {
                    case 0:
                      n[f] = (l >>> 24) & 255;
                      n[f + 1] = (l >>> 16) & 255;
                      n[f + 2] = (l >>> 8) & 255;
                      n[f + 3] = l & 255;
                      break;
                    case 1:
                      n[f] = l & 255;
                      n[f + 1] = (l >>> 24) & 255;
                      n[f + 2] = (l >>> 16) & 255;
                      n[f + 3] = (l >>> 8) & 255;
                      break;
                    case 2:
                      (n[f] = (l >>> 8) & 255),
                        (n[f + 1] = (l >>> 16) & 255),
                        (n[f + 2] = (l >>> 24) & 255),
                        (n[f + 3] = l & 255);
                  }
                  d += 4;
                  f += 4;
                  y += 4;
                }
          else if (w)
            for (w = 0, z = p.height; w < z; ) {
              y = w++;
              d = c.byteOffset + c.stride * y;
              f = p.byteOffset + p.stride * y;
              for (var t = 0, D = p.width; t < D; ) {
                t++;
                O = g;
                x = q;
                null == x && (x = !1);
                null == O && (O = 0);
                switch (O) {
                  case 0:
                    l =
                      ((m[d] & 255) << 24) |
                      ((m[d + 1] & 255) << 16) |
                      ((m[d + 2] & 255) << 8) |
                      (m[d + 3] & 255);
                    break;
                  case 1:
                    l =
                      ((m[d + 1] & 255) << 24) |
                      ((m[d + 2] & 255) << 16) |
                      ((m[d + 3] & 255) << 8) |
                      (m[d] & 255);
                    break;
                  case 2:
                    l =
                      ((m[d + 2] & 255) << 24) |
                      ((m[d + 1] & 255) << 16) |
                      ((m[d] & 255) << 8) |
                      (m[d + 3] & 255);
                }
                x &&
                  0 != (l & 255) &&
                  255 != (l & 255) &&
                  ((R.unmult = 255 / (l & 255)),
                  (l =
                    ((R.__clamp[Math.round(((l >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((l >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((l >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (l & 255)));
                O = k;
                x = r;
                null == x && (x = !1);
                null == O && (O = 0);
                switch (O) {
                  case 0:
                    u =
                      ((n[f] & 255) << 24) |
                      ((n[f + 1] & 255) << 16) |
                      ((n[f + 2] & 255) << 8) |
                      (n[f + 3] & 255);
                    break;
                  case 1:
                    u =
                      ((n[f + 1] & 255) << 24) |
                      ((n[f + 2] & 255) << 16) |
                      ((n[f + 3] & 255) << 8) |
                      (n[f] & 255);
                    break;
                  case 2:
                    u =
                      ((n[f + 2] & 255) << 24) |
                      ((n[f + 1] & 255) << 16) |
                      ((n[f] & 255) << 8) |
                      (n[f + 3] & 255);
                }
                x &&
                  0 != (u & 255) &&
                  255 != (u & 255) &&
                  ((R.unmult = 255 / (u & 255)),
                  (u =
                    ((R.__clamp[Math.round(((u >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((u >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((u >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (u & 255)));
                x = (l & 255) / 255;
                C = (u & 255) / 255;
                A = 1 - x;
                O = x + C * A;
                if (0 == O) u = 0;
                else {
                  var G =
                    R.__clamp[
                      Math.round(
                        (((l >>> 24) & 255) * x + ((u >>> 24) & 255) * C * A) /
                          O
                      )
                    ];
                  u =
                    ((G & 255) << 24) |
                    (((u >>> 16) & 255) << 16) |
                    (((u >>> 8) & 255) << 8) |
                    (u & 255);
                  G =
                    R.__clamp[
                      Math.round(
                        (((l >>> 16) & 255) * x + ((u >>> 16) & 255) * C * A) /
                          O
                      )
                    ];
                  u =
                    (((u >>> 24) & 255) << 24) |
                    ((G & 255) << 16) |
                    (((u >>> 8) & 255) << 8) |
                    (u & 255);
                  x =
                    R.__clamp[
                      Math.round(
                        (((l >>> 8) & 255) * x + ((u >>> 8) & 255) * C * A) / O
                      )
                    ];
                  u =
                    (((u >>> 24) & 255) << 24) |
                    (((u >>> 16) & 255) << 16) |
                    ((x & 255) << 8) |
                    (u & 255);
                  O = R.__clamp[Math.round(255 * O)];
                  u =
                    (((u >>> 24) & 255) << 24) |
                    (((u >>> 16) & 255) << 16) |
                    (((u >>> 8) & 255) << 8) |
                    (O & 255);
                }
                O = k;
                x = r;
                null == x && (x = !1);
                null == O && (O = 0);
                x &&
                  (0 == (u & 255)
                    ? 0 != u && (u = 0)
                    : 255 != (u & 255) &&
                      ((R.a16 = R.__alpha16[u & 255]),
                      (u =
                        ((((((u >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                        ((((((u >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                        ((((((u >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                        (u & 255))));
                switch (O) {
                  case 0:
                    n[f] = (u >>> 24) & 255;
                    n[f + 1] = (u >>> 16) & 255;
                    n[f + 2] = (u >>> 8) & 255;
                    n[f + 3] = u & 255;
                    break;
                  case 1:
                    n[f] = u & 255;
                    n[f + 1] = (u >>> 24) & 255;
                    n[f + 2] = (u >>> 16) & 255;
                    n[f + 3] = (u >>> 8) & 255;
                    break;
                  case 2:
                    (n[f] = (u >>> 8) & 255),
                      (n[f + 1] = (u >>> 16) & 255),
                      (n[f + 2] = (u >>> 24) & 255),
                      (n[f + 3] = u & 255);
                }
                d += 4;
                f += 4;
              }
            }
          else if (g == k && q == r && z == v)
            for (w = 0, z = p.height; w < z; )
              (y = w++),
                (d = c.byteOffset + c.stride * y),
                (f = p.byteOffset + p.stride * y),
                n.set(m.subarray(d, d + p.width * v), f);
          else
            for (w = 0, z = p.height; w < z; )
              for (
                y = w++,
                  d = c.byteOffset + c.stride * y,
                  f = p.byteOffset + p.stride * y,
                  t = 0,
                  D = p.width;
                t < D;

              ) {
                t++;
                O = g;
                x = q;
                null == x && (x = !1);
                null == O && (O = 0);
                switch (O) {
                  case 0:
                    l =
                      ((m[d] & 255) << 24) |
                      ((m[d + 1] & 255) << 16) |
                      ((m[d + 2] & 255) << 8) |
                      (m[d + 3] & 255);
                    break;
                  case 1:
                    l =
                      ((m[d + 1] & 255) << 24) |
                      ((m[d + 2] & 255) << 16) |
                      ((m[d + 3] & 255) << 8) |
                      (m[d] & 255);
                    break;
                  case 2:
                    l =
                      ((m[d + 2] & 255) << 24) |
                      ((m[d + 1] & 255) << 16) |
                      ((m[d] & 255) << 8) |
                      (m[d + 3] & 255);
                }
                x &&
                  0 != (l & 255) &&
                  255 != (l & 255) &&
                  ((R.unmult = 255 / (l & 255)),
                  (l =
                    ((R.__clamp[Math.round(((l >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((l >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((l >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (l & 255)));
                O = k;
                x = r;
                null == x && (x = !1);
                null == O && (O = 0);
                x &&
                  (0 == (l & 255)
                    ? 0 != l && (l = 0)
                    : 255 != (l & 255) &&
                      ((R.a16 = R.__alpha16[l & 255]),
                      (l =
                        ((((((l >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                        ((((((l >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                        ((((((l >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                        (l & 255))));
                switch (O) {
                  case 0:
                    n[f] = (l >>> 24) & 255;
                    n[f + 1] = (l >>> 16) & 255;
                    n[f + 2] = (l >>> 8) & 255;
                    n[f + 3] = l & 255;
                    break;
                  case 1:
                    n[f] = l & 255;
                    n[f + 1] = (l >>> 24) & 255;
                    n[f + 2] = (l >>> 16) & 255;
                    n[f + 3] = (l >>> 8) & 255;
                    break;
                  case 2:
                    (n[f] = (l >>> 8) & 255),
                      (n[f + 1] = (l >>> 16) & 255),
                      (n[f + 2] = (l >>> 24) & 255),
                      (n[f + 3] = l & 255);
                }
                d += 4;
                f += 4;
              }
        }
        a.dirty = !0;
        a.version++;
      };
      Ic.fillRect = function (a, b, c, d) {
        switch (d) {
          case 1:
            c =
              (((c >>> 16) & 255) << 24) |
              (((c >>> 8) & 255) << 16) |
              ((c & 255) << 8) |
              ((c >>> 24) & 255);
            break;
          case 2:
            c =
              (((c >>> 8) & 255) << 24) |
              (((c >>> 16) & 255) << 16) |
              (((c >>> 24) & 255) << 8) |
              (c & 255);
        }
        a.get_transparent() ||
          (c =
            (((c >>> 24) & 255) << 24) |
            (((c >>> 16) & 255) << 16) |
            (((c >>> 8) & 255) << 8) |
            255);
        var e = a.buffer.data;
        if (null != e) {
          d = a.buffer.format;
          var f = a.buffer.premultiplied;
          f &&
            (0 == (c & 255)
              ? 0 != c && (c = 0)
              : 255 != (c & 255) &&
                ((R.a16 = R.__alpha16[c & 255]),
                (c =
                  ((((((c >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                  ((((((c >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                  ((((((c >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                  (c & 255))));
          b = new yf(a, b);
          for (var h, m = 0, n = b.height; m < n; ) {
            f = m++;
            h = b.byteOffset + b.stride * f;
            for (var p = 0, l = b.width; p < l; ) {
              f = p++;
              var k = h + 4 * f,
                g = d;
              f = !1;
              null == f && (f = !1);
              null == g && (g = 0);
              f &&
                (0 == (c & 255)
                  ? 0 != c && (c = 0)
                  : 255 != (c & 255) &&
                    ((R.a16 = R.__alpha16[c & 255]),
                    (c =
                      ((((((c >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((c >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((c >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (c & 255))));
              switch (g) {
                case 0:
                  e[k] = (c >>> 24) & 255;
                  e[k + 1] = (c >>> 16) & 255;
                  e[k + 2] = (c >>> 8) & 255;
                  e[k + 3] = c & 255;
                  break;
                case 1:
                  e[k] = c & 255;
                  e[k + 1] = (c >>> 24) & 255;
                  e[k + 2] = (c >>> 16) & 255;
                  e[k + 3] = (c >>> 8) & 255;
                  break;
                case 2:
                  (e[k] = (c >>> 8) & 255),
                    (e[k + 1] = (c >>> 16) & 255),
                    (e[k + 2] = (c >>> 24) & 255),
                    (e[k + 3] = c & 255);
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Ic.setFormat = function (a, b) {
        var c = a.buffer.data;
        if (null != c) {
          var d = (c.length / 4) | 0;
          switch (a.get_format()) {
            case 0:
              var e = 0;
              var f = 1;
              var h = 2;
              var m = 3;
              break;
            case 1:
              e = 1;
              f = 2;
              h = 3;
              m = 0;
              break;
            case 2:
              (e = 2), (f = 1), (h = 0), (m = 3);
          }
          switch (b) {
            case 0:
              var n = 0;
              var p = 1;
              var l = 2;
              var k = 3;
              break;
            case 1:
              n = 1;
              p = 2;
              l = 3;
              k = 0;
              break;
            case 2:
              (n = 2), (p = 1), (l = 0), (k = 3);
          }
          for (var g = 0; g < d; ) {
            var u = 4 * g++;
            var q = c[u + e];
            var r = c[u + f];
            var z = c[u + h];
            var v = c[u + m];
            c[u + n] = q;
            c[u + p] = r;
            c[u + l] = z;
            c[u + k] = v;
          }
          a.buffer.format = b;
          a.dirty = !0;
          a.version++;
        }
      };
      Ic.setPixel = function (a, b, c, d, e) {
        switch (e) {
          case 1:
            d =
              (((d >>> 16) & 255) << 24) |
              (((d >>> 8) & 255) << 16) |
              ((d & 255) << 8) |
              ((d >>> 24) & 255);
            break;
          case 2:
            d =
              (((d >>> 8) & 255) << 24) |
              (((d >>> 16) & 255) << 16) |
              (((d >>> 24) & 255) << 8) |
              (d & 255);
        }
        var f = 0,
          h = a.buffer.data,
          m = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        e = a.buffer.format;
        var n = a.buffer.premultiplied;
        null == n && (n = !1);
        null == e && (e = 0);
        switch (e) {
          case 0:
            f =
              ((h[m] & 255) << 24) |
              ((h[m + 1] & 255) << 16) |
              ((h[m + 2] & 255) << 8) |
              (h[m + 3] & 255);
            break;
          case 1:
            f =
              ((h[m + 1] & 255) << 24) |
              ((h[m + 2] & 255) << 16) |
              ((h[m + 3] & 255) << 8) |
              (h[m] & 255);
            break;
          case 2:
            f =
              ((h[m + 2] & 255) << 24) |
              ((h[m + 1] & 255) << 16) |
              ((h[m] & 255) << 8) |
              (h[m + 3] & 255);
        }
        n &&
          0 != (f & 255) &&
          255 != (f & 255) &&
          ((R.unmult = 255 / (f & 255)),
          (f =
            ((R.__clamp[Math.round(((f >>> 24) & 255) * R.unmult)] & 255) <<
              24) |
            ((R.__clamp[Math.round(((f >>> 16) & 255) * R.unmult)] & 255) <<
              16) |
            ((R.__clamp[Math.round(((f >>> 8) & 255) * R.unmult)] & 255) << 8) |
            (f & 255)));
        d =
          (((d >>> 24) & 255) << 24) |
          (((d >>> 16) & 255) << 16) |
          (((d >>> 8) & 255) << 8) |
          (f & 255);
        h = a.buffer.data;
        m = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        e = a.buffer.format;
        n = a.buffer.premultiplied;
        null == n && (n = !1);
        null == e && (e = 0);
        n &&
          (0 == (d & 255)
            ? 0 != d && (d = 0)
            : 255 != (d & 255) &&
              ((R.a16 = R.__alpha16[d & 255]),
              (d =
                ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                (d & 255))));
        switch (e) {
          case 0:
            h[m] = (d >>> 24) & 255;
            h[m + 1] = (d >>> 16) & 255;
            h[m + 2] = (d >>> 8) & 255;
            h[m + 3] = d & 255;
            break;
          case 1:
            h[m] = d & 255;
            h[m + 1] = (d >>> 24) & 255;
            h[m + 2] = (d >>> 16) & 255;
            h[m + 3] = (d >>> 8) & 255;
            break;
          case 2:
            (h[m] = (d >>> 8) & 255),
              (h[m + 1] = (d >>> 16) & 255),
              (h[m + 2] = (d >>> 24) & 255),
              (h[m + 3] = d & 255);
        }
        a.dirty = !0;
        a.version++;
      };
      Ic.setPixel32 = function (a, b, c, d, e) {
        switch (e) {
          case 1:
            d =
              (((d >>> 16) & 255) << 24) |
              (((d >>> 8) & 255) << 16) |
              ((d & 255) << 8) |
              ((d >>> 24) & 255);
            break;
          case 2:
            d =
              (((d >>> 8) & 255) << 24) |
              (((d >>> 16) & 255) << 16) |
              (((d >>> 24) & 255) << 8) |
              (d & 255);
        }
        a.get_transparent() ||
          (d =
            (((d >>> 24) & 255) << 24) |
            (((d >>> 16) & 255) << 16) |
            (((d >>> 8) & 255) << 8) |
            255);
        var f = a.buffer.data;
        b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        e = a.buffer.format;
        c = a.buffer.premultiplied;
        null == c && (c = !1);
        null == e && (e = 0);
        c &&
          (0 == (d & 255)
            ? 0 != d && (d = 0)
            : 255 != (d & 255) &&
              ((R.a16 = R.__alpha16[d & 255]),
              (d =
                ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                (d & 255))));
        switch (e) {
          case 0:
            f[b] = (d >>> 24) & 255;
            f[b + 1] = (d >>> 16) & 255;
            f[b + 2] = (d >>> 8) & 255;
            f[b + 3] = d & 255;
            break;
          case 1:
            f[b] = d & 255;
            f[b + 1] = (d >>> 24) & 255;
            f[b + 2] = (d >>> 16) & 255;
            f[b + 3] = (d >>> 8) & 255;
            break;
          case 2:
            (f[b] = (d >>> 8) & 255),
              (f[b + 1] = (d >>> 16) & 255),
              (f[b + 2] = (d >>> 24) & 255),
              (f[b + 3] = d & 255);
        }
        a.dirty = !0;
        a.version++;
      };
      var yf = function (a, b) {
        this.image = a;
        null == b
          ? (this.rect = a.get_rect())
          : (0 > b.x && (b.x = 0),
            0 > b.y && (b.y = 0),
            b.x + b.width > a.width && (b.width = a.width - b.x),
            b.y + b.height > a.height && (b.height = a.height - b.y),
            0 > b.width && (b.width = 0),
            0 > b.height && (b.height = 0),
            (this.rect = b));
        this.stride = a.buffer.get_stride();
        this.__update();
      };
      g["lime._internal.graphics._ImageDataUtil.ImageDataView"] = yf;
      yf.__name__ = "lime._internal.graphics._ImageDataUtil.ImageDataView";
      yf.prototype = {
        clip: function (a, b, c, d) {
          null == this.tempRect && (this.tempRect = new ae());
          this.tempRect.setTo(a, b, c, d);
          this.rect.intersection(this.tempRect, this.rect);
          this.__update();
        },
        __update: function () {
          this.x = Math.ceil(this.rect.x);
          this.y = Math.ceil(this.rect.y);
          this.width = Math.floor(this.rect.width);
          this.height = Math.floor(this.rect.height);
          this.byteOffset =
            this.stride * (this.y + this.image.offsetY) +
            4 * (this.x + this.image.offsetX);
        },
        __class__: yf,
      };
      var Ja = function (a, b) {
        null == b && (b = !1);
        if (null != a)
          if (b)
            (b = new Wc()),
              (b.future = this),
              kd.queue({ promise: b, work: a });
          else
            try {
              (this.value = a()), (this.isComplete = !0);
            } catch (c) {
              (Ba.lastError = c),
                (this.error = C.caught(c).unwrap()),
                (this.isError = !0);
            }
      };
      g["lime.app.Future"] = Ja;
      Ja.__name__ = "lime.app.Future";
      Ja.withError = function (a) {
        var b = new Ja();
        b.isError = !0;
        b.error = a;
        return b;
      };
      Ja.withValue = function (a) {
        var b = new Ja();
        b.isComplete = !0;
        b.value = a;
        return b;
      };
      Ja.prototype = {
        onComplete: function (a) {
          null != a &&
            (this.isComplete
              ? a(this.value)
              : this.isError ||
                (null == this.__completeListeners &&
                  (this.__completeListeners = []),
                this.__completeListeners.push(a)));
          return this;
        },
        onError: function (a) {
          null != a &&
            (this.isError
              ? a(this.error)
              : this.isComplete ||
                (null == this.__errorListeners && (this.__errorListeners = []),
                this.__errorListeners.push(a)));
          return this;
        },
        onProgress: function (a) {
          null != a &&
            (null == this.__progressListeners &&
              (this.__progressListeners = []),
            this.__progressListeners.push(a));
          return this;
        },
        then: function (a) {
          if (this.isComplete) return a(this.value);
          if (this.isError) {
            var b = new Ja();
            b.isError = !0;
            b.error = this.error;
            return b;
          }
          var c = new Wc();
          this.onError(q(c, c.error));
          this.onProgress(q(c, c.progress));
          this.onComplete(function (b) {
            b = a(b);
            b.onError(q(c, c.error));
            b.onComplete(q(c, c.complete));
          });
          return c.future;
        },
        __class__: Ja,
      };
      var kd = function () {};
      g["lime.app._Future.FutureWork"] = kd;
      kd.__name__ = "lime.app._Future.FutureWork";
      kd.queue = function (a) {
        null == kd.threadPool &&
          ((kd.threadPool = new Yl()),
          kd.threadPool.doWork.add(kd.threadPool_doWork),
          kd.threadPool.onComplete.add(kd.threadPool_onComplete),
          kd.threadPool.onError.add(kd.threadPool_onError));
        kd.threadPool.queue(a);
      };
      kd.threadPool_doWork = function (a) {
        try {
          var b = a.work();
          kd.threadPool.sendComplete({ promise: a.promise, result: b });
        } catch (c) {
          (Ba.lastError = c),
            (b = C.caught(c).unwrap()),
            kd.threadPool.sendError({ promise: a.promise, error: b });
        }
      };
      kd.threadPool_onComplete = function (a) {
        a.promise.complete(a.result);
      };
      kd.threadPool_onError = function (a) {
        a.promise.error(a.error);
      };
      var Wc = function () {
        this.future = new Ja();
      };
      g["lime.app.Promise"] = Wc;
      Wc.__name__ = "lime.app.Promise";
      Wc.prototype = {
        complete: function (a) {
          if (
            !this.future.isError &&
            ((this.future.isComplete = !0),
            (this.future.value = a),
            null != this.future.__completeListeners)
          ) {
            for (
              var b = 0, c = this.future.__completeListeners;
              b < c.length;

            ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__completeListeners = null;
          }
          return this;
        },
        completeWith: function (a) {
          a.onComplete(q(this, this.complete));
          a.onError(q(this, this.error));
          a.onProgress(q(this, this.progress));
          return this;
        },
        error: function (a) {
          if (
            !this.future.isComplete &&
            ((this.future.isError = !0),
            (this.future.error = a),
            null != this.future.__errorListeners)
          ) {
            for (var b = 0, c = this.future.__errorListeners; b < c.length; ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__errorListeners = null;
          }
          return this;
        },
        progress: function (a, b) {
          if (
            !this.future.isError &&
            !this.future.isComplete &&
            null != this.future.__progressListeners
          )
            for (
              var c = 0, d = this.future.__progressListeners;
              c < d.length;

            ) {
              var e = d[c];
              ++c;
              e(a, b);
            }
          return this;
        },
        __class__: Wc,
      };
      var bh = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Dynamic_Void"] = bh;
      bh.__name__ = "lime.app._Event_Dynamic_Void";
      bh.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: bh,
      };
      var Zl = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Float_Float_Float_Void"] = Zl;
      Zl.__name__ = "lime.app._Event_Float_Float_Float_Void";
      Zl.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, e = this.__repeat, f = 0;
            f < d.length &&
            (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

          );
        },
        __class__: Zl,
      };
      var $l = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Float_Float_Int_Void"] = $l;
      $l.__name__ = "lime.app._Event_Float_Float_Int_Void";
      $l.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, e = this.__repeat, f = 0;
            f < d.length &&
            (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

          );
        },
        __class__: $l,
      };
      var di = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Float_Float_Void"] = di;
      di.__name__ = "lime.app._Event_Float_Float_Void";
      di.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, e = 0;
            e < c.length &&
            (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

          );
        },
        __class__: di,
      };
      var am = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Float_Float_lime_ui_MouseButton_Void"] = am;
      am.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseButton_Void";
      am.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, e = this.__repeat, f = 0;
            f < d.length &&
            (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

          );
        },
        __class__: am,
      };
      var bm = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"] = bm;
      bm.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void";
      bm.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, e = this.__repeat, f = 0;
            f < d.length &&
            (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

          );
        },
        __class__: bm,
      };
      var cm = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Int_Float_Float_Void"] = cm;
      cm.__name__ = "lime.app._Event_Int_Float_Float_Void";
      cm.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: cm,
      };
      var dm = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Int_Float_Void"] = dm;
      dm.__name__ = "lime.app._Event_Int_Float_Void";
      dm.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, e = 0;
            e < c.length &&
            (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

          );
        },
        __class__: dm,
      };
      var fk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Int_Int_Void"] = fk;
      fk.__name__ = "lime.app._Event_Int_Int_Void";
      fk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, e = 0;
            e < c.length &&
            (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

          );
        },
        __class__: fk,
      };
      var bg = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Int_Void"] = bg;
      bg.__name__ = "lime.app._Event_Int_Void";
      bg.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: bg,
      };
      var em = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"] = em;
      em.__name__ = "lime.app._Event_Int_lime_ui_JoystickHatPosition_Void";
      em.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: em,
      };
      var fm = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_String_Int_Int_Void"] = fm;
      fm.__name__ = "lime.app._Event_String_Int_Int_Void";
      fm.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: fm,
      };
      var gk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_String_Void"] = gk;
      gk.__name__ = "lime.app._Event_String_Void";
      gk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        has: function (a) {
          for (var b = 0, c = this.__listeners; b < c.length; ) {
            var d = c[b];
            ++b;
            if (ia.compareMethods(d, a)) return !0;
          }
          return !1;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: gk,
      };
      var kc = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_Void_Void"] = kc;
      kc.__name__ = "lime.app._Event_Void_Void";
      kc.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        has: function (a) {
          for (var b = 0, c = this.__listeners; b < c.length; ) {
            var d = c[b];
            ++b;
            if (ia.compareMethods(d, a)) return !0;
          }
          return !1;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function () {
          this.canceled = !1;
          for (
            var a = this.__listeners, b = this.__repeat, c = 0;
            c < a.length &&
            (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled);

          );
        },
        __class__: kc,
      };
      var hk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_graphics_RenderContext_Void"] = hk;
      hk.__name__ = "lime.app._Event_lime_graphics_RenderContext_Void";
      hk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: hk,
      };
      var gm = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_ui_GamepadAxis_Float_Void"] = gm;
      gm.__name__ = "lime.app._Event_lime_ui_GamepadAxis_Float_Void";
      gm.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, e = 0;
            e < c.length &&
            (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

          );
        },
        __class__: gm,
      };
      var ik = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_ui_GamepadButton_Void"] = ik;
      ik.__name__ = "lime.app._Event_lime_ui_GamepadButton_Void";
      ik.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: ik,
      };
      var hm = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_ui_Gamepad_Void"] = hm;
      hm.__name__ = "lime.app._Event_lime_ui_Gamepad_Void";
      hm.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: hm,
      };
      var im = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_ui_Joystick_Void"] = im;
      im.__name__ = "lime.app._Event_lime_ui_Joystick_Void";
      im.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: im,
      };
      var jk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = jk;
      jk.__name__ = "lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void";
      jk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, e = 0;
            e < c.length &&
            (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

          );
        },
        __class__: jk,
      };
      var ch = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_ui_Touch_Void"] = ch;
      ch.__name__ = "lime.app._Event_lime_ui_Touch_Void";
      ch.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: ch,
      };
      var Uk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g["lime.app._Event_lime_ui_Window_Void"] = Uk;
      Uk.__name__ = "lime.app._Event_lime_ui_Window_Void";
      Uk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e; ) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            ia.compareMethods(this.__listeners[b], a) &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Uk,
      };
      var Da = function (a, b, c, d, e, f, h) {
        null == e && (e = -1);
        null == d && (d = -1);
        null == c && (c = 0);
        null == b && (b = 0);
        this.offsetX = b;
        this.offsetY = c;
        this.width = d;
        this.height = e;
        this.version = 0;
        null == h && (h = Yd.CANVAS);
        this.type = h;
        if (null == a) {
          if (0 < d && 0 < e)
            switch (this.type._hx_index) {
              case 0:
                this.buffer = new xf(null, d, e);
                Oa.createCanvas(this, d, e);
                null != f && 0 != f && this.fillRect(new ae(0, 0, d, e), f);
                break;
              case 1:
                (a = d * e * 4),
                  (a = null != a ? new Uint8Array(a) : null),
                  (this.buffer = new xf(a, d, e)),
                  null != f && 0 != f && this.fillRect(new ae(0, 0, d, e), f);
            }
        } else this.__fromImageBuffer(a);
      };
      g["lime.graphics.Image"] = Da;
      Da.__name__ = "lime.graphics.Image";
      Da.fromBytes = function (a) {
        if (null == a) return null;
        var b = new Da();
        return b.__fromBytes(a) ? b : null;
      };
      Da.fromCanvas = function (a) {
        if (null == a) return null;
        var b = new xf(null, a.width, a.height);
        b.set_src(a);
        a = new Da(b);
        a.type = Yd.CANVAS;
        return a;
      };
      Da.fromFile = function (a) {
        if (null == a) return null;
        var b = new Da();
        return b.__fromFile(a) ? b : null;
      };
      Da.loadFromBase64 = function (a, b) {
        return null == a || null == b
          ? Ja.withValue(null)
          : Aa.loadImage("data:" + b + ";base64," + a);
      };
      Da.loadFromBytes = function (a) {
        if (null == a) return Ja.withValue(null);
        if (Da.__isPNG(a)) var b = "image/png";
        else if (Da.__isJPG(a)) b = "image/jpeg";
        else if (Da.__isGIF(a)) b = "image/gif";
        else if (Da.__isWebP(a)) b = "image/webp";
        else return Ja.withValue(null);
        return Aa.loadImageFromBytes(a, b);
      };
      Da.loadFromFile = function (a) {
        return null == a ? Ja.withValue(null) : Aa.loadImage(a);
      };
      Da.__isGIF = function (a) {
        if (null == a || 6 > a.length) return !1;
        a = a.getString(0, 6);
        return "GIF87a" != a ? "GIF89a" == a : !0;
      };
      Da.__isJPG = function (a) {
        return null == a || 4 > a.length
          ? !1
          : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2]
          ? 217 == a.b[a.length - 1]
          : !1;
      };
      Da.__isPNG = function (a) {
        return null == a || 8 > a.length
          ? !1
          : 137 == a.b[0] &&
            80 == a.b[1] &&
            78 == a.b[2] &&
            71 == a.b[3] &&
            13 == a.b[4] &&
            10 == a.b[5] &&
            26 == a.b[6]
          ? 10 == a.b[7]
          : !1;
      };
      Da.__isWebP = function (a) {
        return null == a || 16 > a.length
          ? !1
          : "RIFF" == a.getString(0, 4)
          ? "WEBP" == a.getString(8, 4)
          : !1;
      };
      Da.prototype = {
        clone: function () {
          if (null != this.buffer) {
            this.type == Yd.CANVAS
              ? Oa.convertToCanvas(this)
              : Oa.convertToData(this);
            var a = new Da(
              this.buffer.clone(),
              this.offsetX,
              this.offsetY,
              this.width,
              this.height,
              null,
              this.type
            );
            a.version = this.version;
            return a;
          }
          return new Da(
            null,
            this.offsetX,
            this.offsetY,
            this.width,
            this.height,
            null,
            this.type
          );
        },
        colorTransform: function (a, b) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Oa.colorTransform(this, a, b);
                break;
              case 1:
                Oa.convertToData(this);
                Ic.colorTransform(this, a, b);
                break;
              case 2:
                a.offset(this.offsetX, this.offsetY),
                  this.buffer.__srcBitmapData.colorTransform(
                    a.__toFlashRectangle(),
                    Ec.__toFlashColorTransform(b)
                  );
            }
        },
        copyChannel: function (a, b, c, d, e) {
          b = this.__clipRect(b);
          if (
            null != this.buffer &&
            null != b &&
            !(
              (e == uf.ALPHA && !this.get_transparent()) ||
              0 >= b.width ||
              0 >= b.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              this.type._hx_index)
            ) {
              case 0:
                Oa.copyChannel(this, a, b, c, d, e);
                break;
              case 1:
                Oa.convertToData(this);
                Oa.convertToData(a);
                Ic.copyChannel(this, a, b, c, d, e);
                break;
              case 2:
                switch (d._hx_index) {
                  case 0:
                    var f = 1;
                    break;
                  case 1:
                    f = 2;
                    break;
                  case 2:
                    f = 4;
                    break;
                  case 3:
                    f = 8;
                }
                switch (e._hx_index) {
                  case 0:
                    var h = 1;
                    break;
                  case 1:
                    h = 2;
                    break;
                  case 2:
                    h = 4;
                    break;
                  case 3:
                    h = 8;
                }
                b.offset(a.offsetX, a.offsetY);
                c.offset(this.offsetX, this.offsetY);
                this.buffer.__srcBitmapData.copyChannel(
                  a.buffer.get_src(),
                  b.__toFlashRectangle(),
                  c.__toFlashPoint(),
                  f,
                  h
                );
            }
        },
        copyPixels: function (a, b, c, d, e, f) {
          null == f && (f = !1);
          if (
            null != this.buffer &&
            null != a &&
            !(
              0 >= b.width ||
              0 >= b.height ||
              0 >= this.width ||
              0 >= this.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              0 > b.x && ((b.width += b.x), (b.x = 0)),
              0 > b.y && ((b.height += b.y), (b.y = 0)),
              c.x + b.width > this.width && (b.width = this.width - c.x),
              c.y + b.height > this.height && (b.height = this.height - c.y),
              0 > c.x && ((b.width += c.x), (b.x -= c.x), (c.x = 0)),
              0 > c.y && ((b.height += c.y), (b.y -= c.y), (c.y = 0)),
              a == this &&
                c.x < b.get_right() &&
                c.y < b.get_bottom() &&
                (a = this.clone()),
              d == a && (null == e || (0 == e.x && 0 == e.y)) && (e = d = null),
              this.type._hx_index)
            ) {
              case 0:
                null != d
                  ? (Oa.convertToData(this),
                    Oa.convertToData(a),
                    null != d && Oa.convertToData(d),
                    Ic.copyPixels(this, a, b, c, d, e, f))
                  : (Oa.convertToCanvas(this),
                    Oa.convertToCanvas(a),
                    Oa.copyPixels(this, a, b, c, d, e, f));
                break;
              case 1:
                Oa.convertToData(this);
                Oa.convertToData(a);
                null != d && Oa.convertToData(d);
                Ic.copyPixels(this, a, b, c, d, e, f);
                break;
              case 2:
                b.offset(a.offsetX, a.offsetY),
                  c.offset(this.offsetX, this.offsetY),
                  null != d && null != e && e.offset(d.offsetX, d.offsetY),
                  this.buffer.__srcBitmapData.copyPixels(
                    a.buffer.__srcBitmapData,
                    b.__toFlashRectangle(),
                    c.__toFlashPoint(),
                    null != d ? d.buffer.get_src() : null,
                    null != e ? e.__toFlashPoint() : null,
                    f
                  );
            }
        },
        fillRect: function (a, b, c) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Oa.fillRect(this, a, b, c);
                break;
              case 1:
                Oa.convertToData(this);
                if (0 == this.buffer.data.length) break;
                Ic.fillRect(this, a, b, c);
                break;
              case 2:
                a.offset(this.offsetX, this.offsetY);
                if (null == c)
                  b =
                    ((b & 255) << 24) |
                    (((b >>> 24) & 255) << 16) |
                    (((b >>> 16) & 255) << 8) |
                    ((b >>> 8) & 255);
                else
                  switch (c) {
                    case 1:
                      break;
                    case 2:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 8) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 24) & 255);
                      break;
                    default:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 24) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b);
            }
        },
        setPixel: function (a, b, c, d) {
          if (
            !(
              null == this.buffer ||
              0 > a ||
              0 > b ||
              a >= this.width ||
              b >= this.height
            )
          )
            switch (this.type._hx_index) {
              case 0:
                Oa.setPixel(this, a, b, c, d);
                break;
              case 1:
                Oa.convertToData(this);
                Ic.setPixel(this, a, b, c, d);
                break;
              case 2:
                if (null == d)
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
                else
                  switch (d) {
                    case 1:
                      break;
                    case 2:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 8) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 24) & 255);
                      break;
                    default:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 24) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.setPixel(
                  a + this.offsetX,
                  b + this.offsetX,
                  c
                );
            }
        },
        setPixel32: function (a, b, c, d) {
          if (
            !(
              null == this.buffer ||
              0 > a ||
              0 > b ||
              a >= this.width ||
              b >= this.height
            )
          )
            switch (this.type._hx_index) {
              case 0:
                Oa.setPixel32(this, a, b, c, d);
                break;
              case 1:
                Oa.convertToData(this);
                Ic.setPixel32(this, a, b, c, d);
                break;
              case 2:
                if (null == d)
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
                else
                  switch (d) {
                    case 1:
                      break;
                    case 2:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 8) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 24) & 255);
                      break;
                    default:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 24) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.setPixel32(
                  a + this.offsetX,
                  b + this.offsetY,
                  c
                );
            }
        },
        __clipRect: function (a) {
          return null == a ||
            (0 > a.x && ((a.width -= -a.x), (a.x = 0), 0 >= a.x + a.width)) ||
            (0 > a.y && ((a.height -= -a.y), (a.y = 0), 0 >= a.y + a.height)) ||
            (a.x + a.width >= this.width &&
              ((a.width -= a.x + a.width - this.width), 0 >= a.width)) ||
            (a.y + a.height >= this.height &&
              ((a.height -= a.y + a.height - this.height), 0 >= a.height))
            ? null
            : a;
        },
        __fromBase64: function (a, b, c) {
          var d = this,
            e = new Image();
          e.addEventListener(
            "load",
            function (a) {
              d.buffer = new xf(null, e.width, e.height);
              d.buffer.__srcImage = e;
              d.offsetX = 0;
              d.offsetY = 0;
              d.width = d.buffer.width;
              d.height = d.buffer.height;
              null != c && c(d);
            },
            !1
          );
          e.src = "data:" + b + ";base64," + a;
        },
        __fromBytes: function (a, b) {
          if (Da.__isPNG(a)) var c = "image/png";
          else if (Da.__isJPG(a)) c = "image/jpeg";
          else if (Da.__isGIF(a)) c = "image/gif";
          else return !1;
          this.__fromBase64(jf.encode(a), c, b);
          return !0;
        },
        __fromFile: function (a, b, c) {
          var d = this,
            e = new Image();
          Aa.__isSameOrigin(a) || (e.crossOrigin = "Anonymous");
          e.onload = function (a) {
            d.buffer = new xf(null, e.width, e.height);
            d.buffer.__srcImage = e;
            d.width = e.width;
            d.height = e.height;
            null != b && b(d);
          };
          e.onerror = function (a) {
            null != c && c();
          };
          e.src = a;
          return !0;
        },
        __fromImageBuffer: function (a) {
          this.buffer = a;
          null != a &&
            (-1 == this.width && (this.width = a.width),
            -1 == this.height && (this.height = a.height));
        },
        get_data: function () {
          null == this.buffer.data &&
            0 < this.buffer.width &&
            0 < this.buffer.height &&
            Oa.convertToData(this);
          return this.buffer.data;
        },
        get_format: function () {
          return this.buffer.format;
        },
        set_format: function (a) {
          this.buffer.format != a &&
            1 == this.type._hx_index &&
            Ic.setFormat(this, a);
          return (this.buffer.format = a);
        },
        get_premultiplied: function () {
          return this.buffer.premultiplied;
        },
        get_rect: function () {
          return new ae(0, 0, this.width, this.height);
        },
        get_src: function () {
          null != this.buffer.__srcCanvas ||
            (null == this.buffer.data && this.type != Yd.DATA) ||
            Oa.convertToCanvas(this);
          return this.buffer.get_src();
        },
        get_transparent: function () {
          return null == this.buffer ? !1 : this.buffer.transparent;
        },
        set_transparent: function (a) {
          return null == this.buffer ? !1 : (this.buffer.transparent = a);
        },
        __class__: Da,
        __properties__: {
          set_transparent: "set_transparent",
          get_transparent: "get_transparent",
          get_src: "get_src",
          get_rect: "get_rect",
          get_premultiplied: "get_premultiplied",
          set_format: "set_format",
          get_format: "get_format",
          get_data: "get_data",
        },
      };
      var xf = function (a, b, c, d, e) {
        null == d && (d = 32);
        null == c && (c = 0);
        null == b && (b = 0);
        this.data = a;
        this.width = b;
        this.height = c;
        this.bitsPerPixel = d;
        this.format = null == e ? 0 : e;
        this.premultiplied = !1;
        this.transparent = !0;
      };
      g["lime.graphics.ImageBuffer"] = xf;
      xf.__name__ = "lime.graphics.ImageBuffer";
      xf.prototype = {
        clone: function () {
          var a = new xf(this.data, this.width, this.height, this.bitsPerPixel);
          if (null != this.data) {
            var b = this.data.byteLength,
              c = null,
              d = null,
              e = null,
              f = null,
              h = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                ? new Uint8Array(c)
                : null != d
                ? new Uint8Array(d.__array)
                : null != e
                ? new Uint8Array(e)
                : null != f
                ? null == h
                  ? new Uint8Array(f, 0)
                  : new Uint8Array(f, 0, h)
                : null;
            a.data = b;
            d = c = b = null;
            e = this.data;
            h = f = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                ? new Uint8Array(c)
                : null != d
                ? new Uint8Array(d.__array)
                : null != e
                ? new Uint8Array(e)
                : null != f
                ? null == h
                  ? new Uint8Array(f, 0)
                  : new Uint8Array(f, 0, h)
                : null;
            a.data.set(b);
          } else
            null != this.__srcImageData
              ? ((a.__srcCanvas = window.document.createElement("canvas")),
                (a.__srcContext = a.__srcCanvas.getContext("2d")),
                (a.__srcCanvas.width = this.__srcImageData.width),
                (a.__srcCanvas.height = this.__srcImageData.height),
                (a.__srcImageData = a.__srcContext.createImageData(
                  this.__srcImageData.width,
                  this.__srcImageData.height
                )),
                (b = new Uint8ClampedArray(this.__srcImageData.data)),
                a.__srcImageData.data.set(b))
              : null != this.__srcCanvas
              ? ((a.__srcCanvas = window.document.createElement("canvas")),
                (a.__srcContext = a.__srcCanvas.getContext("2d")),
                (a.__srcCanvas.width = this.__srcCanvas.width),
                (a.__srcCanvas.height = this.__srcCanvas.height),
                a.__srcContext.drawImage(this.__srcCanvas, 0, 0))
              : (a.__srcImage = this.__srcImage);
          a.bitsPerPixel = this.bitsPerPixel;
          a.format = this.format;
          a.premultiplied = this.premultiplied;
          a.transparent = this.transparent;
          return a;
        },
        get_src: function () {
          return null != this.__srcImage ? this.__srcImage : this.__srcCanvas;
        },
        set_src: function (a) {
          a instanceof Image
            ? (this.__srcImage = a)
            : a instanceof HTMLCanvasElement &&
              ((this.__srcCanvas = a),
              (this.__srcContext = this.__srcCanvas.getContext("2d")));
          return a;
        },
        get_stride: function () {
          return this.width * ((this.bitsPerPixel / 8) | 0);
        },
        __class__: xf,
        __properties__: {
          get_stride: "get_stride",
          set_src: "set_src",
          get_src: "get_src",
        },
      };
      var uf = (z["lime.graphics.ImageChannel"] = {
          __ename__: "lime.graphics.ImageChannel",
          __constructs__: ["RED", "GREEN", "BLUE", "ALPHA"],
          RED: {
            _hx_index: 0,
            __enum__: "lime.graphics.ImageChannel",
            toString: l,
          },
          GREEN: {
            _hx_index: 1,
            __enum__: "lime.graphics.ImageChannel",
            toString: l,
          },
          BLUE: {
            _hx_index: 2,
            __enum__: "lime.graphics.ImageChannel",
            toString: l,
          },
          ALPHA: {
            _hx_index: 3,
            __enum__: "lime.graphics.ImageChannel",
            toString: l,
          },
        }),
        Yd = (z["lime.graphics.ImageType"] = {
          __ename__: "lime.graphics.ImageType",
          __constructs__: ["CANVAS", "DATA", "FLASH", "CUSTOM"],
          CANVAS: {
            _hx_index: 0,
            __enum__: "lime.graphics.ImageType",
            toString: l,
          },
          DATA: {
            _hx_index: 1,
            __enum__: "lime.graphics.ImageType",
            toString: l,
          },
          FLASH: {
            _hx_index: 2,
            __enum__: "lime.graphics.ImageType",
            toString: l,
          },
          CUSTOM: {
            _hx_index: 3,
            __enum__: "lime.graphics.ImageType",
            toString: l,
          },
        }),
        Wl = function () {};
      g["lime.graphics.RenderContext"] = Wl;
      Wl.__name__ = "lime.graphics.RenderContext";
      Wl.prototype = { __class__: Wl };
      var Bn = {
          uniform2fv: function (a, b, c, d, e) {
            null != d ? a.uniform2fv(b, c, d, e) : a.uniform2fv(b, c);
          },
        },
        yc = {
          bufferData: function (a, b, c, d) {
            a.bufferData(b, c, d);
          },
          texImage2D: function (a, b, c, d, e, f, h, m, n, p) {
            null != m
              ? a.texImage2D(b, c, d, e, f, h, m, n, p)
              : a.texImage2D(b, c, d, e, f, h);
          },
          uniformMatrix2fv: function (a, b, c, d) {
            a.uniformMatrix2fv(b, c, d);
          },
          uniformMatrix3fv: function (a, b, c, d) {
            a.uniformMatrix3fv(b, c, d);
          },
          uniformMatrix4fv: function (a, b, c, d) {
            a.uniformMatrix4fv(b, c, d);
          },
          fromWebGL2RenderContext: function (a) {
            return a;
          },
        },
        Um = function (a) {};
      g["lime.graphics.cairo.Cairo"] = Um;
      Um.__name__ = "lime.graphics.cairo.Cairo";
      Um.prototype = {
        clip: function () {},
        identityMatrix: function () {},
        newPath: function () {},
        paint: function () {},
        rectangle: function (a, b, c, d) {},
        restore: function () {},
        save: function () {},
        setOperator: function (a) {
          return a;
        },
        setSourceRGB: function (a, b, c) {},
        set_matrix: function (a) {
          return a;
        },
        __class__: Um,
        __properties__: { set_matrix: "set_matrix" },
      };
      var wn = { flush: function (a) {} },
        ci = function () {};
      g["lime.graphics.opengl.GL"] = ci;
      ci.__name__ = "lime.graphics.opengl.GL";
      var Vm = function () {
        this.STACK_UNDERFLOW = 1284;
        this.STACK_OVERFLOW = 1283;
        this.CONTEXT_FLAG_DEBUG_BIT = 2;
        this.DEBUG_OUTPUT = 37600;
        this.DEBUG_SEVERITY_LOW = 37192;
        this.DEBUG_SEVERITY_MEDIUM = 37191;
        this.DEBUG_SEVERITY_HIGH = 37190;
        this.DEBUG_LOGGED_MESSAGES = 37189;
        this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
        this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
        this.MAX_LABEL_LENGTH = 33512;
        this.SAMPLER = 33510;
        this.QUERY = 33507;
        this.PROGRAM = 33506;
        this.SHADER = 33505;
        this.BUFFER = 33504;
        this.DEBUG_GROUP_STACK_DEPTH = 33389;
        this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
        this.DEBUG_SEVERITY_NOTIFICATION = 33387;
        this.DEBUG_TYPE_POP_GROUP = 33386;
        this.DEBUG_TYPE_PUSH_GROUP = 33385;
        this.DEBUG_TYPE_MARKER = 33384;
        this.DEBUG_TYPE_OTHER = 33361;
        this.DEBUG_TYPE_PERFORMANCE = 33360;
        this.DEBUG_TYPE_PORTABILITY = 33359;
        this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
        this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
        this.DEBUG_TYPE_ERROR = 33356;
        this.DEBUG_SOURCE_OTHER = 33355;
        this.DEBUG_SOURCE_APPLICATION = 33354;
        this.DEBUG_SOURCE_THIRD_PARTY = 33353;
        this.DEBUG_SOURCE_SHADER_COMPILER = 33352;
        this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
        this.DEBUG_SOURCE_API = 33350;
        this.DEBUG_CALLBACK_USER_PARAM = 33349;
        this.DEBUG_CALLBACK_FUNCTION = 33348;
        this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
        this.DEBUG_OUTPUT_SYNCHRONOUS = 33346;
      };
      g["lime.graphics.opengl.ext.KHR_debug"] = Vm;
      Vm.__name__ = "lime.graphics.opengl.ext.KHR_debug";
      Vm.prototype = { __class__: Vm };
      var Ec = {
          getAlphaTable: function (a) {
            if (null == Ec.__alphaTable) {
              var b = new Uint8Array(256);
              Ec.__alphaTable = b;
            }
            Ec.__alphaTable[0] = 0;
            for (var c = 1; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[18] + 255 * a[19]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Ec.__alphaTable[d] = b;
            }
            return Ec.__alphaTable;
          },
          getBlueTable: function (a) {
            if (null == Ec.__blueTable) {
              var b = new Uint8Array(256);
              Ec.__blueTable = b;
            }
            for (var c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[12] + 255 * a[14]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Ec.__blueTable[d] = b;
            }
            return Ec.__blueTable;
          },
          getGreenTable: function (a) {
            if (null == Ec.__greenTable) {
              var b = new Uint8Array(256);
              Ec.__greenTable = b;
            }
            for (var c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[6] + 255 * a[9]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Ec.__greenTable[d] = b;
            }
            return Ec.__greenTable;
          },
          getRedTable: function (a) {
            if (null == Ec.__redTable) {
              var b = new Uint8Array(256);
              Ec.__redTable = b;
            }
            for (var c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[0] + 255 * a[4]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Ec.__redTable[d] = b;
            }
            return Ec.__redTable;
          },
          __toFlashColorTransform: function (a) {
            return null;
          },
        },
        fb = {
          _new: function (a) {
            if (null == a || 16 != a.length)
              (a = fb.__identity), (a = null != a ? new Float32Array(a) : null);
            return a;
          },
          append: function (a, b) {
            var c = a[0],
              d = a[4],
              e = a[8],
              f = a[12],
              h = a[1],
              m = a[5],
              n = a[9],
              p = a[13],
              l = a[2],
              k = a[6],
              g = a[10],
              u = a[14],
              q = a[3],
              r = a[7],
              z = a[11],
              v = a[15],
              y = fb.get(b, 0),
              w = fb.get(b, 4),
              O = fb.get(b, 8),
              x = fb.get(b, 12),
              t = fb.get(b, 1),
              C = fb.get(b, 5),
              A = fb.get(b, 9),
              D = fb.get(b, 13),
              G = fb.get(b, 2),
              T = fb.get(b, 6),
              H = fb.get(b, 10),
              ca = fb.get(b, 14),
              ra = fb.get(b, 3),
              I = fb.get(b, 7),
              Y = fb.get(b, 11);
            b = fb.get(b, 15);
            a[0] = c * y + h * w + l * O + q * x;
            a[1] = c * t + h * C + l * A + q * D;
            a[2] = c * G + h * T + l * H + q * ca;
            a[3] = c * ra + h * I + l * Y + q * b;
            a[4] = d * y + m * w + k * O + r * x;
            a[5] = d * t + m * C + k * A + r * D;
            a[6] = d * G + m * T + k * H + r * ca;
            a[7] = d * ra + m * I + k * Y + r * b;
            a[8] = e * y + n * w + g * O + z * x;
            a[9] = e * t + n * C + g * A + z * D;
            a[10] = e * G + n * T + g * H + z * ca;
            a[11] = e * ra + n * I + g * Y + z * b;
            a[12] = f * y + p * w + u * O + v * x;
            a[13] = f * t + p * C + u * A + v * D;
            a[14] = f * G + p * T + u * H + v * ca;
            a[15] = f * ra + p * I + u * Y + v * b;
          },
          createOrtho: function (a, b, c, d, e, f, h) {
            var m = 1 / (c - b),
              n = 1 / (e - d),
              p = 1 / (h - f);
            a[0] = 2 * m;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 2 * n;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = -2 * p;
            a[11] = 0;
            a[12] = -(b + c) * m;
            a[13] = -(d + e) * n;
            a[14] = -(f + h) * p;
            a[15] = 1;
          },
          identity: function (a) {
            a[0] = 1;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 1;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 1;
            a[11] = 0;
            a[12] = 0;
            a[13] = 0;
            a[14] = 0;
            a[15] = 1;
          },
          get: function (a, b) {
            return a[b];
          },
          set: function (a, b, c) {
            return (a[b] = c);
          },
        },
        R = {},
        ae = function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        };
      g["lime.math.Rectangle"] = ae;
      ae.__name__ = "lime.math.Rectangle";
      ae.prototype = {
        intersection: function (a, b) {
          null == b && (b = new ae());
          var c = this.x < a.x ? a.x : this.x,
            d =
              this.get_right() > a.get_right()
                ? a.get_right()
                : this.get_right();
          if (d <= c) return b.setEmpty(), b;
          var e = this.y < a.y ? a.y : this.y;
          a =
            this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          if (a <= e) return b.setEmpty(), b;
          b.x = c;
          b.y = e;
          b.width = d - c;
          b.height = a - e;
          return b;
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setEmpty: function () {
          this.x = this.y = this.width = this.height = 0;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        __toFlashRectangle: function () {
          return null;
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_right: function () {
          return this.x + this.width;
        },
        __class__: ae,
        __properties__: { get_right: "get_right", get_bottom: "get_bottom" },
      };
      var Ul = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = d;
        this.x = a;
        this.y = b;
        this.z = c;
      };
      g["lime.math.Vector4"] = Ul;
      Ul.__name__ = "lime.math.Vector4";
      Ul.prototype = { __class__: Ul };
      var Wb = function () {};
      g["lime.media.AudioBuffer"] = Wb;
      Wb.__name__ = "lime.media.AudioBuffer";
      Wb.fromBytes = function (a) {
        if (null == a) return null;
        var b = new Wb();
        b.set_src(
          new Howl({
            src: ["data:" + Wb.__getCodec(a) + ";base64," + jf.encode(a)],
            html5: !0,
            preload: !1,
          })
        );
        return b;
      };
      Wb.fromFile = function (a) {
        if (null == a) return null;
        var b = new Wb();
        b.__srcHowl = new Howl({ src: [a], preload: !1 });
        return b;
      };
      Wb.fromFiles = function (a) {
        var b = new Wb();
        b.__srcHowl = new Howl({ src: a, preload: !1 });
        return b;
      };
      Wb.loadFromFile = function (a) {
        var b = new Wc(),
          c = Wb.fromFile(a);
        null != c
          ? null != c &&
            (c.__srcHowl.on("load", function () {
              b.complete(c);
            }),
            c.__srcHowl.on("loaderror", function (a, c) {
              b.error(c);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      Wb.loadFromFiles = function (a) {
        var b = new Wc(),
          c = Wb.fromFiles(a);
        null != c
          ? (c.__srcHowl.on("load", function () {
              b.complete(c);
            }),
            c.__srcHowl.on("loaderror", function () {
              b.error(null);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      Wb.__getCodec = function (a) {
        switch (a.getString(0, 4)) {
          case "OggS":
            return "audio/ogg";
          case "RIFF":
            if ("WAVE" == a.getString(8, 4)) return "audio/wav";
            var b = a.b[2],
              c = a.b[1];
            switch (a.b[0]) {
              case 73:
                if (68 == c && 51 == b) return "audio/mp3";
                break;
              case 255:
                switch (c) {
                  case 243:
                  case 250:
                  case 251:
                    return "audio/mp3";
                }
            }
            break;
          case "fLaC":
            return "audio/flac";
          default:
            switch (((b = a.b[2]), (c = a.b[1]), a.b[0])) {
              case 73:
                if (68 == c && 51 == b) return "audio/mp3";
                break;
              case 255:
                switch (c) {
                  case 243:
                  case 250:
                  case 251:
                    return "audio/mp3";
                }
            }
        }
        Pa.error("Unsupported sound format", {
          fileName: "lime/media/AudioBuffer.hx",
          lineNumber: 362,
          className: "lime.media.AudioBuffer",
          methodName: "__getCodec",
        });
        return null;
      };
      Wb.prototype = {
        get_src: function () {
          return this.__srcHowl;
        },
        set_src: function (a) {
          return (this.__srcHowl = a);
        },
        __class__: Wb,
        __properties__: { set_src: "set_src", get_src: "get_src" },
      };
      var km = function (a) {
        if ("custom" != a) {
          if (null == a || "web" == a)
            try {
              (window.AudioContext =
                window.AudioContext || window.webkitAudioContext),
                (this.web = new window.AudioContext()),
                (this.type = "web");
            } catch (b) {
              Ba.lastError = b;
            }
          null == this.web &&
            "web" != a &&
            ((this.html5 = new jm()), (this.type = "html5"));
        } else this.type = "custom";
      };
      g["lime.media.AudioContext"] = km;
      km.__name__ = "lime.media.AudioContext";
      km.prototype = { __class__: km };
      var Ag = function () {};
      g["lime.media.AudioManager"] = Ag;
      Ag.__name__ = "lime.media.AudioManager";
      Ag.init = function (a) {
        if (null == Ag.context) {
          if (
            null == a &&
            ((Ag.context = new km()), (a = Ag.context), "openal" == a.type)
          ) {
            var b = a.openal,
              c = b.openDevice();
            c = b.createContext(c);
            b.makeContextCurrent(c);
            b.processContext(c);
          }
          Ag.context = a;
        }
      };
      var sl = function (a, b, c, d) {
        null == d && (d = 0);
        null == b && (b = 0);
        this.onComplete = new kc();
        this.buffer = a;
        this.offset = b;
        this.__backend = new Vl(this);
        null != c && 0 != c && this.set_length(c);
        this.set_loops(d);
        null != a && this.init();
      };
      g["lime.media.AudioSource"] = sl;
      sl.__name__ = "lime.media.AudioSource";
      sl.prototype = {
        dispose: function () {
          this.__backend.dispose();
        },
        init: function () {
          this.__backend.init();
        },
        play: function () {
          this.__backend.play();
        },
        stop: function () {
          this.__backend.stop();
        },
        get_currentTime: function () {
          return this.__backend.getCurrentTime();
        },
        set_currentTime: function (a) {
          return this.__backend.setCurrentTime(a);
        },
        get_gain: function () {
          return this.__backend.getGain();
        },
        set_gain: function (a) {
          return this.__backend.setGain(a);
        },
        set_length: function (a) {
          return this.__backend.setLength(a);
        },
        set_loops: function (a) {
          return this.__backend.setLoops(a);
        },
        get_position: function () {
          return this.__backend.getPosition();
        },
        set_position: function (a) {
          return this.__backend.setPosition(a);
        },
        __class__: sl,
        __properties__: {
          set_loops: "set_loops",
          set_length: "set_length",
          set_position: "set_position",
          get_position: "get_position",
          set_gain: "set_gain",
          get_gain: "get_gain",
          set_currentTime: "set_currentTime",
          get_currentTime: "get_currentTime",
        },
      };
      var jm = function () {};
      g["lime.media.HTML5AudioContext"] = jm;
      jm.__name__ = "lime.media.HTML5AudioContext";
      jm.prototype = { __class__: jm };
      var Wm = function () {};
      g["lime.media.OpenALAudioContext"] = Wm;
      Wm.__name__ = "lime.media.OpenALAudioContext";
      Wm.prototype = {
        createContext: function (a, b) {
          return Vf.createContext(a, b);
        },
        makeContextCurrent: function (a) {
          return Vf.makeContextCurrent(a);
        },
        openDevice: function (a) {
          return Vf.openDevice(a);
        },
        processContext: function (a) {
          Vf.processContext(a);
        },
        __class__: Wm,
      };
      var Vf = function () {};
      g["lime.media.openal.ALC"] = Vf;
      Vf.__name__ = "lime.media.openal.ALC";
      Vf.createContext = function (a, b) {
        return null;
      };
      Vf.makeContextCurrent = function (a) {
        return !1;
      };
      Vf.openDevice = function (a) {
        return null;
      };
      Vf.processContext = function (a) {};
      var kk = function () {};
      g["lime.net._IHTTPRequest"] = kk;
      kk.__name__ = "lime.net._IHTTPRequest";
      kk.__isInterface__ = !0;
      kk.prototype = { __class__: kk };
      var Ve = function (a) {
        this.uri = a;
        this.contentType = "application/x-www-form-urlencoded";
        this.followRedirects = !0;
        this.enableResponseHeaders = !1;
        this.formData = new ea();
        this.headers = [];
        this.method = "GET";
        this.timeout = 3e4;
        this.withCredentials = !1;
        this.__backend = new Aa();
        this.__backend.init(this);
      };
      g["lime.net._HTTPRequest.AbstractHTTPRequest"] = Ve;
      Ve.__name__ = "lime.net._HTTPRequest.AbstractHTTPRequest";
      Ve.__interfaces__ = [kk];
      Ve.prototype = { __class__: Ve };
      var ng = function (a) {
        Ve.call(this, a);
      };
      g["lime.net._HTTPRequest_Bytes"] = ng;
      ng.__name__ = "lime.net._HTTPRequest_Bytes";
      ng.__super__ = Ve;
      ng.prototype = r(Ve.prototype, {
        fromBytes: function (a) {
          return a;
        },
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new Wc();
          a = this.__backend.loadData(this.uri);
          a.onProgress(q(c, c.progress));
          a.onError(q(c, c.error));
          a.onComplete(function (a) {
            b.responseData = b.fromBytes(a);
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: ng,
      });
      var og = function (a) {
        Ve.call(this, a);
      };
      g["lime.net._HTTPRequest_String"] = og;
      og.__name__ = "lime.net._HTTPRequest_String";
      og.__super__ = Ve;
      og.prototype = r(Ve.prototype, {
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new Wc();
          a = this.__backend.loadText(this.uri);
          a.onProgress(q(c, c.progress));
          a.onError(q(c, c.error));
          a.onComplete(function (a) {
            b.responseData = a;
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: og,
      });
      var ek = function (a, b) {
        null == b && (b = "");
        this.name = a;
        this.value = b;
      };
      g["lime.net.HTTPRequestHeader"] = ek;
      ek.__name__ = "lime.net.HTTPRequestHeader";
      ek.prototype = { __class__: ek };
      var lk = function (a) {
        Ve.call(this, a);
      };
      g["lime.net._HTTPRequest_lime_utils_Bytes"] = lk;
      lk.__name__ = "lime.net._HTTPRequest_lime_utils_Bytes";
      lk.__super__ = ng;
      lk.prototype = r(ng.prototype, {
        fromBytes: function (a) {
          return zf.fromBytes(a);
        },
        __class__: lk,
      });
      var mk = function (a) {
        Ve.call(this, a);
      };
      g["lime.net._HTTPRequest_openfl_utils_ByteArray"] = mk;
      mk.__name__ = "lime.net._HTTPRequest_openfl_utils_ByteArray";
      mk.__super__ = ng;
      mk.prototype = r(ng.prototype, {
        fromBytes: function (a) {
          return bl.fromBytes(a);
        },
        __class__: mk,
      });
      var Dc = function () {};
      g["lime.system.Clipboard"] = Dc;
      Dc.__name__ = "lime.system.Clipboard";
      Dc.__properties__ = { set_text: "set_text", get_text: "get_text" };
      Dc.__update = function () {
        var a = Dc._text;
        Dc._text = null;
        Dc._text != a && Dc.onUpdate.dispatch();
      };
      Dc.get_text = function () {
        Dc.__update();
        return Dc._text;
      };
      Dc.set_text = function (a) {
        var b = Dc._text;
        Dc._text = a;
        var c = ua.current.__window;
        null != c && c.__backend.setClipboard(a);
        Dc._text != b && Dc.onUpdate.dispatch();
        return a;
      };
      var fn = (z["lime.system.Endian"] = {
          __ename__: "lime.system.Endian",
          __constructs__: ["LITTLE_ENDIAN", "BIG_ENDIAN"],
          LITTLE_ENDIAN: {
            _hx_index: 0,
            __enum__: "lime.system.Endian",
            toString: l,
          },
          BIG_ENDIAN: {
            _hx_index: 1,
            __enum__: "lime.system.Endian",
            toString: l,
          },
        }),
        Gd = function (a, b) {
          this.onUpdate = new Zl();
          this.type = a;
          this.id = b;
        };
      g["lime.system.Sensor"] = Gd;
      Gd.__name__ = "lime.system.Sensor";
      Gd.getSensors = function (a) {
        if (null == a) return Gd.sensors.slice();
        for (var b = [], c = 0, d = Gd.sensors; c < d.length; ) {
          var e = d[c];
          ++c;
          e.type == a && b.push(e);
        }
        return b;
      };
      Gd.registerSensor = function (a, b) {
        a = new Gd(a, b);
        Gd.sensors.push(a);
        return (Gd.sensorByID.h[b] = a);
      };
      Gd.prototype = { __class__: Gd };
      var jn = (z["lime.system.SensorType"] = {
          __ename__: "lime.system.SensorType",
          __constructs__: ["ACCELEROMETER"],
          ACCELEROMETER: {
            _hx_index: 0,
            __enum__: "lime.system.SensorType",
            toString: l,
          },
        }),
        nc = function () {};
      g["lime.system.System"] = nc;
      nc.__name__ = "lime.system.System";
      nc.__properties__ = { get_endianness: "get_endianness" };
      nc.embed = t.lime.embed = function (a, b, c, d, e) {
        if (
          null != nc.__applicationEntryPoint &&
          Object.prototype.hasOwnProperty.call(nc.__applicationEntryPoint.h, a)
        ) {
          var f =
            "string" == typeof b
              ? window.document.getElementById(b)
              : null == b
              ? window.document.createElement("div")
              : b;
          null == f
            ? window.console.log(
                "[lime.embed] ERROR: Cannot find target element: " + I.string(b)
              )
            : (null == c && (c = 0),
              null == d && (d = 0),
              null == e && (e = {}),
              Object.prototype.hasOwnProperty.call(e, "background") &&
                "string" == typeof e.background &&
                ((b = K.replace(I.string(e.background), "#", "")),
                -1 < b.indexOf("0x")
                  ? (e.background = I.parseInt(b))
                  : (e.background = I.parseInt("0x" + b))),
              (e.element = f),
              (e.width = c),
              (e.height = d),
              nc.__applicationEntryPoint.h[a](e));
        }
      };
      nc.exit = function (a) {};
      nc.getTimer = function () {
        return window.performance.now() | 0;
      };
      nc.openURL = function (a, b) {
        null == b && (b = "_blank");
        null != a && window.open(a, b);
      };
      nc.__registerEntryPoint = function (a, b) {
        null == nc.__applicationEntryPoint &&
          (nc.__applicationEntryPoint = new ea());
        nc.__applicationEntryPoint.h[a] = b;
      };
      nc.get_endianness = function () {
        if (null == nc.__endianness) {
          var a = new ArrayBuffer(2),
            b = null,
            c = null,
            d = null,
            e = null,
            f = null,
            h = (b =
              null != b
                ? new Uint8Array(b)
                : null != c
                ? new Uint8Array(c)
                : null != d
                ? new Uint8Array(d.__array)
                : null != e
                ? new Uint8Array(e)
                : null != a
                ? null == f
                  ? new Uint8Array(a, 0)
                  : new Uint8Array(a, 0, f)
                : null);
          f = e = d = c = b = null;
          b =
            null != b
              ? new Uint16Array(b)
              : null != c
              ? new Uint16Array(c)
              : null != d
              ? new Uint16Array(d.__array)
              : null != e
              ? new Uint16Array(e)
              : null != a
              ? null == f
                ? new Uint16Array(a, 0)
                : new Uint16Array(a, 0, f)
              : null;
          h[0] = 170;
          h[1] = 187;
          nc.__endianness = 43707 == b[0] ? fn.BIG_ENDIAN : fn.LITTLE_ENDIAN;
        }
        return nc.__endianness;
      };
      var Yl = function (a, b) {
        null == b && (b = 1);
        null == a && (a = 0);
        this.onRun = new bh();
        this.onError = new bh();
        this.onComplete = new bh();
        this.doWork = new bh();
        this.minThreads = a;
        this.maxThreads = b;
        this.currentThreads = 0;
      };
      g["lime.system.ThreadPool"] = Yl;
      Yl.__name__ = "lime.system.ThreadPool";
      Yl.prototype = {
        queue: function (a) {
          this.runWork(a);
        },
        sendComplete: function (a) {
          this.onComplete.dispatch(a);
        },
        sendError: function (a) {
          this.onError.dispatch(a);
        },
        runWork: function (a) {
          this.onRun.dispatch(a);
          this.doWork.dispatch(a);
        },
        __class__: Yl,
      };
      var mc = function (a) {
        this.onDisconnect = new kc();
        this.onButtonUp = new ik();
        this.onButtonDown = new ik();
        this.onAxisMove = new gm();
        this.id = a;
        this.connected = !0;
      };
      g["lime.ui.Gamepad"] = mc;
      mc.__name__ = "lime.ui.Gamepad";
      mc.__connect = function (a) {
        if (!mc.devices.h.hasOwnProperty(a)) {
          var b = new mc(a);
          mc.devices.h[a] = b;
          mc.onConnect.dispatch(b);
        }
      };
      mc.__disconnect = function (a) {
        var b = mc.devices.h[a];
        null != b && (b.connected = !1);
        mc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      mc.prototype = { __class__: mc };
      var cc = function (a) {
        this.onTrackballMove = new cm();
        this.onHatMove = new em();
        this.onDisconnect = new kc();
        this.onButtonUp = new bg();
        this.onButtonDown = new bg();
        this.onAxisMove = new dm();
        this.id = a;
        this.connected = !0;
      };
      g["lime.ui.Joystick"] = cc;
      cc.__name__ = "lime.ui.Joystick";
      cc.__connect = function (a) {
        if (!cc.devices.h.hasOwnProperty(a)) {
          var b = new cc(a);
          cc.devices.h[a] = b;
          cc.onConnect.dispatch(b);
        }
      };
      cc.__disconnect = function (a) {
        var b = cc.devices.h[a];
        null != b && (b.connected = !1);
        cc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      cc.__getDeviceData = function () {
        return navigator.getGamepads
          ? navigator.getGamepads()
          : navigator.webkitGetGamepads
          ? navigator.webkitGetGamepads()
          : null;
      };
      cc.prototype = { __class__: cc };
      var Nb = {
          __properties__: {
            get_shiftKey: "get_shiftKey",
            get_metaKey: "get_metaKey",
            get_ctrlKey: "get_ctrlKey",
            get_altKey: "get_altKey",
          },
          get_altKey: function (a) {
            return 0 >= (a & 256) ? 0 < (a & 512) : !0;
          },
          get_ctrlKey: function (a) {
            return 0 >= (a & 64) ? 0 < (a & 128) : !0;
          },
          get_metaKey: function (a) {
            return 0 >= (a & 1024) ? 0 < (a & 2048) : !0;
          },
          get_shiftKey: function (a) {
            return 0 >= (a & 1) ? 0 < (a & 2) : !0;
          },
        },
        Ub = (z["lime.ui.MouseCursor"] = {
          __ename__: "lime.ui.MouseCursor",
          __constructs__:
            "ARROW CROSSHAIR DEFAULT MOVE POINTER RESIZE_NESW RESIZE_NS RESIZE_NWSE RESIZE_WE TEXT WAIT WAIT_ARROW CUSTOM".split(
              " "
            ),
          ARROW: { _hx_index: 0, __enum__: "lime.ui.MouseCursor", toString: l },
          CROSSHAIR: {
            _hx_index: 1,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          DEFAULT: {
            _hx_index: 2,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          MOVE: { _hx_index: 3, __enum__: "lime.ui.MouseCursor", toString: l },
          POINTER: {
            _hx_index: 4,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          RESIZE_NESW: {
            _hx_index: 5,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          RESIZE_NS: {
            _hx_index: 6,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          RESIZE_NWSE: {
            _hx_index: 7,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          RESIZE_WE: {
            _hx_index: 8,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          TEXT: { _hx_index: 9, __enum__: "lime.ui.MouseCursor", toString: l },
          WAIT: { _hx_index: 10, __enum__: "lime.ui.MouseCursor", toString: l },
          WAIT_ARROW: {
            _hx_index: 11,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
          CUSTOM: {
            _hx_index: 12,
            __enum__: "lime.ui.MouseCursor",
            toString: l,
          },
        }),
        Xl = (z["lime.ui.MouseWheelMode"] = {
          __ename__: "lime.ui.MouseWheelMode",
          __constructs__: ["PIXELS", "LINES", "PAGES", "UNKNOWN"],
          PIXELS: {
            _hx_index: 0,
            __enum__: "lime.ui.MouseWheelMode",
            toString: l,
          },
          LINES: {
            _hx_index: 1,
            __enum__: "lime.ui.MouseWheelMode",
            toString: l,
          },
          PAGES: {
            _hx_index: 2,
            __enum__: "lime.ui.MouseWheelMode",
            toString: l,
          },
          UNKNOWN: {
            _hx_index: 3,
            __enum__: "lime.ui.MouseWheelMode",
            toString: l,
          },
        }),
        Fc = function (a, b, c, d, e, f, h) {
          this.x = a;
          this.y = b;
          this.id = c;
          this.dx = d;
          this.dy = e;
          this.pressure = f;
          this.device = h;
        };
      g["lime.ui.Touch"] = Fc;
      Fc.__name__ = "lime.ui.Touch";
      Fc.prototype = { __class__: Fc };
      var ei = function (a, b) {
        this.onTextInput = new gk();
        this.onTextEdit = new fm();
        this.onRestore = new kc();
        this.onResize = new fk();
        this.onRenderContextRestored = new hk();
        this.onRenderContextLost = new kc();
        this.onRender = new hk();
        this.onMove = new di();
        this.onMouseWheel = new bm();
        this.onMouseUp = new $l();
        this.onMouseMoveRelative = new di();
        this.onMouseMove = new di();
        this.onMouseDown = new am();
        this.onMinimize = new kc();
        this.onLeave = new kc();
        this.onKeyUp = new jk();
        this.onKeyDown = new jk();
        this.onFullscreen = new kc();
        this.onFocusOut = new kc();
        this.onFocusIn = new kc();
        this.onExpose = new kc();
        this.onEnter = new kc();
        this.onDropFile = new gk();
        this.onDeactivate = new kc();
        this.onClose = new kc();
        this.onActivate = new kc();
        this.application = a;
        this.__attributes = null != b ? b : {};
        Object.prototype.hasOwnProperty.call(this.__attributes, "parameters") &&
          (this.parameters = this.__attributes.parameters);
        this.__height = this.__width = 0;
        this.__fullscreen = !1;
        this.__scale = 1;
        this.__y = this.__x = 0;
        this.__title = "";
        this.id = -1;
        this.__backend = new Ka(this);
      };
      g["lime.ui.Window"] = ei;
      ei.__name__ = "lime.ui.Window";
      ei.prototype = {
        close: function () {
          this.__backend.close();
        },
        set_cursor: function (a) {
          return this.__backend.setCursor(a);
        },
        set_fullscreen: function (a) {
          return (this.__fullscreen = this.__backend.setFullscreen(a));
        },
        __class__: ei,
        __properties__: {
          set_fullscreen: "set_fullscreen",
          set_cursor: "set_cursor",
        },
      };
      var We = function () {
        this.data = new ea();
        this.paths = [];
      };
      g["lime.utils.AssetBundle"] = We;
      We.__name__ = "lime.utils.AssetBundle";
      We.fromBytes = function (a) {
        a = new Uj(a);
        return We.__extractBundle(a);
      };
      We.loadFromBytes = function (a) {
        return Ja.withValue(We.fromBytes(a));
      };
      We.loadFromFile = function (a) {
        return zf.loadFromFile(a).then(We.loadFromBytes);
      };
      We.__extractBundle = function (a) {
        var b = bi.readZip(a);
        a = new We();
        for (b = b.h; null != b; ) {
          var c = b.item;
          b = b.next;
          if (c.compressed) {
            var d = a.data,
              e = c.fileName,
              f = zf.decompress(c.data, Cn.DEFLATE);
            d.h[e] = f;
          } else a.data.h[c.fileName] = c.data;
          a.paths.push(c.fileName);
        }
        return a;
      };
      We.prototype = { __class__: We };
      var lm = function () {
        this.enabled = !0;
        this.audio = new ea();
        this.font = new ea();
        this.image = new ea();
        this.version = 256408;
      };
      g["lime.utils.AssetCache"] = lm;
      lm.__name__ = "lime.utils.AssetCache";
      lm.prototype = {
        exists: function (a, b) {
          return (("IMAGE" == b || null == b) &&
            Object.prototype.hasOwnProperty.call(this.image.h, a)) ||
            (("FONT" == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.font.h, a)) ||
            (("SOUND" == b || "MUSIC" == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.audio.h, a))
            ? !0
            : !1;
        },
        set: function (a, b, c) {
          switch (b) {
            case "FONT":
              this.font.h[a] = c;
              break;
            case "IMAGE":
              if (!(c instanceof Da))
                throw C.thrown(
                  "Cannot cache non-Image asset: " + I.string(c) + " as Image"
                );
              this.image.h[a] = c;
              break;
            case "MUSIC":
            case "SOUND":
              if (!(c instanceof Wb))
                throw C.thrown(
                  "Cannot cache non-AudioBuffer asset: " +
                    I.string(c) +
                    " as AudioBuffer"
                );
              this.audio.h[a] = c;
              break;
            default:
              throw C.thrown(b + " assets are not cachable");
          }
        },
        clear: function (a) {
          if (null == a)
            (this.audio = new ea()),
              (this.font = new ea()),
              (this.image = new ea());
          else {
            for (var b = ea.keysIterator(this.audio.h); b.hasNext(); ) {
              var c = b.next();
              if (K.startsWith(c, a)) {
                var d = this.audio;
                Object.prototype.hasOwnProperty.call(d.h, c) && delete d.h[c];
              }
            }
            for (b = ea.keysIterator(this.font.h); b.hasNext(); )
              (c = b.next()),
                K.startsWith(c, a) &&
                  ((d = this.font),
                  Object.prototype.hasOwnProperty.call(d.h, c) &&
                    delete d.h[c]);
            for (b = ea.keysIterator(this.image.h); b.hasNext(); )
              (c = b.next()),
                K.startsWith(c, a) &&
                  ((d = this.image),
                  Object.prototype.hasOwnProperty.call(d.h, c) &&
                    delete d.h[c]);
          }
        },
        __class__: lm,
      };
      var xb = function () {
        this.types = new ea();
        this.sizes = new ea();
        this.preload = new ea();
        this.paths = new ea();
        this.pathGroups = new ea();
        this.classTypes = new ea();
        this.cachedText = new ea();
        this.cachedImages = new ea();
        this.cachedFonts = new ea();
        this.cachedBytes = new ea();
        this.cachedAudioBuffers = new ea();
        this.onChange = new kc();
        this.bytesTotal = this.bytesLoaded = 0;
      };
      g["lime.utils.AssetLibrary"] = xb;
      xb.__name__ = "lime.utils.AssetLibrary";
      xb.fromBundle = function (a) {
        if (Object.prototype.hasOwnProperty.call(a.data.h, "library.json")) {
          var b = ed.fromBytes(a.data.h["library.json"]);
          if (null != b) {
            if (null == b.libraryType) var c = new xb();
            else if (((c = g[b.libraryType]), null != c))
              c = Ya.createInstance(c, b.libraryArgs);
            else
              return (
                Pa.warn("Could not find library type: " + b.libraryType, {
                  fileName: "lime/utils/AssetLibrary.hx",
                  lineNumber: 122,
                  className: "lime.utils.AssetLibrary",
                  methodName: "fromBundle",
                }),
                null
              );
            c.__fromBundle(a, b);
            return c;
          }
        } else return (c = new xb()), c.__fromBundle(a), c;
        return null;
      };
      xb.fromManifest = function (a) {
        if (null == a) return null;
        if (null == a.libraryType) var b = new xb();
        else if (((b = g[a.libraryType]), null != b))
          b = Ya.createInstance(b, a.libraryArgs);
        else
          return (
            Pa.warn("Could not find library type: " + a.libraryType, {
              fileName: "lime/utils/AssetLibrary.hx",
              lineNumber: 160,
              className: "lime.utils.AssetLibrary",
              methodName: "fromManifest",
            }),
            null
          );
        b.__fromManifest(a);
        return b;
      };
      xb.prototype = {
        exists: function (a, b) {
          b = null != b ? pa.__cast(b, String) : null;
          a = this.types.h[a];
          return null == a ||
            (a != b &&
              (("SOUND" != b && "MUSIC" != b) ||
                ("MUSIC" != a && "SOUND" != a)) &&
              "BINARY" != b &&
              null != b &&
              ("BINARY" != a || "TEXT" != b))
            ? !1
            : !0;
        },
        getAsset: function (a, b) {
          switch (b) {
            case "BINARY":
              return this.getBytes(a);
            case "FONT":
              return this.getFont(a);
            case "IMAGE":
              return this.getImage(a);
            case "MUSIC":
            case "SOUND":
              return this.getAudioBuffer(a);
            case "TEMPLATE":
              throw C.thrown("Not sure how to get template: " + a);
            case "TEXT":
              return this.getText(a);
            default:
              throw C.thrown("Unknown asset type: " + b);
          }
        },
        getAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a
          )
            ? this.cachedAudioBuffers.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? Wb.fromBytes(
                pa.__cast(Ya.createInstance(this.classTypes.h[a], []), gb)
              )
            : Wb.fromFile(this.paths.h[a]);
        },
        getBytes: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
            return this.cachedBytes.h[a];
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
            var b = zf.ofString(this.cachedText.h[a]);
            return (this.cachedBytes.h[a] = b);
          }
          return Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? pa.__cast(Ya.createInstance(this.classTypes.h[a], []), gb)
            : zf.fromFile(this.paths.h[a]);
        },
        getFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? this.cachedFonts.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? pa.__cast(Ya.createInstance(this.classTypes.h[a], []), tb)
            : tb.fromFile(this.paths.h[a]);
        },
        getImage: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? this.cachedImages.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? pa.__cast(Ya.createInstance(this.classTypes.h[a], []), Da)
            : Da.fromFile(this.paths.h[a]);
        },
        getText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return this.cachedText.h[a];
          a = this.getBytes(a);
          return null == a ? null : a.getString(0, a.length);
        },
        isLocal: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a))
            return !0;
          b = null != b ? pa.__cast(b, String) : null;
          if (null == b)
            return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
              ? !0
              : Object.prototype.hasOwnProperty.call(this.cachedText.h, a);
          switch (b) {
            case "FONT":
              return Object.prototype.hasOwnProperty.call(
                this.cachedFonts.h,
                a
              );
            case "IMAGE":
              return Object.prototype.hasOwnProperty.call(
                this.cachedImages.h,
                a
              );
            case "MUSIC":
            case "SOUND":
              return Object.prototype.hasOwnProperty.call(
                this.cachedAudioBuffers.h,
                a
              );
            default:
              return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? !0
                : Object.prototype.hasOwnProperty.call(this.cachedText.h, a);
          }
        },
        loadAsset: function (a, b) {
          switch (b) {
            case "BINARY":
              return this.loadBytes(a);
            case "FONT":
              return this.loadFont(a);
            case "IMAGE":
              return this.loadImage(a);
            case "MUSIC":
            case "SOUND":
              return this.loadAudioBuffer(a);
            case "TEMPLATE":
              throw C.thrown("Not sure how to load template: " + a);
            case "TEXT":
              return this.loadText(a);
            default:
              throw C.thrown("Unknown asset type: " + b);
          }
        },
        load: function () {
          if (this.loaded) return Ja.withValue(this);
          if (null == this.promise) {
            this.promise = new Wc();
            this.bytesLoadedCache = new ea();
            this.assetsLoaded = 0;
            this.assetsTotal = 1;
            for (var a = ea.keysIterator(this.preload.h); a.hasNext(); ) {
              var b = a.next();
              if (this.preload.h[b]) {
                Pa.verbose(
                  "Preloading asset: " + b + " [" + this.types.h[b] + "]",
                  {
                    fileName: "lime/utils/AssetLibrary.hx",
                    lineNumber: 405,
                    className: "lime.utils.AssetLibrary",
                    methodName: "load",
                  }
                );
                var c = this.types.h[b];
                if (null != c)
                  switch (c) {
                    case "BINARY":
                      this.assetsTotal++;
                      c = this.loadBytes(b);
                      c.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0](a[0], c, d);
                          };
                        })([b], [q(this, this.load_onProgress)])
                      );
                      c.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.load_onError)])
                      );
                      c.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.loadBytes_onComplete)])
                      );
                      break;
                    case "FONT":
                      this.assetsTotal++;
                      c = this.loadFont(b);
                      c.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0](a[0], c, d);
                          };
                        })([b], [q(this, this.load_onProgress)])
                      );
                      c.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.load_onError)])
                      );
                      c.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.loadFont_onComplete)])
                      );
                      break;
                    case "IMAGE":
                      this.assetsTotal++;
                      c = this.loadImage(b);
                      c.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0](a[0], c, d);
                          };
                        })([b], [q(this, this.load_onProgress)])
                      );
                      c.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.load_onError)])
                      );
                      c.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.loadImage_onComplete)])
                      );
                      break;
                    case "MUSIC":
                    case "SOUND":
                      this.assetsTotal++;
                      c = this.loadAudioBuffer(b);
                      c.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0](a[0], c, d);
                          };
                        })([b], [q(this, this.load_onProgress)])
                      );
                      c.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.loadAudioBuffer_onError)])
                      );
                      c.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0](a[0], c);
                          };
                        })([b], [q(this, this.loadAudioBuffer_onComplete)])
                      );
                      break;
                    case "TEXT":
                      this.assetsTotal++,
                        (c = this.loadText(b)),
                        c.onProgress(
                          (function (a, b) {
                            return function (c, d) {
                              b[0](a[0], c, d);
                            };
                          })([b], [q(this, this.load_onProgress)])
                        ),
                        c.onError(
                          (function (a, b) {
                            return function (c) {
                              b[0](a[0], c);
                            };
                          })([b], [q(this, this.load_onError)])
                        ),
                        c.onComplete(
                          (function (a, b) {
                            return function (c) {
                              b[0](a[0], c);
                            };
                          })([b], [q(this, this.loadText_onComplete)])
                        );
                  }
              }
            }
            this.__assetLoaded(null);
          }
          return this.promise.future;
        },
        loadAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a
          )
            ? Ja.withValue(this.cachedAudioBuffers.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? Ja.withValue(Ya.createInstance(this.classTypes.h[a], []))
            : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
            ? Wb.loadFromFiles(this.pathGroups.h[a])
            : Wb.loadFromFile(this.paths.h[a]);
        },
        loadBytes: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
            ? Ja.withValue(this.cachedBytes.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? Ja.withValue(Ya.createInstance(this.classTypes.h[a], []))
            : zf.loadFromFile(this.paths.h[a]);
        },
        loadFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? Ja.withValue(this.cachedFonts.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? ((a = Ya.createInstance(this.classTypes.h[a], [])),
              a.__loadFromName(a.name))
            : tb.loadFromName(this.paths.h[a]);
        },
        loadImage: function (a) {
          var b = this;
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? Ja.withValue(this.cachedImages.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? Ja.withValue(Ya.createInstance(this.classTypes.h[a], []))
            : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
            ? Da.loadFromBytes(this.cachedBytes.h[a]).then(function (c) {
                var d = b.cachedBytes;
                Object.prototype.hasOwnProperty.call(d.h, a) && delete d.h[a];
                b.cachedImages.h[a] = c;
                return Ja.withValue(c);
              })
            : Da.loadFromFile(this.paths.h[a]);
        },
        loadText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return Ja.withValue(this.cachedText.h[a]);
          if (
            Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ||
            Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
          ) {
            var b = this.getBytes(a);
            if (null == b) return Ja.withValue(null);
            b = b.getString(0, b.length);
            this.cachedText.h[a] = b;
            return Ja.withValue(b);
          }
          return new og().load(this.paths.h[a]);
        },
        unload: function () {},
        __assetLoaded: function (a) {
          this.assetsLoaded++;
          null != a &&
            Pa.verbose(
              "Loaded asset: " +
                a +
                " [" +
                this.types.h[a] +
                "] (" +
                (this.assetsLoaded - 1) +
                "/" +
                (this.assetsTotal - 1) +
                ")",
              {
                fileName: "lime/utils/AssetLibrary.hx",
                lineNumber: 619,
                className: "lime.utils.AssetLibrary",
                methodName: "__assetLoaded",
              }
            );
          if (null != a) {
            var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a)
              ? this.sizes.h[a]
              : 0;
            if (
              Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
            ) {
              var c = this.bytesLoadedCache.h[a];
              c < b && (this.bytesLoaded += b - c);
            } else this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b;
          }
          this.assetsLoaded < this.assetsTotal
            ? this.promise.progress(this.bytesLoaded, this.bytesTotal)
            : ((this.loaded = !0),
              this.promise.progress(this.bytesTotal, this.bytesTotal),
              this.promise.complete(this));
        },
        __cacheBreak: function (a) {
          return W.__cacheBreak(a);
        },
        __fromBundle: function (a, b) {
          if (null != b) {
            var c = 0;
            for (b = b.assets; c < b.length; ) {
              var d = b[c];
              ++c;
              var e = Object.prototype.hasOwnProperty.call(d, "id")
                ? d.id
                : d.path;
              var f = a.data.h[d.path];
              if (Object.prototype.hasOwnProperty.call(d, "type")) {
                var h = d.type;
                "TEXT" == h
                  ? (this.cachedText.h[e] = null != f ? I.string(f) : null)
                  : (this.cachedBytes.h[e] = f);
                this.types.h[e] = d.type;
              } else (this.cachedBytes.h[e] = f), (this.types.h[e] = "BINARY");
            }
          } else
            for (c = 0, b = a.paths; c < b.length; )
              (e = b[c]),
                ++c,
                (this.cachedBytes.h[e] = a.data.h[e]),
                (this.types.h[e] = "BINARY");
        },
        __fromManifest: function (a) {
          var b = 2 <= a.version,
            c = a.rootPath;
          null == c && (c = "");
          "" != c && (c += "/");
          for (var d = 0, e = a.assets; d < e.length; ) {
            var f = e[d];
            ++d;
            var h =
              b && Object.prototype.hasOwnProperty.call(f, "size")
                ? f.size
                : 100;
            var m = Object.prototype.hasOwnProperty.call(f, "id")
              ? f.id
              : f.path;
            if (Object.prototype.hasOwnProperty.call(f, "path")) {
              var n = this.paths;
              var p = this.__cacheBreak(
                this.__resolvePath(c + I.string(ia.field(f, "path")))
              );
              n.h[m] = p;
            }
            if (Object.prototype.hasOwnProperty.call(f, "pathGroup")) {
              n = ia.field(f, "pathGroup");
              p = 0;
              for (var l = n.length; p < l; ) {
                var k = p++;
                n[k] = this.__cacheBreak(this.__resolvePath(c + n[k]));
              }
              this.pathGroups.h[m] = n;
            }
            this.sizes.h[m] = h;
            this.types.h[m] = f.type;
            Object.prototype.hasOwnProperty.call(f, "preload") &&
              (this.preload.h[m] = ia.field(f, "preload"));
            Object.prototype.hasOwnProperty.call(f, "className") &&
              ((h = ia.field(f, "className")),
              (h = g[h]),
              (this.classTypes.h[m] = h));
          }
          d = this.bytesTotal = 0;
          for (e = a.assets; d < e.length; )
            (f = e[d]),
              ++d,
              (m = Object.prototype.hasOwnProperty.call(f, "id")
                ? f.id
                : f.path),
              Object.prototype.hasOwnProperty.call(this.preload.h, m) &&
                this.preload.h[m] &&
                Object.prototype.hasOwnProperty.call(this.sizes.h, m) &&
                (this.bytesTotal += this.sizes.h[m]);
        },
        __resolvePath: function (a) {
          a = K.replace(a, "\\", "/");
          var b = a.indexOf(":");
          K.startsWith(a, "http") && 0 < b
            ? ((b += 3),
              (a =
                ba.substr(a, 0, b) +
                K.replace(ba.substr(a, b, null), "//", "/")))
            : (a = K.replace(a, "//", "/"));
          if (-1 < a.indexOf("./")) {
            a = a.split("/");
            b = [];
            for (var c = 0, d = a.length; c < d; ) {
              var e = c++;
              ".." == a[e]
                ? 0 == e || ".." == b[e - 1]
                  ? b.push("..")
                  : b.pop()
                : "." == a[e]
                ? 0 == e && b.push(".")
                : b.push(a[e]);
            }
            a = b.join("/");
          }
          return a;
        },
        loadAudioBuffer_onComplete: function (a, b) {
          this.cachedAudioBuffers.h[a] = b;
          if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
            for (
              var c = this.pathGroups.h[a],
                d = ea.keysIterator(this.pathGroups.h);
              d.hasNext();

            ) {
              var e = d.next();
              if (e != a)
                for (var f = 0; f < c.length; ) {
                  var h = c[f];
                  ++f;
                  if (-1 < this.pathGroups.h[e].indexOf(h)) {
                    this.cachedAudioBuffers.h[e] = b;
                    break;
                  }
                }
            }
          this.__assetLoaded(a);
        },
        loadAudioBuffer_onError: function (a, b) {
          null != b && "" != b
            ? Pa.warn('Could not load "' + a + '": ' + I.string(b), {
                fileName: "lime/utils/AssetLibrary.hx",
                lineNumber: 865,
                className: "lime.utils.AssetLibrary",
                methodName: "loadAudioBuffer_onError",
              })
            : Pa.warn('Could not load "' + a + '"', {
                fileName: "lime/utils/AssetLibrary.hx",
                lineNumber: 869,
                className: "lime.utils.AssetLibrary",
                methodName: "loadAudioBuffer_onError",
              });
          this.loadAudioBuffer_onComplete(a, new Wb());
        },
        loadBytes_onComplete: function (a, b) {
          this.cachedBytes.h[a] = b;
          this.__assetLoaded(a);
        },
        loadFont_onComplete: function (a, b) {
          this.cachedFonts.h[a] = b;
          this.__assetLoaded(a);
        },
        loadImage_onComplete: function (a, b) {
          this.cachedImages.h[a] = b;
          this.__assetLoaded(a);
        },
        loadText_onComplete: function (a, b) {
          this.cachedText.h[a] = b;
          this.__assetLoaded(a);
        },
        load_onError: function (a, b) {
          null != b && "" != b
            ? this.promise.error(
                'Error loading asset "' + a + '": ' + I.string(b)
              )
            : this.promise.error('Error loading asset "' + a + '"');
        },
        load_onProgress: function (a, b, c) {
          if (0 < b) {
            var d = this.sizes.h[a];
            0 < c
              ? ((b /= c), 1 < b && (b = 1), (b = Math.floor(b * d)))
              : b > d && (b = d);
            Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
              ? ((d = this.bytesLoadedCache.h[a]),
                b != d && (this.bytesLoaded += b - d))
              : (this.bytesLoaded += b);
            this.bytesLoadedCache.h[a] = b;
            this.promise.progress(this.bytesLoaded, this.bytesTotal);
          }
        },
        __class__: xb,
      };
      var ed = function () {
        this.assets = [];
        this.libraryArgs = [];
        this.version = 2;
      };
      g["lime.utils.AssetManifest"] = ed;
      ed.__name__ = "lime.utils.AssetManifest";
      ed.fromBytes = function (a, b) {
        return null != a ? ed.parse(a.getString(0, a.length), b) : null;
      };
      ed.loadFromFile = function (a, b) {
        a = ed.__resolvePath(a);
        b = ed.__resolveRootPath(b, a);
        return null == a
          ? null
          : zf.loadFromFile(a).then(function (a) {
              return Ja.withValue(ed.fromBytes(a, b));
            });
      };
      ed.parse = function (a, b) {
        if (null == a || "" == a) return null;
        a = JSON.parse(a);
        var c = new ed();
        Object.prototype.hasOwnProperty.call(a, "name") && (c.name = a.name);
        Object.prototype.hasOwnProperty.call(a, "libraryType") &&
          (c.libraryType = a.libraryType);
        Object.prototype.hasOwnProperty.call(a, "libraryArgs") &&
          (c.libraryArgs = a.libraryArgs);
        if (Object.prototype.hasOwnProperty.call(a, "assets")) {
          var d = a.assets;
          Object.prototype.hasOwnProperty.call(a, "version") && 2 >= a.version
            ? (c.assets = jd.run(d))
            : (c.assets = d);
        }
        Object.prototype.hasOwnProperty.call(a, "rootPath") &&
          (c.rootPath = a.rootPath);
        null != b &&
          "" != b &&
          (c.rootPath =
            null == c.rootPath || "" == c.rootPath ? b : b + "/" + c.rootPath);
        return c;
      };
      ed.__resolvePath = function (a) {
        if (null == a) return null;
        var b = a.indexOf("?");
        var c = -1 < b ? ba.substr(a, 0, b) : a;
        for (c = K.replace(c, "\\", "/"); K.endsWith(c, "/"); )
          c = ba.substr(c, 0, c.length - 1);
        return K.endsWith(c, ".bundle")
          ? -1 < b
            ? c + "/library.json" + ba.substr(a, b, null)
            : c + "/library.json"
          : a;
      };
      ed.__resolveRootPath = function (a, b) {
        if (null != a) return a;
        a = b.indexOf("?");
        a = -1 < a ? ba.substr(b, 0, a) : b;
        for (a = K.replace(a, "\\", "/"); K.endsWith(a, "/"); ) {
          if ("/" == a) return a;
          a = ba.substr(a, 0, a.length - 1);
        }
        return K.endsWith(a, ".bundle") ? a : nf.directory(a);
      };
      ed.prototype = { __class__: ed };
      var W = function () {};
      g["lime.utils.Assets"] = W;
      W.__name__ = "lime.utils.Assets";
      W.exists = function (a, b) {
        null == b && (b = "BINARY");
        var c = a.indexOf(":"),
          d = a.substring(0, c);
        a = a.substring(c + 1);
        d = W.getLibrary(d);
        return null != d ? d.exists(a, b) : !1;
      };
      W.getAsset = function (a, b, c) {
        if (c && W.cache.enabled)
          switch (b) {
            case "BINARY":
            case "TEXT":
              c = !1;
              break;
            case "FONT":
              var d = W.cache.font.h[a];
              if (null != d) return d;
              break;
            case "IMAGE":
              d = W.cache.image.h[a];
              if (W.isValidImage(d)) return d;
              break;
            case "MUSIC":
            case "SOUND":
              d = W.cache.audio.h[a];
              if (W.isValidAudio(d)) return d;
              break;
            case "TEMPLATE":
              throw C.thrown("Not sure how to get template: " + a);
            default:
              return null;
          }
        var e = a.indexOf(":");
        d = a.substring(0, e);
        e = a.substring(e + 1);
        var f = W.getLibrary(d);
        if (null != f)
          if (f.exists(e, b)) {
            if (f.isLocal(e, b))
              return (
                (d = f.getAsset(e, b)),
                c && W.cache.enabled && W.cache.set(a, b, d),
                d
              );
            Pa.error(b + ' asset "' + a + '" exists, but only asynchronously', {
              fileName: "lime/utils/Assets.hx",
              lineNumber: 133,
              className: "lime.utils.Assets",
              methodName: "getAsset",
            });
          } else
            Pa.error("There is no " + b + ' asset with an ID of "' + a + '"', {
              fileName: "lime/utils/Assets.hx",
              lineNumber: 138,
              className: "lime.utils.Assets",
              methodName: "getAsset",
            });
        else
          Pa.error(W.__libraryNotFound(d), {
            fileName: "lime/utils/Assets.hx",
            lineNumber: 143,
            className: "lime.utils.Assets",
            methodName: "getAsset",
          });
        return null;
      };
      W.getAudioBuffer = function (a, b) {
        null == b && (b = !0);
        return W.getAsset(a, "SOUND", b);
      };
      W.getBytes = function (a) {
        return W.getAsset(a, "BINARY", !1);
      };
      W.getFont = function (a, b) {
        null == b && (b = !0);
        return W.getAsset(a, "FONT", b);
      };
      W.getImage = function (a, b) {
        null == b && (b = !0);
        return W.getAsset(a, "IMAGE", b);
      };
      W.getLibrary = function (a) {
        if (null == a || "" == a) a = "default";
        return W.libraries.h[a];
      };
      W.getText = function (a) {
        return W.getAsset(a, "TEXT", !1);
      };
      W.hasLibrary = function (a) {
        if (null == a || "" == a) a = "default";
        return Object.prototype.hasOwnProperty.call(W.libraries.h, a);
      };
      W.isLocal = function (a, b, c) {
        null == c && (c = !0);
        if (c && W.cache.enabled && W.cache.exists(a, b)) return !0;
        var d = a.indexOf(":");
        c = a.substring(0, d);
        a = a.substring(d + 1);
        c = W.getLibrary(c);
        return null != c ? c.isLocal(a, b) : !1;
      };
      W.isValidAudio = function (a) {
        return null != a;
      };
      W.isValidImage = function (a) {
        return null != a ? null != a.buffer : !1;
      };
      W.loadAsset = function (a, b, c) {
        if (c && W.cache.enabled)
          switch (b) {
            case "BINARY":
            case "TEXT":
              c = !1;
              break;
            case "FONT":
              var d = W.cache.font.h[a];
              if (null != d) return Ja.withValue(d);
              break;
            case "IMAGE":
              d = W.cache.image.h[a];
              if (W.isValidImage(d)) return Ja.withValue(d);
              break;
            case "MUSIC":
            case "SOUND":
              d = W.cache.audio.h[a];
              if (W.isValidAudio(d)) return Ja.withValue(d);
              break;
            case "TEMPLATE":
              throw C.thrown("Not sure how to get template: " + a);
            default:
              return null;
          }
        var e = a.indexOf(":");
        d = a.substring(0, e);
        e = a.substring(e + 1);
        var f = W.getLibrary(d);
        if (null != f) {
          if (f.exists(e, b)) {
            d = f.loadAsset(e, b);
            if (c && W.cache.enabled)
              d.onComplete(function (c) {
                W.cache.set(a, b, c);
              });
            return d;
          }
          return Ja.withError(
            "There is no " + b + ' asset with an ID of "' + a + '"'
          );
        }
        return Ja.withError(W.__libraryNotFound(d));
      };
      W.loadAudioBuffer = function (a, b) {
        null == b && (b = !0);
        return W.loadAsset(a, "SOUND", b);
      };
      W.loadLibrary = function (a) {
        var b = new Wc(),
          c = W.getLibrary(a);
        if (null != c) return c.load();
        c = a;
        var d = null;
        if (Object.prototype.hasOwnProperty.call(W.bundlePaths.h, a))
          We.loadFromFile(W.bundlePaths.h[a])
            .onComplete(function (c) {
              null == c
                ? b.error('Cannot load bundle for library "' + a + '"')
                : ((c = xb.fromBundle(c)),
                  null == c
                    ? b.error('Cannot open library "' + a + '"')
                    : ((W.libraries.h[a] = c),
                      c.onChange.add(((y = W.onChange), q(y, y.dispatch))),
                      b.completeWith(c.load())));
            })
            .onError(function (c) {
              b.error('There is no asset library with an ID of "' + a + '"');
            });
        else
          Object.prototype.hasOwnProperty.call(W.libraryPaths.h, a)
            ? ((c = W.libraryPaths.h[a]), (d = nf.directory(c)))
            : (K.endsWith(c, ".bundle")
                ? ((d = c), (c += "/library.json"))
                : (d = nf.directory(c)),
              (c = W.__cacheBreak(c))),
            ed
              .loadFromFile(c, d)
              .onComplete(function (c) {
                null == c
                  ? b.error(
                      'Cannot parse asset manifest for library "' + a + '"'
                    )
                  : ((c = xb.fromManifest(c)),
                    null == c
                      ? b.error('Cannot open library "' + a + '"')
                      : ((W.libraries.h[a] = c),
                        c.onChange.add(((y = W.onChange), q(y, y.dispatch))),
                        b.completeWith(c.load())));
              })
              .onError(function (c) {
                b.error('There is no asset library with an ID of "' + a + '"');
              });
        return b.future;
      };
      W.registerLibrary = function (a, b) {
        if (Object.prototype.hasOwnProperty.call(W.libraries.h, a)) {
          if (W.libraries.h[a] == b) return;
          W.unloadLibrary(a);
        }
        null != b && b.onChange.add(W.library_onChange);
        W.libraries.h[a] = b;
      };
      W.unloadLibrary = function (a) {
        if (null == a || "" == a) a = "default";
        var b = W.libraries.h[a];
        null != b &&
          (W.cache.clear(a + ":"),
          b.onChange.remove(W.library_onChange),
          b.unload());
        b = W.libraries;
        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
      };
      W.__cacheBreak = function (a) {
        0 < W.cache.version &&
          (a =
            -1 < a.indexOf("?")
              ? a + ("&" + W.cache.version)
              : a + ("?" + W.cache.version));
        return a;
      };
      W.__libraryNotFound = function (a) {
        if (null == a || "" == a) a = "default";
        return null == ua.current ||
          null == ua.current.__preloader ||
          ua.current.__preloader.complete
          ? 'There is no asset library named "' + a + '"'
          : 'There is no asset library named "' +
              a +
              '", or it is not yet preloaded';
      };
      W.library_onChange = function () {
        W.cache.clear();
        W.onChange.dispatch();
      };
      var mm = function (a, b) {
        this.bytes = a;
        this.offset = b;
      };
      g["lime.utils.BytePointerData"] = mm;
      mm.__name__ = "lime.utils.BytePointerData";
      mm.prototype = { __class__: mm };
      var zf = {
          _new: function (a, b) {
            return new gb(b);
          },
          decompress: function (a, b) {
            switch (b._hx_index) {
              case 0:
                return Qm.decompress(a);
              case 1:
                return Rm.decompress(a);
              case 2:
                return Sm.decompress(a);
              case 3:
                return Tm.decompress(a);
            }
          },
          fromBytes: function (a) {
            return null == a ? null : zf._new(a.length, a.b.bufferValue);
          },
          fromFile: function (a) {
            return null;
          },
          loadFromFile: function (a) {
            return new lk().load(a);
          },
          ofString: function (a) {
            a = gb.ofString(a);
            return zf._new(a.length, a.b.bufferValue);
          },
        },
        Cn = (z["lime.utils.CompressionAlgorithm"] = {
          __ename__: "lime.utils.CompressionAlgorithm",
          __constructs__: ["DEFLATE", "GZIP", "LZMA", "ZLIB"],
          DEFLATE: {
            _hx_index: 0,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: l,
          },
          GZIP: {
            _hx_index: 1,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: l,
          },
          LZMA: {
            _hx_index: 2,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: l,
          },
          ZLIB: {
            _hx_index: 3,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: l,
          },
        }),
        aj = {
          toArrayBufferView: function (a) {
            return a;
          },
        },
        Pa = function () {};
      g["lime.utils.Log"] = Pa;
      Pa.__name__ = "lime.utils.Log";
      Pa.error = function (a, b) {
        if (1 <= Pa.level) {
          a = "[" + b.className + "] ERROR: " + I.string(a);
          if (Pa.throwErrors) throw C.thrown(a);
          console.error(a);
        }
      };
      Pa.info = function (a, b) {
        3 <= Pa.level && console.info("[" + b.className + "] " + I.string(a));
      };
      Pa.verbose = function (a, b) {
        5 <= Pa.level &&
          ((a = "[" + b.className + "] " + I.string(a)), console.log(a));
      };
      Pa.warn = function (a, b) {
        2 <= Pa.level &&
          console.warn("[" + b.className + "] WARNING: " + I.string(a));
      };
      var Vk = function () {
        this.bytesTotalCache = new ea();
        this.bytesLoadedCache2 = new ea();
        this.bytesLoadedCache = new uc();
        this.onProgress = new fk();
        this.onComplete = new kc();
        this.bytesTotal = this.bytesLoaded = 0;
        this.libraries = [];
        this.libraryNames = [];
        this.onProgress.add(q(this, this.update));
      };
      g["lime.utils.Preloader"] = Vk;
      Vk.__name__ = "lime.utils.Preloader";
      Vk.prototype = {
        addLibrary: function (a) {
          this.libraries.push(a);
        },
        addLibraryName: function (a) {
          -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a);
        },
        load: function () {
          for (var a = this, b = 0, c = this.libraries; b < c.length; ) {
            var d = c[b];
            ++b;
            this.bytesTotal += d.bytesTotal;
          }
          this.loadedLibraries = -1;
          this.preloadStarted = !1;
          b = 0;
          for (c = this.libraries; b < c.length; )
            (d = [c[b]]),
              ++b,
              Pa.verbose("Preloading asset library", {
                fileName: "lime/utils/Preloader.hx",
                lineNumber: 132,
                className: "lime.utils.Preloader",
                methodName: "load",
              }),
              d[0]
                .load()
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + c
                          : a.bytesLoaded +
                            (c - a.bytesLoadedCache.h[b[0].__id__]);
                      a.bytesLoadedCache.set(b[0], c);
                      a.simulateProgress ||
                        a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal);
                    };
                  })(d)
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + b[0].bytesTotal
                          : a.bytesLoaded +
                            (b[0].bytesTotal -
                              a.bytesLoadedCache.h[b[0].__id__]);
                      a.loadedAssetLibrary();
                    };
                  })(d)
                )
                .onError(
                  (function () {
                    return function (a) {
                      Pa.error(a, {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 168,
                        className: "lime.utils.Preloader",
                        methodName: "load",
                      });
                    };
                  })()
                );
          b = 0;
          for (c = this.libraryNames; b < c.length; )
            ++b, (this.bytesTotal += 200);
          this.loadedLibraries++;
          this.preloadStarted = !0;
          this.updateProgress();
        },
        loadedAssetLibrary: function (a) {
          this.loadedLibraries++;
          var b = this.loadedLibraries;
          this.preloadStarted || ++b;
          var c = this.libraries.length + this.libraryNames.length;
          null != a
            ? Pa.verbose(
                "Loaded asset library: " + a + " [" + b + "/" + c + "]",
                {
                  fileName: "lime/utils/Preloader.hx",
                  lineNumber: 195,
                  className: "lime.utils.Preloader",
                  methodName: "loadedAssetLibrary",
                }
              )
            : Pa.verbose("Loaded asset library [" + b + "/" + c + "]", {
                fileName: "lime/utils/Preloader.hx",
                lineNumber: 199,
                className: "lime.utils.Preloader",
                methodName: "loadedAssetLibrary",
              });
          this.updateProgress();
        },
        start: function () {
          this.complete ||
            this.simulateProgress ||
            !this.preloadComplete ||
            ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {},
        updateProgress: function () {
          var a = this;
          this.simulateProgress ||
            this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
          if (
            this.loadedLibraries == this.libraries.length &&
            !this.initLibraryNames
          ) {
            this.initLibraryNames = !0;
            for (var b = 0, c = this.libraryNames; b < c.length; ) {
              var d = [c[b]];
              ++b;
              Pa.verbose("Preloading asset library: " + d[0], {
                fileName: "lime/utils/Preloader.hx",
                lineNumber: 236,
                className: "lime.utils.Preloader",
                methodName: "updateProgress",
              });
              W.loadLibrary(d[0])
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      0 < d &&
                        (Object.prototype.hasOwnProperty.call(
                          a.bytesTotalCache.h,
                          b[0]
                        ) ||
                          ((a.bytesTotalCache.h[b[0]] = d),
                          (a.bytesTotal += d - 200)),
                        c > d && (c = d),
                        Object.prototype.hasOwnProperty.call(
                          a.bytesLoadedCache2.h,
                          b[0]
                        )
                          ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                          : (a.bytesLoaded += c),
                        (a.bytesLoadedCache2.h[b[0]] = c),
                        a.simulateProgress ||
                          a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal));
                    };
                  })(d)
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      c = 200;
                      Object.prototype.hasOwnProperty.call(
                        a.bytesTotalCache.h,
                        b[0]
                      ) && (c = a.bytesTotalCache.h[b[0]]);
                      Object.prototype.hasOwnProperty.call(
                        a.bytesLoadedCache2.h,
                        b[0]
                      )
                        ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                        : (a.bytesLoaded += c);
                      a.loadedAssetLibrary(b[0]);
                    };
                  })(d)
                )
                .onError(
                  (function () {
                    return function (a) {
                      Pa.error(a, {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 290,
                        className: "lime.utils.Preloader",
                        methodName: "updateProgress",
                      });
                    };
                  })()
                );
            }
          }
          this.simulateProgress ||
            this.loadedLibraries !=
              this.libraries.length + this.libraryNames.length ||
            (this.preloadComplete ||
              ((this.preloadComplete = !0),
              Pa.verbose("Preload complete", {
                fileName: "lime/utils/Preloader.hx",
                lineNumber: 301,
                className: "lime.utils.Preloader",
                methodName: "updateProgress",
              })),
            this.start());
        },
        __class__: Vk,
      };
      var na = function () {};
      g["openfl.Lib"] = na;
      na.__name__ = "openfl.Lib";
      na.__properties__ = { get_current: "get_current" };
      na.getTimer = function () {
        return nc.getTimer();
      };
      na.getURL = function (a, b) {
        na.navigateToURL(a, b);
      };
      na.navigateToURL = function (a, b) {
        null == b && (b = "_blank");
        var c = a.url;
        if (Ya.typeof(a.data) == Ud.TObject) {
          for (var d = "", e = ia.fields(a.data), f = 0; f < e.length; ) {
            var h = e[f];
            ++f;
            0 < d.length && (d += "&");
            var m = encodeURIComponent(h) + "=";
            h = I.string(ia.field(a.data, h));
            d += m + encodeURIComponent(h);
          }
          c = -1 < c.indexOf("?") ? c + ("&" + d) : c + ("?" + d);
        }
        nc.openURL(c, b);
      };
      na.get_current = function () {
        null == ad.current && (ad.current = new Wf());
        return ad.current;
      };
      var pg = function () {};
      g["openfl._Vector.IVector"] = pg;
      pg.__name__ = "openfl._Vector.IVector";
      pg.__isInterface__ = !0;
      var nk = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g["openfl._Vector.BoolVector"] = nk;
      nk.__name__ = "openfl._Vector.BoolVector";
      nk.__interfaces__ = [pg];
      nk.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = !1;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: nk,
        __properties__: { set_length: "set_length" },
      };
      var Ze = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var e = c.length; d < e; ) {
              var f = d++;
              this.__array[f] = c[f];
            }
          }
        } else null == c && (c = []), (this.__array = c);
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g["openfl._Vector.FloatVector"] = Ze;
      Ze.__name__ = "openfl._Vector.FloatVector";
      Ze.__interfaces__ = [pg];
      Ze.prototype = {
        concat: function (a) {
          return null == a
            ? new Ze(0, !1, this.__array.slice())
            : 0 < a.__array.length
            ? new Ze(0, !1, this.__array.concat(a.__array))
            : new Ze(0, !1, this.__array.slice());
        },
        copy: function () {
          return new Ze(0, this.fixed, this.__array.slice());
        },
        get: function (a) {
          return this.__array[a];
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        splice: function (a, b) {
          return new Ze(0, !1, this.__array.splice(a, b));
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (a != this.__array.length && !this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Ze,
        __properties__: { set_length: "set_length", get_length: "get_length" },
      };
      var ok = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g["openfl._Vector.FunctionVector"] = ok;
      ok.__name__ = "openfl._Vector.FunctionVector";
      ok.__interfaces__ = [pg];
      ok.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = null;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: ok,
        __properties__: { set_length: "set_length" },
      };
      var Cg = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g["openfl._Vector.IntVector"] = Cg;
      Cg.__name__ = "openfl._Vector.IntVector";
      Cg.__interfaces__ = [pg];
      Cg.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        iterator: function () {
          return new Xe(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        splice: function (a, b) {
          return new Cg(0, !1, this.__array.splice(a, b));
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Cg,
        __properties__: { set_length: "set_length", get_length: "get_length" },
      };
      var Dg = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var e = c.length; d < e; ) {
              var f = d++;
              this.__array[f] = c[f];
            }
          }
        } else null == c && (c = []), (this.__array = c);
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g["openfl._Vector.ObjectVector"] = Dg;
      Dg.__name__ = "openfl._Vector.ObjectVector";
      Dg.__interfaces__ = [pg];
      Dg.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        insertAt: function (a, b) {
          (!this.fixed || a < this.__array.length) &&
            this.__array.splice(a, 0, b);
        },
        iterator: function () {
          return new Xe(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        splice: function (a, b) {
          return new Dg(0, !1, this.__array.splice(a, b));
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b) for (; b < a; ) b++, this.__array.push(null);
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Dg,
        __properties__: { set_length: "set_length", get_length: "get_length" },
      };
      var ad = function () {};
      g["openfl._internal.Lib"] = ad;
      ad.__name__ = "openfl._internal.Lib";
      var Qa = function () {};
      g["openfl._internal.formats.html.HTMLParser"] = Qa;
      Qa.__name__ = "openfl._internal.formats.html.HTMLParser";
      Qa.parse = function (a, b, c) {
        a = a.replace(Qa.__regexBreakTag.r, "\n");
        a = a.replace(Qa.__regexEntities[0].r, '"');
        a = a.replace(Qa.__regexEntities[1].r, "'");
        a = a.replace(Qa.__regexEntities[2].r, "&");
        a = a.replace(Qa.__regexEntities[5].r, " ");
        var d = a.split("<");
        if (1 == d.length)
          (a = a.replace(Qa.__regexHTMLTag.r, "")),
            1 < c.get_length() && c.splice(1, c.get_length() - 1),
            (a = a.replace(Qa.__regexEntities[3].r, "<")),
            (a = a.replace(Qa.__regexEntities[4].r, ">")),
            (c = c.get(0)),
            (c.format = b),
            (c.start = 0),
            (c.end = a.length);
        else {
          c.splice(0, c.get_length());
          a = "";
          for (var e, f = 0, h = d.length; f < h; ) {
            var m = f++;
            e = d[m];
            e = e.replace(Qa.__regexEntities[3].r, "<");
            e = e.replace(Qa.__regexEntities[4].r, ">");
            d[m] = e;
          }
          m = [b.clone()];
          var n = [],
            p = !1;
          for (f = 0; f < d.length; )
            if (((e = d[f]), ++f, "" != e)) {
              var l = "/" == ba.substr(e, 0, 1);
              h = e.indexOf(">");
              var k = h + 1,
                g = e.indexOf(" ");
              g = e.substring(l ? 1 : 0, -1 < g && g < h ? g : h);
              if (l)
                0 == n.length ||
                g.toLowerCase() != n[n.length - 1].toLowerCase()
                  ? Pa.info(
                      "Invalid HTML, unexpected closing tag ignored: " + g,
                      {
                        fileName: "openfl/_internal/formats/html/HTMLParser.hx",
                        lineNumber: 97,
                        className: "openfl._internal.formats.html.HTMLParser",
                        methodName: "parse",
                      }
                    )
                  : (n.pop(),
                    m.pop(),
                    (l = m[m.length - 1].clone()),
                    "p" == g.toLowerCase() &&
                      0 < c.get_length() &&
                      ((a += "\n"), (p = !0)),
                    k < e.length &&
                      ((e = ba.substr(e, k, null)),
                      c.push(new Af(l, a.length, a.length + e.length)),
                      (a += e),
                      (p = !1)));
              else if (((l = m[m.length - 1].clone()), -1 < h)) {
                switch (g.toLowerCase()) {
                  case "a":
                    Qa.__regexHref.match(e) &&
                      (l.url = Qa.__getAttributeMatch(Qa.__regexHref));
                    break;
                  case "b":
                    l.bold = !0;
                    break;
                  case "em":
                  case "i":
                    l.italic = !0;
                    break;
                  case "font":
                    Qa.__regexFace.match(e) &&
                      (l.font = Qa.__getAttributeMatch(Qa.__regexFace));
                    Qa.__regexColor.match(e) &&
                      (l.color = I.parseInt(
                        "0x" + Qa.__getAttributeMatch(Qa.__regexColor)
                      ));
                    if (Qa.__regexSize.match(e)) {
                      h = Qa.__getAttributeMatch(Qa.__regexSize);
                      var u = ba.cca(h, 0);
                      l.size =
                        43 == u || 45 == u
                          ? (2 <= m.length ? m[m.length - 2] : b).size +
                            I.parseInt(h)
                          : I.parseInt(h);
                    }
                    break;
                  case "p":
                    0 < c.get_length() && !p && (a += "\n");
                    Qa.__regexAlign.match(e) &&
                      ((h = Qa.__getAttributeMatch(
                        Qa.__regexAlign
                      ).toLowerCase()),
                      (l.align = Dn.fromString(h)));
                    break;
                  case "textformat":
                    Qa.__regexBlockIndent.match(e) &&
                      (l.blockIndent = I.parseInt(
                        Qa.__getAttributeMatch(Qa.__regexBlockIndent)
                      ));
                    Qa.__regexIndent.match(e) &&
                      (l.indent = I.parseInt(
                        Qa.__getAttributeMatch(Qa.__regexIndent)
                      ));
                    Qa.__regexLeading.match(e) &&
                      (l.leading = I.parseInt(
                        Qa.__getAttributeMatch(Qa.__regexLeading)
                      ));
                    Qa.__regexLeftMargin.match(e) &&
                      (l.leftMargin = I.parseInt(
                        Qa.__getAttributeMatch(Qa.__regexLeftMargin)
                      ));
                    Qa.__regexRightMargin.match(e) &&
                      (l.rightMargin = I.parseInt(
                        Qa.__getAttributeMatch(Qa.__regexRightMargin)
                      ));
                    if (Qa.__regexTabStops.match(e)) {
                      u = Qa.__getAttributeMatch(Qa.__regexTabStops).split(" ");
                      var q = [];
                      for (h = 0; h < u.length; ) {
                        var r = u[h];
                        ++h;
                        q.push(I.parseInt(r));
                      }
                      l.tabStops = q;
                    }
                    break;
                  case "u":
                    l.underline = !0;
                }
                m.push(l);
                n.push(g);
                k < e.length &&
                  ((e = e.substring(k)),
                  c.push(new Af(l, a.length, a.length + e.length)),
                  (a += e),
                  (p = !1));
              } else
                c.push(new Af(l, a.length, a.length + e.length)),
                  (a += e),
                  (p = !1);
            }
          0 == c.get_length() && c.push(new Af(m[0], 0, 0));
        }
        return a;
      };
      Qa.__getAttributeMatch = function (a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3);
      };
      var qg = function () {
        this.rollOutStack = [];
      };
      g["openfl._internal.utils.TouchData"] = qg;
      qg.__name__ = "openfl._internal.utils.TouchData";
      qg.prototype = {
        reset: function () {
          this.touchOverTarget = this.touchDownTarget = this.touch = null;
          this.rollOutStack.splice(0, this.rollOutStack.length);
        },
        __class__: qg,
      };
      var nh = function () {
        ua.call(this);
        null == ad.application && (ad.application = this);
        null == ad.current && (ad.current = new Wf());
        ad.current.__loaderInfo = kf.create(null);
        ad.current.__loaderInfo.content = ad.current;
      };
      g["openfl.display.Application"] = nh;
      nh.__name__ = "openfl.display.Application";
      nh.__super__ = ua;
      nh.prototype = r(ua.prototype, {
        createWindow: function (a) {
          var b = new Bg(this, a);
          this.__windows.push(b);
          this.__windowByID.h[b.id] = b;
          var c = q(this, this.__onWindowClose);
          b.onClose.add(
            function () {
              c(b);
            },
            !1,
            -1e4
          );
          null == this.__window &&
            ((this.__window = b),
            b.onActivate.add(q(this, this.onWindowActivate)),
            b.onRenderContextLost.add(q(this, this.onRenderContextLost)),
            b.onRenderContextRestored.add(
              q(this, this.onRenderContextRestored)
            ),
            b.onDeactivate.add(q(this, this.onWindowDeactivate)),
            b.onDropFile.add(q(this, this.onWindowDropFile)),
            b.onEnter.add(q(this, this.onWindowEnter)),
            b.onExpose.add(q(this, this.onWindowExpose)),
            b.onFocusIn.add(q(this, this.onWindowFocusIn)),
            b.onFocusOut.add(q(this, this.onWindowFocusOut)),
            b.onFullscreen.add(q(this, this.onWindowFullscreen)),
            b.onKeyDown.add(q(this, this.onKeyDown)),
            b.onKeyUp.add(q(this, this.onKeyUp)),
            b.onLeave.add(q(this, this.onWindowLeave)),
            b.onMinimize.add(q(this, this.onWindowMinimize)),
            b.onMouseDown.add(q(this, this.onMouseDown)),
            b.onMouseMove.add(q(this, this.onMouseMove)),
            b.onMouseMoveRelative.add(q(this, this.onMouseMoveRelative)),
            b.onMouseUp.add(q(this, this.onMouseUp)),
            b.onMouseWheel.add(q(this, this.onMouseWheel)),
            b.onMove.add(q(this, this.onWindowMove)),
            b.onRender.add(q(this, this.render)),
            b.onResize.add(q(this, this.onWindowResize)),
            b.onRestore.add(q(this, this.onWindowRestore)),
            b.onTextEdit.add(q(this, this.onTextEdit)),
            b.onTextInput.add(q(this, this.onTextInput)),
            this.onWindowCreate());
          this.onCreateWindow.dispatch(b);
          return b;
        },
        __class__: nh,
      });
      var Ob = function (a, b, c) {
        null == c && (c = !1);
        ta.call(this);
        this.__bitmapData = a;
        this.pixelSnapping = b;
        this.smoothing = c;
        null == b && (this.pixelSnapping = 1);
      };
      g["openfl.display.Bitmap"] = Ob;
      Ob.__name__ = "openfl.display.Bitmap";
      Ob.__super__ = ta;
      Ob.prototype = r(ta.prototype, {
        __enterFrame: function (a) {
          null == this.__bitmapData ||
            null == this.__bitmapData.image ||
            this.__bitmapData.image.version == this.__imageVersion ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = ma.__pool.get();
          null != this.__bitmapData
            ? c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height)
            : c.setTo(0, 0, 0, 0);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          ma.__pool.release(c);
        },
        __hitTest: function (a, b, c, d, e, f) {
          if (
            !f.get_visible() ||
            this.__isMask ||
            null == this.__bitmapData ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var h = this.__renderTransform,
            m = h.a * h.d - h.b * h.c;
          c = 0 == m ? -h.tx : (1 / m) * (h.c * (h.ty - b) + h.d * (a - h.tx));
          h = this.__renderTransform;
          m = h.a * h.d - h.b * h.c;
          a = 0 == m ? -h.ty : (1 / m) * (h.a * (b - h.ty) + h.b * (h.tx - a));
          if (
            0 < c &&
            0 < a &&
            c <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
          ) {
            if (null != this.__scrollRect && !this.__scrollRect.contains(c, a))
              return !1;
            null == d || e || d.push(f);
            return !0;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          if (null == this.__bitmapData) return !1;
          this.__getRenderTransform();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            e =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          a = 0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
          return 0 < e &&
            0 < a &&
            e <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
            ? !0
            : !1;
        },
        __renderCairo: function (a) {},
        __renderCairoMask: function (a) {
          a.cairo.rectangle(0, 0, this.get_width(), this.get_height());
        },
        __renderCanvas: function (a) {
          this.__updateCacheBitmap(a, !1);
          null != this.__bitmapData &&
            null != this.__bitmapData.image &&
            (this.__imageVersion = this.__bitmapData.image.version);
          if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
            if (
              !(
                (null == this.opaqueBackground && null == this.__graphics) ||
                !this.__renderable ||
                ((r = a.__getAlpha(this.__worldAlpha)), 0 >= r)
              )
            ) {
              if (
                null != this.opaqueBackground &&
                !this.__isCacheBitmapRender &&
                0 < this.get_width() &&
                0 < this.get_height()
              ) {
                a.__setBlendMode(this.__worldBlendMode);
                a.__pushMaskObject(this);
                z = a.context;
                a.setTransform(this.__renderTransform, z);
                var b = this.opaqueBackground;
                z.fillStyle =
                  "rgb(" +
                  ((b >>> 16) & 255) +
                  "," +
                  ((b >>> 8) & 255) +
                  "," +
                  (b & 255) +
                  ")";
                z.fillRect(0, 0, this.get_width(), this.get_height());
                a.__popMaskObject(this);
              }
              if (
                null != this.__graphics &&
                this.__renderable &&
                ((r = a.__getAlpha(this.__worldAlpha)), !(0 >= r))
              ) {
                var c = this.__graphics;
                if (null != c) {
                  w.render(c, a);
                  var d = c.__width,
                    e = c.__height;
                  b = c.__canvas;
                  if (null != b && c.__visible && 1 <= d && 1 <= e) {
                    var f = c.__worldTransform;
                    z = a.context;
                    v = this.__scrollRect;
                    var h = this.__worldScale9Grid;
                    if (null == v || (0 < v.width && 0 < v.height)) {
                      a.__setBlendMode(this.__worldBlendMode);
                      a.__pushMaskObject(this);
                      z.globalAlpha = r;
                      if (null != h && 0 == f.b && 0 == f.c) {
                        z.setTransform(1, 0, 0, 1, f.tx, f.ty);
                        var m = c.__bounds,
                          n = c.__renderTransform.a,
                          p = c.__renderTransform.d,
                          l = f.a,
                          k = f.d;
                        f = Math.max(1, Math.round(h.x * n));
                        c = Math.round(h.y * p);
                        r = Math.max(
                          1,
                          Math.round((m.get_right() - h.get_right()) * n)
                        );
                        v = Math.round((m.get_bottom() - h.get_bottom()) * p);
                        n = Math.round(h.width * n);
                        p = Math.round(h.height * p);
                        var g = Math.round(h.x * l),
                          u = Math.round(h.y * k),
                          q = Math.round((m.get_right() - h.get_right()) * l);
                        h = Math.round((m.get_bottom() - h.get_bottom()) * k);
                        m = Math.round(d * l) - g - q;
                        l = Math.round(e * k) - u - h;
                        a.applySmoothing(z, !1);
                        0 != n && 0 != p
                          ? (z.drawImage(b, 0, 0, f, c, 0, 0, g, u),
                            z.drawImage(b, f, 0, n, c, g, 0, m, u),
                            z.drawImage(b, f + n, 0, r, c, g + m, 0, q, u),
                            z.drawImage(b, 0, c, f, p, 0, u, g, l),
                            z.drawImage(b, f, c, n, p, g, u, m, l),
                            z.drawImage(b, f + n, c, r, p, g + m, u, q, l),
                            z.drawImage(b, 0, c + p, f, v, 0, u + l, g, h),
                            z.drawImage(b, f, c + p, n, v, g, u + l, m, h),
                            z.drawImage(
                              b,
                              f + n,
                              c + p,
                              r,
                              v,
                              g + m,
                              u + l,
                              q,
                              h
                            ))
                          : 0 == n && 0 != p
                          ? ((e = g + m + q),
                            z.drawImage(b, 0, 0, d, c, 0, 0, e, u),
                            z.drawImage(b, 0, c, d, p, 0, u, e, l),
                            z.drawImage(b, 0, c + p, d, v, 0, u + l, e, h))
                          : 0 == p &&
                            0 != n &&
                            ((d = u + l + h),
                            z.drawImage(b, 0, 0, f, e, 0, 0, g, d),
                            z.drawImage(b, f, 0, n, e, g, 0, m, d),
                            z.drawImage(b, f + n, 0, r, e, g + m, 0, q, d));
                      } else
                        a.setTransform(f, z),
                          a.__isDOM && ((h = 1 / a.pixelRatio), z.scale(h, h)),
                          z.drawImage(b, 0, 0, d, e);
                      a.__popMaskObject(this);
                    }
                  }
                }
              }
            }
            this.__renderable &&
              ((r = a.__getAlpha(this.__worldAlpha)),
              0 < r &&
                null != this.__bitmapData &&
                this.__bitmapData.__isValid &&
                this.__bitmapData.readable &&
                ((z = a.context),
                a.__setBlendMode(this.__worldBlendMode),
                a.__pushMaskObject(this, !1),
                Oa.convertToCanvas(this.__bitmapData.image),
                (z.globalAlpha = r),
                (v = this.__scrollRect),
                a.setTransform(this.__renderTransform, z),
                (a.__allowSmoothing && this.smoothing) ||
                  (z.imageSmoothingEnabled = !1),
                null == v
                  ? z.drawImage(
                      this.__bitmapData.image.get_src(),
                      0,
                      0,
                      this.__bitmapData.image.width,
                      this.__bitmapData.image.height
                    )
                  : z.drawImage(
                      this.__bitmapData.image.get_src(),
                      v.x,
                      v.y,
                      v.width,
                      v.height
                    ),
                (a.__allowSmoothing && this.smoothing) ||
                  (z.imageSmoothingEnabled = !0),
                a.__popMaskObject(this, !1)));
          } else if (((b = this.__cacheBitmap), b.__renderable)) {
            var r = a.__getAlpha(b.__worldAlpha);
            if (
              0 < r &&
              null != b.__bitmapData &&
              b.__bitmapData.__isValid &&
              b.__bitmapData.readable
            ) {
              var z = a.context;
              a.__setBlendMode(b.__worldBlendMode);
              a.__pushMaskObject(b, !1);
              Oa.convertToCanvas(b.__bitmapData.image);
              z.globalAlpha = r;
              var v = b.__scrollRect;
              a.setTransform(b.__renderTransform, z);
              (a.__allowSmoothing && b.smoothing) ||
                (z.imageSmoothingEnabled = !1);
              null == v
                ? z.drawImage(
                    b.__bitmapData.image.get_src(),
                    0,
                    0,
                    b.__bitmapData.image.width,
                    b.__bitmapData.image.height
                  )
                : z.drawImage(
                    b.__bitmapData.image.get_src(),
                    v.x,
                    v.y,
                    v.width,
                    v.height
                  );
              (a.__allowSmoothing && b.smoothing) ||
                (z.imageSmoothingEnabled = !0);
              a.__popMaskObject(b, !1);
            }
          }
          this.__renderEvent(a);
        },
        __renderCanvasMask: function (a) {
          a.context.rect(0, 0, this.get_width(), this.get_height());
        },
        __renderDOM: function (a) {
          this.__updateCacheBitmap(a, !1);
          if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
            null != this.opaqueBackground &&
              !this.__isCacheBitmapRender &&
              0 < this.get_width() &&
              this.get_height();
            var b = this.__graphics;
            if (
              null != this.stage &&
              this.__worldVisible &&
              this.__renderable &&
              null != b
            ) {
              w.render(b, a.__canvasRenderer);
              if (
                b.__softwareDirty ||
                this.__worldAlphaChanged ||
                this.__canvas != b.__canvas
              )
                null != b.__canvas
                  ? this.__canvas != b.__canvas &&
                    (null != this.__canvas &&
                      a.element.removeChild(this.__canvas),
                    (this.__canvas = b.__canvas),
                    (this.__context = b.__context),
                    a.__initializeElement(this, this.__canvas))
                  : dg.clear(this, a);
              if (null != this.__canvas) {
                a.__pushMaskObject(this);
                var c = this.__renderTransform;
                this.__renderTransform = b.__worldTransform;
                b.__transformDirty &&
                  ((b.__transformDirty = !1),
                  (this.__renderTransformChanged = !0));
                a.__updateClip(this);
                a.__applyStyle(this, !0, !0, !0);
                this.__renderTransform = c;
                a.__popMaskObject(this);
              }
            } else dg.clear(this, a);
            null != this.stage &&
            this.__worldVisible &&
            this.__renderable &&
            null != this.__bitmapData &&
            this.__bitmapData.__isValid &&
            this.__bitmapData.readable
              ? (a.__pushMaskObject(this),
                null != this.__bitmapData.image.buffer.__srcImage
                  ? Kc.renderImage(this, a)
                  : Kc.renderCanvas(this, a),
                a.__popMaskObject(this))
              : Kc.clear(this, a);
          } else
            this.__renderDOMClear(a),
              (this.__cacheBitmap.stage = this.stage),
              (b = this.__cacheBitmap),
              null != b.stage &&
              b.__worldVisible &&
              b.__renderable &&
              null != b.__bitmapData &&
              b.__bitmapData.__isValid &&
              b.__bitmapData.readable
                ? (a.__pushMaskObject(b),
                  null != b.__bitmapData.image.buffer.__srcImage
                    ? Kc.renderImage(b, a)
                    : Kc.renderCanvas(b, a),
                  a.__popMaskObject(b))
                : Kc.clear(b, a);
          this.__renderEvent(a);
        },
        __renderDOMClear: function (a) {
          Kc.clear(this, a);
        },
        __renderGL: function (a) {
          this.__updateCacheBitmap(a, !1);
          null != this.__bitmapData &&
            null != this.__bitmapData.image &&
            (this.__imageVersion = this.__bitmapData.image.version);
          if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
            if (
              !(
                (null == this.opaqueBackground && null == this.__graphics) ||
                !this.__renderable ||
                0 >= this.__worldAlpha
              )
            ) {
              if (
                null != this.opaqueBackground &&
                !this.__isCacheBitmapRender &&
                0 < this.get_width() &&
                0 < this.get_height()
              ) {
                a.__setBlendMode(this.__worldBlendMode);
                a.__pushMaskObject(this);
                var b = a.__context3D,
                  c = ma.__pool.get();
                c.setTo(0, 0, this.get_width(), this.get_height());
                a.__pushMaskRect(c, this.__renderTransform);
                var d = this.opaqueBackground;
                b.clear(
                  ((d >>> 16) & 255) / 255,
                  ((d >>> 8) & 255) / 255,
                  (d & 255) / 255,
                  1,
                  0,
                  0,
                  1
                );
                a.__popMaskRect();
                a.__popMaskObject(this);
                ma.__pool.release(c);
              }
              null != this.__graphics && Df.render(this, a);
            }
            Cf.render(this, a);
          } else Cf.render(this.__cacheBitmap, a);
          this.__renderEvent(a);
        },
        __renderGLMask: function (a) {
          Cf.renderMask(this, a);
        },
        __updateCacheBitmap: function (a, b) {
          return null == this.__bitmapData ||
            (null == this.__filters &&
              "opengl" == a.__type &&
              null == this.__cacheBitmap)
            ? !1
            : ta.prototype.__updateCacheBitmap.call(
                this,
                a,
                null != this.__bitmapData.image &&
                  this.__bitmapData.image.version != this.__imageVersion
              );
        },
        get_bitmapData: function () {
          return this.__bitmapData;
        },
        set_bitmapData: function (a) {
          this.__bitmapData = a;
          this.smoothing = !1;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          this.__imageVersion = -1;
          return this.__bitmapData;
        },
        set_height: function (a) {
          null != this.__bitmapData
            ? this.set_scaleY(a / this.__bitmapData.height)
            : this.set_scaleY(0);
          return a;
        },
        set_width: function (a) {
          null != this.__bitmapData
            ? this.set_scaleX(a / this.__bitmapData.width)
            : this.set_scaleX(0);
          return a;
        },
        __class__: Ob,
        __properties__: r(ta.prototype.__properties__, {
          set_bitmapData: "set_bitmapData",
          get_bitmapData: "get_bitmapData",
        }),
      });
      var ld = function () {
        sa.call(this);
        this.__allowSmoothing = !0;
        this.__tempColorTransform = new Bb();
        this.__worldAlpha = 1;
      };
      g["openfl.display.DisplayObjectRenderer"] = ld;
      ld.__name__ = "openfl.display.DisplayObjectRenderer";
      ld.__super__ = sa;
      ld.prototype = r(sa.prototype, {
        __clear: function () {},
        __getAlpha: function (a) {
          return a * this.__worldAlpha;
        },
        __popMaskObject: function (a, b) {},
        __pushMaskObject: function (a, b) {},
        __render: function (a) {},
        __resize: function (a, b) {},
        __setBlendMode: function (a) {},
        __class__: ld,
      });
      var pk = function (a) {
        ld.call(this);
      };
      g["openfl.display.CairoRenderer"] = pk;
      pk.__name__ = "openfl.display.CairoRenderer";
      pk.__super__ = ld;
      pk.prototype = r(ld.prototype, {
        applyMatrix: function (a, b) {
          null == b && (b = this.cairo);
          this.__matrix.copyFrom(a);
          this.cairo == b &&
            null != this.__worldTransform &&
            this.__matrix.concat(this.__worldTransform);
          this.__matrix3.a = this.__matrix.a;
          this.__matrix3.b = this.__matrix.b;
          this.__matrix3.c = this.__matrix.c;
          this.__matrix3.d = this.__matrix.d;
          this.__roundPixels
            ? ((this.__matrix3.tx = Math.round(this.__matrix.tx)),
              (this.__matrix3.ty = Math.round(this.__matrix.ty)))
            : ((this.__matrix3.tx = this.__matrix.tx),
              (this.__matrix3.ty = this.__matrix.ty));
          b.set_matrix(this.__matrix3);
        },
        __clear: function () {
          if (
            null != this.cairo &&
            (this.cairo.identityMatrix(),
            null != this.__stage && this.__stage.__clearBeforeRender)
          ) {
            var a = this.__blendMode;
            this.__setBlendMode(10);
            this.cairo.setSourceRGB(
              this.__stage.__colorSplit[0],
              this.__stage.__colorSplit[1],
              this.__stage.__colorSplit[2]
            );
            this.cairo.paint();
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.cairo.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.cairo.restore();
        },
        __pushMask: function (a) {
          this.cairo.save();
          this.applyMatrix(a.__renderTransform, this.cairo);
          this.cairo.newPath();
          a.__renderCairoMask(this);
          this.cairo.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.cairo.save();
          this.applyMatrix(b, this.cairo);
          this.cairo.newPath();
          this.cairo.rectangle(a.x, a.y, a.width, a.height);
          this.cairo.clip();
        },
        __render: function (a) {
          null != this.cairo && a.__renderCairo(this);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a), this.__setBlendModeCairo(this.cairo, a));
        },
        __setBlendModeCairo: function (a, b) {
          switch (b) {
            case 0:
              a.setOperator(12);
              break;
            case 2:
              a.setOperator(17);
              break;
            case 3:
              a.setOperator(23);
              break;
            case 5:
              a.setOperator(21);
              break;
            case 7:
              a.setOperator(2);
              break;
            case 8:
              a.setOperator(18);
              break;
            case 9:
              a.setOperator(14);
              break;
            case 11:
              a.setOperator(16);
              break;
            case 12:
              a.setOperator(15);
              break;
            default:
              a.setOperator(2);
          }
        },
        __class__: pk,
      });
      var $e = function (a) {
        this.pixelRatio = 1;
        ld.call(this);
        this.context = a;
        this.__tempMatrix = new Ea();
        this.__type = "canvas";
      };
      g["openfl.display.CanvasRenderer"] = $e;
      $e.__name__ = "openfl.display.CanvasRenderer";
      $e.__super__ = ld;
      $e.prototype = r(ld.prototype, {
        applySmoothing: function (a, b) {
          a.imageSmoothingEnabled = b;
        },
        setTransform: function (a, b) {
          null == b
            ? (b = this.context)
            : this.context == b &&
              null != this.__worldTransform &&
              (this.__tempMatrix.copyFrom(a),
              this.__tempMatrix.concat(this.__worldTransform),
              (a = this.__tempMatrix));
          this.__roundPixels
            ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0)
            : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
        },
        __clear: function () {
          if (null != this.__stage) {
            var a = this.__blendMode;
            this.__blendMode = null;
            this.__setBlendMode(10);
            this.context.setTransform(1, 0, 0, 1, 0, 0);
            this.context.globalAlpha = 1;
            !this.__stage.__transparent && this.__stage.__clearBeforeRender
              ? ((this.context.fillStyle = this.__stage.__colorString),
                this.context.fillRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale
                ))
              : this.__stage.__transparent &&
                this.__stage.__clearBeforeRender &&
                this.context.clearRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale
                );
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.context.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.context.restore();
        },
        __pushMask: function (a) {
          this.context.save();
          this.setTransform(a.__renderTransform, this.context);
          this.context.beginPath();
          a.__renderCanvasMask(this);
          this.context.closePath();
          this.context.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.context.save();
          this.setTransform(b, this.context);
          this.context.beginPath();
          this.context.rect(a.x, a.y, a.width, a.height);
          this.context.clip();
        },
        __render: function (a) {
          a.__renderCanvas(this);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a),
            this.__setBlendModeContext(this.context, a));
        },
        __setBlendModeContext: function (a, b) {
          switch (b) {
            case 0:
              a.globalCompositeOperation = "lighter";
              break;
            case 2:
              a.globalCompositeOperation = "darken";
              break;
            case 3:
              a.globalCompositeOperation = "difference";
              break;
            case 5:
              a.globalCompositeOperation = "hard-light";
              break;
            case 8:
              a.globalCompositeOperation = "lighten";
              break;
            case 9:
              a.globalCompositeOperation = "multiply";
              break;
            case 11:
              a.globalCompositeOperation = "overlay";
              break;
            case 12:
              a.globalCompositeOperation = "screen";
              break;
            default:
              a.globalCompositeOperation = "source-over";
          }
        },
        __class__: $e,
      });
      var En = {
          toString: function (a) {
            switch (a) {
              case 0:
                return "none";
              case 1:
                return "round";
              case 2:
                return "square";
              default:
                return null;
            }
          },
        },
        dh = function (a) {
          this.pixelRatio = 1;
          ld.call(this);
          this.element = a;
          ta.__supportDOM = !0;
          a = window.getComputedStyle(document.documentElement, "");
          a = (Array.prototype.slice
            .call(a)
            .join("")
            .match(/-(moz|webkit|ms)-/) ||
            ("" === a.OLink && ["", "o"]))[1];
          "WebKit|Moz|MS|O".match(new RegExp("(" + a + ")", "i"));
          a[0].toUpperCase();
          a.substr(1);
          this.__vendorPrefix = a;
          this.__transformProperty =
            "webkit" == a ? "-webkit-transform" : "transform";
          this.__transformOriginProperty =
            "webkit" == a ? "-webkit-transform-origin" : "transform-origin";
          this.__clipRects = [];
          this.__z = this.__numClipRects = 0;
          this.__type = "dom";
          this.__canvasRenderer = new $e(null);
          this.__canvasRenderer.__isDOM = !0;
        };
      g["openfl.display.DOMRenderer"] = dh;
      dh.__name__ = "openfl.display.DOMRenderer";
      dh.__super__ = ld;
      dh.prototype = r(ld.prototype, {
        __applyStyle: function (a, b, c, d) {
          var e = a.__style;
          if (b && a.__renderTransformChanged) {
            b = a.__renderTransform;
            var f = this.__roundPixels;
            null == f && (f = !1);
            e.setProperty(
              this.__transformProperty,
              f
                ? "matrix3d(" +
                    b.a +
                    ", " +
                    b.b +
                    ", 0, 0, " +
                    b.c +
                    ", " +
                    b.d +
                    ", 0, 0, 0, 0, 1, 0, " +
                    (b.tx | 0) +
                    ", " +
                    (b.ty | 0) +
                    ", 0, 1)"
                : "matrix3d(" +
                    b.a +
                    ", " +
                    b.b +
                    ", 0, 0, " +
                    b.c +
                    ", " +
                    b.d +
                    ", 0, 0, 0, 0, 1, 0, " +
                    b.tx +
                    ", " +
                    b.ty +
                    ", 0, 1)",
              null
            );
          }
          a.__worldZ != ++this.__z &&
            ((a.__worldZ = this.__z),
            e.setProperty(
              "z-index",
              null == a.__worldZ ? "null" : "" + a.__worldZ,
              null
            ));
          c &&
            a.__worldAlphaChanged &&
            (1 > a.__worldAlpha
              ? e.setProperty(
                  "opacity",
                  null == a.__worldAlpha ? "null" : "" + a.__worldAlpha,
                  null
                )
              : e.removeProperty("opacity"));
          d &&
            a.__worldClipChanged &&
            (null == a.__worldClip
              ? e.removeProperty("clip")
              : ((a = a.__worldClip),
                e.setProperty(
                  "clip",
                  "rect(" +
                    a.y +
                    "px, " +
                    a.get_right() +
                    "px, " +
                    a.get_bottom() +
                    "px, " +
                    a.x +
                    "px)",
                  null
                )));
        },
        __initializeElement: function (a, b) {
          var c = (a.__style = b.style);
          c.setProperty("position", "absolute", null);
          c.setProperty("top", "0", null);
          c.setProperty("left", "0", null);
          c.setProperty(this.__transformOriginProperty, "0 0 0", null);
          this.element.appendChild(b);
          a.__worldAlphaChanged = !0;
          a.__renderTransformChanged = !0;
          a.__worldVisibleChanged = !0;
          a.__worldClipChanged = !0;
          a.__worldClip = null;
          a.__worldZ = -1;
        },
        __popMask: function () {
          this.__popMaskRect();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            (this.__currentClipRect =
              0 < this.__numClipRects
                ? this.__clipRects[this.__numClipRects - 1]
                : null));
        },
        __pushMask: function (a) {
          this.__pushMaskRect(a.getBounds(a), a.__renderTransform);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new ma());
          var c = this.__clipRects[this.__numClipRects];
          a.__transform(c, b);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            c.__contract(a.x, a.y, a.width, a.height));
          0 > c.height && (c.height = 0);
          0 > c.width && (c.width = 0);
          this.__currentClipRect = c;
          this.__numClipRects++;
        },
        __render: function (a) {
          this.element.style.background = this.__stage.__transparent
            ? "none"
            : this.__stage.__colorString;
          this.__z = 1;
          a.__renderDOM(this);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a);
        },
        __updateClip: function (a) {
          if (null == this.__currentClipRect)
            (a.__worldClipChanged = null != a.__worldClip),
              (a.__worldClip = null);
          else {
            null == a.__worldClip && (a.__worldClip = new ma());
            var b = ma.__pool.get(),
              c = Ea.__pool.get();
            c.copyFrom(a.__renderTransform);
            c.invert();
            this.__currentClipRect.__transform(b, c);
            b.equals(a.__worldClip)
              ? (a.__worldClipChanged = !1)
              : (a.__worldClip.copyFrom(b), (a.__worldClipChanged = !0));
            ma.__pool.release(b);
            Ea.__pool.release(c);
          }
        },
        __class__: dh,
      });
      var qk = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
        Vd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g["openfl.display.DisplayObjectShader"] = qk;
      qk.__name__ = "openfl.display.DisplayObjectShader";
      qk.__super__ = Vd;
      qk.prototype = r(Vd.prototype, { __class__: qk });
      var ec = function () {
        this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
        $a.call(this);
        this.__caretIndex = -1;
        this.__displayAsPassword = !1;
        this.__graphics = new pd(this);
        this.__textEngine = new vb(this);
        this.__layoutDirty = !0;
        this.__offsetY = this.__offsetX = 0;
        this.__mouseWheelEnabled = !0;
        this.__text = "";
        this.doubleClickEnabled = !0;
        null == ec.__defaultTextFormat &&
          ((ec.__defaultTextFormat = new zc(
            "Times New Roman",
            12,
            0,
            !1,
            !1,
            !1,
            "",
            "",
            3,
            0,
            0,
            0,
            0
          )),
          (ec.__defaultTextFormat.blockIndent = 0),
          (ec.__defaultTextFormat.bullet = !1),
          (ec.__defaultTextFormat.letterSpacing = 0),
          (ec.__defaultTextFormat.kerning = !1));
        this.__textFormat = ec.__defaultTextFormat.clone();
        this.__textEngine.textFormatRanges.push(
          new Af(this.__textFormat, 0, 0)
        );
        this.addEventListener("mouseDown", q(this, this.this_onMouseDown));
        this.addEventListener("focusIn", q(this, this.this_onFocusIn));
        this.addEventListener("focusOut", q(this, this.this_onFocusOut));
        this.addEventListener("keyDown", q(this, this.this_onKeyDown));
        this.addEventListener("mouseWheel", q(this, this.this_onMouseWheel));
        this.addEventListener("doubleClick", q(this, this.this_onDoubleClick));
      };
      g["openfl.text.TextField"] = ec;
      ec.__name__ = "openfl.text.TextField";
      ec.__super__ = $a;
      ec.prototype = r($a.prototype, {
        appendText: function (a) {
          null != a &&
            "" != a &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            this.__updateText(this.__text + a),
            (this.__textEngine.textFormatRanges.get(
              this.__textEngine.textFormatRanges.get_length() - 1
            ).end = this.__text.length),
            this.__updateScrollV(),
            this.__updateScrollH());
        },
        getCharBoundaries: function (a) {
          if (0 > a || a > this.__text.length - 1) return null;
          var b = new ma();
          return this.__getCharBoundaries(a, b) ? b : null;
        },
        getLineIndexOfChar: function (a) {
          if (0 > a || a > this.__text.length) return -1;
          this.__updateLayout();
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.startIndex <= a && c.endIndex >= a) return c.lineIndex;
          }
          return -1;
        },
        getLineOffset: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return -1;
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.lineIndex == a) return c.startIndex;
          }
          return 0;
        },
        replaceSelectedText: function (a) {
          this.__replaceSelectedText(a, !1);
        },
        replaceText: function (a, b, c) {
          this.__replaceText(a, b, c, !1);
        },
        setSelection: function (a, b) {
          this.__selectionIndex = a;
          this.__caretIndex = b;
          this.__updateScrollV();
          this.__stopCursorTimer();
          this.__startCursorTimer();
        },
        setTextFormat: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          var d = this.get_text().length;
          0 > b && (b = 0);
          0 > c && (c = 0);
          0 == c && (c = 0 == b ? d : b + 1);
          if (!(c < b)) {
            if (0 == b && c >= d)
              for (
                this.__textFormat.__merge(a),
                  b = 0,
                  c = this.__textEngine.textFormatRanges.get_length();
                b < c;

              )
                (d = b++),
                  (d = this.__textEngine.textFormatRanges.get(d)),
                  d.format.__merge(a);
            else
              for (
                var e = 0, f;
                e < this.__textEngine.textFormatRanges.get_length();

              ) {
                d = this.__textEngine.textFormatRanges.get(e);
                if (d.start == b && d.end == c) {
                  d.format.__merge(a);
                  break;
                } else
                  d.start >= b && d.end <= c
                    ? d.format.__merge(a)
                    : d.start >= b && d.start < c && d.end > b
                    ? ((f = new Af(d.format.clone(), d.start, c)),
                      f.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(e, f),
                      (d.start = c),
                      ++e)
                    : d.start < b &&
                      d.end > b &&
                      d.end >= c &&
                      ((f = new Af(d.format.clone(), b, d.end)),
                      f.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(e + 1, f),
                      (d.end = b),
                      ++e);
                ++e;
              }
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __allowMouseFocus: function () {
          return 1 == this.__textEngine.type || this.get_tabEnabled()
            ? !0
            : this.get_selectable();
        },
        __caretBeginningOfLine: function () {
          this.__selectionIndex == this.__caretIndex ||
          this.__caretIndex < this.__selectionIndex
            ? (this.__caretIndex = this.getLineOffset(
                this.getLineIndexOfChar(this.__caretIndex)
              ))
            : (this.__selectionIndex = this.getLineOffset(
                this.getLineIndexOfChar(this.__selectionIndex)
              ));
        },
        __caretEndOfLine: function () {
          var a =
            this.__selectionIndex == this.__caretIndex
              ? this.getLineIndexOfChar(this.__caretIndex)
              : this.getLineIndexOfChar(
                  Math.max(this.__caretIndex, this.__selectionIndex) | 0
                );
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1) - 1
              : this.__text.length;
        },
        __caretNextCharacter: function () {
          this.__caretIndex < this.__text.length && this.__caretIndex++;
        },
        __caretNextLine: function (a, b) {
          null == a && (a = this.getLineIndexOfChar(this.__caretIndex));
          a < this.__textEngine.numLines - 1
            ? (null == b && (b = this.__caretIndex),
              (this.__caretIndex = this.__getCharIndexOnDifferentLine(
                b,
                a + 1
              )))
            : (this.__caretIndex = this.__text.length);
        },
        __caretPreviousCharacter: function () {
          0 < this.__caretIndex && this.__caretIndex--;
        },
        __caretPreviousLine: function (a, b) {
          null == a && (a = this.getLineIndexOfChar(this.__caretIndex));
          0 < a
            ? (null == b && (b = this.__caretIndex),
              (this.__caretIndex = this.__getCharIndexOnDifferentLine(
                b,
                a - 1
              )))
            : (this.__caretIndex = 0);
        },
        __disableInput: function () {
          this.__inputEnabled &&
            null != this.stage &&
            (this.stage.window.__backend.setTextInputEnabled(!1),
            this.stage.window.onTextInput.remove(
              q(this, this.window_onTextInput)
            ),
            this.stage.window.onKeyDown.remove(q(this, this.window_onKeyDown)),
            (this.__inputEnabled = !1),
            this.__stopCursorTimer());
        },
        __dispatch: function (a) {
          if (2 == a.eventPhase && "mouseUp" == a.type) {
            var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
            null != b &&
              ((b = b.format.url),
              null != b &&
                "" != b &&
                (K.startsWith(b, "event:")
                  ? this.dispatchEvent(
                      new lf("link", !1, !1, ba.substr(b, 6, null))
                    )
                  : na.getURL(new xh(b))));
          }
          return $a.prototype.__dispatch.call(this, a);
        },
        __enableInput: function () {
          null != this.stage &&
            (this.stage.window.__backend.setTextInputEnabled(!0),
            this.__inputEnabled ||
              (this.stage.window.__backend.setTextInputEnabled(!0),
              this.stage.window.onTextInput.has(
                q(this, this.window_onTextInput)
              ) ||
                (this.stage.window.onTextInput.add(
                  q(this, this.window_onTextInput)
                ),
                this.stage.window.onKeyDown.add(
                  q(this, this.window_onKeyDown)
                )),
              (this.__inputEnabled = !0),
              this.__startCursorTimer()));
        },
        __getBounds: function (a, b) {
          this.__updateLayout();
          var c = ma.__pool.get();
          c.copyFrom(this.__textEngine.bounds);
          b.tx += this.__offsetX;
          b.ty += this.__offsetY;
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          ma.__pool.release(c);
        },
        __getCharBoundaries: function (a, b) {
          if (0 > a || a > this.__text.length - 1) return !1;
          this.__updateLayout();
          for (
            var c = this.__textEngine.layoutGroups.iterator();
            c.hasNext();

          ) {
            var d = c.next();
            if (a >= d.startIndex && a < d.endIndex)
              try {
                for (var e = d.offsetX, f = 0, h = a - d.startIndex; f < h; ) {
                  var m = f++;
                  e += d.positions[m];
                }
                b.setTo(
                  e,
                  d.offsetY,
                  d.positions[a - d.startIndex],
                  d.ascent + d.descent
                );
                return !0;
              } catch (n) {
                Ba.lastError = n;
              }
          }
          return !1;
        },
        __getCharIndexOnDifferentLine: function (a, b) {
          if (
            0 > a ||
            a > this.__text.length ||
            0 > b ||
            b > this.__textEngine.numLines - 1
          )
            return -1;
          for (
            var c = null,
              d = null,
              e = this.__textEngine.layoutGroups.iterator();
            e.hasNext();

          ) {
            var f = e.next();
            if (a >= f.startIndex && a <= f.endIndex) {
              c = f.offsetX;
              for (var h = 0, m = a - f.startIndex; h < m; ) {
                var n = h++;
                c += f.positions[n];
              }
              if (null != d) return this.__getPosition(c, d);
            }
            if (f.lineIndex == b) {
              d = f.offsetY + f.height / 2;
              f = 0;
              for (h = this.get_scrollV() - 1; f < h; )
                (m = f++), (d -= this.__textEngine.lineHeights.get(m));
              if (null != c) return this.__getPosition(c, d);
            }
          }
          return -1;
        },
        __getCursor: function () {
          var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
          return null != a && "" != a.format.url
            ? "button"
            : this.__textEngine.selectable
            ? "ibeam"
            : null;
        },
        __getGroup: function (a, b, c) {
          null == c && (c = !1);
          this.__updateLayout();
          a += this.get_scrollH();
          for (var d = 0, e = this.get_scrollV() - 1; d < e; ) {
            var f = d++;
            b += this.__textEngine.lineHeights.get(f);
          }
          !c &&
            b > this.__textEngine.textHeight &&
            (b = this.__textEngine.textHeight);
          var h = !0;
          d = 0;
          for (e = this.__textEngine.layoutGroups.get_length(); d < e; ) {
            f = d++;
            var m = this.__textEngine.layoutGroups.get(f);
            f =
              f < this.__textEngine.layoutGroups.get_length() - 1
                ? this.__textEngine.layoutGroups.get(f + 1)
                : null;
            h &&
              (b < m.offsetY && (b = m.offsetY),
              a < m.offsetX && (a = m.offsetX),
              (h = !1));
            if (
              (b >= m.offsetY && b <= m.offsetY + m.height) ||
              (!c && null == f)
            )
              if (
                (a >= m.offsetX && a <= m.offsetX + m.width) ||
                (!c && (null == f || f.lineIndex != m.lineIndex))
              )
                return m;
          }
          return null;
        },
        __getPosition: function (a, b) {
          b = this.__getGroup(a, b);
          if (null == b) return this.__text.length;
          for (var c = 0, d = 0, e = b.positions.length; d < e; ) {
            var f = d++;
            c += b.positions[f];
            if (a <= b.offsetX + c) {
              if (a <= b.offsetX + (c - b.positions[f]) + b.positions[f] / 2)
                return b.startIndex + f;
              if (b.startIndex + f < b.endIndex) return b.startIndex + f + 1;
              break;
            }
          }
          return b.endIndex;
        },
        __hitTest: function (a, b, c, d, e, f) {
          if (
            !f.get_visible() ||
            this.__isMask ||
            (e && !this.mouseEnabled) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          this.__updateLayout();
          c = this.__renderTransform;
          e = c.a * c.d - c.b * c.c;
          var h =
            0 == e ? -c.tx : (1 / e) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          e = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            h,
            0 == e ? -c.ty : (1 / e) * (c.a * (b - c.ty) + c.b * (c.tx - a))
          )
            ? (null != d && d.push(f), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          this.__getRenderTransform();
          this.__updateLayout();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            e =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            e,
            0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a))
          )
            ? !0
            : !1;
        },
        __renderCairo: function (a) {},
        __renderCanvas: function (a) {
          a.__isDOM &&
            !this.__renderedOnCanvasWhileOnDOM &&
            ((this.__renderedOnCanvasWhileOnDOM = !0),
            1 == this.get_type() &&
              this.replaceText(0, this.__text.length, this.__text),
            this.__isHTML &&
              this.__updateText(
                Qa.parse(
                  this.__text,
                  this.__textFormat,
                  this.__textEngine.textFormatRanges
                )
              ),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          if (
            null == this.get_mask() ||
            (0 < this.get_mask().get_width() &&
              0 < this.get_mask().get_height())
          )
            if (
              (this.__updateCacheBitmap(a, this.__dirty),
              null == this.__cacheBitmap || this.__isCacheBitmapRender)
            ) {
              var b = this.__textEngine,
                c = b.background || b.border ? b.bounds : b.textBounds,
                d = this.__graphics;
              this.__dirty &&
                (this.__updateLayout(),
                null == d.__bounds && (d.__bounds = new ma()),
                d.__bounds.copyFrom(c));
              d.__update(a.__worldTransform);
              if (this.__dirty || d.__softwareDirty) {
                var e = d.__width,
                  f = d.__height;
                if (
                  !(
                    (null != b.text && "" != b.text) ||
                    b.background ||
                    b.border ||
                    b.__hasFocus ||
                    (1 == b.type && b.selectable)
                  ) ||
                  ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
                )
                  (this.__graphics.__canvas = null),
                    (this.__graphics.__context = null),
                    (this.__graphics.__bitmap = null),
                    (this.__graphics.__softwareDirty = !1),
                    this.__graphics.set___dirty(!1),
                    (this.__dirty = !1);
                else {
                  null == this.__graphics.__canvas &&
                    ((this.__graphics.__canvas =
                      window.document.createElement("canvas")),
                    (this.__graphics.__context =
                      this.__graphics.__canvas.getContext("2d")));
                  S.context = d.__context;
                  var h = d.__renderTransform;
                  if (a.__isDOM) {
                    var m = a.pixelRatio;
                    d.__canvas.width = (e * m) | 0;
                    d.__canvas.height = (f * m) | 0;
                    d.__canvas.style.width = e + "px";
                    d.__canvas.style.height = f + "px";
                    e = Ea.__pool.get();
                    e.copyFrom(h);
                    e.scale(m, m);
                    a.setTransform(e, S.context);
                    Ea.__pool.release(e);
                  } else
                    (d.__canvas.width = e),
                      (d.__canvas.height = f),
                      S.context.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty);
                  null == S.clearRect &&
                    (S.clearRect =
                      "undefined" !== typeof navigator &&
                      "undefined" !== typeof navigator.isCocoonJS);
                  S.clearRect &&
                    S.context.clearRect(
                      0,
                      0,
                      d.__canvas.width,
                      d.__canvas.height
                    );
                  if ((null != b.text && "" != b.text) || b.__hasFocus) {
                    e = b.text;
                    d.__context.imageSmoothingEnabled =
                      !a.__allowSmoothing ||
                      (0 == b.antiAliasType && 400 == b.sharpness)
                        ? !1
                        : !0;
                    if (b.border || b.background) {
                      S.context.rect(0.5, 0.5, c.width - 1, c.height - 1);
                      if (b.background) {
                        var n = K.hex(b.backgroundColor & 16777215, 6);
                        S.context.fillStyle = "#" + n;
                        S.context.fill();
                      }
                      b.border &&
                        ((S.context.lineWidth = 1),
                        (n = K.hex(b.borderColor & 16777215, 6)),
                        (S.context.strokeStyle = "#" + n),
                        S.context.stroke());
                    }
                    S.context.textBaseline = "alphabetic";
                    S.context.textAlign = "start";
                    f = -this.get_scrollH();
                    var p = (m = 0);
                    for (n = this.get_scrollV() - 1; p < n; ) {
                      var l = p++;
                      m -= b.lineHeights.get(l);
                    }
                    for (var k, g = b.layoutGroups.iterator(); g.hasNext(); ) {
                      var u = g.next();
                      if (!(u.lineIndex < this.get_scrollV() - 1)) {
                        if (u.lineIndex > b.get_bottomScrollV() - 1) break;
                        h = "#" + K.hex(u.format.color & 16777215, 6);
                        S.context.font = vb.getFont(u.format);
                        S.context.fillStyle = h;
                        S.context.fillText(
                          e.substring(u.startIndex, u.endIndex),
                          u.offsetX + f - c.x,
                          u.offsetY + u.ascent + m - c.y
                        );
                        if (-1 < this.__caretIndex && b.selectable)
                          if (this.__selectionIndex == this.__caretIndex) {
                            if (
                              this.__showCursor &&
                              u.startIndex <= this.__caretIndex &&
                              u.endIndex >= this.__caretIndex
                            ) {
                              p = k = 0;
                              for (
                                n = this.__caretIndex - u.startIndex;
                                p < n;

                              ) {
                                l = p++;
                                if (u.positions.length <= l) break;
                                k += u.positions[l];
                              }
                              p = 0;
                              n = this.get_scrollV();
                              for (l = u.lineIndex + 1; n < l; ) {
                                var q = n++;
                                p += b.lineHeights.get(q - 1);
                              }
                              S.context.beginPath();
                              n = K.hex(u.format.color & 16777215, 6);
                              S.context.strokeStyle = "#" + n;
                              S.context.moveTo(
                                u.offsetX + k - this.get_scrollH() - c.x,
                                p + 2 - c.y
                              );
                              S.context.lineWidth = 1;
                              S.context.lineTo(
                                u.offsetX + k - this.get_scrollH() - c.x,
                                p +
                                  vb.getFormatHeight(
                                    this.get_defaultTextFormat()
                                  ) -
                                  1 -
                                  c.y
                              );
                              S.context.stroke();
                              S.context.closePath();
                            }
                          } else if (
                            (u.startIndex <= this.__caretIndex &&
                              u.endIndex >= this.__caretIndex) ||
                            (u.startIndex <= this.__selectionIndex &&
                              u.endIndex >= this.__selectionIndex) ||
                            (u.startIndex > this.__caretIndex &&
                              u.endIndex < this.__selectionIndex) ||
                            (u.startIndex > this.__selectionIndex &&
                              u.endIndex < this.__caretIndex)
                          )
                            (k =
                              Math.min(
                                this.__selectionIndex,
                                this.__caretIndex
                              ) | 0),
                              (p =
                                Math.max(
                                  this.__selectionIndex,
                                  this.__caretIndex
                                ) | 0),
                              u.startIndex > k && (k = u.startIndex),
                              u.endIndex < p && (p = u.endIndex),
                              (l = this.getCharBoundaries(k)),
                              p >= u.endIndex
                                ? ((n = this.getCharBoundaries(u.endIndex - 1)),
                                  null != n && (n.x += n.width + 2))
                                : (n = this.getCharBoundaries(p)),
                              null != l &&
                                null != n &&
                                ((S.context.fillStyle = "#000000"),
                                S.context.fillRect(
                                  l.x + f,
                                  l.y + m,
                                  n.x - l.x,
                                  u.height
                                ),
                                (S.context.fillStyle = "#FFFFFF"),
                                S.context.fillText(
                                  e.substring(k, p),
                                  f + l.x,
                                  u.offsetY + u.ascent + m
                                ));
                        u.format.underline &&
                          (S.context.beginPath(),
                          (S.context.strokeStyle = h),
                          (S.context.lineWidth = 1),
                          (h = u.offsetX + f - c.x),
                          (k =
                            Math.floor(u.offsetY + m + u.ascent - c.y) + 0.5),
                          S.context.moveTo(h, k),
                          S.context.lineTo(h + u.width, k),
                          S.context.stroke(),
                          S.context.closePath());
                      }
                    }
                  } else {
                    if (b.border || b.background)
                      b.border
                        ? S.context.rect(0.5, 0.5, c.width - 1, c.height - 1)
                        : S.context.rect(0, 0, c.width, c.height),
                        b.background &&
                          ((n = K.hex(b.backgroundColor & 16777215, 6)),
                          (S.context.fillStyle = "#" + n),
                          S.context.fill()),
                        b.border &&
                          ((S.context.lineWidth = 1),
                          (S.context.lineCap = "square"),
                          (n = K.hex(b.borderColor & 16777215, 6)),
                          (S.context.strokeStyle = "#" + n),
                          S.context.stroke());
                    if (
                      -1 < this.__caretIndex &&
                      b.selectable &&
                      this.__showCursor
                    ) {
                      f = -this.get_scrollH();
                      p = m = 0;
                      for (n = this.get_scrollV() - 1; p < n; )
                        (l = p++), (m += b.lineHeights.get(l));
                      S.context.beginPath();
                      n = K.hex(
                        this.get_defaultTextFormat().color & 16777215,
                        6
                      );
                      S.context.strokeStyle = "#" + n;
                      S.context.moveTo(f + 2.5, m + 2.5);
                      S.context.lineWidth = 1;
                      S.context.lineTo(
                        f + 2.5,
                        m + vb.getFormatHeight(this.get_defaultTextFormat()) - 1
                      );
                      S.context.stroke();
                      S.context.closePath();
                    }
                  }
                  d.__bitmap = J.fromCanvas(this.__graphics.__canvas);
                  d.__visible = !0;
                  this.__dirty = !1;
                  d.__softwareDirty = !1;
                  d.set___dirty(!1);
                }
              }
              m = !1;
              0 == this.__textEngine.antiAliasType &&
                1 == this.__textEngine.gridFitType &&
                (m = a.context.imageSmoothingEnabled) &&
                (a.context.imageSmoothingEnabled = !1);
              if (
                (null != this.opaqueBackground || null != this.__graphics) &&
                this.__renderable &&
                ((c = a.__getAlpha(this.__worldAlpha)),
                !(0 >= c) &&
                  (null != this.opaqueBackground &&
                    !this.__isCacheBitmapRender &&
                    0 < this.get_width() &&
                    0 < this.get_height() &&
                    (a.__setBlendMode(this.__worldBlendMode),
                    a.__pushMaskObject(this),
                    (b = a.context),
                    a.setTransform(this.__renderTransform, b),
                    (h = this.opaqueBackground),
                    (b.fillStyle =
                      "rgb(" +
                      ((h >>> 16) & 255) +
                      "," +
                      ((h >>> 8) & 255) +
                      "," +
                      (h & 255) +
                      ")"),
                    b.fillRect(0, 0, this.get_width(), this.get_height()),
                    a.__popMaskObject(this)),
                  null != this.__graphics &&
                    this.__renderable &&
                    ((c = a.__getAlpha(this.__worldAlpha)),
                    !(0 >= c) &&
                      ((d = this.__graphics),
                      null != d &&
                        (w.render(d, a),
                        (e = d.__width),
                        (f = d.__height),
                        (g = d.__canvas),
                        null != g &&
                          d.__visible &&
                          1 <= e &&
                          1 <= f &&
                          ((h = d.__worldTransform),
                          (b = a.context),
                          (k = this.__scrollRect),
                          (u = this.__worldScale9Grid),
                          null == k || (0 < k.width && 0 < k.height)))))))
              ) {
                a.__setBlendMode(this.__worldBlendMode);
                a.__pushMaskObject(this);
                b.globalAlpha = c;
                if (null != u && 0 == h.b && 0 == h.c) {
                  b.setTransform(1, 0, 0, 1, h.tx, h.ty);
                  c = d.__bounds;
                  n = d.__renderTransform.a;
                  var r = d.__renderTransform.d;
                  l = h.a;
                  q = h.d;
                  d = Math.max(1, Math.round(u.x * n));
                  h = Math.round(u.y * r);
                  k = Math.max(
                    1,
                    Math.round((c.get_right() - u.get_right()) * n)
                  );
                  p = Math.round((c.get_bottom() - u.get_bottom()) * r);
                  n = Math.round(u.width * n);
                  r = Math.round(u.height * r);
                  var z = Math.round(u.x * l),
                    v = Math.round(u.y * q),
                    y = Math.round((c.get_right() - u.get_right()) * l);
                  c = Math.round((c.get_bottom() - u.get_bottom()) * q);
                  u = Math.round(e * l) - z - y;
                  l = Math.round(f * q) - v - c;
                  a.applySmoothing(b, !1);
                  0 != n && 0 != r
                    ? (b.drawImage(g, 0, 0, d, h, 0, 0, z, v),
                      b.drawImage(g, d, 0, n, h, z, 0, u, v),
                      b.drawImage(g, d + n, 0, k, h, z + u, 0, y, v),
                      b.drawImage(g, 0, h, d, r, 0, v, z, l),
                      b.drawImage(g, d, h, n, r, z, v, u, l),
                      b.drawImage(g, d + n, h, k, r, z + u, v, y, l),
                      b.drawImage(g, 0, h + r, d, p, 0, v + l, z, c),
                      b.drawImage(g, d, h + r, n, p, z, v + l, u, c),
                      b.drawImage(g, d + n, h + r, k, p, z + u, v + l, y, c))
                    : 0 == n && 0 != r
                    ? ((d = z + u + y),
                      b.drawImage(g, 0, 0, e, h, 0, 0, d, v),
                      b.drawImage(g, 0, h, e, r, 0, v, d, l),
                      b.drawImage(g, 0, h + r, e, p, 0, v + l, d, c))
                    : 0 == r &&
                      0 != n &&
                      ((c = v + l + c),
                      b.drawImage(g, 0, 0, d, f, 0, 0, z, c),
                      b.drawImage(g, d, 0, n, f, z, 0, u, c),
                      b.drawImage(g, d + n, 0, k, f, z + u, 0, y, c));
                } else
                  a.setTransform(h, b),
                    a.__isDOM && ((c = 1 / a.pixelRatio), b.scale(c, c)),
                    b.drawImage(g, 0, 0, e, f);
                a.__popMaskObject(this);
              }
              m && (a.context.imageSmoothingEnabled = !0);
            } else
              (d = this.__cacheBitmap),
                d.__renderable &&
                  ((c = a.__getAlpha(d.__worldAlpha)),
                  0 < c &&
                    null != d.__bitmapData &&
                    d.__bitmapData.__isValid &&
                    d.__bitmapData.readable &&
                    ((b = a.context),
                    a.__setBlendMode(d.__worldBlendMode),
                    a.__pushMaskObject(d, !1),
                    Oa.convertToCanvas(d.__bitmapData.image),
                    (b.globalAlpha = c),
                    (k = d.__scrollRect),
                    a.setTransform(d.__renderTransform, b),
                    (a.__allowSmoothing && d.smoothing) ||
                      (b.imageSmoothingEnabled = !1),
                    null == k
                      ? b.drawImage(
                          d.__bitmapData.image.get_src(),
                          0,
                          0,
                          d.__bitmapData.image.width,
                          d.__bitmapData.image.height
                        )
                      : b.drawImage(
                          d.__bitmapData.image.get_src(),
                          k.x,
                          k.y,
                          k.width,
                          k.height
                        ),
                    (a.__allowSmoothing && d.smoothing) ||
                      (b.imageSmoothingEnabled = !0),
                    a.__popMaskObject(d, !1)));
        },
        __renderDOM: function (a) {
          this.__domRender = !0;
          this.__updateCacheBitmap(a, this.__forceCachedBitmapUpdate);
          this.__domRender = this.__forceCachedBitmapUpdate = !1;
          if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
            this.__renderedOnCanvasWhileOnDOM &&
              ((this.__renderedOnCanvasWhileOnDOM = !1),
              this.__isHTML &&
                null != this.__rawHtmlText &&
                (this.__updateText(this.__rawHtmlText),
                (this.__layoutDirty = this.__dirty = !0),
                this.__renderDirty ||
                  ((this.__renderDirty = !0), this.__setParentRenderDirty())));
            var b = this,
              c = b.__textEngine;
            if (null != b.stage && b.__worldVisible && b.__renderable) {
              if (b.__dirty || b.__renderTransformChanged || null == b.__div)
                if ("" != c.text || c.background || c.border || 1 == c.type) {
                  null == b.__div &&
                    ((b.__div = window.document.createElement("div")),
                    a.__initializeElement(b, b.__div),
                    b.__style.setProperty("outline", "none", null),
                    b.__div.addEventListener(
                      "input",
                      function (a) {
                        a.preventDefault();
                        b.get_htmlText() != b.__div.innerHTML &&
                          (b.set_htmlText(b.__div.innerHTML),
                          (b.__dirty = !1),
                          b.dispatchEvent(
                            new lf("textInput", !1, !1, b.get_htmlText())
                          ));
                      },
                      !0
                    ));
                  c.wordWrap
                    ? b.__style.setProperty("word-wrap", "break-word", null)
                    : b.__style.setProperty("white-space", "nowrap", null);
                  b.__style.setProperty("overflow", "hidden", null);
                  c.selectable
                    ? (b.__style.setProperty("cursor", "text", null),
                      b.__style.setProperty(
                        "-webkit-user-select",
                        "text",
                        null
                      ),
                      b.__style.setProperty("-moz-user-select", "text", null),
                      b.__style.setProperty("-ms-user-select", "text", null),
                      b.__style.setProperty("-o-user-select", "text", null))
                    : b.__style.setProperty("cursor", "inherit", null);
                  b.__div.contentEditable = 1 == c.type;
                  var d = b.__style;
                  c.background
                    ? d.setProperty(
                        "background-color",
                        "#" + K.hex(c.backgroundColor & 16777215, 6),
                        null
                      )
                    : d.removeProperty("background-color");
                  var e = c.width,
                    f = c.height,
                    h = 1,
                    m = b.__textFormat.size,
                    n = m,
                    p = b.__renderTransform;
                  if (1 != p.a || 1 != p.d)
                    p.a == p.d
                      ? ((h = p.a), (p.a = p.d = 1))
                      : p.a > p.d
                      ? ((h = p.a), (p.d /= p.a), (p.a = 1))
                      : ((h = p.d), (p.a /= p.d), (p.d = 1)),
                      (n *= h),
                      (e = Math.ceil(e * h)),
                      (f = Math.ceil(f * h));
                  b.__textFormat.size = n;
                  p = c.text;
                  var l = 0;
                  if (b.__isHTML) {
                    for (var k = p; fc.__regexFont.match(k); ) {
                      k = fc.__regexFont.matched(0);
                      var g = "";
                      fc.__regexFace.match(k) &&
                        (g +=
                          "font-family:'" +
                          fc.__getAttributeMatch(fc.__regexFace) +
                          "';");
                      fc.__regexColor.match(k) &&
                        (g +=
                          "color:#" +
                          fc.__getAttributeMatch(fc.__regexColor) +
                          ";");
                      if (fc.__regexSize.match(k)) {
                        l = fc.__getAttributeMatch(fc.__regexSize);
                        var u = ba.cca(l, 0);
                        l = parseFloat(l) * h;
                        g +=
                          "font-size:" +
                          (43 == u || 45 == u ? n + l : l) +
                          "px;";
                      }
                      p = K.replace(p, k, "<span style='" + g + "'>");
                      k = fc.__regexFont.matchedRight();
                    }
                    p = p.replace(fc.__regexCloseFont.r, "</span>");
                  } else p = K.htmlEscape(p);
                  p = K.replace(
                    p,
                    "<p ",
                    "<p style='margin-top:0; margin-bottom:0;' "
                  );
                  h = b.__textFormat.leading;
                  b.__textFormat.leading += l | 0;
                  n = /\r\n/g;
                  p = p.replace(n, "<br>");
                  b.__div.innerHTML = p;
                  n = /\n/g;
                  p = b.__div.innerHTML.replace(n, "<br>");
                  b.__div.innerHTML = p;
                  n = /\r/g;
                  p = b.__div.innerHTML.replace(n, "<br>");
                  b.__div.innerHTML = p;
                  d.setProperty("font", vb.getFont(b.__textFormat), null);
                  b.__textFormat.size = m;
                  b.__textFormat.leading = h;
                  d.setProperty("top", "3px", null);
                  c.border
                    ? (d.setProperty(
                        "border",
                        "solid 1px #" + K.hex(c.borderColor & 16777215, 6),
                        null
                      ),
                      b.__renderTransform.translate(-1, -1),
                      (b.__renderTransformChanged = !0),
                      (b.__transformDirty = !0))
                    : "" != d.border &&
                      (d.removeProperty("border"),
                      (b.__renderTransformChanged = !0));
                  d.setProperty(
                    "color",
                    "#" + K.hex(b.__textFormat.color & 16777215, 6),
                    null
                  );
                  d.setProperty("width", e + "px", null);
                  d.setProperty("height", f + "px", null);
                  switch (b.__textFormat.align) {
                    case 0:
                      d.setProperty("text-align", "center", null);
                      break;
                    case 4:
                      d.setProperty("text-align", "right", null);
                      break;
                    default:
                      d.setProperty("text-align", "left", null);
                  }
                  b.__dirty = !1;
                } else
                  null != b.__div &&
                    (a.element.removeChild(b.__div), (b.__div = null));
              null != b.__div &&
                ((c = a.__roundPixels),
                (a.__roundPixels = !0),
                a.__updateClip(b),
                a.__applyStyle(b, !0, !0, !0),
                (a.__roundPixels = c));
            } else fc.clear(b, a);
          } else
            this.__renderDOMClear(a),
              (this.__cacheBitmap.stage = this.stage),
              (c = this.__cacheBitmap),
              null != c.stage &&
              c.__worldVisible &&
              c.__renderable &&
              null != c.__bitmapData &&
              c.__bitmapData.__isValid &&
              c.__bitmapData.readable
                ? (a.__pushMaskObject(c),
                  null != c.__bitmapData.image.buffer.__srcImage
                    ? Kc.renderImage(c, a)
                    : Kc.renderCanvas(c, a),
                  a.__popMaskObject(c))
                : Kc.clear(c, a);
          this.__renderEvent(a);
        },
        __renderDOMClear: function (a) {
          fc.clear(this, a);
        },
        __renderGL: function (a) {
          this.__updateCacheBitmap(a, !1);
          if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
            if (
              (fi.render(this, a),
              !(
                (null == this.opaqueBackground && null == this.__graphics) ||
                !this.__renderable ||
                0 >= this.__worldAlpha
              ))
            ) {
              if (
                null != this.opaqueBackground &&
                !this.__isCacheBitmapRender &&
                0 < this.get_width() &&
                0 < this.get_height()
              ) {
                a.__setBlendMode(this.__worldBlendMode);
                a.__pushMaskObject(this);
                var b = a.__context3D,
                  c = ma.__pool.get();
                c.setTo(0, 0, this.get_width(), this.get_height());
                a.__pushMaskRect(c, this.__renderTransform);
                var d = this.opaqueBackground;
                b.clear(
                  ((d >>> 16) & 255) / 255,
                  ((d >>> 8) & 255) / 255,
                  (d & 255) / 255,
                  1,
                  0,
                  0,
                  1
                );
                a.__popMaskRect();
                a.__popMaskObject(this);
                ma.__pool.release(c);
              }
              null != this.__graphics && Df.render(this, a);
            }
          } else Cf.render(this.__cacheBitmap, a);
          this.__renderEvent(a);
        },
        __renderGLMask: function (a) {
          fi.renderMask(this, a);
          $a.prototype.__renderGLMask.call(this, a);
        },
        __replaceSelectedText: function (a, b) {
          null == b && (b = !0);
          null == a && (a = "");
          if ("" != a || this.__selectionIndex != this.__caretIndex) {
            var c =
                this.__caretIndex < this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex,
              d =
                this.__caretIndex > this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex;
            if (
              !(
                c == d &&
                0 < this.__textEngine.maxChars &&
                this.__text.length == this.__textEngine.maxChars
              )
            ) {
              c > this.__text.length && (c = this.__text.length);
              d > this.__text.length && (d = this.__text.length);
              if (d < c) {
                var e = d;
                d = c;
                c = e;
              }
              0 > c && (c = 0);
              this.__replaceText(c, d, a, b);
              a = c + pa.__cast(a, String).length;
              a > this.__text.length && (a = this.__text.length);
              this.setSelection(a, a);
              this.__updateScrollH();
            }
          }
        },
        __replaceText: function (a, b, c, d) {
          if (!(b < a || 0 > a || b > this.__text.length || null == c)) {
            d &&
              ((c = this.__textEngine.restrictText(c)),
              0 < this.__textEngine.maxChars &&
                ((d =
                  this.__textEngine.maxChars - this.__text.length + (b - a)),
                0 >= d ? (c = "") : d < c.length && (c = ba.substr(c, 0, d))));
            this.__updateText(
              this.__text.substring(0, a) + c + this.__text.substring(b)
            );
            b > this.__text.length && (b = this.__text.length);
            d = c.length - (b - a);
            for (
              var e = 0, f;
              e < this.__textEngine.textFormatRanges.get_length();

            )
              (f = this.__textEngine.textFormatRanges.get(e)),
                f.start <= a && f.end >= b
                  ? ((f.end += d), ++e)
                  : f.start >= a && f.end <= b
                  ? (0 < e
                      ? this.__textEngine.textFormatRanges.splice(e, 1)
                      : ((f.start = 0), (f.end = a + c.length), ++e),
                    (d -= f.end - f.start))
                  : (f.start > a && f.start <= b && (f.start += d), ++e);
            this.__updateScrollV();
            this.__updateScrollH();
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __shouldCacheHardware: function (a) {
          return 1 == a ? !0 : !1;
        },
        __startCursorTimer: function () {
          this.__cursorTimer = Tf.delay(q(this, this.__startCursorTimer), 600);
          this.__showCursor = !this.__showCursor;
          this.__dirty = !0;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __startTextInput: function () {
          0 > this.__caretIndex &&
            (this.__selectionIndex = this.__caretIndex = this.__text.length);
          (ta.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__enableInput();
        },
        __stopCursorTimer: function () {
          null != this.__cursorTimer &&
            (this.__cursorTimer.stop(), (this.__cursorTimer = null));
          this.__showCursor &&
            ((this.__showCursor = !1),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __stopTextInput: function () {
          (ta.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__disableInput();
        },
        __updateCacheBitmap: function (a, b) {
          if (
            null == this.__filters &&
            "opengl" == a.__type &&
            null == this.__cacheBitmap &&
            !this.__domRender
          )
            return !1;
          b && (this.__renderDirty = !0);
          return $a.prototype.__updateCacheBitmap.call(
            this,
            a,
            b || this.__dirty
          )
            ? (null != this.__cacheBitmap &&
                ((this.__cacheBitmap.__renderTransform.tx -= this.__offsetX),
                (this.__cacheBitmap.__renderTransform.ty -= this.__offsetY)),
              !0)
            : !1;
        },
        __updateLayout: function () {
          if (this.__layoutDirty) {
            var a = this.__textEngine.width;
            this.__textEngine.update();
            if (2 != this.__textEngine.autoSize) {
              if (this.__textEngine.width != a)
                switch (this.__textEngine.autoSize) {
                  case 0:
                    var b = this;
                    b.set_x(b.get_x() + (a - this.__textEngine.width) / 2);
                    break;
                  case 3:
                    (b = this),
                      b.set_x(b.get_x() + (a - this.__textEngine.width));
                }
              this.__textEngine.getBounds();
            }
            this.__layoutDirty = !1;
          }
        },
        __updateScrollH: function () {
          if (!this.get_multiline() && 1 == this.get_type()) {
            this.__layoutDirty = !0;
            this.__updateLayout();
            var a = this.__textEngine.textWidth - this.__textEngine.width + 4;
            0 < a
              ? this.__caretIndex >= this.get_text().length
                ? this.set_scrollH(Math.ceil(a))
                : ((a = ma.__pool.get()),
                  this.__getCharBoundaries(this.__caretIndex, a),
                  a.x < this.get_scrollH()
                    ? this.set_scrollH(Math.floor(a.x - 2))
                    : a.x > this.get_scrollH() + this.__textEngine.width &&
                      this.set_scrollH(
                        Math.ceil(a.x - this.__textEngine.width - 2)
                      ),
                  ma.__pool.release(a))
              : this.set_scrollH(0);
          }
        },
        __updateScrollV: function () {
          this.__layoutDirty = !0;
          this.__updateLayout();
          var a = this.getLineIndexOfChar(this.__caretIndex);
          -1 == a &&
            0 < this.__caretIndex &&
            (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
          if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
          else if (a + 1 > this.get_bottomScrollV()) {
            for (var b = 0; 0 <= a; )
              if (
                b + this.__textEngine.lineHeights.get(a) <=
                this.get_height() - 4
              )
                (b += this.__textEngine.lineHeights.get(a)), --a;
              else break;
            this.set_scrollV(a + 2);
          } else this.set_scrollV(this.get_scrollV());
        },
        __updateText: function (a) {
          ta.__supportDOM &&
            this.__renderedOnCanvasWhileOnDOM &&
            (this.__forceCachedBitmapUpdate = this.__text != a);
          this.__textEngine.set_text(a);
          this.__text = this.__textEngine.text;
          this.__text.length < this.__caretIndex &&
            (this.__selectionIndex = this.__caretIndex = this.__text.length);
          if (
            !this.__displayAsPassword ||
            (ta.__supportDOM && !this.__renderedOnCanvasWhileOnDOM)
          )
            this.__textEngine.set_text(this.__text);
          else {
            a = "";
            for (var b = 0, c = this.get_text().length; b < c; )
              b++, (a += "*");
            this.__textEngine.set_text(a);
          }
        },
        __updateTransforms: function (a) {
          $a.prototype.__updateTransforms.call(this, a);
          a = this.__renderTransform;
          var b = this.__offsetX,
            c = this.__offsetY;
          a.tx = b * a.a + c * a.c + a.tx;
          a.ty = b * a.b + c * a.d + a.ty;
        },
        set_autoSize: function (a) {
          a != this.__textEngine.autoSize &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.autoSize = a);
        },
        get_bottomScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_bottomScrollV();
        },
        get_defaultTextFormat: function () {
          return this.__textFormat.clone();
        },
        set_defaultTextFormat: function (a) {
          this.__textFormat.__merge(a);
          this.__dirty = this.__layoutDirty = !0;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return a;
        },
        set_displayAsPassword: function (a) {
          a != this.__displayAsPassword &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__displayAsPassword = a),
            this.__updateText(this.__text));
          return a;
        },
        set_embedFonts: function (a) {
          return (this.__textEngine.embedFonts = a);
        },
        get_height: function () {
          this.__updateLayout();
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          a != this.__textEngine.height &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.height = a));
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        get_htmlText: function () {
          return this.__isHTML ? this.__rawHtmlText : this.__text;
        },
        set_htmlText: function (a) {
          (this.__isHTML && this.__text == a) ||
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          this.__isHTML = !0;
          this.__rawHtmlText = a;
          a = Qa.parse(
            a,
            this.__textFormat,
            this.__textEngine.textFormatRanges
          );
          if (ta.__supportDOM) {
            1 < this.__textEngine.textFormatRanges.get_length() &&
              this.__textEngine.textFormatRanges.splice(
                1,
                this.__textEngine.textFormatRanges.get_length() - 1
              );
            var b = this.__textEngine.textFormatRanges.get(0);
            b.format = this.__textFormat;
            b.start = 0;
            this.__renderedOnCanvasWhileOnDOM
              ? ((b.end = a.length), this.__updateText(a))
              : ((b.end = this.__rawHtmlText.length),
                this.__updateText(this.__rawHtmlText));
          } else this.__updateText(a);
          this.__updateScrollV();
          return a;
        },
        get_mouseWheelEnabled: function () {
          return this.__mouseWheelEnabled;
        },
        get_multiline: function () {
          return this.__textEngine.multiline;
        },
        set_multiline: function (a) {
          a != this.__textEngine.multiline &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__updateText(this.__text),
            this.__updateScrollH(),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.multiline = a);
        },
        get_numLines: function () {
          this.__updateLayout();
          return this.__textEngine.numLines;
        },
        get_scrollH: function () {
          return this.__textEngine.scrollH;
        },
        set_scrollH: function (a) {
          this.__updateLayout();
          a > this.__textEngine.maxScrollH &&
            (a = this.__textEngine.maxScrollH);
          0 > a && (a = 0);
          a != this.__textEngine.scrollH &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.scrollH = a),
            this.dispatchEvent(new Ca("scroll")));
          return this.__textEngine.scrollH;
        },
        get_scrollV: function () {
          return this.__textEngine.get_scrollV();
        },
        set_scrollV: function (a) {
          this.__updateLayout();
          0 < a &&
            a != this.__textEngine.get_scrollV() &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            this.__textEngine.set_scrollV(a),
            this.dispatchEvent(new Ca("scroll")));
          return this.__textEngine.get_scrollV();
        },
        get_selectable: function () {
          return this.__textEngine.selectable;
        },
        set_selectable: function (a) {
          a != this.__textEngine.selectable &&
            1 == this.get_type() &&
            (null != this.stage && this.stage.get_focus() == this
              ? this.__startTextInput()
              : a || this.__stopTextInput());
          return (this.__textEngine.selectable = a);
        },
        set_sharpness: function (a) {
          a != this.__textEngine.sharpness &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.sharpness = a);
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? 1 == this.__textEngine.type
            : this.__tabEnabled;
        },
        get_text: function () {
          return this.__text;
        },
        set_text: function (a) {
          if (this.__isHTML || this.__text != a)
            (this.__layoutDirty = this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty());
          else return a;
          1 < this.__textEngine.textFormatRanges.get_length() &&
            this.__textEngine.textFormatRanges.splice(
              1,
              this.__textEngine.textFormatRanges.get_length() - 1
            );
          var b = this.__textEngine.textFormatRanges.get(0);
          b.format = this.__textFormat;
          b.start = 0;
          b.end = a.length;
          this.__isHTML = !1;
          this.__updateText(a);
          this.__updateScrollV();
          return a;
        },
        set_textColor: function (a) {
          a != this.__textFormat.color &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          for (
            var b = this.__textEngine.textFormatRanges.iterator();
            b.hasNext();

          )
            b.next().format.color = a;
          return (this.__textFormat.color = a);
        },
        get_textWidth: function () {
          this.__updateLayout();
          return this.__textEngine.textWidth;
        },
        get_textHeight: function () {
          this.__updateLayout();
          return this.__textEngine.textHeight;
        },
        get_type: function () {
          return this.__textEngine.type;
        },
        get_width: function () {
          this.__updateLayout();
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          a != this.__textEngine.width &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.width = a));
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        get_wordWrap: function () {
          return this.__textEngine.wordWrap;
        },
        set_wordWrap: function (a) {
          a != this.__textEngine.wordWrap &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.wordWrap = a);
        },
        get_x: function () {
          return this.__transform.tx + this.__offsetX;
        },
        set_x: function (a) {
          a != this.__transform.tx + this.__offsetX &&
            this.__setTransformDirty();
          return (this.__transform.tx = a - this.__offsetX);
        },
        get_y: function () {
          return this.__transform.ty + this.__offsetY;
        },
        set_y: function (a) {
          a != this.__transform.ty + this.__offsetY &&
            this.__setTransformDirty();
          return (this.__transform.ty = a - this.__offsetY);
        },
        stage_onMouseMove: function (a) {
          null != this.stage &&
            this.get_selectable() &&
            0 <= this.__selectionIndex &&
            (this.__updateLayout(),
            (a = this.__getPosition(
              this.get_mouseX() + this.get_scrollH(),
              this.get_mouseY()
            )),
            a != this.__caretIndex &&
              ((this.__caretIndex = a),
              (a = !0),
              ta.__supportDOM &&
                (this.__renderedOnCanvasWhileOnDOM &&
                  (this.__forceCachedBitmapUpdate = !0),
                (a = !1)),
              a &&
                ((this.__dirty = !0),
                this.__renderDirty ||
                  ((this.__renderDirty = !0), this.__setParentRenderDirty()))));
        },
        stage_onMouseUp: function (a) {
          if (
            null != this.stage &&
            (this.stage.removeEventListener(
              "mouseMove",
              q(this, this.stage_onMouseMove)
            ),
            this.stage.removeEventListener(
              "mouseUp",
              q(this, this.stage_onMouseUp)
            ),
            this.stage.get_focus() == this)
          ) {
            this.__getWorldTransform();
            this.__updateLayout();
            a = this.__getPosition(
              this.get_mouseX() + this.get_scrollH(),
              this.get_mouseY()
            );
            var b = Math.max(this.__selectionIndex, a) | 0;
            this.__selectionIndex = Math.min(this.__selectionIndex, a) | 0;
            this.__caretIndex = b;
            this.__inputEnabled &&
              (this.this_onFocusIn(null),
              this.__stopCursorTimer(),
              this.__startCursorTimer(),
              ta.__supportDOM &&
                this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0));
          }
        },
        this_onFocusIn: function (a) {
          1 == this.get_type() &&
            null != this.stage &&
            this.stage.get_focus() == this &&
            this.__startTextInput();
        },
        this_onFocusOut: function (a) {
          this.__stopCursorTimer();
          null != a.relatedObject && a.relatedObject instanceof ec
            ? (null != this.stage &&
                (this.stage.window.onTextInput.remove(
                  q(this, this.window_onTextInput)
                ),
                this.stage.window.onKeyDown.remove(
                  q(this, this.window_onKeyDown)
                )),
              (this.__inputEnabled = !1))
            : this.__stopTextInput();
          this.__selectionIndex != this.__caretIndex &&
            ((this.__selectionIndex = this.__caretIndex),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        this_onKeyDown: function (a) {
          this.get_selectable() &&
            1 != this.get_type() &&
            67 == a.keyCode &&
            (a.commandKey || a.ctrlKey) &&
            this.__caretIndex != this.__selectionIndex &&
            Dc.set_text(
              this.__text.substring(this.__caretIndex, this.__selectionIndex)
            );
        },
        this_onMouseDown: function (a) {
          if (this.get_selectable() || 1 == this.get_type())
            this.__updateLayout(),
              (this.__selectionIndex = this.__caretIndex =
                this.__getPosition(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY()
                )),
              ta.__supportDOM ||
                ((this.__dirty = !0),
                this.__renderDirty ||
                  ((this.__renderDirty = !0), this.__setParentRenderDirty())),
              this.stage.addEventListener(
                "mouseMove",
                q(this, this.stage_onMouseMove)
              ),
              this.stage.addEventListener(
                "mouseUp",
                q(this, this.stage_onMouseUp)
              );
        },
        this_onMouseWheel: function (a) {
          this.get_mouseWheelEnabled() &&
            this.set_scrollV(this.get_scrollV() - a.delta);
        },
        this_onDoubleClick: function (a) {
          if (this.get_selectable()) {
            this.__updateLayout();
            a = "\n.!?, ;:()-_/".split("");
            var b = this.__text,
              c = -1,
              d = b.length,
              e = Math.max(this.__caretIndex, 1) | 0;
            if (
              0 < b.length &&
              0 <= this.__caretIndex &&
              d >= this.__caretIndex
            ) {
              for (var f = 0; f < a.length; ) {
                var h = a[f];
                ++f;
                var m = b.lastIndexOf(h, e - 1);
                m > c && (c = m + 1);
                m = b.indexOf(h, e);
                m < d && -1 != m && (d = m);
              }
              c != d &&
                (this.setSelection(c, d),
                (a = !0),
                ta.__supportDOM &&
                  (this.__renderedOnCanvasWhileOnDOM &&
                    (this.__forceCachedBitmapUpdate = !0),
                  (a = !1)),
                a &&
                  ((this.__dirty = !0),
                  this.__renderDirty ||
                    ((this.__renderDirty = !0),
                    this.__setParentRenderDirty())));
            }
          }
        },
        window_onKeyDown: function (a, b) {
          switch (a) {
            case 8:
              this.__selectionIndex == this.__caretIndex &&
                0 < this.__caretIndex &&
                (this.__selectionIndex = this.__caretIndex - 1);
              this.__selectionIndex != this.__caretIndex &&
                (this.replaceSelectedText(""),
                (this.__selectionIndex = this.__caretIndex),
                this.dispatchEvent(new Ca("change", !0)));
              break;
            case 97:
              this.get_selectable() &&
                (Nb.get_metaKey(b) || Nb.get_ctrlKey(b)) &&
                ((this.__caretIndex = this.__text.length),
                (this.__selectionIndex = 0));
              break;
            case 99:
              (Nb.get_metaKey(b) || Nb.get_ctrlKey(b)) &&
                this.__caretIndex != this.__selectionIndex &&
                Dc.set_text(
                  this.__text.substring(
                    this.__caretIndex,
                    this.__selectionIndex
                  )
                );
              break;
            case 120:
              (Nb.get_metaKey(b) || Nb.get_ctrlKey(b)) &&
                this.__caretIndex != this.__selectionIndex &&
                (Dc.set_text(
                  this.__text.substring(
                    this.__caretIndex,
                    this.__selectionIndex
                  )
                ),
                this.replaceSelectedText(""),
                this.dispatchEvent(new Ca("change", !0)));
              break;
            case 127:
              this.__selectionIndex == this.__caretIndex &&
                this.__caretIndex < this.__text.length &&
                (this.__selectionIndex = this.__caretIndex + 1);
              this.__selectionIndex != this.__caretIndex &&
                (this.replaceSelectedText(""),
                (this.__selectionIndex = this.__caretIndex),
                this.dispatchEvent(new Ca("change", !0)));
              break;
            case 1073741898:
              this.get_selectable() &&
                (this.__caretBeginningOfLine(),
                this.__stopCursorTimer(),
                this.__startCursorTimer());
              break;
            case 1073741901:
              this.get_selectable() &&
                (this.__caretEndOfLine(),
                this.__stopCursorTimer(),
                this.__startCursorTimer());
              break;
            case 1073741903:
              this.get_selectable() &&
                (Nb.get_metaKey(b)
                  ? (this.__caretEndOfLine(),
                    Nb.get_shiftKey(b) ||
                      (this.__selectionIndex = this.__caretIndex))
                  : Nb.get_shiftKey(b)
                  ? this.__caretNextCharacter()
                  : (this.__selectionIndex == this.__caretIndex
                      ? this.__caretNextCharacter()
                      : (this.__caretIndex =
                          Math.max(this.__caretIndex, this.__selectionIndex) |
                          0),
                    (this.__selectionIndex = this.__caretIndex)),
                this.__updateScrollH(),
                this.__updateScrollV(),
                this.__stopCursorTimer(),
                this.__startCursorTimer());
              break;
            case 1073741904:
              this.get_selectable() &&
                (Nb.get_metaKey(b)
                  ? (this.__caretBeginningOfLine(),
                    Nb.get_shiftKey(b) ||
                      (this.__selectionIndex = this.__caretIndex))
                  : Nb.get_shiftKey(b)
                  ? this.__caretPreviousCharacter()
                  : (this.__selectionIndex == this.__caretIndex
                      ? this.__caretPreviousCharacter()
                      : (this.__caretIndex =
                          Math.min(this.__caretIndex, this.__selectionIndex) |
                          0),
                    (this.__selectionIndex = this.__caretIndex)),
                this.__updateScrollH(),
                this.__updateScrollV(),
                this.__stopCursorTimer(),
                this.__startCursorTimer());
              break;
            case 1073741905:
              this.get_selectable() &&
                this.__textEngine.multiline &&
                (Nb.get_shiftKey(b)
                  ? this.__caretNextLine()
                  : (this.__selectionIndex == this.__caretIndex
                      ? this.__caretNextLine()
                      : ((a = this.getLineIndexOfChar(
                          Math.max(this.__caretIndex, this.__selectionIndex) | 0
                        )),
                        this.__caretNextLine(
                          a,
                          Math.min(this.__caretIndex, this.__selectionIndex) | 0
                        )),
                    (this.__selectionIndex = this.__caretIndex)),
                this.__updateScrollV(),
                this.__stopCursorTimer(),
                this.__startCursorTimer());
              break;
            case 1073741906:
              this.get_selectable() &&
                this.__textEngine.multiline &&
                (Nb.get_shiftKey(b)
                  ? this.__caretPreviousLine()
                  : (this.__selectionIndex == this.__caretIndex
                      ? this.__caretPreviousLine()
                      : ((a = this.getLineIndexOfChar(
                          Math.min(this.__caretIndex, this.__selectionIndex) | 0
                        )),
                        this.__caretPreviousLine(
                          a,
                          Math.min(this.__caretIndex, this.__selectionIndex) | 0
                        )),
                    (this.__selectionIndex = this.__caretIndex)),
                this.__updateScrollV(),
                this.__stopCursorTimer(),
                this.__startCursorTimer());
              break;
            case 13:
            case 1073741912:
              this.__textEngine.multiline &&
                ((a = new lf("textInput", !0, !0, "\n")),
                this.dispatchEvent(a),
                a.isDefaultPrevented() ||
                  (this.__replaceSelectedText("\n", !0),
                  this.dispatchEvent(new Ca("change", !0))));
          }
        },
        window_onTextInput: function (a) {
          this.__replaceSelectedText(a, !0);
          this.dispatchEvent(new Ca("change", !0));
        },
        __class__: ec,
        __properties__: r($a.prototype.__properties__, {
          set_textColor: "set_textColor",
          set_sharpness: "set_sharpness",
          set_embedFonts: "set_embedFonts",
          set_displayAsPassword: "set_displayAsPassword",
          set_autoSize: "set_autoSize",
          set_wordWrap: "set_wordWrap",
          get_wordWrap: "get_wordWrap",
          get_type: "get_type",
          get_textWidth: "get_textWidth",
          get_textHeight: "get_textHeight",
          set_text: "set_text",
          get_text: "get_text",
          set_selectable: "set_selectable",
          get_selectable: "get_selectable",
          set_scrollV: "set_scrollV",
          get_scrollV: "get_scrollV",
          set_scrollH: "set_scrollH",
          get_scrollH: "get_scrollH",
          get_numLines: "get_numLines",
          set_multiline: "set_multiline",
          get_multiline: "get_multiline",
          get_mouseWheelEnabled: "get_mouseWheelEnabled",
          set_htmlText: "set_htmlText",
          get_htmlText: "get_htmlText",
          set_defaultTextFormat: "set_defaultTextFormat",
          get_defaultTextFormat: "get_defaultTextFormat",
          get_bottomScrollV: "get_bottomScrollV",
        }),
      });
      var nm = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 10);
        null == a && (a = 10);
        ec.call(this);
        this.set_x(a);
        this.set_y(b);
        this.currentFPS = 0;
        this.set_selectable(!1);
        this.mouseEnabled = !1;
        this.set_defaultTextFormat(new zc("_sans", 12, c));
        this.set_text("FPS: ");
        this.currentTime = this.cacheCount = 0;
        this.times = [];
      };
      g["openfl.display.FPS"] = nm;
      nm.__name__ = "openfl.display.FPS";
      nm.__super__ = ec;
      nm.prototype = r(ec.prototype, {
        __enterFrame: function (a) {
          this.currentTime += a;
          for (
            this.times.push(this.currentTime);
            this.times[0] < this.currentTime - 1e3;

          )
            this.times.shift();
          a = this.times.length;
          this.currentFPS = Math.round((a + this.cacheCount) / 2);
          a != this.cacheCount && this.set_text("FPS: " + this.currentFPS);
          this.cacheCount = a;
        },
        __class__: nm,
      });
      var om = function (a, b) {
        sa.call(this);
        this.name = a;
        this.frame = b;
      };
      g["openfl.display.FrameLabel"] = om;
      om.__name__ = "openfl.display.FrameLabel";
      om.__super__ = sa;
      om.prototype = r(sa.prototype, { __class__: om });
      var pd = function (a) {
        this.__dirty = !0;
        this.__owner = a;
        this.__commands = new md();
        this.__positionY = this.__positionX = this.__strokePadding = 0;
        this.__renderTransform = new Ea();
        this.__usedShaderBuffers = new A();
        this.__worldTransform = new Ea();
        this.__height = this.__width = 0;
        this.__shaderBufferPool = new Kb(function () {
          return new rk();
        });
        this.moveTo(0, 0);
      };
      g["openfl.display.Graphics"] = pd;
      pd.__name__ = "openfl.display.Graphics";
      pd.prototype = {
        beginBitmapFill: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !0);
          this.__commands.beginBitmapFill(
            a,
            null != b ? b.clone() : null,
            c,
            d
          );
          this.__visible = !0;
        },
        beginFill: function (a, b) {
          null == b && (b = 1);
          null == a && (a = 0);
          this.__commands.beginFill(a & 16777215, b);
          0 < b && (this.__visible = !0);
        },
        beginGradientFill: function (a, b, c, d, e, f, h, m) {
          null == m && (m = 0);
          null == h && (h = 1);
          null == f && (f = 0);
          if (null != b && 0 != b.length) {
            if (null == c) {
              c = [];
              for (var n = 0, p = b.length; n < p; ) n++, c.push(1);
            }
            if (null == d)
              for (d = [], n = 0, p = b.length; n < p; ) {
                var l = n++;
                d.push(Math.ceil((l / b.length) * 255));
              }
            if (!(c.length < b.length || d.length < b.length))
              for (
                this.__commands.beginGradientFill(a, b, c, d, e, f, h, m),
                  n = 0;
                n < c.length;

              )
                if (((a = c[n]), ++n, 0 < a)) {
                  this.__visible = !0;
                  break;
                }
          }
        },
        beginShaderFill: function (a, b) {
          null != a &&
            ((b = this.__shaderBufferPool.get()),
            this.__usedShaderBuffers.add(b),
            b.update(a),
            this.__commands.beginShaderFill(b));
        },
        clear: function () {
          for (var a = this.__usedShaderBuffers.h; null != a; ) {
            var b = a.item;
            a = a.next;
            this.__shaderBufferPool.release(b);
          }
          this.__usedShaderBuffers.clear();
          this.__commands.clear();
          this.__strokePadding = 0;
          null != this.__bounds &&
            (this.set___dirty(!0),
            (this.__transformDirty = !0),
            (this.__bounds = null));
          this.__visible = !1;
          this.__positionY = this.__positionX = 0;
          this.moveTo(0, 0);
        },
        cubicCurveTo: function (a, b, c, d, e, f) {
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding
          );
          var h = e,
            m = e;
          if (
            !(
              (a < e && a > this.__positionX) ||
              (a > e && a < this.__positionX)
            ) ||
            !(
              (c < e && c > this.__positionX) ||
              (c > e && c < this.__positionX)
            )
          ) {
            var n = 2 * this.__positionX - 4 * a + 2 * c,
              p = a - this.__positionX,
              l = -this.__positionX + 3 * a + e - 3 * c,
              k = (-n + Math.sqrt(n * n - 4 * p * l)) / (2 * l);
            n = (-n - Math.sqrt(n * n - 4 * p * l)) / (2 * l);
            0 < k &&
              1 > k &&
              (h = this.__calculateBezierCubicPoint(
                k,
                this.__positionX,
                a,
                c,
                e
              ));
            0 < n &&
              1 > n &&
              (m = this.__calculateBezierCubicPoint(
                n,
                this.__positionX,
                a,
                c,
                e
              ));
          }
          var g = f,
            u = f;
          (((b < f && b > this.__positionX) ||
            (b > f && b < this.__positionX)) &&
            ((d < f && d > this.__positionX) ||
              (d > f && d < this.__positionX))) ||
            ((n = 2 * this.__positionX - 4 * b + 2 * d),
            (p = b - this.__positionX),
            (l = -this.__positionX + 3 * b + f - 3 * d),
            (k = (-n + Math.sqrt(n * n - 4 * p * l)) / (2 * l)),
            (n = (-n - Math.sqrt(n * n - 4 * p * l)) / (2 * l)),
            0 < k &&
              1 > k &&
              (g = this.__calculateBezierCubicPoint(
                k,
                this.__positionX,
                b,
                d,
                f
              )),
            0 < n &&
              1 > n &&
              (u = this.__calculateBezierCubicPoint(
                n,
                this.__positionX,
                b,
                d,
                f
              )));
          this.__inflateBounds(
            h - this.__strokePadding,
            g - this.__strokePadding
          );
          this.__inflateBounds(
            h + this.__strokePadding,
            g + this.__strokePadding
          );
          this.__inflateBounds(
            m - this.__strokePadding,
            u - this.__strokePadding
          );
          this.__inflateBounds(
            m + this.__strokePadding,
            u + this.__strokePadding
          );
          this.__positionX = e;
          this.__positionY = f;
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding
          );
          this.__commands.cubicCurveTo(a, b, c, d, e, f);
          this.set___dirty(!0);
        },
        curveTo: function (a, b, c, d) {
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding
          );
          var e =
            (a < c && a > this.__positionX) || (a > c && a < this.__positionX)
              ? c
              : this.__calculateBezierQuadPoint(
                  (this.__positionX - a) / (this.__positionX - 2 * a + c),
                  this.__positionX,
                  a,
                  c
                );
          var f =
            (b < d && b > this.__positionY) || (b > d && b < this.__positionY)
              ? d
              : this.__calculateBezierQuadPoint(
                  (this.__positionY - b) / (this.__positionY - 2 * b + d),
                  this.__positionY,
                  b,
                  d
                );
          this.__inflateBounds(
            e - this.__strokePadding,
            f - this.__strokePadding
          );
          this.__inflateBounds(
            e + this.__strokePadding,
            f + this.__strokePadding
          );
          this.__positionX = c;
          this.__positionY = d;
          this.__commands.curveTo(a, b, c, d);
          this.set___dirty(!0);
        },
        drawCircle: function (a, b, c) {
          0 >= c ||
            (this.__inflateBounds(
              a - c - this.__strokePadding,
              b - c - this.__strokePadding
            ),
            this.__inflateBounds(
              a + c + this.__strokePadding,
              b + c + this.__strokePadding
            ),
            this.__commands.drawCircle(a, b, c),
            this.set___dirty(!0));
        },
        drawPath: function (a, b, c) {
          null == c && (c = 0);
          var d = 0;
          1 == c && this.__commands.windingNonZero();
          a = a.iterator();
          a: for (; a.hasNext(); )
            switch (a.next()) {
              case 1:
                this.moveTo(b.get(d), b.get(d + 1));
                d += 2;
                break;
              case 2:
                this.lineTo(b.get(d), b.get(d + 1));
                d += 2;
                break;
              case 3:
                this.curveTo(
                  b.get(d),
                  b.get(d + 1),
                  b.get(d + 2),
                  b.get(d + 3)
                );
                d += 4;
                break;
              case 4:
                this.moveTo(b.get(d + 2), b.get(d + 3));
                break a;
              case 5:
                this.lineTo(b.get(d + 2), b.get(d + 3));
                break a;
              case 6:
                this.cubicCurveTo(
                  b.get(d),
                  b.get(d + 1),
                  b.get(d + 2),
                  b.get(d + 3),
                  b.get(d + 4),
                  b.get(d + 5)
                ),
                  (d += 6);
            }
        },
        drawQuads: function (a, b, c) {
          if (null != a) {
            var d = null != b,
              e = !1,
              f = !1,
              h = d ? b.get_length() : Math.floor(a.get_length() / 4);
            if (0 != h) {
              null != c &&
                (c.get_length() >= 6 * h
                  ? (f = e = !0)
                  : c.get_length() >= 4 * h
                  ? (e = !0)
                  : c.get_length() >= 2 * h && (f = !0));
              for (
                var m = ma.__pool.get(),
                  n = Ea.__pool.get(),
                  p = Infinity,
                  l = Infinity,
                  k = -Infinity,
                  g = -Infinity,
                  u,
                  q = 0;
                q < h;

              ) {
                var r = q++;
                u = d ? 4 * b.get(r) : 4 * r;
                0 > u ||
                  (m.setTo(0, 0, a.get(u + 2), a.get(u + 3)),
                  0 >= m.width ||
                    0 >= m.height ||
                    (e && f
                      ? ((u = 6 * r),
                        n.setTo(
                          c.get(u),
                          c.get(u + 1),
                          c.get(u + 2),
                          c.get(u + 3),
                          c.get(u + 4),
                          c.get(u + 5)
                        ))
                      : e
                      ? ((u = 4 * r),
                        n.setTo(
                          c.get(u),
                          c.get(u + 1),
                          c.get(u + 2),
                          c.get(u + 3),
                          m.x,
                          m.y
                        ))
                      : f
                      ? ((u = 2 * r), (n.tx = c.get(u)), (n.ty = c.get(u + 1)))
                      : ((n.tx = m.x), (n.ty = m.y)),
                    m.__transform(m, n),
                    p > m.x && (p = m.x),
                    l > m.y && (l = m.y),
                    k < m.get_right() && (k = m.get_right()),
                    g < m.get_bottom() && (g = m.get_bottom())));
              }
              this.__inflateBounds(p, l);
              this.__inflateBounds(k, g);
              this.__commands.drawQuads(a, b, c);
              this.set___dirty(!0);
              this.__visible = !0;
              ma.__pool.release(m);
              Ea.__pool.release(n);
            }
          }
        },
        drawRect: function (a, b, c, d) {
          if (0 != c || 0 != d) {
            var e = 0 > c ? -1 : 1,
              f = 0 > d ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * e,
              b - this.__strokePadding * f
            );
            this.__inflateBounds(
              a + c + this.__strokePadding * e,
              b + d + this.__strokePadding * f
            );
            this.__commands.drawRect(a, b, c, d);
            this.set___dirty(!0);
          }
        },
        drawTriangles: function (a, b, c, d) {
          null == d && (d = 1);
          if (null != a && 0 != a.get_length()) {
            var e = (a.get_length() / 2) | 0;
            if (null == b) {
              if (0 != e % 3)
                throw C.thrown(
                  new Eg("Not enough vertices to close a triangle.")
                );
              b = rb.toIntVector(null);
              for (var f = 0, h = e; f < h; ) {
                var m = f++;
                b.push(m);
              }
            }
            null == d && (d = 1);
            var n = Infinity,
              p = Infinity,
              l = -Infinity,
              k = -Infinity;
            f = 0;
            for (h = e; f < h; )
              (m = f++),
                (e = a.get(2 * m)),
                (m = a.get(2 * m + 1)),
                n > e && (n = e),
                p > m && (p = m),
                l < e && (l = e),
                k < m && (k = m);
            this.__inflateBounds(n, p);
            this.__inflateBounds(l, k);
            this.__commands.drawTriangles(a, b, c, d);
            this.set___dirty(!0);
            this.__visible = !0;
          }
        },
        endFill: function () {
          this.__commands.endFill();
        },
        lineStyle: function (a, b, c, d, e, f, h, m) {
          null == m && (m = 3);
          null == e && (e = 2);
          null == d && (d = !1);
          null == c && (c = 1);
          null == b && (b = 0);
          null != a &&
            (1 == h
              ? a > this.__strokePadding && (this.__strokePadding = a)
              : a / 2 > this.__strokePadding && (this.__strokePadding = a / 2));
          this.__commands.lineStyle(a, b, c, d, e, f, h, m);
          null != a && (this.__visible = !0);
        },
        lineTo: function (a, b) {
          isFinite(a) &&
            isFinite(b) &&
            (this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding
            ),
            this.__inflateBounds(
              this.__positionX + this.__strokePadding,
              this.__positionY + this.__strokePadding
            ),
            (this.__positionX = a),
            (this.__positionY = b),
            this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding
            ),
            this.__inflateBounds(
              this.__positionX + 2 * this.__strokePadding,
              this.__positionY + this.__strokePadding
            ),
            this.__commands.lineTo(a, b),
            this.set___dirty(!0));
        },
        moveTo: function (a, b) {
          this.__positionX = a;
          this.__positionY = b;
          this.__commands.moveTo(a, b);
        },
        overrideBlendMode: function (a) {
          null == a && (a = 10);
          this.__commands.overrideBlendMode(a);
        },
        __calculateBezierCubicPoint: function (a, b, c, d, e) {
          var f = 1 - a;
          return (
            b * f * f * f +
            3 * c * a * f * f +
            3 * d * f * a * a +
            e * a * a * a
          );
        },
        __calculateBezierQuadPoint: function (a, b, c, d) {
          var e = 1 - a;
          return e * e * b + 2 * e * a * c + a * a * d;
        },
        __cleanup: function () {
          null != this.__bounds &&
            null != this.__canvas &&
            (this.set___dirty(!0), (this.__transformDirty = !0));
          this.__context = this.__canvas = this.__bitmap = null;
        },
        __getBounds: function (a, b) {
          if (null != this.__bounds) {
            var c = ma.__pool.get();
            this.__bounds.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            ma.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d) {
          if (null == this.__bounds) return !1;
          var e = d.a * d.d - d.b * d.c,
            f =
              0 == e ? -d.tx : (1 / e) * (d.c * (d.ty - b) + d.d * (a - d.tx));
          e = d.a * d.d - d.b * d.c;
          a = 0 == e ? -d.ty : (1 / e) * (d.a * (b - d.ty) + d.b * (d.tx - a));
          return f > this.__bounds.x &&
            a > this.__bounds.y &&
            this.__bounds.contains(f, a)
            ? c
              ? w.hitTest(this, f, a)
              : !0
            : !1;
        },
        __inflateBounds: function (a, b) {
          null == this.__bounds
            ? ((this.__bounds = new ma(a, b, 0, 0)),
              (this.__transformDirty = !0))
            : (a < this.__bounds.x &&
                ((this.__bounds.width += this.__bounds.x - a),
                (this.__bounds.x = a),
                (this.__transformDirty = !0)),
              b < this.__bounds.y &&
                ((this.__bounds.height += this.__bounds.y - b),
                (this.__bounds.y = b),
                (this.__transformDirty = !0)),
              a > this.__bounds.x + this.__bounds.width &&
                (this.__bounds.width = a - this.__bounds.x),
              b > this.__bounds.y + this.__bounds.height &&
                (this.__bounds.height = b - this.__bounds.y));
        },
        __update: function (a) {
          if (
            !(
              null == this.__bounds ||
              0 >= this.__bounds.width ||
              0 >= this.__bounds.height
            )
          ) {
            var b = this.__owner.__renderTransform;
            if (null != b) {
              var c =
                0 == b.b ? Math.abs(b.a) : Math.sqrt(b.a * b.a + b.b * b.b);
              var d =
                0 == b.c ? Math.abs(b.d) : Math.sqrt(b.c * b.c + b.d * b.d);
              null != a &&
                ((c =
                  0 == a.b ? c * a.a : c * Math.sqrt(a.a * a.a + a.b * a.b)),
                (d =
                  0 == a.c ? d * a.d : d * Math.sqrt(a.c * a.c + a.d * a.d)));
              a = this.__bounds.width * c;
              d *= this.__bounds.height;
              if (1 > a || 1 > d)
                (1 <= this.__width || 1 <= this.__height) &&
                  this.set___dirty(!0),
                  (this.__height = this.__width = 0);
              else {
                null != pd.maxTextureWidth &&
                  a > pd.maxTextureWidth &&
                  (a = pd.maxTextureWidth);
                null != pd.maxTextureWidth &&
                  d > pd.maxTextureHeight &&
                  (d = pd.maxTextureHeight);
                this.__renderTransform.a = a / this.__bounds.width;
                this.__renderTransform.d = d / this.__bounds.height;
                c = 1 / this.__renderTransform.a;
                var e = 1 / this.__renderTransform.d;
                this.__worldTransform.a = c * b.a;
                this.__worldTransform.b = c * b.b;
                this.__worldTransform.c = e * b.c;
                this.__worldTransform.d = e * b.d;
                e = this.__bounds.x;
                var f = this.__bounds.y;
                c = e * b.a + f * b.c + b.tx;
                b = e * b.b + f * b.d + b.ty;
                this.__worldTransform.tx = Math.round(c);
                this.__worldTransform.ty = Math.round(b);
                e = this.__worldTransform;
                f = e.a * e.d - e.b * e.c;
                this.__renderTransform.tx =
                  0 == f
                    ? -e.tx
                    : (1 / f) * (e.c * (e.ty - b) + e.d * (c - e.tx));
                e = this.__worldTransform;
                f = e.a * e.d - e.b * e.c;
                this.__renderTransform.ty =
                  0 == f
                    ? -e.ty
                    : (1 / f) * (e.a * (b - e.ty) + e.b * (e.tx - c));
                a = Math.ceil(a + 1);
                d = Math.ceil(d + 1);
                (a == this.__width && d == this.__height) ||
                  this.set___dirty(!0);
                this.__width = a;
                this.__height = d;
              }
            }
          }
        },
        set___dirty: function (a) {
          if (a && null != this.__owner) {
            var b = this.__owner;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          a && (this.__hardwareDirty = this.__softwareDirty = !0);
          return (this.__dirty = a);
        },
        __class__: pd,
        __properties__: { set___dirty: "set___dirty" },
      };
      var Fn = {
          toString: function (a) {
            switch (a) {
              case 0:
                return "bevel";
              case 1:
                return "miter";
              case 2:
                return "round";
              default:
                return null;
            }
          },
        },
        pm = function () {
          va.call(this);
          this.contentLoaderInfo = kf.create(this);
          this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
          this.__unloaded = !0;
        };
      g["openfl.display.Loader"] = pm;
      pm.__name__ = "openfl.display.Loader";
      pm.__super__ = va;
      pm.prototype = r(va.prototype, { __class__: pm });
      var kf = function () {
        sa.call(this);
        this.applicationDomain = eh.currentDomain;
        this.bytesTotal = this.bytesLoaded = 0;
        this.childAllowsParent = !0;
        this.parameters = {};
      };
      g["openfl.display.LoaderInfo"] = kf;
      kf.__name__ = "openfl.display.LoaderInfo";
      kf.create = function (a) {
        var b = new kf();
        b.uncaughtErrorEvents = new sk();
        null != a ? (b.loader = a) : (b.url = kf.__rootURL);
        return b;
      };
      kf.__super__ = sa;
      kf.prototype = r(sa.prototype, {
        __complete: function () {
          this.__completed ||
            (this.bytesLoaded < this.bytesTotal &&
              (this.bytesLoaded = this.bytesTotal),
            this.__update(this.bytesLoaded, this.bytesTotal),
            (this.__completed = !0),
            this.dispatchEvent(new Ca("complete")));
        },
        __update: function (a, b) {
          this.bytesLoaded = a;
          this.bytesTotal = b;
          this.dispatchEvent(new fh("progress", !1, !1, a, b));
        },
        __class__: kf,
      });
      var Wf = function () {
        fa.call(this);
        this.__enabled = !0;
        if (null != Wf.__constructor) {
          var a = Wf.__constructor;
          Wf.__constructor = null;
          a(this);
        }
      };
      g["openfl.display.MovieClip"] = Wf;
      Wf.__name__ = "openfl.display.MovieClip";
      Wf.__super__ = fa;
      Wf.prototype = r(fa.prototype, {
        __enterFrame: function (a) {
          null != this.__timeline && this.__timeline.__enterFrame(a);
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __tabTest: function (a) {
          this.__enabled && fa.prototype.__tabTest.call(this, a);
        },
        __class__: Wf,
      });
      var Ta = function (a, b) {
        ld.call(this);
        this.__context3D = a;
        this.__context = a.__context;
        this.__gl = this.gl = a.__context.webgl;
        this.__defaultRenderTarget = b;
        this.__flipped = null == this.__defaultRenderTarget;
        null == pd.maxTextureWidth &&
          (pd.maxTextureWidth = pd.maxTextureHeight =
            this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
        this.__matrix = fb._new();
        this.__values = [];
        this.__softwareRenderer = new $e(null);
        this.__type = "opengl";
        this.__setBlendMode(10);
        this.__context3D.__setGLBlend(!0);
        this.__clipRects = [];
        this.__maskObjects = [];
        this.__numClipRects = 0;
        this.__projection = fb._new();
        this.__projectionFlipped = fb._new();
        this.__stencilReference = 0;
        this.__tempRect = new ma();
        this.__defaultDisplayShader = new qk();
        this.__defaultGraphicsShader = new gg();
        this.__defaultShader = this.__defaultDisplayShader;
        this.__initShader(this.__defaultShader);
        this.__scrollRectMasks = new Kb(function () {
          return new vf();
        });
        this.__maskShader = new gh();
      };
      g["openfl.display.OpenGLRenderer"] = Ta;
      Ta.__name__ = "openfl.display.OpenGLRenderer";
      Ta.__super__ = ld;
      Ta.prototype = r(ld.prototype, {
        applyAlpha: function (a) {
          Ta.__alphaValue[0] = a;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride(
                "openfl_Alpha",
                Ta.__alphaValue
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__alpha &&
              (this.__currentShader.__alpha.value = Ta.__alphaValue);
        },
        applyBitmapData: function (a, b, c) {
          null == c && (c = !1);
          null != this.__currentShaderBuffer
            ? null != a &&
              ((Ta.__textureSizeValue[0] = a.__textureWidth),
              (Ta.__textureSizeValue[1] = a.__textureHeight),
              this.__currentShaderBuffer.addFloatOverride(
                "openfl_TextureSize",
                Ta.__textureSizeValue
              ))
            : null != this.__currentShader &&
              (null != this.__currentShader.__bitmap &&
                ((this.__currentShader.__bitmap.input = a),
                (this.__currentShader.__bitmap.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__bitmap.mipFilter = 2),
                (this.__currentShader.__bitmap.wrap = c ? 2 : 0)),
              null != this.__currentShader.__texture &&
                ((this.__currentShader.__texture.input = a),
                (this.__currentShader.__texture.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__texture.mipFilter = 2),
                (this.__currentShader.__texture.wrap = c ? 2 : 0)),
              null != this.__currentShader.__textureSize &&
                (null != a
                  ? ((Ta.__textureSizeValue[0] = a.__textureWidth),
                    (Ta.__textureSizeValue[1] = a.__textureHeight),
                    (this.__currentShader.__textureSize.value =
                      Ta.__textureSizeValue))
                  : (this.__currentShader.__textureSize.value = null)));
        },
        applyColorTransform: function (a) {
          var b = null != a && !a.__isDefault(!0);
          this.applyHasColorTransform(b);
          b
            ? (a.__setArrays(
                Ta.__colorMultipliersValue,
                Ta.__colorOffsetsValue
              ),
              null != this.__currentShaderBuffer
                ? (this.__currentShaderBuffer.addFloatOverride(
                    "openfl_ColorMultiplier",
                    Ta.__colorMultipliersValue
                  ),
                  this.__currentShaderBuffer.addFloatOverride(
                    "openfl_ColorOffset",
                    Ta.__colorOffsetsValue
                  ))
                : null != this.__currentShader &&
                  (null != this.__currentShader.__colorMultiplier &&
                    (this.__currentShader.__colorMultiplier.value =
                      Ta.__colorMultipliersValue),
                  null != this.__currentShader.__colorOffset &&
                    (this.__currentShader.__colorOffset.value =
                      Ta.__colorOffsetsValue)))
            : null != this.__currentShaderBuffer
            ? (this.__currentShaderBuffer.addFloatOverride(
                "openfl_ColorMultiplier",
                Ta.__emptyColorValue
              ),
              this.__currentShaderBuffer.addFloatOverride(
                "openfl_ColorOffset",
                Ta.__emptyColorValue
              ))
            : null != this.__currentShader &&
              (null != this.__currentShader.__colorMultiplier &&
                (this.__currentShader.__colorMultiplier.value =
                  Ta.__emptyColorValue),
              null != this.__currentShader.__colorOffset &&
                (this.__currentShader.__colorOffset.value =
                  Ta.__emptyColorValue));
        },
        applyHasColorTransform: function (a) {
          Ta.__hasColorTransformValue[0] = a;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addBoolOverride(
                "openfl_HasColorTransform",
                Ta.__hasColorTransformValue
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value =
                Ta.__hasColorTransformValue);
        },
        applyMatrix: function (a) {
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride("openfl_Matrix", a)
            : null != this.__currentShader &&
              null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = a);
        },
        setShader: function (a) {
          this.__currentShaderBuffer = null;
          this.__currentShader != a &&
            (null == a
              ? ((this.__currentShader = null),
                this.__context3D.setProgram(null))
              : ((this.__currentShader = a),
                this.__initShader(a),
                this.__context3D.setProgram(a.program),
                this.__context3D.__flushGLProgram(),
                this.__currentShader.__enable(),
                (this.__context3D.__state.shader = a)));
        },
        setViewport: function () {
          this.__gl.viewport(
            this.__offsetX,
            this.__offsetY,
            this.__displayWidth,
            this.__displayHeight
          );
        },
        updateShader: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__position &&
              (this.__currentShader.__position.__useArray = !0),
            null != this.__currentShader.__textureCoord &&
              (this.__currentShader.__textureCoord.__useArray = !0),
            this.__context3D.setProgram(this.__currentShader.program),
            this.__context3D.__flushGLProgram(),
            this.__context3D.__flushGLTextures(),
            this.__currentShader.__update());
        },
        __clear: function () {
          null == this.__stage || this.__stage.__transparent
            ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1)
            : this.__context3D.clear(
                this.__stage.__colorSplit[0],
                this.__stage.__colorSplit[1],
                this.__stage.__colorSplit[2],
                1,
                0,
                0,
                1
              );
          this.__cleared = !0;
        },
        __clearShader: function () {
          null != this.__currentShader &&
            (null == this.__currentShaderBuffer
              ? null != this.__currentShader.__bitmap &&
                (this.__currentShader.__bitmap.input = null)
              : this.__currentShaderBuffer.clearOverride(),
            null != this.__currentShader.__texture &&
              (this.__currentShader.__texture.input = null),
            null != this.__currentShader.__textureSize &&
              (this.__currentShader.__textureSize.value = null),
            null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value = null),
            null != this.__currentShader.__position &&
              (this.__currentShader.__position.value = null),
            null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = null),
            this.__currentShader.__clearUseArray());
        },
        __copyShader: function (a) {
          this.__currentShader = a.__currentShader;
          this.__currentShaderBuffer = a.__currentShaderBuffer;
          this.__currentDisplayShader = a.__currentDisplayShader;
          this.__currentGraphicsShader = a.__currentGraphicsShader;
        },
        __getMatrix: function (a, b) {
          var c = Ea.__pool.get();
          c.copyFrom(a);
          c.concat(this.__worldTransform);
          if (
            0 == b ||
            (1 == b &&
              0 == c.b &&
              0 == c.c &&
              1.001 > c.a &&
              0.999 < c.a &&
              1.001 > c.d &&
              0.999 < c.d)
          )
            (c.tx = Math.round(c.tx)), (c.ty = Math.round(c.ty));
          fb.identity(this.__matrix);
          fb.set(this.__matrix, 0, c.a);
          fb.set(this.__matrix, 1, c.b);
          fb.set(this.__matrix, 4, c.c);
          fb.set(this.__matrix, 5, c.d);
          fb.set(this.__matrix, 12, c.tx);
          fb.set(this.__matrix, 13, c.ty);
          fb.append(
            this.__matrix,
            this.__flipped ? this.__projectionFlipped : this.__projection
          );
          this.__values[0] = fb.get(this.__matrix, 0);
          this.__values[1] = fb.get(this.__matrix, 1);
          this.__values[2] = fb.get(this.__matrix, 2);
          this.__values[3] = fb.get(this.__matrix, 3);
          this.__values[4] = fb.get(this.__matrix, 4);
          this.__values[5] = fb.get(this.__matrix, 5);
          this.__values[6] = fb.get(this.__matrix, 6);
          this.__values[7] = fb.get(this.__matrix, 7);
          this.__values[8] = fb.get(this.__matrix, 8);
          this.__values[9] = fb.get(this.__matrix, 9);
          this.__values[10] = fb.get(this.__matrix, 10);
          this.__values[11] = fb.get(this.__matrix, 11);
          this.__values[12] = fb.get(this.__matrix, 12);
          this.__values[13] = fb.get(this.__matrix, 13);
          this.__values[14] = fb.get(this.__matrix, 14);
          this.__values[15] = fb.get(this.__matrix, 15);
          Ea.__pool.release(c);
          return this.__values;
        },
        __initShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultShader;
        },
        __initDisplayShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultDisplayShader;
        },
        __initGraphicsShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultGraphicsShader;
        },
        __initShaderBuffer: function (a) {
          return null != a
            ? this.__initGraphicsShader(a.shader)
            : this.__defaultGraphicsShader;
        },
        __popMask: function () {
          if (0 != this.__stencilReference) {
            var a = this.__maskObjects.pop();
            1 < this.__stencilReference
              ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  255
                ),
                this.__context3D.setColorMask(!1, !1, !1, !1),
                a.__renderGLMask(this),
                this.__stencilReference--,
                this.__context3D.setStencilActions(2, 1, 5, 5, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  0
                ),
                this.__context3D.setColorMask(!0, !0, !0, !0))
              : ((this.__stencilReference = 0),
                this.__context3D.setStencilActions(),
                this.__context3D.setStencilReferenceValue(0, 0, 0));
          }
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? (this.__scrollRectMasks.release(
                  this.__maskObjects[this.__maskObjects.length - 1]
                ),
                this.__popMask())
              : this.__popMaskRect());
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            0 < this.__numClipRects
              ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
              : this.__scissorRect());
        },
        __pushMask: function (a) {
          0 == this.__stencilReference &&
            (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4),
            (this.__updatedStencil = !0));
          this.__context3D.setStencilActions(2, 1, 2, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            255
          );
          this.__context3D.setColorMask(!1, !1, !1, !1);
          a.__renderGLMask(this);
          this.__maskObjects.push(a);
          this.__stencilReference++;
          this.__context3D.setStencilActions(2, 1, 5, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            0
          );
          this.__context3D.setColorMask(!0, !0, !0, !0);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? ((b = this.__scrollRectMasks.get()),
                b.get_graphics().clear(),
                b.get_graphics().beginFill(65280),
                b
                  .get_graphics()
                  .drawRect(
                    a.__scrollRect.x,
                    a.__scrollRect.y,
                    a.__scrollRect.width,
                    a.__scrollRect.height
                  ),
                b.__renderTransform.copyFrom(a.__renderTransform),
                this.__pushMask(b))
              : this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new ma());
          var c = Ea.__pool.get();
          c.copyFrom(b);
          c.concat(this.__worldTransform);
          b = this.__clipRects[this.__numClipRects];
          a.__transform(b, c);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            b.__contract(a.x, a.y, a.width, a.height));
          0 > b.height && (b.height = 0);
          0 > b.width && (b.width = 0);
          Ea.__pool.release(c);
          this.__scissorRect(b);
          this.__numClipRects++;
        },
        __render: function (a) {
          this.__context3D.setColorMask(!0, !0, !0, !0);
          this.__context3D.setCulling(3);
          this.__context3D.setDepthTest(!1, 0);
          this.__context3D.setStencilActions();
          this.__context3D.setStencilReferenceValue(0, 0, 0);
          this.__context3D.setScissorRectangle(null);
          this.__blendMode = null;
          this.__setBlendMode(10);
          if (null == this.__defaultRenderTarget) {
            if (
              (Ta.__scissorRectangle.setTo(
                this.__offsetX,
                this.__offsetY,
                this.__displayWidth,
                this.__displayHeight
              ),
              this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
              (this.__upscaled =
                1 != this.__worldTransform.a || 1 != this.__worldTransform.d),
              a.__renderGL(this),
              0 < this.__offsetX || 0 < this.__offsetY)
            )
              0 < this.__offsetX &&
                (Ta.__scissorRectangle.setTo(
                  0,
                  0,
                  this.__offsetX,
                  this.__height
                ),
                this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                Ta.__scissorRectangle.setTo(
                  this.__offsetX + this.__displayWidth,
                  0,
                  this.__width,
                  this.__height
                ),
                this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                0 < this.__offsetY &&
                  (Ta.__scissorRectangle.setTo(
                    0,
                    0,
                    this.__width,
                    this.__offsetY
                  ),
                  this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                  Ta.__scissorRectangle.setTo(
                    0,
                    this.__offsetY + this.__displayHeight,
                    this.__width,
                    this.__height
                  ),
                  this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                this.__context3D.setScissorRectangle(null);
          } else {
            Ta.__scissorRectangle.setTo(
              this.__offsetX,
              this.__offsetY,
              this.__displayWidth,
              this.__displayHeight
            );
            this.__context3D.setScissorRectangle(Ta.__scissorRectangle);
            var b = a.__mask,
              c = a.__scrollRect;
            a.__mask = null;
            a.__scrollRect = null;
            a.__renderGL(this);
            a.__mask = b;
            a.__scrollRect = c;
          }
          this.__context3D.present();
        },
        __renderFilterPass: function (a, b, c, d) {
          null == d && (d = !0);
          if (null != a && null != b && null != this.__defaultRenderTarget) {
            var e = this.__context3D.__state.renderToTexture,
              f = this.__context3D.__state.renderToTextureDepthStencil,
              h = this.__context3D.__state.renderToTextureAntiAlias,
              m = this.__context3D.__state.renderToTextureSurfaceSelector;
            this.__context3D.setRenderToTexture(
              this.__defaultRenderTarget.getTexture(this.__context3D),
              !1
            );
            d && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
            b = this.__initShader(b);
            this.setShader(b);
            this.applyAlpha(1);
            this.applyBitmapData(a, c);
            this.applyColorTransform(null);
            this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
            this.updateShader();
            c = a.getVertexBuffer(this.__context3D);
            null != b.__position &&
              this.__context3D.setVertexBufferAt(b.__position.index, c, 0, 3);
            null != b.__textureCoord &&
              this.__context3D.setVertexBufferAt(
                b.__textureCoord.index,
                c,
                3,
                2
              );
            a = a.getIndexBuffer(this.__context3D);
            this.__context3D.drawTriangles(a);
            null != e
              ? this.__context3D.setRenderToTexture(e, f, h, m)
              : this.__context3D.setRenderToBackBuffer();
            this.__clearShader();
          }
        },
        __resize: function (a, b) {
          this.__width = a;
          this.__height = b;
          a =
            null == this.__defaultRenderTarget
              ? this.__stage.stageWidth
              : this.__defaultRenderTarget.width;
          b =
            null == this.__defaultRenderTarget
              ? this.__stage.stageHeight
              : this.__defaultRenderTarget.height;
          if (null == this.__defaultRenderTarget) {
            var c = this.__worldTransform;
            c = Math.round(0 * c.a + 0 * c.c + c.tx);
          } else c = 0;
          this.__offsetX = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + 0 * c.d + c.ty)))
            : (c = 0);
          this.__offsetY = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(a * c.a + 0 * c.c + c.tx - this.__offsetX)))
            : (c = a);
          this.__displayWidth = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + b * c.d + c.ty - this.__offsetY)))
            : (c = b);
          this.__displayHeight = c;
          fb.createOrtho(
            this.__projection,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            0,
            this.__displayHeight + 2 * this.__offsetY,
            -1e3,
            1e3
          );
          fb.createOrtho(
            this.__projectionFlipped,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            this.__displayHeight + 2 * this.__offsetY,
            0,
            -1e3,
            1e3
          );
        },
        __resumeClipAndMask: function (a) {
          0 < this.__stencilReference
            ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5),
              this.__context3D.setStencilReferenceValue(
                this.__stencilReference,
                255,
                0
              ))
            : (this.__context3D.setStencilActions(),
              this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects
            ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
            : this.__scissorRect();
        },
        __scissorRect: function (a) {
          if (null != a) {
            var b = Math.floor(a.x),
              c = Math.floor(a.y),
              d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0;
            a = 0 < a.height ? Math.ceil(a.get_bottom()) - c : 0;
            0 > d && (d = 0);
            0 > a && (a = 0);
            Ta.__scissorRectangle.setTo(b, c, d, a);
            this.__context3D.setScissorRectangle(Ta.__scissorRectangle);
          } else this.__context3D.setScissorRectangle(null);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          if (this.__blendMode != a)
            switch (((this.__blendMode = a), a)) {
              case 0:
                this.__context3D.setBlendFactors(2, 2);
                break;
              case 9:
                this.__context3D.setBlendFactors(1, 5);
                break;
              case 12:
                this.__context3D.setBlendFactors(2, 6);
                break;
              case 14:
                this.__context3D.setBlendFactors(2, 2);
                this.__context3D.__setGLBlendEquation(
                  this.__gl.FUNC_REVERSE_SUBTRACT
                );
                break;
              default:
                this.__context3D.setBlendFactors(2, 5);
            }
        },
        __setRenderTarget: function (a) {
          this.__defaultRenderTarget = a;
          this.__flipped = null == a;
          null != a && this.__resize(a.width, a.height);
        },
        __setShaderBuffer: function (a) {
          this.setShader(a.shader);
          this.__currentShaderBuffer = a;
        },
        __suspendClipAndMask: function () {
          0 < this.__stencilReference &&
            (this.__context3D.setStencilActions(),
            this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects && this.__scissorRect();
        },
        __updateShaderBuffer: function (a) {
          null != this.__currentShader &&
            null != this.__currentShaderBuffer &&
            this.__currentShader.__updateFromBuffer(
              this.__currentShaderBuffer,
              a
            );
        },
        __class__: Ta,
      });
      var pi = function (a) {
        this.onComplete = new kc();
        this.display = a;
        null != a &&
          (a.addEventListener("unload", q(this, this.display_onUnload)),
          na.get_current().addChild(a));
      };
      g["openfl.display.Preloader"] = pi;
      pi.__name__ = "openfl.display.Preloader";
      pi.prototype = {
        start: function () {
          this.ready = !0;
          na.get_current().get_loaderInfo().__complete();
          if (null != this.display) {
            var a = new Ca("complete", !0, !0);
            this.display.dispatchEvent(a);
            a.isDefaultPrevented() ||
              this.display.dispatchEvent(new Ca("unload"));
          } else
            this.complete || ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {
          na.get_current().get_loaderInfo().__update(a, b);
          null != this.display &&
            this.display.dispatchEvent(new fh("progress", !0, !0, a, b));
        },
        display_onUnload: function (a) {
          null != this.display &&
            (this.display.removeEventListener(
              "unload",
              q(this, this.display_onUnload)
            ),
            this.display.parent == na.get_current() &&
              na.get_current().removeChild(this.display),
            na.get_current().stage.set_focus(null),
            (this.display = null));
          this.ready &&
            !this.complete &&
            ((this.complete = !0), this.onComplete.dispatch());
        },
        __class__: pi,
      };
      var tk = function () {
        fa.call(this);
        var a = this.getBackgroundColor(),
          b = 0;
        70 >
          0.299 * ((a >> 16) & 255) +
            0.587 * ((a >> 8) & 255) +
            0.114 * (a & 255) && (b = 16777215);
        a = this.getHeight() / 2 - 3.5;
        var c = this.getWidth() - 60;
        this.outline = new vf();
        this.outline.get_graphics().beginFill(b, 0.07);
        this.outline.get_graphics().drawRect(0, 0, c, 7);
        this.outline.set_x(30);
        this.outline.set_y(a);
        this.outline.set_alpha(0);
        this.addChild(this.outline);
        this.progress = new vf();
        this.progress.get_graphics().beginFill(b, 0.35);
        this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
        this.progress.set_x(32);
        this.progress.set_y(a + 2);
        this.progress.set_scaleX(0);
        this.progress.set_alpha(0);
        this.addChild(this.progress);
        this.startAnimation = na.getTimer() + 100;
        this.endAnimation = this.startAnimation + 1e3;
        this.addEventListener(
          "addedToStage",
          q(this, this.this_onAddedToStage)
        );
      };
      g["openfl.display.DefaultPreloader"] = tk;
      tk.__name__ = "openfl.display.DefaultPreloader";
      tk.__super__ = fa;
      tk.prototype = r(fa.prototype, {
        getBackgroundColor: function () {
          var a = na.get_current().stage.window.context.attributes;
          return Object.prototype.hasOwnProperty.call(a, "background") &&
            null != a.background
            ? a.background
            : 0;
        },
        getHeight: function () {
          var a = na.get_current().stage.window.__height;
          return 0 < a ? a : na.get_current().stage.stageHeight;
        },
        getWidth: function () {
          var a = na.get_current().stage.window.__width;
          return 0 < a ? a : na.get_current().stage.stageWidth;
        },
        onInit: function () {
          this.addEventListener("enterFrame", q(this, this.this_onEnterFrame));
        },
        onLoaded: function () {
          this.removeEventListener(
            "enterFrame",
            q(this, this.this_onEnterFrame)
          );
          this.dispatchEvent(new Ca("unload"));
        },
        onUpdate: function (a, b) {
          var c = 0;
          0 < b && ((c = a / b), 1 < c && (c = 1));
          this.progress.set_scaleX(c);
        },
        this_onAddedToStage: function (a) {
          this.removeEventListener(
            "addedToStage",
            q(this, this.this_onAddedToStage)
          );
          this.onInit();
          this.onUpdate(
            this.get_loaderInfo().bytesLoaded,
            this.get_loaderInfo().bytesTotal
          );
          this.addEventListener("progress", q(this, this.this_onProgress));
          this.addEventListener("complete", q(this, this.this_onComplete));
        },
        this_onComplete: function (a) {
          a.preventDefault();
          this.removeEventListener("progress", q(this, this.this_onProgress));
          this.removeEventListener("complete", q(this, this.this_onComplete));
          this.onLoaded();
        },
        this_onEnterFrame: function (a) {
          a =
            (na.getTimer() - this.startAnimation) /
            (this.endAnimation - this.startAnimation);
          0 > a && (a = 0);
          1 < a && (a = 1);
          this.outline.set_alpha(this.progress.set_alpha(a));
        },
        this_onProgress: function (a) {
          this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0);
        },
        __class__: tk,
      });
      var mn = {
          _new: function (a) {
            return {};
          },
        },
        Pi = function () {
          this.channels = 0;
          this.filter = 5;
          this.index = this.height = 0;
          this.mipFilter = 2;
          this.wrap = this.width = 0;
        };
      g["openfl.display.ShaderInput"] = Pi;
      Pi.__name__ = "openfl.display.ShaderInput";
      Pi.prototype = {
        __disableGL: function (a, b) {
          a.setTextureAt(b, null);
        },
        __updateGL: function (a, b, c, d, e, f) {
          c = null != c ? c : this.input;
          d = null != d ? d : this.filter;
          e = null != e ? e : this.mipFilter;
          f = null != f ? f : this.wrap;
          null != c
            ? (a.setTextureAt(b, c.getTexture(a)),
              a.setSamplerStateAt(b, f, d, e))
            : a.setTextureAt(b, null);
        },
        __class__: Pi,
      };
      var Jg = function () {
        this.index = 0;
      };
      g["openfl.display.ShaderParameter"] = Jg;
      Jg.__name__ = "openfl.display.ShaderParameter";
      Jg.prototype = {
        __disableGL: function (a) {
          a = a.gl;
          if (!this.__isUniform)
            for (var b = 0, c = this.__arrayLength; b < c; ) {
              var d = b++;
              a.disableVertexAttribArray(this.index + d);
            }
        },
        __updateGL: function (a, b) {
          a = a.gl;
          b = null != b ? b : this.value;
          var c = this.__isBool ? b : null,
            d = this.__isFloat ? b : null,
            e = this.__isInt ? b : null;
          if (this.__isUniform)
            if (null != b && b.length >= this.__length)
              switch (this.type) {
                case 0:
                  a.uniform1i(this.index, c[0] ? 1 : 0);
                  break;
                case 1:
                  a.uniform2i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                  break;
                case 2:
                  a.uniform3i(
                    this.index,
                    c[0] ? 1 : 0,
                    c[1] ? 1 : 0,
                    c[2] ? 1 : 0
                  );
                  break;
                case 3:
                  a.uniform4i(
                    this.index,
                    c[0] ? 1 : 0,
                    c[1] ? 1 : 0,
                    c[2] ? 1 : 0,
                    c[3] ? 1 : 0
                  );
                  break;
                case 4:
                  a.uniform1f(this.index, d[0]);
                  break;
                case 5:
                  a.uniform2f(this.index, d[0], d[1]);
                  break;
                case 6:
                  a.uniform3f(this.index, d[0], d[1], d[2]);
                  break;
                case 7:
                  a.uniform4f(this.index, d[0], d[1], d[2], d[3]);
                  break;
                case 8:
                  a.uniform1i(this.index, e[0]);
                  break;
                case 9:
                  a.uniform2i(this.index, e[0], e[1]);
                  break;
                case 10:
                  a.uniform3i(this.index, e[0], e[1], e[2]);
                  break;
                case 11:
                  a.uniform4i(this.index, e[0], e[1], e[2], e[3]);
                  break;
                case 12:
                  this.__uniformMatrix[0] = d[0];
                  this.__uniformMatrix[1] = d[1];
                  this.__uniformMatrix[2] = d[2];
                  this.__uniformMatrix[3] = d[3];
                  yc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 16:
                  this.__uniformMatrix[0] = d[0];
                  this.__uniformMatrix[1] = d[1];
                  this.__uniformMatrix[2] = d[2];
                  this.__uniformMatrix[3] = d[3];
                  this.__uniformMatrix[4] = d[4];
                  this.__uniformMatrix[5] = d[5];
                  this.__uniformMatrix[6] = d[6];
                  this.__uniformMatrix[7] = d[7];
                  this.__uniformMatrix[8] = d[8];
                  yc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 20:
                  (this.__uniformMatrix[0] = d[0]),
                    (this.__uniformMatrix[1] = d[1]),
                    (this.__uniformMatrix[2] = d[2]),
                    (this.__uniformMatrix[3] = d[3]),
                    (this.__uniformMatrix[4] = d[4]),
                    (this.__uniformMatrix[5] = d[5]),
                    (this.__uniformMatrix[6] = d[6]),
                    (this.__uniformMatrix[7] = d[7]),
                    (this.__uniformMatrix[8] = d[8]),
                    (this.__uniformMatrix[9] = d[9]),
                    (this.__uniformMatrix[10] = d[10]),
                    (this.__uniformMatrix[11] = d[11]),
                    (this.__uniformMatrix[12] = d[12]),
                    (this.__uniformMatrix[13] = d[13]),
                    (this.__uniformMatrix[14] = d[14]),
                    (this.__uniformMatrix[15] = d[15]),
                    yc.uniformMatrix4fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix
                    );
              }
            else
              switch (this.type) {
                case 1:
                case 9:
                  a.uniform2i(this.index, 0, 0);
                  break;
                case 3:
                case 11:
                  a.uniform4i(this.index, 0, 0, 0, 0);
                  break;
                case 4:
                  a.uniform1f(this.index, 0);
                  break;
                case 5:
                  a.uniform2f(this.index, 0, 0);
                  break;
                case 6:
                  a.uniform3f(this.index, 0, 0, 0);
                  break;
                case 7:
                  a.uniform4f(this.index, 0, 0, 0, 0);
                  break;
                case 0:
                case 8:
                  a.uniform1i(this.index, 0);
                  break;
                case 2:
                case 10:
                  a.uniform3i(this.index, 0, 0, 0);
                  break;
                case 12:
                  this.__uniformMatrix[0] = 0;
                  this.__uniformMatrix[1] = 0;
                  this.__uniformMatrix[2] = 0;
                  this.__uniformMatrix[3] = 0;
                  yc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 16:
                  this.__uniformMatrix[0] = 0;
                  this.__uniformMatrix[1] = 0;
                  this.__uniformMatrix[2] = 0;
                  this.__uniformMatrix[3] = 0;
                  this.__uniformMatrix[4] = 0;
                  this.__uniformMatrix[5] = 0;
                  this.__uniformMatrix[6] = 0;
                  this.__uniformMatrix[7] = 0;
                  this.__uniformMatrix[8] = 0;
                  yc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 20:
                  (this.__uniformMatrix[0] = 0),
                    (this.__uniformMatrix[1] = 0),
                    (this.__uniformMatrix[2] = 0),
                    (this.__uniformMatrix[3] = 0),
                    (this.__uniformMatrix[4] = 0),
                    (this.__uniformMatrix[5] = 0),
                    (this.__uniformMatrix[6] = 0),
                    (this.__uniformMatrix[7] = 0),
                    (this.__uniformMatrix[8] = 0),
                    (this.__uniformMatrix[9] = 0),
                    (this.__uniformMatrix[10] = 0),
                    (this.__uniformMatrix[11] = 0),
                    (this.__uniformMatrix[12] = 0),
                    (this.__uniformMatrix[13] = 0),
                    (this.__uniformMatrix[14] = 0),
                    (this.__uniformMatrix[15] = 0),
                    yc.uniformMatrix4fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix
                    );
              }
          else if (this.__useArray || (null != b && b.length != this.__length))
            for (f = 0, h = this.__arrayLength; f < h; )
              (m = f++), a.enableVertexAttribArray(this.index + m);
          else {
            for (var f = 0, h = this.__arrayLength; f < h; ) {
              var m = f++;
              a.disableVertexAttribArray(this.index + m);
            }
            if (null != b)
              switch (this.type) {
                case 0:
                  a.vertexAttrib1f(this.index, c[0] ? 1 : 0);
                  break;
                case 1:
                  a.vertexAttrib2f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                  break;
                case 2:
                  a.vertexAttrib3f(
                    this.index,
                    c[0] ? 1 : 0,
                    c[1] ? 1 : 0,
                    c[2] ? 1 : 0
                  );
                  break;
                case 3:
                  a.vertexAttrib4f(
                    this.index,
                    c[0] ? 1 : 0,
                    c[1] ? 1 : 0,
                    c[2] ? 1 : 0,
                    c[3] ? 1 : 0
                  );
                  break;
                case 4:
                  a.vertexAttrib1f(this.index, d[0]);
                  break;
                case 5:
                  a.vertexAttrib2f(this.index, d[0], d[1]);
                  break;
                case 6:
                  a.vertexAttrib3f(this.index, d[0], d[1], d[2]);
                  break;
                case 7:
                  a.vertexAttrib4f(this.index, d[0], d[1], d[2], d[3]);
                  break;
                case 8:
                  a.vertexAttrib1f(this.index, e[0]);
                  break;
                case 9:
                  a.vertexAttrib2f(this.index, e[0], e[1]);
                  break;
                case 10:
                  a.vertexAttrib3f(this.index, e[0], e[1], e[2]);
                  break;
                case 11:
                  a.vertexAttrib4f(this.index, e[0], e[1], e[2], e[3]);
                  break;
                case 12:
                  a.vertexAttrib2f(this.index + 0, d[0], d[1]);
                  a.vertexAttrib2f(this.index + 1, d[2], d[3]);
                  break;
                case 16:
                  a.vertexAttrib3f(this.index + 0, d[0], d[1], d[2]);
                  a.vertexAttrib3f(this.index + 1, d[3], d[4], d[5]);
                  a.vertexAttrib3f(this.index + 2, d[6], d[7], d[8]);
                  break;
                case 20:
                  a.vertexAttrib4f(this.index + 0, d[0], d[1], d[2], d[3]),
                    a.vertexAttrib4f(this.index + 1, d[4], d[5], d[6], d[7]),
                    a.vertexAttrib4f(this.index + 2, d[8], d[9], d[10], d[11]),
                    a.vertexAttrib4f(
                      this.index + 3,
                      d[12],
                      d[13],
                      d[14],
                      d[15]
                    );
              }
            else
              switch (this.type) {
                case 1:
                case 5:
                case 9:
                  a.vertexAttrib2f(this.index, 0, 0);
                  break;
                case 3:
                case 7:
                case 11:
                  a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                  break;
                case 0:
                case 4:
                case 8:
                  a.vertexAttrib1f(this.index, 0);
                  break;
                case 2:
                case 6:
                case 10:
                  a.vertexAttrib3f(this.index, 0, 0, 0);
                  break;
                case 12:
                  a.vertexAttrib2f(this.index + 0, 0, 0);
                  a.vertexAttrib2f(this.index + 1, 0, 0);
                  break;
                case 16:
                  a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                  a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                  a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                  break;
                case 20:
                  a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                    a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                    a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                    a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0);
              }
          }
        },
        __updateGLFromBuffer: function (a, b, c, d, e) {
          a = a.gl;
          if (this.__isUniform) {
            if (d >= this.__length)
              switch (this.type) {
                case 1:
                case 9:
                  a.uniform2i(this.index, b[c] | 0, b[c + 1] | 0);
                  break;
                case 3:
                case 11:
                  a.uniform4i(
                    this.index,
                    b[c] | 0,
                    b[c + 1] | 0,
                    b[c + 2] | 0,
                    b[c + 3] | 0
                  );
                  break;
                case 4:
                  a.uniform1f(this.index, b[c]);
                  break;
                case 5:
                  a.uniform2f(this.index, b[c], b[c + 1]);
                  break;
                case 6:
                  a.uniform3f(this.index, b[c], b[c + 1], b[c + 2]);
                  break;
                case 7:
                  a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                  break;
                case 0:
                case 8:
                  a.uniform1i(this.index, b[c] | 0);
                  break;
                case 2:
                case 10:
                  a.uniform3i(this.index, b[c] | 0, b[c + 1] | 0, b[c + 2] | 0);
                  break;
                case 12:
                  this.__uniformMatrix[0] = b[c];
                  this.__uniformMatrix[1] = b[c + 1];
                  this.__uniformMatrix[2] = b[c + 2];
                  this.__uniformMatrix[3] = b[c + 3];
                  yc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 16:
                  this.__uniformMatrix[0] = b[c];
                  this.__uniformMatrix[1] = b[c + 1];
                  this.__uniformMatrix[2] = b[c + 2];
                  this.__uniformMatrix[3] = b[c + 3];
                  this.__uniformMatrix[4] = b[c + 4];
                  this.__uniformMatrix[5] = b[c + 5];
                  this.__uniformMatrix[6] = b[c + 6];
                  this.__uniformMatrix[7] = b[c + 7];
                  this.__uniformMatrix[8] = b[c + 8];
                  yc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 20:
                  (this.__uniformMatrix[0] = b[c]),
                    (this.__uniformMatrix[1] = b[c + 1]),
                    (this.__uniformMatrix[2] = b[c + 2]),
                    (this.__uniformMatrix[3] = b[c + 3]),
                    (this.__uniformMatrix[4] = b[c + 4]),
                    (this.__uniformMatrix[5] = b[c + 5]),
                    (this.__uniformMatrix[6] = b[c + 6]),
                    (this.__uniformMatrix[7] = b[c + 7]),
                    (this.__uniformMatrix[8] = b[c + 8]),
                    (this.__uniformMatrix[9] = b[c + 9]),
                    (this.__uniformMatrix[10] = b[c + 10]),
                    (this.__uniformMatrix[11] = b[c + 11]),
                    (this.__uniformMatrix[12] = b[c + 12]),
                    (this.__uniformMatrix[13] = b[c + 13]),
                    (this.__uniformMatrix[14] = b[c + 14]),
                    (this.__uniformMatrix[15] = b[c + 15]),
                    yc.uniformMatrix4fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix
                    );
              }
          } else if (this.__internal || (0 != d && d != this.__length)) {
            b = a.FLOAT;
            this.__isBool ? (b = a.INT) : this.__isInt && (b = a.INT);
            f = 0;
            for (h = this.__arrayLength; f < h; )
              (m = f++), a.enableVertexAttribArray(this.index + m);
            if (0 < d)
              for (f = 0, h = this.__arrayLength; f < h; )
                (m = f++),
                  a.vertexAttribPointer(
                    this.index + m,
                    this.__length,
                    b,
                    !1,
                    4 * this.__length,
                    4 * (c + e * this.__length + m * this.__arrayLength)
                  );
          } else {
            for (var f = 0, h = this.__arrayLength; f < h; ) {
              var m = f++;
              a.disableVertexAttribArray(this.index + m);
            }
            if (0 < d)
              switch (this.type) {
                case 1:
                case 5:
                case 9:
                  a.vertexAttrib2f(this.index, b[c], b[c + 1]);
                  break;
                case 3:
                case 7:
                case 11:
                  a.vertexAttrib4f(
                    this.index,
                    b[c],
                    b[c + 1],
                    b[c + 2],
                    b[c + 3]
                  );
                  break;
                case 0:
                case 4:
                case 8:
                  a.vertexAttrib1f(this.index, b[c]);
                  break;
                case 2:
                case 6:
                case 10:
                  a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
                  break;
                case 12:
                  a.vertexAttrib2f(this.index + 0, b[c], b[c + 1]);
                  a.vertexAttrib2f(this.index + 1, b[c + 2], b[c + 2 + 1]);
                  break;
                case 16:
                  a.vertexAttrib3f(this.index + 0, b[c], b[c + 1], b[c + 2]);
                  a.vertexAttrib3f(
                    this.index + 1,
                    b[c + 3],
                    b[c + 3 + 1],
                    b[c + 3 + 2]
                  );
                  a.vertexAttrib3f(
                    this.index + 2,
                    b[c + 6],
                    b[c + 6 + 1],
                    b[c + 6 + 2]
                  );
                  break;
                case 20:
                  a.vertexAttrib4f(
                    this.index + 0,
                    b[c],
                    b[c + 1],
                    b[c + 2],
                    b[c + 3]
                  ),
                    a.vertexAttrib4f(
                      this.index + 1,
                      b[c + 4],
                      b[c + 4 + 1],
                      b[c + 4 + 2],
                      b[c + 4 + 3]
                    ),
                    a.vertexAttrib4f(
                      this.index + 2,
                      b[c + 8],
                      b[c + 8 + 1],
                      b[c + 8 + 2],
                      b[c + 8 + 3]
                    ),
                    a.vertexAttrib4f(
                      this.index + 3,
                      b[c + 12],
                      b[c + 12 + 1],
                      b[c + 12 + 2],
                      b[c + 12 + 3]
                    );
              }
            else
              switch (this.type) {
                case 1:
                case 5:
                case 9:
                  a.vertexAttrib2f(this.index, 0, 0);
                  break;
                case 3:
                case 7:
                case 11:
                  a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                  break;
                case 0:
                case 4:
                case 8:
                  a.vertexAttrib1f(this.index, 0);
                  break;
                case 2:
                case 6:
                case 10:
                  a.vertexAttrib3f(this.index, 0, 0, 0);
                  break;
                case 12:
                  a.vertexAttrib2f(this.index + 0, 0, 0);
                  a.vertexAttrib2f(this.index + 1, 0, 0);
                  break;
                case 16:
                  a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                  a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                  a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                  break;
                case 20:
                  a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                    a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                    a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                    a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0);
              }
          }
        },
        set_name: function (a) {
          this.__internal = K.startsWith(a, "openfl_");
          return (this.name = a);
        },
        __class__: Jg,
        __properties__: { set_name: "set_name" },
      };
      var vf = function () {
        ta.call(this);
      };
      g["openfl.display.Shape"] = vf;
      vf.__name__ = "openfl.display.Shape";
      vf.__super__ = ta;
      vf.prototype = r(ta.prototype, {
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new pd(this));
          return this.__graphics;
        },
        __class__: vf,
        __properties__: r(ta.prototype.__properties__, {
          get_graphics: "get_graphics",
        }),
      });
      var hh = function (a, b) {
        va.call(this);
        this.set_name(null);
        this.__color = -1;
        this.__colorSplit = [255, 255, 255];
        this.__colorString = "#FFFFFF";
        this.__contentsScaleFactor = 1;
        this.__deltaTime = this.__currentTabOrderIndex = 0;
        this.__displayState = 2;
        this.__logicalHeight =
          this.__logicalWidth =
          this.__lastClickTime =
          this.__mouseY =
          this.__mouseX =
            0;
        this.__displayMatrix = new Ea();
        this.__displayRect = new ma();
        this.__renderDirty = !0;
        this.stage3Ds = rb.toObjectVector(null);
        this.stage3Ds.push(new rg(this));
        this.stage3Ds.push(new rg(this));
        this.stage3Ds.push(new rg(this));
        this.stage3Ds.push(new rg(this));
        this.stage = this;
        this.align = 6;
        this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
        this.__quality = 1;
        this.__scaleMode = 2;
        this.showDefaultContextMenu = !0;
        this.softKeyboardRect = new ma();
        this.stageFocusRect = !0;
        this.__macKeyboard =
          (/AppleWebKit/.test(navigator.userAgent) &&
            /Mobile\/\w+/.test(navigator.userAgent)) ||
          /Mac/.test(navigator.platform);
        this.__clearBeforeRender = !0;
        this.__forceRender = !1;
        this.__stack = [];
        this.__rollOutStack = [];
        this.__mouseOutStack = [];
        this.__touchData = new lc();
        this.application = a.application;
        this.window = a;
        this.set_color(b);
        this.__contentsScaleFactor = a.__scale;
        this.__wasFullscreen = a.__fullscreen;
        this.__resize();
        null == na.get_current().stage && this.stage.addChild(na.get_current());
      };
      g["openfl.display.Stage"] = hh;
      hh.__name__ = "openfl.display.Stage";
      hh.__interfaces__ = [Y];
      hh.__super__ = va;
      hh.prototype = r(va.prototype, {
        __broadcastEvent: function (a) {
          if (
            Object.prototype.hasOwnProperty.call(ta.__broadcastEvents.h, a.type)
          )
            for (
              var b = ta.__broadcastEvents.h[a.type], c = 0;
              c < b.length;

            ) {
              var d = b[c];
              ++c;
              if (d.stage == this || null == d.stage)
                try {
                  d.__dispatch(a);
                } catch (e) {
                  (Ba.lastError = e),
                    (d = C.caught(e).unwrap()),
                    this.__handleError(d);
                }
            }
        },
        __createRenderer: function () {
          var a = 1;
          1 < this.window.__scale && (a = this.window.devicePixelRatio || 1);
          var b = (this.window.__width * this.window.__scale) | 0,
            c = (this.window.__height * this.window.__scale) | 0;
          switch (this.window.context.type) {
            case "canvas":
              this.__renderer = new $e(this.window.context.canvas2D);
              pa.__cast(this.__renderer, $e).pixelRatio = a;
              break;
            case "dom":
              this.__renderer = new dh(this.window.context.dom);
              pa.__cast(this.__renderer, dh).pixelRatio = a;
              break;
            case "opengl":
            case "opengles":
            case "webgl":
              (this.context3D = new lb(this)),
                this.context3D.configureBackBuffer(b, c, 0, !0, !0, !0),
                this.context3D.present(),
                (this.__renderer = new Ta(this.context3D));
          }
          null != this.__renderer &&
            ((a = this.get_quality()),
            (this.__renderer.__allowSmoothing = 2 != a),
            (this.__renderer.__worldTransform = this.__displayMatrix),
            (this.__renderer.__stage = this),
            this.__renderer.__resize(b, c));
        },
        __dispatchEvent: function (a) {
          try {
            return va.prototype.__dispatchEvent.call(this, a);
          } catch (b) {
            return (
              (Ba.lastError = b),
              (a = C.caught(b).unwrap()),
              this.__handleError(a),
              !1
            );
          }
        },
        __dispatchPendingMouseEvent: function () {
          this.__pendingMouseEvent &&
            (this.__onMouse(
              "mouseMove",
              this.__pendingMouseX,
              this.__pendingMouseY,
              0
            ),
            (this.__pendingMouseEvent = !1));
        },
        __dispatchStack: function (a, b) {
          try {
            var c = b.length;
            if (0 == c) {
              a.eventPhase = 2;
              var d = a.target;
              d.__dispatch(a);
            } else {
              a.eventPhase = 1;
              a.target = b[b.length - 1];
              for (var e = 0, f = c - 1; e < f; ) {
                var h = e++;
                b[h].__dispatch(a);
                if (a.__isCanceled) return;
              }
              a.eventPhase = 2;
              d = a.target;
              d.__dispatch(a);
              if (!a.__isCanceled && a.bubbles)
                for (a.eventPhase = 3, h = c - 2; 0 <= h; ) {
                  b[h].__dispatch(a);
                  if (a.__isCanceled) break;
                  --h;
                }
            }
          } catch (m) {
            (Ba.lastError = m),
              (a = C.caught(m).unwrap()),
              this.__handleError(a);
          }
        },
        __dispatchTarget: function (a, b) {
          try {
            return a.__dispatchEvent(b);
          } catch (c) {
            return (
              (Ba.lastError = c),
              (a = C.caught(c).unwrap()),
              this.__handleError(a),
              !1
            );
          }
        },
        __drag: function (a) {
          var b = this.__dragObject.parent;
          if (null != b) {
            b = b.__getWorldTransform();
            var c = b.a * b.d - b.b * b.c;
            if (0 == c) (a.x = -b.tx), (a.y = -b.ty);
            else {
              var d = (1 / c) * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx));
              a.y = (1 / c) * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
              a.x = d;
            }
          }
          b = a.x + this.__dragOffsetX;
          a = a.y + this.__dragOffsetY;
          null != this.__dragBounds &&
            (b < this.__dragBounds.x
              ? (b = this.__dragBounds.x)
              : b > this.__dragBounds.get_right() &&
                (b = this.__dragBounds.get_right()),
            a < this.__dragBounds.y
              ? (a = this.__dragBounds.y)
              : a > this.__dragBounds.get_bottom() &&
                (a = this.__dragBounds.get_bottom()));
          this.__dragObject.set_x(b);
          this.__dragObject.set_y(a);
        },
        __getInteractive: function (a) {
          null != a && a.push(this);
          return !0;
        },
        __globalToLocal: function (a, b) {
          a != b && b.copyFrom(a);
          return b;
        },
        __handleError: function (a) {
          var b = new uk("uncaughtError", !0, !0, a);
          try {
            na.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b);
          } catch (d) {
            Ba.lastError = d;
          }
          if (!b.__preventDefault) {
            b = Sf.toString(Sf.exceptionStack());
            console.log(b);
            b = I.string(a);
            console.log(b);
            try {
              if (
                null != a &&
                Object.prototype.hasOwnProperty.call(a, "stack") &&
                null != a.stack &&
                "" != a.stack
              )
                console.log(a.stack), (a.stack = a.stack);
              else {
                var c = Sf.toString(Sf.callStack());
                console.log(c);
              }
            } catch (d) {
              Ba.lastError = d;
            }
            throw a;
          }
        },
        __onKey: function (a, b, c) {
          this.__dispatchPendingMouseEvent();
          wb.__altKey = Nb.get_altKey(c);
          wb.__commandKey = Nb.get_metaKey(c);
          wb.__ctrlKey = Nb.get_ctrlKey(c);
          wb.__shiftKey = Nb.get_shiftKey(c);
          var d = [];
          null == this.__focus
            ? this.__getInteractive(d)
            : this.__focus.__getInteractive(d);
          if (0 < d.length) {
            switch (b) {
              case 1073741908:
              case 1073741909:
              case 1073741910:
              case 1073741911:
              case 1073741912:
              case 1073741913:
              case 1073741914:
              case 1073741915:
              case 1073741916:
              case 1073741917:
              case 1073741918:
              case 1073741919:
              case 1073741920:
              case 1073741921:
              case 1073741922:
              case 1073741923:
              case 1073742044:
                var e = 3;
                break;
              case 1073742048:
              case 1073742049:
              case 1073742050:
              case 1073742051:
                e = 1;
                break;
              case 1073742052:
              case 1073742053:
              case 1073742054:
              case 1073742055:
                e = 2;
                break;
              default:
                e = 0;
            }
            switch (b) {
              case 8:
                b = 8;
                break;
              case 9:
                b = 9;
                break;
              case 13:
                b = 13;
                break;
              case 27:
                b = 27;
                break;
              case 32:
                b = 32;
                break;
              case 33:
                b = 49;
                break;
              case 34:
                b = 222;
                break;
              case 35:
                b = 51;
                break;
              case 36:
                b = 52;
                break;
              case 37:
                b = 53;
                break;
              case 38:
                b = 55;
                break;
              case 39:
                b = 222;
                break;
              case 40:
                b = 57;
                break;
              case 41:
                b = 48;
                break;
              case 42:
                b = 56;
                break;
              case 44:
                b = 188;
                break;
              case 45:
                b = 189;
                break;
              case 46:
                b = 190;
                break;
              case 47:
                b = 191;
                break;
              case 48:
                b = 48;
                break;
              case 49:
                b = 49;
                break;
              case 50:
                b = 50;
                break;
              case 51:
                b = 51;
                break;
              case 52:
                b = 52;
                break;
              case 53:
                b = 53;
                break;
              case 54:
                b = 54;
                break;
              case 55:
                b = 55;
                break;
              case 56:
                b = 56;
                break;
              case 57:
                b = 57;
                break;
              case 58:
                b = 186;
                break;
              case 59:
                b = 186;
                break;
              case 60:
                b = 60;
                break;
              case 61:
                b = 187;
                break;
              case 62:
                b = 190;
                break;
              case 63:
                b = 191;
                break;
              case 64:
                b = 50;
                break;
              case 91:
                b = 219;
                break;
              case 92:
                b = 220;
                break;
              case 93:
                b = 221;
                break;
              case 94:
                b = 54;
                break;
              case 95:
                b = 189;
                break;
              case 96:
                b = 192;
                break;
              case 97:
                b = 65;
                break;
              case 98:
                b = 66;
                break;
              case 99:
                b = 67;
                break;
              case 100:
                b = 68;
                break;
              case 101:
                b = 69;
                break;
              case 102:
                b = 70;
                break;
              case 103:
                b = 71;
                break;
              case 104:
                b = 72;
                break;
              case 105:
                b = 73;
                break;
              case 106:
                b = 74;
                break;
              case 107:
                b = 75;
                break;
              case 108:
                b = 76;
                break;
              case 109:
                b = 77;
                break;
              case 110:
                b = 78;
                break;
              case 111:
                b = 79;
                break;
              case 112:
                b = 80;
                break;
              case 113:
                b = 81;
                break;
              case 114:
                b = 82;
                break;
              case 115:
                b = 83;
                break;
              case 116:
                b = 84;
                break;
              case 117:
                b = 85;
                break;
              case 118:
                b = 86;
                break;
              case 119:
                b = 87;
                break;
              case 120:
                b = 88;
                break;
              case 121:
                b = 89;
                break;
              case 122:
                b = 90;
                break;
              case 127:
                b = 46;
                break;
              case 1073741881:
                b = 20;
                break;
              case 1073741882:
                b = 112;
                break;
              case 1073741883:
                b = 113;
                break;
              case 1073741884:
                b = 114;
                break;
              case 1073741885:
                b = 115;
                break;
              case 1073741886:
                b = 116;
                break;
              case 1073741887:
                b = 117;
                break;
              case 1073741888:
                b = 118;
                break;
              case 1073741889:
                b = 119;
                break;
              case 1073741890:
                b = 120;
                break;
              case 1073741891:
                b = 121;
                break;
              case 1073741892:
                b = 122;
                break;
              case 1073741893:
                b = 123;
                break;
              case 1073741894:
                b = 301;
                break;
              case 1073741895:
                b = 145;
                break;
              case 1073741896:
                b = 19;
                break;
              case 1073741897:
                b = 45;
                break;
              case 1073741898:
                b = 36;
                break;
              case 1073741899:
                b = 33;
                break;
              case 1073741901:
                b = 35;
                break;
              case 1073741902:
                b = 34;
                break;
              case 1073741903:
                b = 39;
                break;
              case 1073741904:
                b = 37;
                break;
              case 1073741905:
                b = 40;
                break;
              case 1073741906:
                b = 38;
                break;
              case 1073741907:
                b = 144;
                break;
              case 1073741908:
                b = 111;
                break;
              case 1073741909:
                b = 106;
                break;
              case 1073741910:
                b = 109;
                break;
              case 1073741911:
                b = 107;
                break;
              case 1073741912:
                b = 13;
                break;
              case 1073741913:
                b = 97;
                break;
              case 1073741914:
                b = 98;
                break;
              case 1073741915:
                b = 99;
                break;
              case 1073741916:
                b = 100;
                break;
              case 1073741917:
                b = 101;
                break;
              case 1073741918:
                b = 102;
                break;
              case 1073741919:
                b = 103;
                break;
              case 1073741920:
                b = 104;
                break;
              case 1073741921:
                b = 105;
                break;
              case 1073741922:
                b = 96;
                break;
              case 1073741923:
                b = 110;
                break;
              case 1073741925:
                b = 302;
                break;
              case 1073741928:
                b = 124;
                break;
              case 1073741929:
                b = 125;
                break;
              case 1073741930:
                b = 126;
                break;
              case 1073741982:
                b = 13;
                break;
              case 1073742044:
                b = 110;
                break;
              case 1073742048:
                b = 17;
                break;
              case 1073742049:
                b = 16;
                break;
              case 1073742050:
                b = 18;
                break;
              case 1073742051:
                b = 15;
                break;
              case 1073742052:
                b = 17;
                break;
              case 1073742053:
                b = 16;
                break;
              case 1073742054:
                b = 18;
                break;
              case 1073742055:
                b = 15;
            }
            var f = Xm.__getCharCode(b, Nb.get_shiftKey(c));
            if (
              "keyUp" == a &&
              (32 == b || 13 == b) &&
              this.__focus instanceof fa
            ) {
              var h = pa.__cast(this.__focus, fa);
              if (h.get_buttonMode() && 1 == h.focusRect) {
                var m = Ra.__pool.get(),
                  n = Ra.__pool.get();
                n.x = this.__mouseX;
                n.y = this.__mouseY;
                h = wb.__create(
                  "click",
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  h.__globalToLocal(n, m),
                  h
                );
                this.__dispatchStack(h, d);
                Ra.__pool.release(n);
                Ra.__pool.release(m);
              }
            }
            e = new vk(
              a,
              !0,
              !0,
              f,
              b,
              e,
              this.__macKeyboard
                ? Nb.get_ctrlKey(c) || Nb.get_metaKey(c)
                : Nb.get_ctrlKey(c),
              Nb.get_altKey(c),
              Nb.get_shiftKey(c),
              Nb.get_ctrlKey(c),
              Nb.get_metaKey(c)
            );
            d.reverse();
            this.__dispatchStack(e, d);
            if (e.__preventDefault)
              "keyDown" == a
                ? this.window.onKeyDown.cancel()
                : this.window.onKeyUp.cancel();
            else if ("keyDown" == a && 9 == b) {
              d = [];
              this.__tabTest(d);
              b = -1;
              a = null;
              e = Nb.get_shiftKey(c) ? -1 : 1;
              if (1 < d.length) {
                jc.sort(d, function (a, b) {
                  return a.get_tabIndex() - b.get_tabIndex();
                });
                if (-1 != d[d.length - 1].get_tabIndex())
                  for (m = 0; m < d.length; ) {
                    if (-1 < d[m].get_tabIndex()) {
                      0 < m && d.splice(0, m);
                      break;
                    }
                    ++m;
                  }
                if (null != this.get_focus()) {
                  m = this.get_focus();
                  for (f = d.indexOf(m); -1 == f && null != m; ) {
                    b = m.parent;
                    if (null != b && b.get_tabChildren()) {
                      m = b.getChildIndex(m);
                      if (-1 == m) {
                        m = b;
                        continue;
                      }
                      for (
                        m += e;
                        Nb.get_shiftKey(c) ? 0 <= m : m < b.get_numChildren();

                      ) {
                        n = b.getChildAt(m);
                        if (
                          n instanceof $a &&
                          ((f = pa.__cast(n, $a)), (f = d.indexOf(f)), -1 != f)
                        ) {
                          e = 0;
                          break;
                        }
                        m += e;
                      }
                    } else
                      Nb.get_shiftKey(c) &&
                        ((f = d.indexOf(b)), -1 != f && (e = 0));
                    m = b;
                  }
                  b = 0 > f ? 0 : f + e;
                } else b = this.__currentTabOrderIndex;
              } else
                1 == d.length &&
                  ((a = d[0]), this.get_focus() == a && (a = null));
              f = 0 <= b && b < d.length;
              1 == d.length || (0 == d.length && null != this.get_focus())
                ? (b = 0)
                : 1 < d.length &&
                  (0 > b && (b += d.length),
                  (b %= d.length),
                  (a = d[b]),
                  a == this.get_focus() &&
                    ((b += e),
                    0 > b && (b += d.length),
                    (b %= d.length),
                    (a = d[b])));
              e = null;
              null != this.get_focus() &&
                ((e = new sg(
                  "keyFocusChange",
                  !0,
                  !0,
                  a,
                  Nb.get_shiftKey(c),
                  0
                )),
                (d = []),
                this.get_focus().__getInteractive(d),
                d.reverse(),
                this.__dispatchStack(e, d),
                e.isDefaultPrevented() && this.window.onKeyDown.cancel());
              (null != e && e.isDefaultPrevented()) ||
                ((this.__currentTabOrderIndex = b),
                null != a && this.set_focus(a),
                f && this.window.onKeyDown.cancel());
            }
          }
        },
        __onLimeCreateWindow: function (a) {
          if (this.window == a) {
            var b = q(this, this.__onLimeWindowActivate);
            a.onActivate.add(function () {
              b(a);
            });
            var c = q(this, this.__onLimeWindowClose);
            a.onClose.add(
              function () {
                c(a);
              },
              !1,
              -9e3
            );
            var d = q(this, this.__onLimeWindowDeactivate);
            a.onDeactivate.add(function () {
              d(a);
            });
            var e = q(this, this.__onLimeWindowDropFile);
            var f = function (b) {
              e(a, b);
            };
            a.onDropFile.add(f);
            var h = q(this, this.__onLimeWindowEnter);
            a.onEnter.add(function () {
              h(a);
            });
            var m = q(this, this.__onLimeWindowExpose);
            a.onExpose.add(function () {
              m(a);
            });
            var n = q(this, this.__onLimeWindowFocusIn);
            a.onFocusIn.add(function () {
              n(a);
            });
            var p = q(this, this.__onLimeWindowFocusOut);
            a.onFocusOut.add(function () {
              p(a);
            });
            var l = q(this, this.__onLimeWindowFullscreen);
            a.onFullscreen.add(function () {
              l(a);
            });
            var k = q(this, this.__onLimeKeyDown);
            f = function (b, c) {
              k(a, b, c);
            };
            a.onKeyDown.add(f);
            var g = q(this, this.__onLimeKeyUp);
            f = function (b, c) {
              g(a, b, c);
            };
            a.onKeyUp.add(f);
            var u = q(this, this.__onLimeWindowLeave);
            a.onLeave.add(function () {
              u(a);
            });
            var r = q(this, this.__onLimeWindowMinimize);
            a.onMinimize.add(function () {
              r(a);
            });
            var z = q(this, this.__onLimeMouseDown);
            f = function (b, c, d) {
              z(a, b, c, d);
            };
            a.onMouseDown.add(f);
            var v = q(this, this.__onLimeMouseMove);
            f = function (b, c) {
              v(a, b, c);
            };
            a.onMouseMove.add(f);
            var y = q(this, this.__onLimeMouseMoveRelative);
            f = function (b, c) {
              y(a, b, c);
            };
            a.onMouseMoveRelative.add(f);
            var w = q(this, this.__onLimeMouseUp);
            f = function (b, c, d) {
              w(a, b, c, d);
            };
            a.onMouseUp.add(f);
            var O = q(this, this.__onLimeMouseWheel);
            f = function (b, c, d) {
              O(a, b, c, d);
            };
            a.onMouseWheel.add(f);
            var x = q(this, this.__onLimeWindowMove);
            f = function (b, c) {
              x(a, b, c);
            };
            a.onMove.add(f);
            a.onRender.add(q(this, this.__onLimeRender));
            a.onRenderContextLost.add(q(this, this.__onLimeRenderContextLost));
            a.onRenderContextRestored.add(
              q(this, this.__onLimeRenderContextRestored)
            );
            var t = q(this, this.__onLimeWindowResize);
            f = function (b, c) {
              t(a, b, c);
            };
            a.onResize.add(f);
            var C = q(this, this.__onLimeWindowRestore);
            a.onRestore.add(function () {
              C(a);
            });
            var A = q(this, this.__onLimeTextEdit);
            f = function (b, c, d) {
              A(a, b, c, d);
            };
            a.onTextEdit.add(f);
            var D = q(this, this.__onLimeTextInput);
            f = function (b) {
              D(a, b);
            };
            a.onTextInput.add(f);
            this.__onLimeWindowCreate(a);
          }
        },
        __onLimeGamepadAxisMove: function (a, b, c) {
          try {
            Wa.__onGamepadAxisMove(a, b, c);
          } catch (d) {
            (Ba.lastError = d),
              (a = C.caught(d).unwrap()),
              this.__handleError(a);
          }
        },
        __onLimeGamepadButtonDown: function (a, b) {
          try {
            Wa.__onGamepadButtonDown(a, b);
          } catch (c) {
            (Ba.lastError = c),
              (a = C.caught(c).unwrap()),
              this.__handleError(a);
          }
        },
        __onLimeGamepadButtonUp: function (a, b) {
          try {
            Wa.__onGamepadButtonUp(a, b);
          } catch (c) {
            (Ba.lastError = c),
              (a = C.caught(c).unwrap()),
              this.__handleError(a);
          }
        },
        __onLimeGamepadConnect: function (a) {
          try {
            Wa.__onGamepadConnect(a);
          } catch (h) {
            Ba.lastError = h;
            var b = C.caught(h).unwrap();
            this.__handleError(b);
          }
          var c = q(this, this.__onLimeGamepadAxisMove);
          b = function (b, d) {
            c(a, b, d);
          };
          a.onAxisMove.add(b);
          var d = q(this, this.__onLimeGamepadButtonDown);
          b = function (b) {
            d(a, b);
          };
          a.onButtonDown.add(b);
          var e = q(this, this.__onLimeGamepadButtonUp);
          b = function (b) {
            e(a, b);
          };
          a.onButtonUp.add(b);
          var f = q(this, this.__onLimeGamepadDisconnect);
          a.onDisconnect.add(function () {
            f(a);
          });
        },
        __onLimeGamepadDisconnect: function (a) {
          try {
            Wa.__onGamepadDisconnect(a);
          } catch (b) {
            (Ba.lastError = b),
              (a = C.caught(b).unwrap()),
              this.__handleError(a);
          }
        },
        __onLimeKeyDown: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey("keyDown", b, c);
        },
        __onLimeKeyUp: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey("keyUp", b, c);
        },
        __onLimeModuleExit: function (a) {
          null != this.window &&
            ((a = new Ca("deactivate")), this.__broadcastEvent(a));
        },
        __onLimeMouseDown: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var e = "middleMouseDown";
                break;
              case 2:
                e = "rightMouseDown";
                break;
              default:
                e = "mouseDown";
            }
            this.__onMouse(e, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel();
          }
        },
        __onLimeMouseMove: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            ((this.__pendingMouseEvent = !0),
            (this.__pendingMouseX = (b * a.__scale) | 0),
            (this.__pendingMouseY = (c * a.__scale) | 0));
        },
        __onLimeMouseMoveRelative: function (a, b, c) {},
        __onLimeMouseUp: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var e = "middleMouseUp";
                break;
              case 2:
                e = "rightMouseUp";
                break;
              default:
                e = "mouseUp";
            }
            this.__onMouse(e, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel();
          }
        },
        __onLimeMouseWheel: function (a, b, c, d) {
          null != this.window &&
            this.window == a &&
            (this.__dispatchPendingMouseEvent(),
            d == Xl.PIXELS
              ? this.__onMouseWheel((b * a.__scale) | 0, (c * a.__scale) | 0, d)
              : this.__onMouseWheel(b | 0, c | 0, d));
        },
        __onLimeRender: function (a) {
          if (!this.__rendering) {
            this.__rendering = !0;
            this.__broadcastEvent(new Ca("enterFrame"));
            this.__broadcastEvent(new Ca("frameConstructed"));
            this.__broadcastEvent(new Ca("exitFrame"));
            this.__renderable = !0;
            this.__enterFrame(this.__deltaTime);
            this.__deltaTime = 0;
            a =
              null != this.__renderer &&
              (this.__renderDirty || this.__forceRender);
            if (this.__invalidated && a) {
              this.__invalidated = !1;
              var b = new Ca("render");
              this.__broadcastEvent(b);
            }
            this.__update(!1, !0);
            if (null != this.__renderer) {
              if (null != this.context3D) {
                for (b = this.stage3Ds.iterator(); b.hasNext(); ) {
                  var c = b.next();
                  this.context3D.__renderStage3D(c);
                }
                this.context3D.__present && (a = !0);
              }
              a
                ? (null == this.context3D && this.__renderer.__clear(),
                  this.__renderer.__render(this))
                : null == this.context3D && this.window.onRender.cancel();
              null != this.context3D &&
                (this.context3D.__present
                  ? (this.__renderer.__cleared || this.__renderer.__clear(),
                    (this.context3D.__present = !1),
                    (this.context3D.__cleared = !1))
                  : this.window.onRender.cancel());
              this.__renderer.__cleared = !1;
            }
            this.__rendering = !1;
          }
        },
        __onLimeRenderContextLost: function () {
          this.context3D = this.__renderer = null;
          for (var a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__lostContext();
        },
        __onLimeRenderContextRestored: function (a) {
          this.__createRenderer();
          for (a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__restoreContext();
        },
        __onLimeTextEdit: function (a, b, c, d) {},
        __onLimeTextInput: function (a, b) {
          if (null != this.window && this.window == a) {
            var c = [];
            null == this.__focus
              ? this.__getInteractive(c)
              : this.__focus.__getInteractive(c);
            b = new lf("textInput", !0, !0, b);
            0 < c.length
              ? (c.reverse(), this.__dispatchStack(b, c))
              : this.__dispatchEvent(b);
            b.isDefaultPrevented() && a.onTextInput.cancel();
          }
        },
        __onLimeTouchCancel: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch("touchEnd", a, b);
        },
        __onLimeTouchMove: function (a) {
          this.__onTouch("touchMove", a, this.__primaryTouch == a);
        },
        __onLimeTouchEnd: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch("touchEnd", a, b);
        },
        __onLimeTouchStart: function (a) {
          null == this.__primaryTouch && (this.__primaryTouch = a);
          this.__onTouch("touchBegin", a, this.__primaryTouch == a);
        },
        __onLimeUpdate: function (a) {
          this.__deltaTime = a;
          this.__dispatchPendingMouseEvent();
        },
        __onLimeWindowActivate: function (a) {},
        __onLimeWindowClose: function (a) {
          this.window == a && (this.window = null);
          this.__primaryTouch = null;
          a = new Ca("deactivate");
          this.__broadcastEvent(a);
        },
        __onLimeWindowCreate: function (a) {
          null != this.window &&
            this.window == a &&
            null != a.context &&
            this.__createRenderer();
        },
        __onLimeWindowDeactivate: function (a) {},
        __onLimeWindowDropFile: function (a, b) {},
        __onLimeWindowEnter: function (a) {},
        __onLimeWindowExpose: function (a) {
          null != this.window && this.window == a && (this.__renderDirty = !0);
        },
        __onLimeWindowFocusIn: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__renderDirty = !0),
            (a = new Ca("activate")),
            this.__broadcastEvent(a),
            this.set_focus(this.__cacheFocus));
        },
        __onLimeWindowFocusOut: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__primaryTouch = null),
            (a = new Ca("deactivate")),
            this.__broadcastEvent(a),
            (a = this.get_focus()),
            this.set_focus(null),
            (this.__cacheFocus = a),
            (wb.__altKey = !1),
            (wb.__commandKey = !1),
            (wb.__ctrlKey = !1),
            (wb.__shiftKey = !1));
        },
        __onLimeWindowFullscreen: function (a) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen ||
              ((this.__wasFullscreen = !0),
              2 == this.__displayState && (this.__displayState = 1),
              this.__dispatchEvent(new cg("fullScreen", !1, !1, !0, !0))));
        },
        __onLimeWindowLeave: function (a) {
          null == this.window ||
            this.window != a ||
            wb.__buttonDown ||
            (this.__dispatchPendingMouseEvent(),
            (a = new Ca("mouseLeave")),
            this.__dispatchEvent(a));
        },
        __onLimeWindowMinimize: function (a) {},
        __onLimeWindowMove: function (a, b, c) {},
        __onLimeWindowResize: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen &&
              !a.__fullscreen &&
              ((this.__wasFullscreen = !1),
              (this.__displayState = 2),
              this.__dispatchEvent(new cg("fullScreen", !1, !1, !1, !0))));
        },
        __onLimeWindowRestore: function (a) {
          null != this.window &&
            this.window == a &&
            this.__wasFullscreen &&
            !a.__fullscreen &&
            ((this.__wasFullscreen = !1),
            (this.__displayState = 2),
            this.__dispatchEvent(new cg("fullScreen", !1, !1, !1, !0)));
        },
        __onMouse: function (a, b, c, d) {
          if (!(2 < d)) {
            var e = Ra.__pool.get();
            e.setTo(b, c);
            b = this.__displayMatrix;
            c = b.a * b.d - b.b * b.c;
            if (0 == c) (e.x = -b.tx), (e.y = -b.ty);
            else {
              var f = (1 / c) * (b.c * (b.ty - e.y) + b.d * (e.x - b.tx));
              e.y = (1 / c) * (b.a * (e.y - b.ty) + b.b * (b.tx - e.x));
              e.x = f;
            }
            this.__mouseX = e.x;
            this.__mouseY = e.y;
            b = [];
            this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this)
              ? (f = b[b.length - 1])
              : ((f = this), (b = [this]));
            null == f && (f = this);
            var h = null;
            switch (a) {
              case "middleMouseDown":
                this.__mouseDownMiddle = f;
                break;
              case "middleMouseUp":
                this.__mouseDownMiddle == f && (h = "middleClick");
                this.__mouseDownMiddle = null;
                break;
              case "mouseDown":
                f.__allowMouseFocus()
                  ? null != this.get_focus()
                    ? ((c = new sg("mouseFocusChange", !0, !0, f, !1, 0)),
                      this.__dispatchStack(c, b),
                      c.isDefaultPrevented() || this.set_focus(f))
                    : this.set_focus(f)
                  : this.set_focus(null);
                this.__mouseDownLeft = f;
                wb.__buttonDown = !0;
                break;
              case "mouseUp":
                if (null != this.__mouseDownLeft) {
                  wb.__buttonDown = !1;
                  if (this.__mouseDownLeft == f) h = "click";
                  else {
                    var m = wb.__create(
                      "releaseOutside",
                      1,
                      this.__mouseX,
                      this.__mouseY,
                      new Ra(this.__mouseX, this.__mouseY),
                      this
                    );
                    this.__mouseDownLeft.dispatchEvent(m);
                  }
                  this.__mouseDownLeft = null;
                }
                break;
              case "rightMouseDown":
                this.__mouseDownRight = f;
                break;
              case "rightMouseUp":
                this.__mouseDownRight == f && (h = "rightClick"),
                  (this.__mouseDownRight = null);
            }
            c = Ra.__pool.get();
            m = wb.__create(
              a,
              d,
              this.__mouseX,
              this.__mouseY,
              f.__globalToLocal(e, c),
              f
            );
            this.__dispatchStack(m, b);
            null != h &&
              ((m = wb.__create(
                h,
                d,
                this.__mouseX,
                this.__mouseY,
                f.__globalToLocal(e, c),
                f
              )),
              this.__dispatchStack(m, b),
              "mouseUp" == a &&
                pa.__cast(f, $a).doubleClickEnabled &&
                ((a = na.getTimer()),
                500 > a - this.__lastClickTime
                  ? ((m = wb.__create(
                      "doubleClick",
                      d,
                      this.__mouseX,
                      this.__mouseY,
                      f.__globalToLocal(e, c),
                      f
                    )),
                    this.__dispatchStack(m, b),
                    (this.__lastClickTime = 0))
                  : (this.__lastClickTime = a)));
            if ("auto" == sc.__cursor && !sc.__hidden) {
              m = null;
              if (null != this.__mouseDownLeft)
                m = this.__mouseDownLeft.__getCursor();
              else
                for (a = 0; a < b.length; )
                  if (((m = b[a]), ++a, (m = m.__getCursor()), null != m)) {
                    this.window.set_cursor(Gn.toLimeCursor(m));
                    break;
                  }
              null == m && this.window.set_cursor(Ub.ARROW);
            }
            f != this.__mouseOverTarget &&
              null != this.__mouseOverTarget &&
              ((m = wb.__create(
                "mouseOut",
                d,
                this.__mouseX,
                this.__mouseY,
                this.__mouseOverTarget.__globalToLocal(e, c),
                this.__mouseOverTarget
              )),
              this.__dispatchStack(m, this.__mouseOutStack));
            for (a = 0; a < this.__rollOutStack.length; )
              (h = this.__rollOutStack[a]),
                -1 == b.indexOf(h)
                  ? (ba.remove(this.__rollOutStack, h),
                    (m = wb.__create(
                      "rollOut",
                      d,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(e, c),
                      this.__mouseOverTarget
                    )),
                    (m.bubbles = !1),
                    this.__dispatchTarget(h, m))
                  : ++a;
            for (a = 0; a < b.length; )
              (h = b[a]),
                ++a,
                -1 == this.__rollOutStack.indexOf(h) &&
                  null != this.__mouseOverTarget &&
                  (h.hasEventListener("rollOver") &&
                    ((m = wb.__create(
                      "rollOver",
                      d,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(e, c),
                      h
                    )),
                    (m.bubbles = !1),
                    this.__dispatchTarget(h, m)),
                  (h.hasEventListener("rollOut") ||
                    h.hasEventListener("rollOver")) &&
                    this.__rollOutStack.push(h));
            f != this.__mouseOverTarget &&
              (null != f &&
                ((m = wb.__create(
                  "mouseOver",
                  d,
                  this.__mouseX,
                  this.__mouseY,
                  f.__globalToLocal(e, c),
                  f
                )),
                this.__dispatchStack(m, b)),
              (this.__mouseOverTarget = f),
              (this.__mouseOutStack = b));
            null != this.__dragObject &&
              (this.__drag(e),
              (d = null),
              this.__mouseOverTarget == this.__dragObject
                ? ((f = this.__dragObject.mouseEnabled),
                  (a = this.__dragObject.mouseChildren),
                  (this.__dragObject.mouseEnabled = !1),
                  (this.__dragObject.mouseChildren = !1),
                  (b = []),
                  this.__hitTest(
                    this.__mouseX,
                    this.__mouseY,
                    !0,
                    b,
                    !0,
                    this
                  ) && (d = b[b.length - 1]),
                  (this.__dragObject.mouseEnabled = f),
                  (this.__dragObject.mouseChildren = a))
                : this.__mouseOverTarget != this &&
                  (d = this.__mouseOverTarget),
              (this.__dragObject.dropTarget = d));
            Ra.__pool.release(e);
            Ra.__pool.release(c);
          }
        },
        __onMouseWheel: function (a, b, c) {
          var d = this.__mouseX,
            e = this.__mouseY;
          a = [];
          if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this))
            var f = a[a.length - 1];
          else (f = this), (a = [this]);
          null == f && (f = this);
          c = Ra.__pool.get();
          c.setTo(d, e);
          d = this.__displayMatrix;
          e = d.a * d.d - d.b * d.c;
          if (0 == e) (c.x = -d.tx), (c.y = -d.ty);
          else {
            var h = (1 / e) * (d.c * (d.ty - c.y) + d.d * (c.x - d.tx));
            c.y = (1 / e) * (d.a * (c.y - d.ty) + d.b * (d.tx - c.x));
            c.x = h;
          }
          b |= 0;
          b = wb.__create(
            "mouseWheel",
            0,
            this.__mouseX,
            this.__mouseY,
            f.__globalToLocal(c, c),
            f,
            b
          );
          b.cancelable = !0;
          this.__dispatchStack(b, a);
          b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
          Ra.__pool.release(c);
        },
        __onTouch: function (a, b, c) {
          var d = Ra.__pool.get();
          d.setTo(
            Math.round(b.x * this.window.__width * this.window.__scale),
            Math.round(b.y * this.window.__height * this.window.__scale)
          );
          var e = this.__displayMatrix,
            f = e.a * e.d - e.b * e.c;
          if (0 == f) (d.x = -e.tx), (d.y = -e.ty);
          else {
            var h = (1 / f) * (e.c * (e.ty - d.y) + e.d * (d.x - e.tx));
            d.y = (1 / f) * (e.a * (d.y - e.ty) + e.b * (e.tx - d.x));
            d.x = h;
          }
          e = d.x;
          f = d.y;
          h = [];
          if (this.__hitTest(e, f, !1, h, !0, this)) var m = h[h.length - 1];
          else (m = this), (h = [this]);
          null == m && (m = this);
          var n = b.id;
          if (this.__touchData.h.hasOwnProperty(n))
            var p = this.__touchData.h[n];
          else
            (p = qg.__pool.get()),
              p.reset(),
              (p.touch = b),
              (this.__touchData.h[n] = p);
          var l = null,
            k = !1;
          switch (a) {
            case "touchBegin":
              p.touchDownTarget = m;
              break;
            case "touchEnd":
              p.touchDownTarget == m && (l = "touchTap"),
                (p.touchDownTarget = null),
                (k = !0);
          }
          var g = Ra.__pool.get();
          a = Rd.__create(a, null, e, f, m.__globalToLocal(d, g), m);
          a.touchPointID = n;
          a.isPrimaryTouchPoint = c;
          a.pressure = b.pressure;
          this.__dispatchStack(a, h);
          null != l &&
            ((a = Rd.__create(l, null, e, f, m.__globalToLocal(d, g), m)),
            (a.touchPointID = n),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchStack(a, h));
          l = p.touchOverTarget;
          m != l &&
            null != l &&
            ((a = Rd.__create(
              "touchOut",
              null,
              e,
              f,
              l.__globalToLocal(d, g),
              l
            )),
            (a.touchPointID = n),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchTarget(l, a));
          for (var u = p.rollOutStack, q, r = 0; r < u.length; )
            (q = u[r]),
              -1 == h.indexOf(q)
                ? (ba.remove(u, q),
                  (a = Rd.__create(
                    "touchRollOut",
                    null,
                    e,
                    f,
                    l.__globalToLocal(d, g),
                    l
                  )),
                  (a.touchPointID = n),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(q, a))
                : ++r;
          for (r = 0; r < h.length; )
            (q = h[r]),
              ++r,
              -1 == u.indexOf(q) &&
                (q.hasEventListener("touchRollOver") &&
                  ((a = Rd.__create(
                    "touchRollOver",
                    null,
                    e,
                    f,
                    l.__globalToLocal(d, g),
                    q
                  )),
                  (a.touchPointID = n),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(q, a)),
                q.hasEventListener("touchRollOut") && u.push(q));
          m != l &&
            (null != m &&
              ((a = Rd.__create(
                "touchOver",
                null,
                e,
                f,
                m.__globalToLocal(d, g),
                m
              )),
              (a.touchPointID = n),
              (a.isPrimaryTouchPoint = c),
              (a.bubbles = !0),
              (a.pressure = b.pressure),
              this.__dispatchTarget(m, a)),
            (p.touchOverTarget = m));
          Ra.__pool.release(d);
          Ra.__pool.release(g);
          k && (this.__touchData.remove(n), p.reset(), qg.__pool.release(p));
        },
        __registerLimeModule: function (a) {
          a.onCreateWindow.add(q(this, this.__onLimeCreateWindow));
          a.onUpdate.add(q(this, this.__onLimeUpdate));
          a.onExit.add(q(this, this.__onLimeModuleExit), !1, 0);
          for (a = mc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onLimeGamepadConnect(b);
          }
          mc.onConnect.add(q(this, this.__onLimeGamepadConnect));
          Fc.onStart.add(q(this, this.__onLimeTouchStart));
          Fc.onMove.add(q(this, this.__onLimeTouchMove));
          Fc.onEnd.add(q(this, this.__onLimeTouchEnd));
          Fc.onCancel.add(q(this, this.__onLimeTouchCancel));
        },
        __resize: function () {
          var a = this.stageWidth,
            b = this.stageHeight,
            c = (this.window.__width * this.window.__scale) | 0,
            d = (this.window.__height * this.window.__scale) | 0;
          this.__logicalWidth = c;
          this.__logicalHeight = d;
          this.__displayMatrix.identity();
          if (
            null != this.get_fullScreenSourceRect() &&
            this.window.__fullscreen
          ) {
            this.stageWidth = this.get_fullScreenSourceRect().width | 0;
            this.stageHeight = this.get_fullScreenSourceRect().height | 0;
            var e = c / this.stageWidth,
              f = d / this.stageHeight;
            this.__displayMatrix.translate(
              -this.get_fullScreenSourceRect().x,
              -this.get_fullScreenSourceRect().y
            );
            this.__displayMatrix.scale(e, f);
            this.__displayRect.setTo(
              this.get_fullScreenSourceRect().get_left(),
              this.get_fullScreenSourceRect().get_right(),
              this.get_fullScreenSourceRect().get_top(),
              this.get_fullScreenSourceRect().get_bottom()
            );
          } else {
            if (0 == this.__logicalWidth && 0 == this.__logicalHeight)
              (this.stageWidth = c), (this.stageHeight = d);
            else {
              this.stageWidth = this.__logicalWidth;
              this.stageHeight = this.__logicalHeight;
              e = Math.min(c / this.stageWidth, d / this.stageHeight);
              f = Math.round((c - this.stageWidth * e) / 2);
              var h = Math.round((d - this.stageHeight * e) / 2);
              this.__displayMatrix.scale(e, e);
              this.__displayMatrix.translate(f, h);
            }
            this.__displayRect.setTo(0, 0, this.stageWidth, this.stageHeight);
          }
          null != this.context3D &&
            this.context3D.configureBackBuffer(c, d, 0, !0, !0, !0);
          for (e = this.stage3Ds.iterator(); e.hasNext(); )
            e.next().__resize(c, d);
          null != this.__renderer && this.__renderer.__resize(c, d);
          if (this.stageWidth != a || this.stageHeight != b)
            (this.__renderDirty = !0),
              this.__setTransformDirty(),
              (a = new Ca("resize")),
              this.__dispatchEvent(a);
        },
        __setLogicalSize: function (a, b) {
          this.__logicalWidth = a;
          this.__logicalHeight = b;
          this.__resize();
        },
        __update: function (a, b) {
          a
            ? this.__transformDirty &&
              (va.prototype.__update.call(this, !0, b),
              b && (this.__transformDirty = !1))
            : this.__transformDirty || this.__renderDirty
            ? (va.prototype.__update.call(this, !1, b),
              b && ta.__supportDOM && (this.__wasDirty = !0))
            : !this.__renderDirty &&
              this.__wasDirty &&
              (va.prototype.__update.call(this, !1, b),
              b && (this.__wasDirty = !1));
        },
        set_color: function (a) {
          null == a
            ? ((this.__transparent = !0), (a = 0))
            : (this.__transparent = !1);
          this.__color != a &&
            ((this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255),
            (this.__colorSplit[1] = ((a & 65280) >>> 8) / 255),
            (this.__colorSplit[2] = (a & 255) / 255),
            (this.__colorString = "#" + K.hex(a & 16777215, 6)),
            (this.__renderDirty = !0),
            (this.__color = -16777216 | (a & 16777215)));
          return a;
        },
        get_displayState: function () {
          return this.__displayState;
        },
        set_displayState: function (a) {
          null != this.window &&
            (2 == a
              ? this.window.__fullscreen && this.window.set_fullscreen(!1)
              : this.window.__fullscreen || this.window.set_fullscreen(!0));
          return (this.__displayState = a);
        },
        get_focus: function () {
          return this.__focus;
        },
        set_focus: function (a) {
          if (a != this.__focus) {
            var b = this.__focus;
            this.__cacheFocus = this.__focus = a;
            if (null != b) {
              var c = new sg("focusOut", !0, !1, a, !1, 0),
                d = [];
              b.__getInteractive(d);
              d.reverse();
              this.__dispatchStack(c, d);
            }
            null != a &&
              ((c = new sg("focusIn", !0, !1, b, !1, 0)),
              (d = []),
              a.__getInteractive(d),
              d.reverse(),
              this.__dispatchStack(c, d));
          }
          return a;
        },
        set_frameRate: function (a) {
          return null != this.window
            ? this.window.__backend.setFrameRate(a)
            : a;
        },
        get_fullScreenSourceRect: function () {
          return null == this.__fullScreenSourceRect
            ? null
            : this.__fullScreenSourceRect.clone();
        },
        set_height: function (a) {
          return this.get_height();
        },
        get_mouseX: function () {
          return this.__mouseX;
        },
        get_mouseY: function () {
          return this.__mouseY;
        },
        get_quality: function () {
          return this.__quality;
        },
        set_rotation: function (a) {
          return 0;
        },
        set_scaleMode: function (a) {
          return (this.__scaleMode = a);
        },
        set_scaleX: function (a) {
          return 0;
        },
        set_scaleY: function (a) {
          return 0;
        },
        get_tabEnabled: function () {
          return !1;
        },
        get_tabIndex: function () {
          return -1;
        },
        set_transform: function (a) {
          return this.get_transform();
        },
        set_width: function (a) {
          return this.get_width();
        },
        set_x: function (a) {
          return 0;
        },
        set_y: function (a) {
          return 0;
        },
        __class__: hh,
        __properties__: r(va.prototype.__properties__, {
          set_scaleMode: "set_scaleMode",
          set_frameRate: "set_frameRate",
          set_color: "set_color",
          get_quality: "get_quality",
          get_fullScreenSourceRect: "get_fullScreenSourceRect",
          set_focus: "set_focus",
          get_focus: "get_focus",
          set_displayState: "set_displayState",
          get_displayState: "get_displayState",
        }),
      });
      var rg = function (a) {
        sa.call(this);
        this.__stage = a;
        this.__height = 0;
        this.__projectionTransform = new wk();
        this.__renderTransform = new wk();
        this.__y = this.__x = this.__width = 0;
        this.visible = !0;
        0 < a.stageWidth &&
          0 < a.stageHeight &&
          this.__resize(a.stageWidth, a.stageHeight);
      };
      g["openfl.display.Stage3D"] = rg;
      rg.__name__ = "openfl.display.Stage3D";
      rg.__super__ = sa;
      rg.prototype = r(sa.prototype, {
        __createContext: function () {
          var a = this.__stage,
            b = a.__renderer;
          if ("cairo" == b.__type || "canvas" == b.__type)
            this.__dispatchError();
          else if ("opengl" == b.__type)
            (this.context3D = new lb(a, a.context3D.__contextState, this)),
              this.__dispatchCreate();
          else if ("dom" == b.__type) {
            this.__canvas = window.document.createElement("canvas");
            this.__canvas.width = a.stageWidth;
            this.__canvas.height = a.stageHeight;
            var c = b.__context.attributes;
            a =
              Object.prototype.hasOwnProperty.call(c, "background") &&
              null == c.background;
            b = Object.prototype.hasOwnProperty.call(c, "colorDepth")
              ? c.colorDepth
              : 32;
            c =
              Object.prototype.hasOwnProperty.call(c, "antialiasing") &&
              0 < c.antialiasing;
            this.__webgl = Pm.getContextWebGL(this.__canvas, {
              alpha: a || 16 < b,
              antialias: c,
              depth: !0,
              premultipliedAlpha: !0,
              stencil: !0,
              preserveDrawingBuffer: !1,
            });
            this.__dispatchError();
          }
        },
        __dispatchError: function () {
          this.__contextRequested = !1;
          this.dispatchEvent(
            new Qd("error", !1, !1, "Context3D not available")
          );
        },
        __dispatchCreate: function () {
          this.__contextRequested &&
            ((this.__contextRequested = !1),
            this.dispatchEvent(new Ca("context3DCreate")));
        },
        __lostContext: function () {
          this.__contextLost = !0;
          null != this.context3D &&
            (this.context3D.__dispose(), (this.__contextRequested = !0));
        },
        __resize: function (a, b) {
          if (a != this.__width || b != this.__height)
            null != this.__canvas &&
              ((this.__canvas.width = a), (this.__canvas.height = b)),
              this.__projectionTransform.copyRawDataFrom(
                rb.toFloatVector(null, null, null, [
                  2 / (0 < a ? a : 1),
                  0,
                  0,
                  0,
                  0,
                  -2 / (0 < b ? b : 1),
                  0,
                  0,
                  0,
                  0,
                  -0.001,
                  0,
                  -1,
                  1,
                  0,
                  1,
                ])
              ),
              this.__renderTransform.identity(),
              this.__renderTransform.appendTranslation(this.__x, this.__y, 0),
              this.__renderTransform.append(this.__projectionTransform),
              (this.__width = a),
              (this.__height = b);
        },
        __restoreContext: function () {
          this.__contextLost = !1;
          this.__createContext();
        },
        get_x: function () {
          return this.__x;
        },
        get_y: function () {
          return this.__y;
        },
        __class__: rg,
        __properties__: { get_y: "get_y", get_x: "get_x" },
      });
      var Ym = function () {
        this.__totalFrames = this.__framesLoaded = 1;
        this.__currentLabels = [];
        this.__currentFrame = 1;
        this.__lastFrameUpdate = this.__lastFrameScriptEval = -1;
      };
      g["openfl.display.Timeline"] = Ym;
      Ym.__name__ = "openfl.display.Timeline";
      Ym.prototype = {
        enterFrame: function (a) {},
        __enterFrame: function (a) {
          if (this.__isPlaying) {
            a = this.__getNextFrame(a);
            if (this.__lastFrameScriptEval == a) return;
            if (null != this.__frameScripts) {
              if (a < this.__currentFrame) {
                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                this.__currentFrame = 1;
              }
              if (!this.__evaluateFrameScripts(a)) return;
            } else this.__currentFrame = a;
          }
          this.__updateSymbol(this.__currentFrame);
        },
        __evaluateFrameScripts: function (a) {
          if (null == this.__frameScripts) return !0;
          var b = this.__currentFrame;
          for (a += 1; b < a; ) {
            var c = b++;
            if (
              c != this.__lastFrameScriptEval &&
              ((this.__currentFrame = this.__lastFrameScriptEval = c),
              (this.__frameScripts.h.hasOwnProperty(c) &&
                (this.__updateSymbol(c),
                (0, this.__frameScripts.h[c])(this.__scope),
                this.__currentFrame != c)) ||
                !this.__isPlaying)
            )
              return !1;
          }
          return !0;
        },
        __getNextFrame: function (a) {
          null != this.frameRate
            ? ((this.__timeElapsed += a),
              (a =
                this.__currentFrame +
                Math.floor(this.__timeElapsed / this.__frameTime)),
              1 > a && (a = 1),
              a > this.__totalFrames &&
                (a = Math.floor((a - 1) % this.__totalFrames) + 1),
              (this.__timeElapsed %= this.__frameTime))
            : ((a = this.__currentFrame + 1),
              a > this.__totalFrames && (a = 1));
          return a;
        },
        __updateFrameLabel: function () {
          this.__currentFrameLabel = this.__currentLabel = null;
          for (var a = 0, b = this.__currentLabels; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.frame < this.__currentFrame) this.__currentLabel = c.name;
            else if (c.frame == this.__currentFrame)
              this.__currentFrameLabel = this.__currentLabel = c.name;
            else break;
          }
        },
        __updateSymbol: function (a) {
          this.__currentFrame != this.__lastFrameUpdate &&
            (this.__updateFrameLabel(),
            this.enterFrame(a),
            (this.__lastFrameUpdate = this.__currentFrame));
        },
        __class__: Ym,
      };
      var Bg = function (a, b) {
        ei.call(this, a, b);
        this.stage = new hh(
          this,
          Object.prototype.hasOwnProperty.call(b.context, "background")
            ? b.context.background
            : 16777215
        );
        if (Object.prototype.hasOwnProperty.call(b, "parameters"))
          try {
            this.stage.get_loaderInfo().parameters = b.parameters;
          } catch (c) {
            Ba.lastError = c;
          }
        Object.prototype.hasOwnProperty.call(b, "resizable") &&
          !b.resizable &&
          this.stage.__setLogicalSize(b.width, b.height);
        a.addModule(this.stage);
      };
      g["openfl.display.Window"] = Bg;
      Bg.__name__ = "openfl.display.Window";
      Bg.__super__ = ei;
      Bg.prototype = r(ei.prototype, { __class__: Bg });
      var md = function () {
        null == md.empty
          ? ((this.types = []),
            (this.b = []),
            (this.i = []),
            (this.f = []),
            (this.o = []),
            (this.ff = []),
            (this.ii = []),
            (this.copyOnWrite = !0))
          : this.clear();
      };
      g["openfl.display._internal.DrawCommandBuffer"] = md;
      md.__name__ = "openfl.display._internal.DrawCommandBuffer";
      md.prototype = {
        beginBitmapFill: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(qa.BEGIN_BITMAP_FILL);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        beginFill: function (a, b) {
          this.prepareWrite();
          this.types.push(qa.BEGIN_FILL);
          this.i.push(a);
          this.f.push(b);
        },
        beginGradientFill: function (a, b, c, d, e, f, h, m) {
          this.prepareWrite();
          this.types.push(qa.BEGIN_GRADIENT_FILL);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(e);
          this.o.push(f);
          this.o.push(h);
          this.f.push(m);
        },
        beginShaderFill: function (a) {
          this.prepareWrite();
          this.types.push(qa.BEGIN_SHADER_FILL);
          this.o.push(a);
        },
        clear: function () {
          this.types = md.empty.types;
          this.b = md.empty.b;
          this.i = md.empty.i;
          this.f = md.empty.f;
          this.o = md.empty.o;
          this.ff = md.empty.ff;
          this.ii = md.empty.ii;
          this.copyOnWrite = !0;
        },
        cubicCurveTo: function (a, b, c, d, e, f) {
          this.prepareWrite();
          this.types.push(qa.CUBIC_CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(e);
          this.f.push(f);
        },
        curveTo: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(qa.CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawCircle: function (a, b, c) {
          this.prepareWrite();
          this.types.push(qa.DRAW_CIRCLE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
        },
        drawEllipse: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(qa.DRAW_ELLIPSE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawQuads: function (a, b, c) {
          this.prepareWrite();
          this.types.push(qa.DRAW_QUADS);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
        },
        drawRect: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(qa.DRAW_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawRoundRect: function (a, b, c, d, e, f) {
          this.prepareWrite();
          this.types.push(qa.DRAW_ROUND_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(e);
          this.o.push(f);
        },
        drawTriangles: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(qa.DRAW_TRIANGLES);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
          this.o.push(d);
        },
        endFill: function () {
          this.prepareWrite();
          this.types.push(qa.END_FILL);
        },
        lineBitmapStyle: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(qa.LINE_BITMAP_STYLE);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        lineGradientStyle: function (a, b, c, d, e, f, h, m) {
          this.prepareWrite();
          this.types.push(qa.LINE_GRADIENT_STYLE);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(e);
          this.o.push(f);
          this.o.push(h);
          this.f.push(m);
        },
        lineStyle: function (a, b, c, d, e, f, h, m) {
          this.prepareWrite();
          this.types.push(qa.LINE_STYLE);
          this.o.push(a);
          this.i.push(b);
          this.f.push(c);
          this.b.push(d);
          this.o.push(e);
          this.o.push(f);
          this.o.push(h);
          this.f.push(m);
        },
        lineTo: function (a, b) {
          this.prepareWrite();
          this.types.push(qa.LINE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        moveTo: function (a, b) {
          this.prepareWrite();
          this.types.push(qa.MOVE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        prepareWrite: function () {
          this.copyOnWrite &&
            ((this.types = this.types.slice()),
            (this.b = this.b.slice()),
            (this.i = this.i.slice()),
            (this.f = this.f.slice()),
            (this.o = this.o.slice()),
            (this.ff = this.ff.slice()),
            (this.ii = this.ii.slice()),
            (this.copyOnWrite = !1));
        },
        overrideBlendMode: function (a) {
          this.prepareWrite();
          this.types.push(qa.OVERRIDE_BLEND_MODE);
          this.o.push(a);
        },
        windingEvenOdd: function () {
          this.prepareWrite();
          this.types.push(qa.WINDING_EVEN_ODD);
        },
        windingNonZero: function () {
          this.prepareWrite();
          this.types.push(qa.WINDING_NON_ZERO);
        },
        get_length: function () {
          return this.types.length;
        },
        __class__: md,
        __properties__: { get_length: "get_length" },
      };
      var w = function () {};
      g["openfl.display._internal.CanvasGraphics"] = w;
      w.__name__ = "openfl.display._internal.CanvasGraphics";
      w.closePath = function (a) {
        null == a && (a = !1);
        null != w.context.strokeStyle &&
          (a || w.context.closePath(),
          w.context.stroke(),
          a && w.context.closePath(),
          w.context.beginPath());
      };
      w.createBitmapFill = function (a, b, c) {
        Oa.convertToCanvas(a.image);
        w.setSmoothing(c);
        return w.context.createPattern(
          a.image.get_src(),
          b ? "repeat" : "no-repeat"
        );
      };
      w.createGradientPattern = function (a, b, c, d, e, f, h, m) {
        var n = null;
        h = f = null;
        m = !1;
        null == e && ((e = Ea.__pool.get()), (m = !0));
        switch (a) {
          case 0:
            f = Ra.__pool.get();
            f.setTo(-819.2, 0);
            n = f.x;
            a = f.y;
            f.x = n * e.a + a * e.c + e.tx;
            f.y = n * e.b + a * e.d + e.ty;
            h = Ra.__pool.get();
            h.setTo(819.2, 0);
            n = h.x;
            a = h.y;
            h.x = n * e.a + a * e.c + e.tx;
            h.y = n * e.b + a * e.d + e.ty;
            n = w.context.createLinearGradient(f.x, f.y, h.x, h.y);
            break;
          case 1:
            (f = Ra.__pool.get()),
              f.setTo(1638.4, 0),
              (n = f.x),
              (a = f.y),
              (f.x = n * e.a + a * e.c + e.tx),
              (f.y = n * e.b + a * e.d + e.ty),
              (n = w.context.createRadialGradient(
                e.tx,
                e.ty,
                0,
                e.tx,
                e.ty,
                Math.abs((f.x - e.tx) / 2)
              ));
        }
        for (var p, l, k, g, u = 0, q = b.length; u < q; )
          (g = u++),
            (p = b[g]),
            (a = c[g]),
            (l = (p & 16711680) >>> 16),
            (k = (p & 65280) >>> 8),
            (p &= 255),
            (g = d[g] / 255),
            0 > g && (g = 0),
            1 < g && (g = 1),
            n.addColorStop(
              g,
              "rgba(" + l + ", " + k + ", " + p + ", " + a + ")"
            );
        null != f && Ra.__pool.release(f);
        null != h && Ra.__pool.release(h);
        m && Ea.__pool.release(e);
        return n;
      };
      w.createTempPatternCanvas = function (a, b, c, d) {
        var e = window.document.createElement("canvas"),
          f = e.getContext("2d");
        e.width = c;
        e.height = d;
        a = a.image.get_src();
        f.fillStyle = f.createPattern(a, b ? "repeat" : "no-repeat");
        f.beginPath();
        f.moveTo(0, 0);
        f.lineTo(0, d);
        f.lineTo(c, d);
        f.lineTo(c, 0);
        f.lineTo(0, 0);
        f.closePath();
        w.hitTesting || f.fill(w.windingRule);
        return e;
      };
      w.drawRoundRect = function (a, b, c, d, e, f) {
        null == f && (f = e);
        e *= 0.5;
        f *= 0.5;
        e > c / 2 && (e = c / 2);
        f > d / 2 && (f = d / 2);
        c = a + c;
        d = b + d;
        var h = -e + 0.7071067811865476 * e,
          m = -e + 0.41421356237309503 * e,
          n = -f + 0.7071067811865476 * f,
          p = -f + 0.41421356237309503 * f;
        w.context.moveTo(c, d - f);
        w.context.quadraticCurveTo(c, d + p, c + h, d + n);
        w.context.quadraticCurveTo(c + m, d, c - e, d);
        w.context.lineTo(a + e, d);
        w.context.quadraticCurveTo(a - m, d, a - h, d + n);
        w.context.quadraticCurveTo(a, d + p, a, d - f);
        w.context.lineTo(a, b + f);
        w.context.quadraticCurveTo(a, b - p, a - h, b - n);
        w.context.quadraticCurveTo(a - m, b, a + e, b);
        w.context.lineTo(c - e, b);
        w.context.quadraticCurveTo(c + m, b, c + h, b - n);
        w.context.quadraticCurveTo(c, b - p, c, b + f);
        w.context.lineTo(c, d - f);
      };
      w.endFill = function () {
        w.context.beginPath();
        w.playCommands(w.fillCommands, !1);
        w.fillCommands.clear();
      };
      w.endStroke = function () {
        w.context.beginPath();
        w.playCommands(w.strokeCommands, !0);
        w.context.closePath();
        w.strokeCommands.clear();
      };
      w.hitTest = function (a, b, c) {
        w.bounds = a.__bounds;
        w.graphics = a;
        if (
          0 == a.__commands.get_length() ||
          null == w.bounds ||
          0 >= w.bounds.width ||
          0 >= w.bounds.height
        )
          return !1;
        w.hitTesting = !0;
        var d = a.__renderTransform,
          e = b * d.b + c * d.d + d.ty;
        b =
          b * d.a +
          c * d.c +
          d.tx -
          (w.bounds.x * d.a + w.bounds.y * d.c + d.tx);
        c = e - (w.bounds.x * d.b + w.bounds.y * d.d + d.ty);
        e = a.__canvas;
        var f = a.__context;
        a.__canvas = w.hitTestCanvas;
        a.__context = w.hitTestContext;
        w.context = a.__context;
        w.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
        w.fillCommands.clear();
        w.strokeCommands.clear();
        w.hasFill = !1;
        w.hasStroke = !1;
        w.bitmapFill = null;
        w.bitmapRepeat = !1;
        w.windingRule = "evenodd";
        d = new mf(a.__commands);
        for (var h = 0, m = a.__commands.types; h < m.length; ) {
          var n = m[h];
          ++h;
          switch (n._hx_index) {
            case 0:
            case 1:
            case 2:
            case 3:
              w.endFill();
              if (w.hasFill && w.context.isPointInPath(b, c, w.windingRule))
                return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
              w.endStroke();
              if (w.hasStroke && w.context.isPointInStroke(b, c))
                return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
              if (n == qa.BEGIN_BITMAP_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = qa.BEGIN_BITMAP_FILL;
                n = d;
                w.fillCommands.beginBitmapFill(
                  n.buffer.o[n.oPos],
                  n.buffer.o[n.oPos + 1],
                  n.buffer.b[n.bPos],
                  n.buffer.b[n.bPos + 1]
                );
                w.strokeCommands.beginBitmapFill(
                  n.buffer.o[n.oPos],
                  n.buffer.o[n.oPos + 1],
                  n.buffer.b[n.bPos],
                  n.buffer.b[n.bPos + 1]
                );
              } else if (n == qa.BEGIN_GRADIENT_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = qa.BEGIN_GRADIENT_FILL;
                n = d;
                w.fillCommands.beginGradientFill(
                  n.buffer.o[n.oPos],
                  n.buffer.ii[n.iiPos],
                  n.buffer.ff[n.ffPos],
                  n.buffer.ii[n.iiPos + 1],
                  n.buffer.o[n.oPos + 1],
                  n.buffer.o[n.oPos + 2],
                  n.buffer.o[n.oPos + 3],
                  n.buffer.f[n.fPos]
                );
                w.strokeCommands.beginGradientFill(
                  n.buffer.o[n.oPos],
                  n.buffer.ii[n.iiPos],
                  n.buffer.ff[n.ffPos],
                  n.buffer.ii[n.iiPos + 1],
                  n.buffer.o[n.oPos + 1],
                  n.buffer.o[n.oPos + 2],
                  n.buffer.o[n.oPos + 3],
                  n.buffer.f[n.fPos]
                );
              } else if (n == qa.BEGIN_SHADER_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = qa.BEGIN_SHADER_FILL;
                n = d;
                w.fillCommands.beginShaderFill(n.buffer.o[n.oPos]);
                w.strokeCommands.beginShaderFill(n.buffer.o[n.oPos]);
              } else {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = qa.BEGIN_FILL;
                n = d;
                w.fillCommands.beginFill(n.buffer.i[n.iPos], 1);
                w.strokeCommands.beginFill(n.buffer.i[n.iPos], 1);
              }
              break;
            case 4:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.CUBIC_CURVE_TO;
              n = d;
              w.fillCommands.cubicCurveTo(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3],
                n.buffer.f[n.fPos + 4],
                n.buffer.f[n.fPos + 5]
              );
              w.strokeCommands.cubicCurveTo(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3],
                n.buffer.f[n.fPos + 4],
                n.buffer.f[n.fPos + 5]
              );
              break;
            case 5:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.CURVE_TO;
              n = d;
              w.fillCommands.curveTo(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3]
              );
              w.strokeCommands.curveTo(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3]
              );
              break;
            case 6:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.DRAW_CIRCLE;
              n = d;
              w.fillCommands.drawCircle(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2]
              );
              w.strokeCommands.drawCircle(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2]
              );
              break;
            case 7:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.DRAW_ELLIPSE;
              n = d;
              w.fillCommands.drawEllipse(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3]
              );
              w.strokeCommands.drawEllipse(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3]
              );
              break;
            case 9:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.DRAW_RECT;
              n = d;
              w.fillCommands.drawRect(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3]
              );
              w.strokeCommands.drawRect(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3]
              );
              break;
            case 10:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.DRAW_ROUND_RECT;
              n = d;
              w.fillCommands.drawRoundRect(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3],
                n.buffer.f[n.fPos + 4],
                n.buffer.o[n.oPos]
              );
              w.strokeCommands.drawRoundRect(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1],
                n.buffer.f[n.fPos + 2],
                n.buffer.f[n.fPos + 3],
                n.buffer.f[n.fPos + 4],
                n.buffer.o[n.oPos]
              );
              break;
            case 13:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.END_FILL;
              w.endFill();
              if (w.hasFill && w.context.isPointInPath(b, c, w.windingRule))
                return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
              w.endStroke();
              if (w.hasStroke && w.context.isPointInStroke(b, c))
                return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
              w.hasFill = !1;
              w.bitmapFill = null;
              break;
            case 14:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.LINE_BITMAP_STYLE;
              n = d;
              w.strokeCommands.lineBitmapStyle(
                n.buffer.o[n.oPos],
                n.buffer.o[n.oPos + 1],
                n.buffer.b[n.bPos],
                n.buffer.b[n.bPos + 1]
              );
              break;
            case 15:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.LINE_GRADIENT_STYLE;
              n = d;
              w.strokeCommands.lineGradientStyle(
                n.buffer.o[n.oPos],
                n.buffer.ii[n.iiPos],
                n.buffer.ff[n.ffPos],
                n.buffer.ii[n.iiPos + 1],
                n.buffer.o[n.oPos + 1],
                n.buffer.o[n.oPos + 2],
                n.buffer.o[n.oPos + 3],
                n.buffer.f[n.fPos]
              );
              break;
            case 16:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.LINE_STYLE;
              n = d;
              w.strokeCommands.lineStyle(
                n.buffer.o[n.oPos],
                n.buffer.i[n.iPos],
                1,
                n.buffer.b[n.bPos],
                n.buffer.o[n.oPos + 1],
                n.buffer.o[n.oPos + 2],
                n.buffer.o[n.oPos + 3],
                n.buffer.f[n.fPos + 1]
              );
              break;
            case 17:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.LINE_TO;
              n = d;
              w.fillCommands.lineTo(n.buffer.f[n.fPos], n.buffer.f[n.fPos + 1]);
              w.strokeCommands.lineTo(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1]
              );
              break;
            case 18:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = qa.MOVE_TO;
              n = d;
              w.fillCommands.moveTo(n.buffer.f[n.fPos], n.buffer.f[n.fPos + 1]);
              w.strokeCommands.moveTo(
                n.buffer.f[n.fPos],
                n.buffer.f[n.fPos + 1]
              );
              break;
            case 21:
              w.windingRule = "evenodd";
              break;
            case 22:
              w.windingRule = "nonzero";
              break;
            default:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = n;
          }
        }
        h = !1;
        0 < w.fillCommands.get_length() && w.endFill();
        w.hasFill && w.context.isPointInPath(b, c, w.windingRule) && (h = !0);
        0 < w.strokeCommands.get_length() && w.endStroke();
        w.hasStroke && w.context.isPointInStroke(b, c) && (h = !0);
        d.destroy();
        a.__canvas = e;
        a.__context = f;
        return h;
      };
      w.normalizeUVT = function (a, b) {
        null == b && (b = !1);
        for (
          var c = -Infinity, d, e = a.get_length(), f = 1, h = e + 1;
          f < h;

        )
          (d = f++),
            (b && 0 == d % 3) || ((d = a.get(d - 1)), c < d && (c = d));
        if (!b) return { max: c, uvt: a };
        var m = rb.toFloatVector(null);
        f = 1;
        for (h = e + 1; f < h; )
          (d = f++), (b && 0 == d % 3) || m.push(a.get(d - 1));
        return { max: c, uvt: m };
      };
      w.playCommands = function (a, b) {
        null == b && (b = !1);
        w.bounds = w.graphics.__bounds;
        var c = w.bounds.x,
          d = w.bounds.y,
          e = 0,
          f = 0,
          h = !1,
          m = 0,
          n = 0,
          p = !1;
        w.windingRule = "evenodd";
        w.setSmoothing(!0);
        var l = !1,
          k = new mf(a),
          g,
          u,
          q,
          r = null,
          z = null,
          v = 0,
          y = a.types;
        a: for (; v < y.length; ) {
          var O = y[v];
          ++v;
          switch (O._hx_index) {
            case 0:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.BEGIN_BITMAP_FILL;
              var x = k;
              w.bitmapFill = x.buffer.o[x.oPos];
              w.context.fillStyle = w.createBitmapFill(
                x.buffer.o[x.oPos],
                x.buffer.b[x.bPos],
                x.buffer.b[x.bPos + 1]
              );
              w.hasFill = !0;
              null != x.buffer.o[x.oPos + 1]
                ? ((w.pendingMatrix = x.buffer.o[x.oPos + 1]),
                  (w.inversePendingMatrix = x.buffer.o[x.oPos + 1].clone()),
                  w.inversePendingMatrix.invert())
                : ((w.pendingMatrix = null), (w.inversePendingMatrix = null));
              break;
            case 1:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.BEGIN_FILL;
              var t = k;
              if (0.005 > t.buffer.f[t.fPos]) w.hasFill = !1;
              else {
                if (1 == t.buffer.f[t.fPos]) {
                  var C = K.hex(t.buffer.i[t.iPos] & 16777215, 6);
                  w.context.fillStyle = "#" + C;
                } else {
                  var A = (t.buffer.i[t.iPos] & 16711680) >>> 16;
                  var D = (t.buffer.i[t.iPos] & 65280) >>> 8;
                  var G = t.buffer.i[t.iPos] & 255;
                  w.context.fillStyle =
                    "rgba(" +
                    A +
                    ", " +
                    D +
                    ", " +
                    G +
                    ", " +
                    t.buffer.f[t.fPos] +
                    ")";
                }
                w.bitmapFill = null;
                w.setSmoothing(!0);
                w.hasFill = !0;
              }
              break;
            case 2:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.BEGIN_GRADIENT_FILL;
              var T = k;
              w.context.fillStyle = w.createGradientPattern(
                T.buffer.o[T.oPos],
                T.buffer.ii[T.iiPos],
                T.buffer.ff[T.ffPos],
                T.buffer.ii[T.iiPos + 1],
                T.buffer.o[T.oPos + 1],
                T.buffer.o[T.oPos + 2],
                T.buffer.o[T.oPos + 3],
                T.buffer.f[T.fPos]
              );
              w.bitmapFill = null;
              w.setSmoothing(!0);
              w.hasFill = !0;
              break;
            case 3:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.BEGIN_SHADER_FILL;
              var H = k,
                ca = H.buffer.o[H.oPos];
              0 < ca.inputCount &&
                ((w.bitmapFill = ca.inputs[0]),
                (w.context.fillStyle = w.createBitmapFill(
                  w.bitmapFill,
                  0 != ca.inputWrap[0],
                  5 != ca.inputFilter[0]
                )),
                (w.hasFill = !0),
                (w.pendingMatrix = null),
                (w.inversePendingMatrix = null));
              break;
            case 4:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.CUBIC_CURVE_TO;
              var ra = k;
              l = !0;
              w.context.bezierCurveTo(
                ra.buffer.f[ra.fPos] - c,
                ra.buffer.f[ra.fPos + 1] - d,
                ra.buffer.f[ra.fPos + 2] - c,
                ra.buffer.f[ra.fPos + 3] - d,
                ra.buffer.f[ra.fPos + 4] - c,
                ra.buffer.f[ra.fPos + 5] - d
              );
              break;
            case 5:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.CURVE_TO;
              var I = k;
              l = !0;
              w.context.quadraticCurveTo(
                I.buffer.f[I.fPos] - c,
                I.buffer.f[I.fPos + 1] - d,
                I.buffer.f[I.fPos + 2] - c,
                I.buffer.f[I.fPos + 3] - d
              );
              break;
            case 6:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.DRAW_CIRCLE;
              var Y = k;
              l = !0;
              w.context.moveTo(
                Y.buffer.f[Y.fPos] - c + Y.buffer.f[Y.fPos + 2],
                Y.buffer.f[Y.fPos + 1] - d
              );
              w.context.arc(
                Y.buffer.f[Y.fPos] - c,
                Y.buffer.f[Y.fPos + 1] - d,
                Y.buffer.f[Y.fPos + 2],
                0,
                2 * Math.PI,
                !0
              );
              break;
            case 7:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.DRAW_ELLIPSE;
              var E = k;
              l = !0;
              var J = E.buffer.f[E.fPos];
              var B = E.buffer.f[E.fPos + 1];
              var Ua = E.buffer.f[E.fPos + 2];
              var F = E.buffer.f[E.fPos + 3];
              J -= c;
              B -= d;
              var M = (Ua / 2) * 0.5522848;
              var N = (F / 2) * 0.5522848;
              var Qb = J + Ua;
              var bd = B + F;
              var nb = J + Ua / 2;
              var P = B + F / 2;
              w.context.moveTo(J, P);
              w.context.bezierCurveTo(J, P - N, nb - M, B, nb, B);
              w.context.bezierCurveTo(nb + M, B, Qb, P - N, Qb, P);
              w.context.bezierCurveTo(Qb, P + N, nb + M, bd, nb, bd);
              w.context.bezierCurveTo(nb - M, bd, J, P + N, J, P);
              break;
            case 8:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.DRAW_QUADS;
              var S = k,
                L = S.buffer.o[S.oPos],
                Q = S.buffer.o[S.oPos + 1],
                R = S.buffer.o[S.oPos + 2],
                X = null != Q,
                Z = !1,
                ba = !1,
                aa = X ? Q.get_length() : Math.floor(L.get_length() / 4);
              if (0 == aa) return;
              null != R &&
                (R.get_length() >= 6 * aa
                  ? (ba = Z = !0)
                  : R.get_length() >= 4 * aa
                  ? (Z = !0)
                  : R.get_length() >= 2 * aa && (ba = !0));
              var W = ma.__pool.get(),
                V = Ea.__pool.get(),
                Lc = w.graphics.__renderTransform;
              w.context.save();
              for (var ea = 0, qd = aa; ea < qd; ) {
                var Rb = ea++;
                var ya = X ? 4 * Q.get(Rb) : 4 * Rb;
                if (
                  !(
                    0 > ya ||
                    (W.setTo(
                      L.get(ya),
                      L.get(ya + 1),
                      L.get(ya + 2),
                      L.get(ya + 3)
                    ),
                    0 >= W.width || 0 >= W.height)
                  )
                ) {
                  if (Z && ba) {
                    var oa = 6 * Rb;
                    V.setTo(
                      R.get(oa),
                      R.get(oa + 1),
                      R.get(oa + 2),
                      R.get(oa + 3),
                      R.get(oa + 4),
                      R.get(oa + 5)
                    );
                  } else
                    Z
                      ? ((oa = 4 * Rb),
                        V.setTo(
                          R.get(oa),
                          R.get(oa + 1),
                          R.get(oa + 2),
                          R.get(oa + 3),
                          W.x,
                          W.y
                        ))
                      : ba
                      ? ((oa = 2 * Rb),
                        (V.tx = R.get(oa)),
                        (V.ty = R.get(oa + 1)))
                      : ((V.tx = W.x), (V.ty = W.y));
                  V.tx += e - c;
                  V.ty += f - d;
                  V.concat(Lc);
                  w.context.setTransform(V.a, V.b, V.c, V.d, V.tx, V.ty);
                  null != w.bitmapFill
                    ? w.context.drawImage(
                        w.bitmapFill.image.get_src(),
                        W.x,
                        W.y,
                        W.width,
                        W.height,
                        0,
                        0,
                        W.width,
                        W.height
                      )
                    : w.context.fillRect(0, 0, W.width, W.height);
                }
              }
              ma.__pool.release(W);
              Ea.__pool.release(V);
              w.context.restore();
              break;
            case 9:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.DRAW_RECT;
              var U = k;
              var wa = !1;
              if (null != w.bitmapFill && !w.hitTesting) {
                var kb = (q = u = g = 0);
                var ua = !0;
                if (null != w.pendingMatrix)
                  if (0 != w.pendingMatrix.b || 0 != w.pendingMatrix.c) ua = !1;
                  else {
                    null == r && (r = Ra.__pool.get());
                    null == z && (z = Ra.__pool.get());
                    r.setTo(U.buffer.f[U.fPos], U.buffer.f[U.fPos + 1]);
                    var fa = w.inversePendingMatrix,
                      ia = r.x,
                      ja = r.y;
                    r.x = ia * fa.a + ja * fa.c + fa.tx;
                    r.y = ia * fa.b + ja * fa.d + fa.ty;
                    z.setTo(
                      U.buffer.f[U.fPos] + U.buffer.f[U.fPos + 2],
                      U.buffer.f[U.fPos + 1] + U.buffer.f[U.fPos + 3]
                    );
                    var ha = w.inversePendingMatrix,
                      ka = z.x,
                      cb = z.y;
                    z.x = ka * ha.a + cb * ha.c + ha.tx;
                    z.y = ka * ha.b + cb * ha.d + ha.ty;
                    g = r.y;
                    kb = r.x;
                    q = z.y;
                    u = z.x;
                  }
                else
                  (g = U.buffer.f[U.fPos + 1]),
                    (kb = U.buffer.f[U.fPos]),
                    (q = U.buffer.f[U.fPos + 1] + U.buffer.f[U.fPos + 3]),
                    (u = U.buffer.f[U.fPos] + U.buffer.f[U.fPos + 2]);
                ua &&
                  0 <= g &&
                  0 <= kb &&
                  u <= w.bitmapFill.width &&
                  q <= w.bitmapFill.height &&
                  ((wa = !0),
                  w.hitTesting ||
                    w.context.drawImage(
                      w.bitmapFill.image.get_src(),
                      kb,
                      g,
                      u - kb,
                      q - g,
                      U.buffer.f[U.fPos] - c,
                      U.buffer.f[U.fPos + 1] - d,
                      U.buffer.f[U.fPos + 2],
                      U.buffer.f[U.fPos + 3]
                    ));
              }
              wa ||
                ((l = !0),
                w.context.rect(
                  U.buffer.f[U.fPos] - c,
                  U.buffer.f[U.fPos + 1] - d,
                  U.buffer.f[U.fPos + 2],
                  U.buffer.f[U.fPos + 3]
                ));
              break;
            case 10:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.DRAW_ROUND_RECT;
              var ib = k;
              l = !0;
              w.drawRoundRect(
                ib.buffer.f[ib.fPos] - c,
                ib.buffer.f[ib.fPos + 1] - d,
                ib.buffer.f[ib.fPos + 2],
                ib.buffer.f[ib.fPos + 3],
                ib.buffer.f[ib.fPos + 4],
                ib.buffer.o[ib.oPos]
              );
              break;
            case 12:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.DRAW_TRIANGLES;
              var la = k,
                na = la.buffer.o[la.oPos],
                pa = la.buffer.o[la.oPos + 1],
                sa = la.buffer.o[la.oPos + 2],
                ta = null,
                va = null == w.bitmapFill;
              if (va && null != sa) break a;
              if (!va) {
                if (null == sa) {
                  sa = rb.toFloatVector(null);
                  for (var xa = 0, Aa = (na.get_length() / 2) | 0; xa < Aa; ) {
                    var ob = xa++;
                    sa.push(na.get(2 * ob) - c / w.bitmapFill.width);
                    sa.push(na.get(2 * ob + 1) - d / w.bitmapFill.height);
                  }
                }
                var Ca = sa.get_length() != na.get_length(),
                  Ba = w.normalizeUVT(sa, Ca),
                  Ga = Ba.max;
                sa = Ba.uvt;
                ta =
                  1 < Ga
                    ? w.createTempPatternCanvas(
                        w.bitmapFill,
                        w.bitmapRepeat,
                        w.bounds.width | 0,
                        w.bounds.height | 0
                      )
                    : w.createTempPatternCanvas(
                        w.bitmapFill,
                        w.bitmapRepeat,
                        w.bitmapFill.width,
                        w.bitmapFill.height
                      );
              }
              for (
                var Da = 0,
                  Ja = pa.get_length(),
                  za,
                  $b,
                  Ka,
                  La,
                  Ma,
                  Na,
                  Oa,
                  Pa,
                  Qa,
                  jb,
                  Ha,
                  Ia,
                  Va,
                  Sa,
                  Ta,
                  Za,
                  $a,
                  Hb,
                  Wa,
                  Xa,
                  Ya,
                  ab,
                  Kb,
                  eb,
                  fb,
                  hb,
                  qb,
                  Lb;
                Da < Ja;

              ) {
                za = Da;
                $b = Da + 1;
                Ka = Da + 2;
                La = 2 * pa.get(za);
                Ma = 2 * pa.get(za) + 1;
                Na = 2 * pa.get($b);
                Oa = 2 * pa.get($b) + 1;
                Pa = 2 * pa.get(Ka);
                Qa = 2 * pa.get(Ka) + 1;
                jb = na.get(La) - c;
                Ha = na.get(Ma) - d;
                Ia = na.get(Na) - c;
                Va = na.get(Oa) - d;
                Sa = na.get(Pa) - c;
                Ta = na.get(Qa) - d;
                switch (la.buffer.o[la.oPos + 3]) {
                  case 0:
                    if (0 > (Ia - jb) * (Ta - Ha) - (Va - Ha) * (Sa - jb)) {
                      Da += 3;
                      continue;
                    }
                    break;
                  case 2:
                    if (!(0 > (Ia - jb) * (Ta - Ha) - (Va - Ha) * (Sa - jb))) {
                      Da += 3;
                      continue;
                    }
                }
                va
                  ? (w.context.beginPath(),
                    w.context.moveTo(jb, Ha),
                    w.context.lineTo(Ia, Va),
                    w.context.lineTo(Sa, Ta),
                    w.context.closePath(),
                    w.hitTesting || w.context.fill(w.windingRule),
                    (Da += 3))
                  : ((Za = sa.get(La) * ta.width),
                    (Hb = sa.get(Na) * ta.width),
                    (Xa = sa.get(Pa) * ta.width),
                    ($a = sa.get(Ma) * ta.height),
                    (Wa = sa.get(Oa) * ta.height),
                    (Ya = sa.get(Qa) * ta.height),
                    (ab = Za * (Ya - Wa) - Hb * Ya + Xa * Wa + (Hb - Xa) * $a),
                    0 == ab
                      ? ((Da += 3), w.context.restore())
                      : (w.context.save(),
                        w.context.beginPath(),
                        w.context.moveTo(jb, Ha),
                        w.context.lineTo(Ia, Va),
                        w.context.lineTo(Sa, Ta),
                        w.context.closePath(),
                        w.context.clip(),
                        (Kb =
                          -(
                            $a * (Sa - Ia) -
                            Wa * Sa +
                            Ya * Ia +
                            (Wa - Ya) * jb
                          ) / ab),
                        (eb =
                          (Wa * Ta +
                            $a * (Va - Ta) -
                            Ya * Va +
                            (Ya - Wa) * Ha) /
                          ab),
                        (fb =
                          (Za * (Sa - Ia) -
                            Hb * Sa +
                            Xa * Ia +
                            (Hb - Xa) * jb) /
                          ab),
                        (hb =
                          -(
                            Hb * Ta +
                            Za * (Va - Ta) -
                            Xa * Va +
                            (Xa - Hb) * Ha
                          ) / ab),
                        (qb =
                          (Za * (Ya * Ia - Wa * Sa) +
                            $a * (Hb * Sa - Xa * Ia) +
                            (Xa * Wa - Hb * Ya) * jb) /
                          ab),
                        (Lb =
                          (Za * (Ya * Va - Wa * Ta) +
                            $a * (Hb * Ta - Xa * Va) +
                            (Xa * Wa - Hb * Ya) * Ha) /
                          ab),
                        w.context.transform(Kb, eb, fb, hb, qb, Lb),
                        w.context.drawImage(ta, 0, 0, ta.width, ta.height),
                        w.context.restore(),
                        (Da += 3)));
              }
              break;
            case 14:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.LINE_BITMAP_STYLE;
              var db = k;
              b && w.hasStroke && w.closePath();
              w.context.moveTo(e - c, f - d);
              w.context.strokeStyle = w.createBitmapFill(
                db.buffer.o[db.oPos],
                db.buffer.b[db.bPos],
                db.buffer.b[db.bPos + 1]
              );
              w.hasStroke = !0;
              break;
            case 15:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.LINE_GRADIENT_STYLE;
              var sb = k;
              b && w.hasStroke && w.closePath();
              w.context.moveTo(e - c, f - d);
              w.context.strokeStyle = w.createGradientPattern(
                sb.buffer.o[sb.oPos],
                sb.buffer.ii[sb.iiPos],
                sb.buffer.ff[sb.ffPos],
                sb.buffer.ii[sb.iiPos + 1],
                sb.buffer.o[sb.oPos + 1],
                sb.buffer.o[sb.oPos + 2],
                sb.buffer.o[sb.oPos + 3],
                sb.buffer.f[sb.fPos]
              );
              w.setSmoothing(!0);
              w.hasStroke = !0;
              break;
            case 16:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.LINE_STYLE;
              var Fa = k;
              b && w.hasStroke && w.closePath(!0);
              w.context.moveTo(e - c, f - d);
              if (null == Fa.buffer.o[Fa.oPos]) w.hasStroke = !1;
              else {
                w.context.lineWidth =
                  0 < Fa.buffer.o[Fa.oPos] ? Fa.buffer.o[Fa.oPos] : 1;
                var lb =
                  null == Fa.buffer.o[Fa.oPos + 3]
                    ? "round"
                    : Fn.toString(Fa.buffer.o[Fa.oPos + 3]).toLowerCase();
                w.context.lineJoin = lb;
                var mb =
                  null == Fa.buffer.o[Fa.oPos + 2]
                    ? "round"
                    : 0 == Fa.buffer.o[Fa.oPos + 2]
                    ? "butt"
                    : En.toString(Fa.buffer.o[Fa.oPos + 2]).toLowerCase();
                w.context.lineCap = mb;
                w.context.miterLimit = Fa.buffer.f[Fa.fPos + 1];
                if (1 == Fa.buffer.f[Fa.fPos]) {
                  var pb = K.hex(Fa.buffer.i[Fa.iPos] & 16777215, 6);
                  w.context.strokeStyle = "#" + pb;
                } else
                  (A = (Fa.buffer.i[Fa.iPos] & 16711680) >>> 16),
                    (D = (Fa.buffer.i[Fa.iPos] & 65280) >>> 8),
                    (G = Fa.buffer.i[Fa.iPos] & 255),
                    (w.context.strokeStyle =
                      "rgba(" +
                      A +
                      ", " +
                      D +
                      ", " +
                      G +
                      ", " +
                      Fa.buffer.f[Fa.fPos] +
                      ")");
                w.setSmoothing(!0);
                w.hasStroke = !0;
              }
              break;
            case 17:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.LINE_TO;
              var gb = k;
              l = !0;
              w.context.lineTo(
                gb.buffer.f[gb.fPos] - c,
                gb.buffer.f[gb.fPos + 1] - d
              );
              e = gb.buffer.f[gb.fPos];
              f = gb.buffer.f[gb.fPos + 1];
              e == m && f == n && (h = !0);
              break;
            case 18:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = qa.MOVE_TO;
              var bb = k;
              w.context.moveTo(
                bb.buffer.f[bb.fPos] - c,
                bb.buffer.f[bb.fPos + 1] - d
              );
              e = bb.buffer.f[bb.fPos];
              f = bb.buffer.f[bb.fPos + 1];
              p &&
                bb.buffer.f[bb.fPos] != m &&
                bb.buffer.f[bb.fPos + 1] != n &&
                (h = !0);
              m = bb.buffer.f[bb.fPos];
              n = bb.buffer.f[bb.fPos + 1];
              p = !0;
              break;
            case 21:
              w.windingRule = "evenodd";
              break;
            case 22:
              w.windingRule = "nonzero";
              break;
            default:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = O;
          }
        }
        null != r && Ra.__pool.release(r);
        null != z && Ra.__pool.release(z);
        k.destroy();
        l &&
          (b &&
            w.hasStroke &&
            (w.hasFill && h
              ? (w.context.lineTo(m - c, n - d), w.closePath(!1))
              : h && e == m && f == n && w.closePath(!1),
            w.hitTesting || w.context.stroke()),
          b ||
            (!w.hasFill && null == w.bitmapFill) ||
            (w.context.translate(-w.bounds.x, -w.bounds.y),
            null != w.pendingMatrix
              ? (w.context.transform(
                  w.pendingMatrix.a,
                  w.pendingMatrix.b,
                  w.pendingMatrix.c,
                  w.pendingMatrix.d,
                  w.pendingMatrix.tx,
                  w.pendingMatrix.ty
                ),
                w.hitTesting || w.context.fill(w.windingRule),
                w.context.transform(
                  w.inversePendingMatrix.a,
                  w.inversePendingMatrix.b,
                  w.inversePendingMatrix.c,
                  w.inversePendingMatrix.d,
                  w.inversePendingMatrix.tx,
                  w.inversePendingMatrix.ty
                ))
              : w.hitTesting || w.context.fill(w.windingRule),
            w.context.translate(w.bounds.x, w.bounds.y),
            w.context.closePath()));
      };
      w.render = function (a, b) {
        a.__update(b.__worldTransform);
        if (a.__softwareDirty) {
          w.hitTesting = !1;
          w.graphics = a;
          w.allowSmoothing = b.__allowSmoothing;
          w.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
          w.bounds = a.__bounds;
          var c = a.__width,
            d = a.__height;
          if (
            !a.__visible ||
            0 == a.__commands.get_length() ||
            null == w.bounds ||
            1 > c ||
            1 > d
          )
            (a.__canvas = null), (a.__context = null), (a.__bitmap = null);
          else {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement("canvas")),
              (a.__context = a.__canvas.getContext("2d")));
            w.context = a.__context;
            var e = a.__renderTransform,
              f = a.__canvas,
              h = b.pixelRatio,
              m = (c * h) | 0,
              n = (d * h) | 0;
            b.__setBlendModeContext(w.context, 10);
            b.__isDOM
              ? (f.width == m && f.height == n
                  ? w.context.clearRect(0, 0, m, n)
                  : ((f.width = m),
                    (f.height = n),
                    (f.style.width = c + "px"),
                    (f.style.height = d + "px")),
                (c = a.__renderTransform),
                w.context.setTransform(
                  c.a * h,
                  c.b * h,
                  c.c * h,
                  c.d * h,
                  c.tx * h,
                  c.ty * h
                ))
              : (f.width == m && f.height == n
                  ? (w.context.closePath(),
                    w.context.setTransform(1, 0, 0, 1, 0, 0),
                    w.context.clearRect(0, 0, m, n))
                  : ((f.width = c), (f.height = d)),
                w.context.setTransform(e.a, e.b, e.c, e.d, e.tx, e.ty));
            w.fillCommands.clear();
            w.strokeCommands.clear();
            w.hasFill = !1;
            w.hasStroke = !1;
            w.bitmapFill = null;
            h = w.bitmapRepeat = !1;
            d = c = 0;
            w.windingRule = "evenodd";
            e = new mf(a.__commands);
            f = 0;
            for (m = a.__commands.types; f < m.length; )
              switch (((n = m[f]), ++f, n._hx_index)) {
                case 0:
                case 1:
                case 2:
                case 3:
                  w.endFill();
                  w.endStroke();
                  if (n == qa.BEGIN_BITMAP_FILL) {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos += 1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos += 2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1;
                    }
                    e.prev = qa.BEGIN_BITMAP_FILL;
                    n = e;
                    w.fillCommands.beginBitmapFill(
                      n.buffer.o[n.oPos],
                      n.buffer.o[n.oPos + 1],
                      n.buffer.b[n.bPos],
                      n.buffer.b[n.bPos + 1]
                    );
                    w.strokeCommands.beginBitmapFill(
                      n.buffer.o[n.oPos],
                      n.buffer.o[n.oPos + 1],
                      n.buffer.b[n.bPos],
                      n.buffer.b[n.bPos + 1]
                    );
                  } else if (n == qa.BEGIN_GRADIENT_FILL) {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos += 1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos += 2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1;
                    }
                    e.prev = qa.BEGIN_GRADIENT_FILL;
                    n = e;
                    w.fillCommands.beginGradientFill(
                      n.buffer.o[n.oPos],
                      n.buffer.ii[n.iiPos],
                      n.buffer.ff[n.ffPos],
                      n.buffer.ii[n.iiPos + 1],
                      n.buffer.o[n.oPos + 1],
                      n.buffer.o[n.oPos + 2],
                      n.buffer.o[n.oPos + 3],
                      n.buffer.f[n.fPos]
                    );
                    w.strokeCommands.beginGradientFill(
                      n.buffer.o[n.oPos],
                      n.buffer.ii[n.iiPos],
                      n.buffer.ff[n.ffPos],
                      n.buffer.ii[n.iiPos + 1],
                      n.buffer.o[n.oPos + 1],
                      n.buffer.o[n.oPos + 2],
                      n.buffer.o[n.oPos + 3],
                      n.buffer.f[n.fPos]
                    );
                  } else if (n == qa.BEGIN_SHADER_FILL) {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos += 1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos += 2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1;
                    }
                    e.prev = qa.BEGIN_SHADER_FILL;
                    n = e;
                    w.fillCommands.beginShaderFill(n.buffer.o[n.oPos]);
                    w.strokeCommands.beginShaderFill(n.buffer.o[n.oPos]);
                  } else {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos += 1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos += 2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1;
                    }
                    e.prev = qa.BEGIN_FILL;
                    n = e;
                    w.fillCommands.beginFill(
                      n.buffer.i[n.iPos],
                      n.buffer.f[n.fPos]
                    );
                    w.strokeCommands.beginFill(
                      n.buffer.i[n.iPos],
                      n.buffer.f[n.fPos]
                    );
                  }
                  break;
                case 4:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.CUBIC_CURVE_TO;
                  n = e;
                  w.fillCommands.cubicCurveTo(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1],
                    n.buffer.f[n.fPos + 2],
                    n.buffer.f[n.fPos + 3],
                    n.buffer.f[n.fPos + 4],
                    n.buffer.f[n.fPos + 5]
                  );
                  h
                    ? w.strokeCommands.cubicCurveTo(
                        n.buffer.f[n.fPos],
                        n.buffer.f[n.fPos + 1],
                        n.buffer.f[n.fPos + 2],
                        n.buffer.f[n.fPos + 3],
                        n.buffer.f[n.fPos + 4],
                        n.buffer.f[n.fPos + 5]
                      )
                    : ((c = n.buffer.f[n.fPos + 4]),
                      (d = n.buffer.f[n.fPos + 5]));
                  break;
                case 5:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.CURVE_TO;
                  n = e;
                  w.fillCommands.curveTo(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1],
                    n.buffer.f[n.fPos + 2],
                    n.buffer.f[n.fPos + 3]
                  );
                  h
                    ? w.strokeCommands.curveTo(
                        n.buffer.f[n.fPos],
                        n.buffer.f[n.fPos + 1],
                        n.buffer.f[n.fPos + 2],
                        n.buffer.f[n.fPos + 3]
                      )
                    : ((c = n.buffer.f[n.fPos + 2]),
                      (d = n.buffer.f[n.fPos + 3]));
                  break;
                case 6:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.DRAW_CIRCLE;
                  n = e;
                  w.fillCommands.drawCircle(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1],
                    n.buffer.f[n.fPos + 2]
                  );
                  h &&
                    w.strokeCommands.drawCircle(
                      n.buffer.f[n.fPos],
                      n.buffer.f[n.fPos + 1],
                      n.buffer.f[n.fPos + 2]
                    );
                  break;
                case 7:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.DRAW_ELLIPSE;
                  n = e;
                  w.fillCommands.drawEllipse(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1],
                    n.buffer.f[n.fPos + 2],
                    n.buffer.f[n.fPos + 3]
                  );
                  h &&
                    w.strokeCommands.drawEllipse(
                      n.buffer.f[n.fPos],
                      n.buffer.f[n.fPos + 1],
                      n.buffer.f[n.fPos + 2],
                      n.buffer.f[n.fPos + 3]
                    );
                  break;
                case 8:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.DRAW_QUADS;
                  n = e;
                  w.fillCommands.drawQuads(
                    n.buffer.o[n.oPos],
                    n.buffer.o[n.oPos + 1],
                    n.buffer.o[n.oPos + 2]
                  );
                  break;
                case 9:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.DRAW_RECT;
                  n = e;
                  w.fillCommands.drawRect(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1],
                    n.buffer.f[n.fPos + 2],
                    n.buffer.f[n.fPos + 3]
                  );
                  h &&
                    w.strokeCommands.drawRect(
                      n.buffer.f[n.fPos],
                      n.buffer.f[n.fPos + 1],
                      n.buffer.f[n.fPos + 2],
                      n.buffer.f[n.fPos + 3]
                    );
                  break;
                case 10:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.DRAW_ROUND_RECT;
                  n = e;
                  w.fillCommands.drawRoundRect(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1],
                    n.buffer.f[n.fPos + 2],
                    n.buffer.f[n.fPos + 3],
                    n.buffer.f[n.fPos + 4],
                    n.buffer.o[n.oPos]
                  );
                  h &&
                    w.strokeCommands.drawRoundRect(
                      n.buffer.f[n.fPos],
                      n.buffer.f[n.fPos + 1],
                      n.buffer.f[n.fPos + 2],
                      n.buffer.f[n.fPos + 3],
                      n.buffer.f[n.fPos + 4],
                      n.buffer.o[n.oPos]
                    );
                  break;
                case 12:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.DRAW_TRIANGLES;
                  n = e;
                  w.fillCommands.drawTriangles(
                    n.buffer.o[n.oPos],
                    n.buffer.o[n.oPos + 1],
                    n.buffer.o[n.oPos + 2],
                    n.buffer.o[n.oPos + 3]
                  );
                  break;
                case 13:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.END_FILL;
                  w.endFill();
                  w.endStroke();
                  h = w.hasFill = !1;
                  w.bitmapFill = null;
                  d = c = 0;
                  break;
                case 14:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.LINE_BITMAP_STYLE;
                  n = e;
                  h ||
                    (0 == c && 0 == d) ||
                    (w.strokeCommands.moveTo(c, d), (d = c = 0));
                  h = !0;
                  w.strokeCommands.lineBitmapStyle(
                    n.buffer.o[n.oPos],
                    n.buffer.o[n.oPos + 1],
                    n.buffer.b[n.bPos],
                    n.buffer.b[n.bPos + 1]
                  );
                  break;
                case 15:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.LINE_GRADIENT_STYLE;
                  n = e;
                  h ||
                    (0 == c && 0 == d) ||
                    (w.strokeCommands.moveTo(c, d), (d = c = 0));
                  h = !0;
                  w.strokeCommands.lineGradientStyle(
                    n.buffer.o[n.oPos],
                    n.buffer.ii[n.iiPos],
                    n.buffer.ff[n.ffPos],
                    n.buffer.ii[n.iiPos + 1],
                    n.buffer.o[n.oPos + 1],
                    n.buffer.o[n.oPos + 2],
                    n.buffer.o[n.oPos + 3],
                    n.buffer.f[n.fPos]
                  );
                  break;
                case 16:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.LINE_STYLE;
                  n = e;
                  h ||
                    null == n.buffer.o[n.oPos] ||
                    (0 == c && 0 == d) ||
                    (w.strokeCommands.moveTo(c, d), (d = c = 0));
                  h = null != n.buffer.o[n.oPos];
                  w.strokeCommands.lineStyle(
                    n.buffer.o[n.oPos],
                    n.buffer.i[n.iPos],
                    n.buffer.f[n.fPos],
                    n.buffer.b[n.bPos],
                    n.buffer.o[n.oPos + 1],
                    n.buffer.o[n.oPos + 2],
                    n.buffer.o[n.oPos + 3],
                    n.buffer.f[n.fPos + 1]
                  );
                  break;
                case 17:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.LINE_TO;
                  n = e;
                  w.fillCommands.lineTo(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1]
                  );
                  h
                    ? w.strokeCommands.lineTo(
                        n.buffer.f[n.fPos],
                        n.buffer.f[n.fPos + 1]
                      )
                    : ((c = n.buffer.f[n.fPos]), (d = n.buffer.f[n.fPos + 1]));
                  break;
                case 18:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.MOVE_TO;
                  n = e;
                  w.fillCommands.moveTo(
                    n.buffer.f[n.fPos],
                    n.buffer.f[n.fPos + 1]
                  );
                  h
                    ? w.strokeCommands.moveTo(
                        n.buffer.f[n.fPos],
                        n.buffer.f[n.fPos + 1]
                      )
                    : ((c = n.buffer.f[n.fPos]), (d = n.buffer.f[n.fPos + 1]));
                  break;
                case 19:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.OVERRIDE_BLEND_MODE;
                  n = e;
                  b.__setBlendModeContext(w.context, n.buffer.o[n.oPos]);
                  break;
                case 21:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.WINDING_EVEN_ODD;
                  w.fillCommands.windingEvenOdd();
                  w.windingRule = "evenodd";
                  break;
                case 22:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = qa.WINDING_NON_ZERO;
                  w.fillCommands.windingNonZero();
                  w.windingRule = "nonzero";
                  break;
                default:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1;
                  }
                  e.prev = n;
              }
            0 < w.fillCommands.get_length() && w.endFill();
            0 < w.strokeCommands.get_length() && w.endStroke();
            e.destroy();
            a.__bitmap = J.fromCanvas(a.__canvas);
          }
          a.__softwareDirty = !1;
          a.set___dirty(!1);
        }
      };
      w.renderMask = function (a, b) {
        if (0 != a.__commands.get_length()) {
          w.context = b.context;
          b = new mf(a.__commands);
          var c = 0;
          for (a = a.__commands.types; c < a.length; ) {
            var d = a[c];
            ++c;
            switch (d._hx_index) {
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.CUBIC_CURVE_TO;
                d = b;
                w.context.bezierCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0,
                  d.buffer.f[d.fPos + 4] - 0,
                  d.buffer.f[d.fPos + 5] - 0
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.CURVE_TO;
                d = b;
                w.context.quadraticCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.DRAW_CIRCLE;
                d = b;
                w.context.arc(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  0,
                  2 * Math.PI,
                  !0
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.DRAW_ELLIPSE;
                var e = b;
                d = e.buffer.f[e.fPos];
                var f = e.buffer.f[e.fPos + 1];
                var h = e.buffer.f[e.fPos + 2];
                var m = e.buffer.f[e.fPos + 3];
                d -= 0;
                f -= 0;
                e = (h / 2) * 0.5522848;
                var n = (m / 2) * 0.5522848;
                var p = d + h;
                var l = f + m;
                h = d + h / 2;
                m = f + m / 2;
                w.context.moveTo(d, m);
                w.context.bezierCurveTo(d, m - n, h - e, f, h, f);
                w.context.bezierCurveTo(h + e, f, p, m - n, p, m);
                w.context.bezierCurveTo(p, m + n, h + e, l, h, l);
                w.context.bezierCurveTo(h - e, l, d, m + n, d, m);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.DRAW_RECT;
                d = b;
                w.context.beginPath();
                w.context.rect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3]
                );
                w.context.closePath();
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.DRAW_ROUND_RECT;
                d = b;
                w.drawRoundRect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  d.buffer.o[d.oPos]
                );
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.LINE_TO;
                d = b;
                w.context.lineTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0
                );
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = qa.MOVE_TO;
                d = b;
                w.context.moveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0
                );
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = d;
            }
          }
          b.destroy();
        }
      };
      w.setSmoothing = function (a) {
        w.allowSmoothing || (a = !1);
        w.context.imageSmoothingEnabled != a &&
          (w.context.imageSmoothingEnabled = a);
      };
      var S = function () {};
      g["openfl.display._internal.CanvasTextField"] = S;
      S.__name__ = "openfl.display._internal.CanvasTextField";
      var Cf = function () {};
      g["openfl.display._internal.Context3DBitmap"] = Cf;
      Cf.__name__ = "openfl.display._internal.Context3DBitmap";
      Cf.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid
        ) {
          var c = b.__context3D;
          b.__setBlendMode(a.__worldBlendMode);
          b.__pushMaskObject(a);
          var d = b.__initDisplayShader(a.__worldShader);
          b.setShader(d);
          b.applyBitmapData(
            a.__bitmapData,
            b.__allowSmoothing && (a.smoothing || b.__upscaled)
          );
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.applyAlpha(a.__worldAlpha);
          b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          var e = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, e, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
          d = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(d);
          b.__clearShader();
          b.__popMaskObject(a);
        }
      };
      Cf.renderMask = function (a, b) {
        if (null != a.__bitmapData && a.__bitmapData.__isValid) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(gh.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.updateShader();
          var e = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, e, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
          a = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader();
        }
      };
      var xk = function (a, b, c, d) {
        this.context3D = a;
        this.elementType = b;
        this.dataPerVertex = d;
        this.vertexCount = this.indexCount = 0;
        this.resize(c);
      };
      g["openfl.display._internal.Context3DBuffer"] = xk;
      xk.__name__ = "openfl.display._internal.Context3DBuffer";
      xk.prototype = {
        flushVertexBufferData: function () {
          this.vertexBufferData.length > this.vertexCount &&
            ((this.vertexCount = this.vertexBufferData.length),
            (this.vertexBuffer = this.context3D.createVertexBuffer(
              this.vertexCount,
              this.dataPerVertex,
              0
            )));
          this.vertexBuffer.uploadFromTypedArray(
            aj.toArrayBufferView(this.vertexBufferData)
          );
        },
        resize: function (a, b) {
          null == b && (b = -1);
          this.elementCount = a;
          -1 == b && (b = this.dataPerVertex);
          b != this.dataPerVertex &&
            ((this.vertexBuffer = null),
            (this.vertexCount = 0),
            (this.dataPerVertex = b));
          var c = 0;
          switch (this.elementType._hx_index) {
            case 0:
              c = 4 * a;
              break;
            case 1:
              c = 3 * a;
              break;
            case 2:
              c = 3 * a;
          }
          b *= c;
          if (null == this.vertexBufferData) {
            var d = (c = null),
              e = null,
              f = null,
              h = null;
            this.vertexBufferData = b =
              null != b
                ? new Float32Array(b)
                : null != c
                ? new Float32Array(c)
                : null != d
                ? new Float32Array(d.__array)
                : null != e
                ? new Float32Array(e)
                : null != f
                ? null == h
                  ? new Float32Array(f, 0)
                  : new Float32Array(f, 0, h)
                : null;
          } else
            b > this.vertexBufferData.length &&
              ((a = this.vertexBufferData),
              (h = f = e = d = c = null),
              (this.vertexBufferData = b =
                null != b
                  ? new Float32Array(b)
                  : null != c
                  ? new Float32Array(c)
                  : null != d
                  ? new Float32Array(d.__array)
                  : null != e
                  ? new Float32Array(e)
                  : null != f
                  ? null == h
                    ? new Float32Array(f, 0)
                    : new Float32Array(f, 0, h)
                  : null),
              this.vertexBufferData.set(a));
        },
        __class__: xk,
      };
      var Hn = (z["openfl.display._internal.Context3DElementType"] = {
          __ename__: "openfl.display._internal.Context3DElementType",
          __constructs__: ["QUADS", "TRIANGLES", "TRIANGLE_INDICES"],
          QUADS: {
            _hx_index: 0,
            __enum__: "openfl.display._internal.Context3DElementType",
            toString: l,
          },
          TRIANGLES: {
            _hx_index: 1,
            __enum__: "openfl.display._internal.Context3DElementType",
            toString: l,
          },
          TRIANGLE_INDICES: {
            _hx_index: 2,
            __enum__: "openfl.display._internal.Context3DElementType",
            toString: l,
          },
        }),
        Fb = function () {};
      g["openfl.display._internal.Context3DGraphics"] = Fb;
      Fb.__name__ = "openfl.display._internal.Context3DGraphics";
      Fb.buildBuffer = function (a, b) {
        var c,
          d = (c = 0),
          e = 0,
          f = new mf(a.__commands);
        b = b.__context3D;
        for (
          var h = ma.__pool.get(),
            m = Ea.__pool.get(),
            n = null,
            p = 0,
            l = a.__commands.types;
          p < l.length;

        ) {
          var k = l[p];
          ++p;
          switch (k._hx_index) {
            case 0:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = qa.BEGIN_BITMAP_FILL;
              n = f;
              n = n.buffer.o[n.oPos];
              break;
            case 1:
              n = null;
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = k;
              break;
            case 3:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = qa.BEGIN_SHADER_FILL;
              n = f;
              k = n.buffer.o[n.oPos];
              n = null;
              if (null != k)
                for (var g = 0, u = k.inputCount; g < u; ) {
                  var q = g++;
                  if ("bitmap" == k.inputRefs[q].name) {
                    n = k.inputs[q];
                    break;
                  }
                }
              break;
            case 8:
              if (null != n) {
                switch (f.prev._hx_index) {
                  case 0:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 1:
                    f.iPos += 1;
                    f.fPos += 1;
                    break;
                  case 2:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 3:
                    f.oPos += 1;
                    break;
                  case 4:
                    f.fPos += 6;
                    break;
                  case 5:
                    f.fPos += 4;
                    break;
                  case 6:
                    f.fPos += 3;
                    break;
                  case 7:
                    f.fPos += 4;
                    break;
                  case 8:
                    f.oPos += 3;
                    break;
                  case 9:
                    f.fPos += 4;
                    break;
                  case 10:
                    f.fPos += 5;
                    f.oPos += 1;
                    break;
                  case 12:
                    f.oPos += 4;
                    break;
                  case 14:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 15:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 16:
                    f.oPos += 4;
                    f.iPos += 1;
                    f.fPos += 2;
                    f.bPos += 1;
                    break;
                  case 17:
                    f.fPos += 2;
                    break;
                  case 18:
                    f.fPos += 2;
                    break;
                  case 19:
                    f.oPos += 1;
                    break;
                  case 20:
                    f.oPos += 1;
                }
                f.prev = qa.DRAW_QUADS;
                u = f;
                k = u.buffer.o[u.oPos];
                g = u.buffer.o[u.oPos + 1];
                u = u.buffer.o[u.oPos + 2];
                q = null != g;
                var r = !1,
                  z = !1,
                  v = q ? g.get_length() : Math.floor(k.get_length() / 4);
                if (0 == v) return;
                null != u &&
                  (u.get_length() >= 6 * v
                    ? (z = r = !0)
                    : u.get_length() >= 4 * v
                    ? (r = !0)
                    : u.get_length() >= 2 * v && (z = !0));
                null == a.__quadBuffer
                  ? (a.__quadBuffer = new xk(b, Hn.QUADS, v, 4))
                  : a.__quadBuffer.resize(c + v, 4);
                for (
                  var y,
                    w,
                    O,
                    x,
                    t,
                    A,
                    C,
                    D,
                    G,
                    T,
                    H,
                    ca,
                    ra,
                    I,
                    Y = a.__quadBuffer.vertexBufferData,
                    E = n.width,
                    J = n.height,
                    B = 0,
                    K = v;
                  B < K;

                )
                  (x = B++),
                    (y = 16 * (c + x)),
                    (w = q ? 4 * g.get(x) : 4 * x),
                    0 > w ||
                      (h.setTo(
                        k.get(w),
                        k.get(w + 1),
                        k.get(w + 2),
                        k.get(w + 3)
                      ),
                      (w = h.width),
                      (O = h.height),
                      0 >= w ||
                        0 >= O ||
                        (r && z
                          ? ((x *= 6),
                            m.setTo(
                              u.get(x),
                              u.get(x + 1),
                              u.get(x + 2),
                              u.get(x + 3),
                              u.get(x + 4),
                              u.get(x + 5)
                            ))
                          : r
                          ? ((x *= 4),
                            m.setTo(
                              u.get(x),
                              u.get(x + 1),
                              u.get(x + 2),
                              u.get(x + 3),
                              h.x,
                              h.y
                            ))
                          : z
                          ? ((x *= 2), (m.tx = u.get(x)), (m.ty = u.get(x + 1)))
                          : ((m.tx = h.x), (m.ty = h.y)),
                        (x = h.x / E),
                        (t = h.y / J),
                        (A = h.get_right() / E),
                        (C = h.get_bottom() / J),
                        (D = 0 * m.a + 0 * m.c + m.tx),
                        (G = 0 * m.b + 0 * m.d + m.ty),
                        (T = w * m.a + 0 * m.c + m.tx),
                        (H = w * m.b + 0 * m.d + m.ty),
                        (ca = 0 * m.a + O * m.c + m.tx),
                        (ra = 0 * m.b + O * m.d + m.ty),
                        (I = w * m.a + O * m.c + m.tx),
                        (w = w * m.b + O * m.d + m.ty),
                        (Y[y] = D),
                        (Y[y + 1] = G),
                        (Y[y + 2] = x),
                        (Y[y + 3] = t),
                        (Y[y + 4] = T),
                        (Y[y + 4 + 1] = H),
                        (Y[y + 4 + 2] = A),
                        (Y[y + 4 + 3] = t),
                        (Y[y + 8] = ca),
                        (Y[y + 8 + 1] = ra),
                        (Y[y + 8 + 2] = x),
                        (Y[y + 8 + 3] = C),
                        (Y[y + 12] = I),
                        (Y[y + 12 + 1] = w),
                        (Y[y + 12 + 2] = A),
                        (Y[y + 12 + 3] = C)));
                c += v;
              }
              break;
            case 12:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = qa.DRAW_TRIANGLES;
              u = f;
              k = u.buffer.o[u.oPos];
              g = u.buffer.o[u.oPos + 1];
              u = u.buffer.o[u.oPos + 2];
              q = null != g;
              v = Math.floor(k.get_length() / 2);
              r = q ? g.get_length() : v;
              y = (v = (z = null != u) && u.get_length() >= 3 * v) ? 4 : 2;
              Y = v ? 3 : 2;
              E = y + 2;
              J = v ? e : d;
              Fb.resizeVertexBuffer(a, v, J + r * E);
              B = v ? a.__vertexBufferDataUVT : a.__vertexBufferData;
              O = 0;
              for (x = r; O < x; )
                (t = O++),
                  (K = J + t * E),
                  (w = q ? 2 * g.get(t) : 2 * t),
                  (t = q ? g.get(t) * Y : t * Y),
                  v
                    ? ((A = u.get(t + 2)),
                      (B[K] = k.get(w) / A),
                      (B[K + 1] = k.get(w + 1) / A),
                      (B[K + 2] = 0),
                      (B[K + 3] = 1 / A))
                    : ((B[K] = k.get(w)), (B[K + 1] = k.get(w + 1))),
                  (B[K + y] = z ? u.get(t) : 0),
                  (B[K + y + 1] = z ? u.get(t + 1) : 0);
              v ? (e += r * E) : (d += r * E);
              break;
            case 13:
              n = null;
              break;
            default:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = k;
          }
        }
        0 < c && a.__quadBuffer.flushVertexBufferData();
        if (0 < d) {
          c = a.__vertexBuffer;
          if (null == c || d > a.__vertexBufferCount)
            (c = b.createVertexBuffer(d, 4, 0)),
              (a.__vertexBuffer = c),
              (a.__vertexBufferCount = d);
          c.uploadFromTypedArray(aj.toArrayBufferView(a.__vertexBufferData));
        }
        if (0 < e) {
          c = a.__vertexBufferUVT;
          if (null == c || e > a.__vertexBufferCountUVT)
            (c = b.createVertexBuffer(e, 6, 0)),
              (a.__vertexBufferUVT = c),
              (a.__vertexBufferCountUVT = e);
          c.uploadFromTypedArray(aj.toArrayBufferView(a.__vertexBufferDataUVT));
        }
        ma.__pool.release(h);
        Ea.__pool.release(m);
      };
      Fb.isCompatible = function (a) {
        if (null != a.__owner.__worldScale9Grid) return !1;
        var b = new mf(a.__commands),
          c = !1,
          d = !1,
          e = !1,
          f = 0;
        for (a = a.__commands.types; f < a.length; ) {
          var h = a[f];
          ++f;
          switch (h._hx_index) {
            case 0:
              d = !0;
              e = c = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = h;
              break;
            case 1:
              d = !1;
              c = !0;
              e = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = h;
              break;
            case 3:
              c = d = !1;
              e = !0;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = h;
              break;
            case 8:
              if (d || e) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = h;
              } else return b.destroy(), !1;
              break;
            case 9:
              if (c) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = h;
              } else return b.destroy(), !1;
              break;
            case 12:
              if (d || e) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = h;
              } else return b.destroy(), !1;
              break;
            case 13:
              e = c = d = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = h;
              break;
            case 18:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = h;
              break;
            case 19:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = h;
              break;
            default:
              return b.destroy(), !1;
          }
        }
        b.destroy();
        return !0;
      };
      Fb.render = function (a, b) {
        if (a.__visible && 0 != a.__commands.get_length())
          if ((null != a.__bitmap && !a.__dirty) || !Fb.isCompatible(a)) {
            var c = b.__softwareRenderer.__worldTransform;
            b.__softwareRenderer.__worldTransform = b.__worldTransform;
            w.render(a, b.__softwareRenderer);
            b.__softwareRenderer.__worldTransform = c;
          } else {
            a.__bitmap = null;
            a.__update(b.__worldTransform);
            var d = a.__width,
              e = a.__height;
            if (null != a.__bounds && 1 <= d && 1 <= e) {
              (a.__hardwareDirty ||
                (null == a.__quadBuffer &&
                  null == a.__vertexBuffer &&
                  null == a.__vertexBufferUVT)) &&
                Fb.buildBuffer(a, b);
              c = new mf(a.__commands);
              for (
                var f = b.__context3D,
                  h = Ea.__pool.get(),
                  m = null,
                  n = null,
                  p = !1,
                  l = !1,
                  k = null,
                  g = 0,
                  u = 0,
                  q = 0,
                  r = 0,
                  z = 0,
                  v = a.__commands.types;
                z < v.length;

              )
                switch (((d = v[z]), ++z, d._hx_index)) {
                  case 0:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = qa.BEGIN_BITMAP_FILL;
                    l = c;
                    n = l.buffer.o[l.oPos];
                    p = l.buffer.b[l.bPos];
                    l = l.buffer.b[l.bPos + 1];
                    k = m = null;
                    break;
                  case 1:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = qa.BEGIN_FILL;
                    n = c;
                    k =
                      ((n.buffer.i[n.iPos] | 0) & 16777215) |
                      (((255 * n.buffer.f[n.fPos]) | 0) << 24);
                    n = m = null;
                    break;
                  case 3:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = qa.BEGIN_SHADER_FILL;
                    u = c;
                    m = u.buffer.o[u.oPos];
                    u = 0;
                    n =
                      null == m || null == m.shader || null == m.shader.__bitmap
                        ? null
                        : m.shader.__bitmap.input;
                    k = null;
                    break;
                  case 8:
                    if (null != n) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = qa.DRAW_QUADS;
                      var y = c;
                      d = y.buffer.o[y.oPos];
                      y = y.buffer.o[y.oPos + 1];
                      d =
                        null != y
                          ? y.get_length()
                          : Math.floor(d.get_length() / 4);
                      var x = b.__getMatrix(a.__owner.__renderTransform, 1);
                      null == m || Fb.maskRender
                        ? ((y = Fb.maskRender
                            ? b.__maskShader
                            : b.__initGraphicsShader(null)),
                          b.setShader(y),
                          b.applyMatrix(x),
                          b.applyBitmapData(n, l, p),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform
                          ),
                          b.updateShader())
                        : ((y = b.__initShaderBuffer(m)),
                          b.__setShaderBuffer(m),
                          b.applyMatrix(x),
                          b.applyBitmapData(n, !1, p),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform
                          ));
                      for (x = g + d; g < x; ) {
                        d = Math.min(x - g, f.__quadIndexBufferElements) | 0;
                        if (0 >= d) break;
                        null == m || Fb.maskRender || b.__updateShaderBuffer(u);
                        null != y.__position &&
                          f.setVertexBufferAt(
                            y.__position.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * g,
                            2
                          );
                        null != y.__textureCoord &&
                          f.setVertexBufferAt(
                            y.__textureCoord.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * g + 2,
                            2
                          );
                        f.drawTriangles(f.__quadIndexBuffer, 0, 2 * d);
                        u += 4 * d;
                        g += d;
                      }
                      b.__clearShader();
                    }
                    break;
                  case 9:
                    if (null != k) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = qa.DRAW_RECT;
                      var O = c;
                      y = O.buffer.f[O.fPos];
                      x = O.buffer.f[O.fPos + 1];
                      d = O.buffer.f[O.fPos + 2];
                      e = O.buffer.f[O.fPos + 3];
                      O = k;
                      Fb.tempColorTransform.redOffset = (O >>> 16) & 255;
                      Fb.tempColorTransform.greenOffset = (O >>> 8) & 255;
                      Fb.tempColorTransform.blueOffset = O & 255;
                      Fb.tempColorTransform.__combine(
                        a.__owner.__worldColorTransform
                      );
                      h.identity();
                      h.scale(d, e);
                      h.tx = y;
                      h.ty = x;
                      h.concat(a.__owner.__renderTransform);
                      d = Fb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(d);
                      b.applyMatrix(b.__getMatrix(h, 1));
                      b.applyBitmapData(Fb.blankBitmapData, !0, p);
                      b.applyAlpha(
                        (((O >>> 24) & 255) / 255) * a.__owner.__worldAlpha
                      );
                      b.applyColorTransform(Fb.tempColorTransform);
                      b.updateShader();
                      y = Fb.blankBitmapData.getVertexBuffer(f);
                      null != d.__position &&
                        f.setVertexBufferAt(d.__position.index, y, 0, 3);
                      null != d.__textureCoord &&
                        f.setVertexBufferAt(d.__textureCoord.index, y, 3, 2);
                      d = Fb.blankBitmapData.getIndexBuffer(f);
                      f.drawTriangles(d);
                      u += 4;
                      b.__clearShader();
                    }
                    break;
                  case 12:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = qa.DRAW_TRIANGLES;
                    e = c;
                    y = e.buffer.o[e.oPos + 1];
                    x = e.buffer.o[e.oPos + 2];
                    d = e.buffer.o[e.oPos + 3];
                    O = null != y;
                    e = Math.floor(e.buffer.o[e.oPos].get_length() / 2);
                    y = O ? y.get_length() : e;
                    O = (x = null != x && x.get_length() >= 3 * e) ? 4 : 2;
                    e = O + 2;
                    var t = x ? a.__vertexBufferUVT : a.__vertexBuffer,
                      A = x ? r : q,
                      C = b.__getMatrix(a.__owner.__renderTransform, 1);
                    if (null == m || Fb.maskRender) {
                      var D = Fb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(D);
                      b.applyMatrix(C);
                      b.applyBitmapData(n, l, p);
                      b.applyAlpha(a.__owner.__worldAlpha);
                      b.applyColorTransform(a.__owner.__worldColorTransform);
                      b.updateShader();
                    } else
                      (D = b.__initShaderBuffer(m)),
                        b.__setShaderBuffer(m),
                        b.applyMatrix(C),
                        b.applyBitmapData(n, !1, p),
                        b.applyAlpha(1),
                        b.applyColorTransform(null),
                        b.__updateShaderBuffer(u);
                    null != D.__position &&
                      f.setVertexBufferAt(D.__position.index, t, A, x ? 4 : 2);
                    null != D.__textureCoord &&
                      f.setVertexBufferAt(D.__textureCoord.index, t, A + O, 2);
                    switch (d) {
                      case 0:
                        f.setCulling(0);
                        break;
                      case 1:
                        f.setCulling(3);
                        break;
                      case 2:
                        f.setCulling(1);
                    }
                    f.__drawTriangles(0, y);
                    u += y;
                    x ? (r += e * y) : (q += e * y);
                    switch (d) {
                      case 1:
                      case 2:
                        f.setCulling(0);
                    }
                    b.__clearShader();
                    break;
                  case 13:
                    m = k = n = null;
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                    break;
                  case 18:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = qa.MOVE_TO;
                    break;
                  case 19:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = qa.OVERRIDE_BLEND_MODE;
                    d = c;
                    b.__setBlendMode(d.buffer.o[d.oPos]);
                    break;
                  default:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                }
              Ea.__pool.release(h);
            }
            a.__hardwareDirty = !1;
            a.set___dirty(!1);
          }
      };
      Fb.renderMask = function (a, b) {
        Fb.maskRender = !0;
        Fb.render(a, b);
        Fb.maskRender = !1;
      };
      Fb.resizeVertexBuffer = function (a, b, c) {
        var d = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
          e = null;
        if (null == d) {
          var f = (e = null),
            h = null,
            m = null,
            n = null;
          e = c =
            null != c
              ? new Float32Array(c)
              : null != e
              ? new Float32Array(e)
              : null != f
              ? new Float32Array(f.__array)
              : null != h
              ? new Float32Array(h)
              : null != m
              ? null == n
                ? new Float32Array(m, 0)
                : new Float32Array(m, 0, n)
              : null;
        } else
          c > d.length &&
            ((n = m = h = f = e = null),
            (e = c =
              null != c
                ? new Float32Array(c)
                : null != e
                ? new Float32Array(e)
                : null != f
                ? new Float32Array(f.__array)
                : null != h
                ? new Float32Array(h)
                : null != m
                ? null == n
                  ? new Float32Array(m, 0)
                  : new Float32Array(m, 0, n)
                : null),
            e.set(d));
        null != e &&
          (b ? (a.__vertexBufferDataUVT = e) : (a.__vertexBufferData = e));
      };
      var gh = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            "varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}");
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
        Vd.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g["openfl.display._internal.Context3DMaskShader"] = gh;
      gh.__name__ = "openfl.display._internal.Context3DMaskShader";
      gh.__super__ = Vd;
      gh.prototype = r(Vd.prototype, { __class__: gh });
      var Df = function () {};
      g["openfl.display._internal.Context3DShape"] = Df;
      Df.__name__ = "openfl.display._internal.Context3DShape";
      Df.render = function (a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha)) {
          var c = a.__graphics;
          if (null != c) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            Fb.render(c, b);
            if (null != c.__bitmap && c.__visible) {
              var d = b.__context3D,
                e = b.__initDisplayShader(a.__worldShader);
              b.setShader(e);
              b.applyBitmapData(c.__bitmap, !0);
              b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
              b.applyAlpha(a.__worldAlpha);
              b.applyColorTransform(a.__worldColorTransform);
              b.updateShader();
              var f = c.__bitmap.getVertexBuffer(d);
              null != e.__position &&
                d.setVertexBufferAt(e.__position.index, f, 0, 3);
              null != e.__textureCoord &&
                d.setVertexBufferAt(e.__textureCoord.index, f, 3, 2);
              c = c.__bitmap.getIndexBuffer(d);
              d.drawTriangles(c);
              b.__clearShader();
            }
            b.__popMaskObject(a);
          }
        }
      };
      Df.renderMask = function (a, b) {
        var c = a.__graphics;
        if (null != c && (Fb.renderMask(c, b), null != c.__bitmap)) {
          a = b.__context3D;
          var d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(c.__bitmap, !0);
          b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
          b.updateShader();
          var e = c.__bitmap.getVertexBuffer(a);
          null != d.__position &&
            a.setVertexBufferAt(d.__position.index, e, 0, 3);
          null != d.__textureCoord &&
            a.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
          c = c.__bitmap.getIndexBuffer(a);
          a.drawTriangles(c);
          b.__clearShader();
        }
      };
      var fi = function () {};
      g["openfl.display._internal.Context3DTextField"] = fi;
      fi.__name__ = "openfl.display._internal.Context3DTextField";
      fi.render = function (a, b) {
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = b.background || b.border ? b.bounds : b.textBounds,
          e = a.__graphics;
        a.__dirty &&
          (a.__updateLayout(),
          null == e.__bounds && (e.__bounds = new ma()),
          e.__bounds.copyFrom(d));
        e.__update(c.__worldTransform);
        if (a.__dirty || e.__softwareDirty) {
          var f = e.__width,
            h = e.__height;
          if (
            !(
              (null != b.text && "" != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            (a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1);
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement("canvas")),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext("2d")));
            S.context = e.__context;
            var m = e.__renderTransform;
            if (c.__isDOM) {
              var n = c.pixelRatio;
              e.__canvas.width = (f * n) | 0;
              e.__canvas.height = (h * n) | 0;
              e.__canvas.style.width = f + "px";
              e.__canvas.style.height = h + "px";
              f = Ea.__pool.get();
              f.copyFrom(m);
              f.scale(n, n);
              c.setTransform(f, S.context);
              Ea.__pool.release(f);
            } else
              (e.__canvas.width = f),
                (e.__canvas.height = h),
                S.context.setTransform(m.a, m.b, m.c, m.d, m.tx, m.ty);
            null == S.clearRect &&
              (S.clearRect =
                "undefined" !== typeof navigator &&
                "undefined" !== typeof navigator.isCocoonJS);
            S.clearRect &&
              S.context.clearRect(0, 0, e.__canvas.width, e.__canvas.height);
            if ((null != b.text && "" != b.text) || b.__hasFocus) {
              m = b.text;
              e.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                S.context.rect(0.5, 0.5, d.width - 1, d.height - 1);
                if (b.background) {
                  var p = K.hex(b.backgroundColor & 16777215, 6);
                  S.context.fillStyle = "#" + p;
                  S.context.fill();
                }
                b.border &&
                  ((S.context.lineWidth = 1),
                  (p = K.hex(b.borderColor & 16777215, 6)),
                  (S.context.strokeStyle = "#" + p),
                  S.context.stroke());
              }
              S.context.textBaseline = "alphabetic";
              S.context.textAlign = "start";
              c = -a.get_scrollH();
              var l = (n = 0);
              for (p = a.get_scrollV() - 1; l < p; ) {
                var k = l++;
                n -= b.lineHeights.get(k);
              }
              var g;
              for (f = b.layoutGroups.iterator(); f.hasNext(); )
                if (((h = f.next()), !(h.lineIndex < a.get_scrollV() - 1))) {
                  if (h.lineIndex > b.get_bottomScrollV() - 1) break;
                  var u = "#" + K.hex(h.format.color & 16777215, 6);
                  S.context.font = vb.getFont(h.format);
                  S.context.fillStyle = u;
                  S.context.fillText(
                    m.substring(h.startIndex, h.endIndex),
                    h.offsetX + c - d.x,
                    h.offsetY + h.ascent + n - d.y
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex
                      ) {
                        l = g = 0;
                        for (p = a.__caretIndex - h.startIndex; l < p; ) {
                          k = l++;
                          if (h.positions.length <= k) break;
                          g += h.positions[k];
                        }
                        l = 0;
                        p = a.get_scrollV();
                        for (k = h.lineIndex + 1; p < k; ) {
                          var q = p++;
                          l += b.lineHeights.get(q - 1);
                        }
                        S.context.beginPath();
                        p = K.hex(h.format.color & 16777215, 6);
                        S.context.strokeStyle = "#" + p;
                        S.context.moveTo(
                          h.offsetX + g - a.get_scrollH() - d.x,
                          l + 2 - d.y
                        );
                        S.context.lineWidth = 1;
                        S.context.lineTo(
                          h.offsetX + g - a.get_scrollH() - d.x,
                          l +
                            vb.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            d.y
                        );
                        S.context.stroke();
                        S.context.closePath();
                      }
                    } else if (
                      (h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex) ||
                      (h.startIndex <= a.__selectionIndex &&
                        h.endIndex >= a.__selectionIndex) ||
                      (h.startIndex > a.__caretIndex &&
                        h.endIndex < a.__selectionIndex) ||
                      (h.startIndex > a.__selectionIndex &&
                        h.endIndex < a.__caretIndex)
                    )
                      (g = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (l = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        h.startIndex > g && (g = h.startIndex),
                        h.endIndex < l && (l = h.endIndex),
                        (k = a.getCharBoundaries(g)),
                        l >= h.endIndex
                          ? ((p = a.getCharBoundaries(h.endIndex - 1)),
                            null != p && (p.x += p.width + 2))
                          : (p = a.getCharBoundaries(l)),
                        null != k &&
                          null != p &&
                          ((S.context.fillStyle = "#000000"),
                          S.context.fillRect(
                            k.x + c,
                            k.y + n,
                            p.x - k.x,
                            h.height
                          ),
                          (S.context.fillStyle = "#FFFFFF"),
                          S.context.fillText(
                            m.substring(g, l),
                            c + k.x,
                            h.offsetY + h.ascent + n
                          ));
                  h.format.underline &&
                    (S.context.beginPath(),
                    (S.context.strokeStyle = u),
                    (S.context.lineWidth = 1),
                    (u = h.offsetX + c - d.x),
                    (g = Math.floor(h.offsetY + n + h.ascent - d.y) + 0.5),
                    S.context.moveTo(u, g),
                    S.context.lineTo(u + h.width, g),
                    S.context.stroke(),
                    S.context.closePath());
                }
            } else {
              if (b.border || b.background)
                b.border
                  ? S.context.rect(0.5, 0.5, d.width - 1, d.height - 1)
                  : S.context.rect(0, 0, d.width, d.height),
                  b.background &&
                    ((p = K.hex(b.backgroundColor & 16777215, 6)),
                    (S.context.fillStyle = "#" + p),
                    S.context.fill()),
                  b.border &&
                    ((S.context.lineWidth = 1),
                    (S.context.lineCap = "square"),
                    (p = K.hex(b.borderColor & 16777215, 6)),
                    (S.context.strokeStyle = "#" + p),
                    S.context.stroke());
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH();
                l = n = 0;
                for (p = a.get_scrollV() - 1; l < p; )
                  (k = l++), (n += b.lineHeights.get(k));
                S.context.beginPath();
                p = K.hex(a.get_defaultTextFormat().color & 16777215, 6);
                S.context.strokeStyle = "#" + p;
                S.context.moveTo(c + 2.5, n + 2.5);
                S.context.lineWidth = 1;
                S.context.lineTo(
                  c + 2.5,
                  n + vb.getFormatHeight(a.get_defaultTextFormat()) - 1
                );
                S.context.stroke();
                S.context.closePath();
              }
            }
            e.__bitmap = J.fromCanvas(a.__graphics.__canvas);
            e.__visible = !0;
            a.__dirty = !1;
            e.__softwareDirty = !1;
            e.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      fi.renderMask = function (a, b) {
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = b.background || b.border ? b.bounds : b.textBounds,
          e = a.__graphics;
        a.__dirty &&
          (a.__updateLayout(),
          null == e.__bounds && (e.__bounds = new ma()),
          e.__bounds.copyFrom(d));
        e.__update(c.__worldTransform);
        if (a.__dirty || e.__softwareDirty) {
          var f = e.__width,
            h = e.__height;
          if (
            !(
              (null != b.text && "" != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            (a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1);
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement("canvas")),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext("2d")));
            S.context = e.__context;
            var m = e.__renderTransform;
            if (c.__isDOM) {
              var n = c.pixelRatio;
              e.__canvas.width = (f * n) | 0;
              e.__canvas.height = (h * n) | 0;
              e.__canvas.style.width = f + "px";
              e.__canvas.style.height = h + "px";
              f = Ea.__pool.get();
              f.copyFrom(m);
              f.scale(n, n);
              c.setTransform(f, S.context);
              Ea.__pool.release(f);
            } else
              (e.__canvas.width = f),
                (e.__canvas.height = h),
                S.context.setTransform(m.a, m.b, m.c, m.d, m.tx, m.ty);
            null == S.clearRect &&
              (S.clearRect =
                "undefined" !== typeof navigator &&
                "undefined" !== typeof navigator.isCocoonJS);
            S.clearRect &&
              S.context.clearRect(0, 0, e.__canvas.width, e.__canvas.height);
            if ((null != b.text && "" != b.text) || b.__hasFocus) {
              m = b.text;
              e.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                S.context.rect(0.5, 0.5, d.width - 1, d.height - 1);
                if (b.background) {
                  var p = K.hex(b.backgroundColor & 16777215, 6);
                  S.context.fillStyle = "#" + p;
                  S.context.fill();
                }
                b.border &&
                  ((S.context.lineWidth = 1),
                  (p = K.hex(b.borderColor & 16777215, 6)),
                  (S.context.strokeStyle = "#" + p),
                  S.context.stroke());
              }
              S.context.textBaseline = "alphabetic";
              S.context.textAlign = "start";
              c = -a.get_scrollH();
              var l = (n = 0);
              for (p = a.get_scrollV() - 1; l < p; ) {
                var k = l++;
                n -= b.lineHeights.get(k);
              }
              var g;
              for (f = b.layoutGroups.iterator(); f.hasNext(); )
                if (((h = f.next()), !(h.lineIndex < a.get_scrollV() - 1))) {
                  if (h.lineIndex > b.get_bottomScrollV() - 1) break;
                  var u = "#" + K.hex(h.format.color & 16777215, 6);
                  S.context.font = vb.getFont(h.format);
                  S.context.fillStyle = u;
                  S.context.fillText(
                    m.substring(h.startIndex, h.endIndex),
                    h.offsetX + c - d.x,
                    h.offsetY + h.ascent + n - d.y
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex
                      ) {
                        l = g = 0;
                        for (p = a.__caretIndex - h.startIndex; l < p; ) {
                          k = l++;
                          if (h.positions.length <= k) break;
                          g += h.positions[k];
                        }
                        l = 0;
                        p = a.get_scrollV();
                        for (k = h.lineIndex + 1; p < k; ) {
                          var q = p++;
                          l += b.lineHeights.get(q - 1);
                        }
                        S.context.beginPath();
                        p = K.hex(h.format.color & 16777215, 6);
                        S.context.strokeStyle = "#" + p;
                        S.context.moveTo(
                          h.offsetX + g - a.get_scrollH() - d.x,
                          l + 2 - d.y
                        );
                        S.context.lineWidth = 1;
                        S.context.lineTo(
                          h.offsetX + g - a.get_scrollH() - d.x,
                          l +
                            vb.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            d.y
                        );
                        S.context.stroke();
                        S.context.closePath();
                      }
                    } else if (
                      (h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex) ||
                      (h.startIndex <= a.__selectionIndex &&
                        h.endIndex >= a.__selectionIndex) ||
                      (h.startIndex > a.__caretIndex &&
                        h.endIndex < a.__selectionIndex) ||
                      (h.startIndex > a.__selectionIndex &&
                        h.endIndex < a.__caretIndex)
                    )
                      (g = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (l = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        h.startIndex > g && (g = h.startIndex),
                        h.endIndex < l && (l = h.endIndex),
                        (k = a.getCharBoundaries(g)),
                        l >= h.endIndex
                          ? ((p = a.getCharBoundaries(h.endIndex - 1)),
                            null != p && (p.x += p.width + 2))
                          : (p = a.getCharBoundaries(l)),
                        null != k &&
                          null != p &&
                          ((S.context.fillStyle = "#000000"),
                          S.context.fillRect(
                            k.x + c,
                            k.y + n,
                            p.x - k.x,
                            h.height
                          ),
                          (S.context.fillStyle = "#FFFFFF"),
                          S.context.fillText(
                            m.substring(g, l),
                            c + k.x,
                            h.offsetY + h.ascent + n
                          ));
                  h.format.underline &&
                    (S.context.beginPath(),
                    (S.context.strokeStyle = u),
                    (S.context.lineWidth = 1),
                    (u = h.offsetX + c - d.x),
                    (g = Math.floor(h.offsetY + n + h.ascent - d.y) + 0.5),
                    S.context.moveTo(u, g),
                    S.context.lineTo(u + h.width, g),
                    S.context.stroke(),
                    S.context.closePath());
                }
            } else {
              if (b.border || b.background)
                b.border
                  ? S.context.rect(0.5, 0.5, d.width - 1, d.height - 1)
                  : S.context.rect(0, 0, d.width, d.height),
                  b.background &&
                    ((p = K.hex(b.backgroundColor & 16777215, 6)),
                    (S.context.fillStyle = "#" + p),
                    S.context.fill()),
                  b.border &&
                    ((S.context.lineWidth = 1),
                    (S.context.lineCap = "square"),
                    (p = K.hex(b.borderColor & 16777215, 6)),
                    (S.context.strokeStyle = "#" + p),
                    S.context.stroke());
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH();
                l = n = 0;
                for (p = a.get_scrollV() - 1; l < p; )
                  (k = l++), (n += b.lineHeights.get(k));
                S.context.beginPath();
                p = K.hex(a.get_defaultTextFormat().color & 16777215, 6);
                S.context.strokeStyle = "#" + p;
                S.context.moveTo(c + 2.5, n + 2.5);
                S.context.lineWidth = 1;
                S.context.lineTo(
                  c + 2.5,
                  n + vb.getFormatHeight(a.get_defaultTextFormat()) - 1
                );
                S.context.stroke();
                S.context.closePath();
              }
            }
            e.__bitmap = J.fromCanvas(a.__graphics.__canvas);
            e.__visible = !0;
            a.__dirty = !1;
            e.__softwareDirty = !1;
            e.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      var Kc = function () {};
      g["openfl.display._internal.DOMBitmap"] = Kc;
      Kc.__name__ = "openfl.display._internal.DOMBitmap";
      Kc.clear = function (a, b) {
        null != a.__image &&
          (b.element.removeChild(a.__image),
          (a.__image = null),
          (a.__style = null));
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      Kc.renderCanvas = function (a, b) {
        null != a.__image &&
          (b.element.removeChild(a.__image), (a.__image = null));
        null == a.__canvas &&
          ((a.__canvas = window.document.createElement("canvas")),
          (a.__context = a.__canvas.getContext("2d")),
          (a.__imageVersion = -1),
          (b.__allowSmoothing && a.smoothing) ||
            (a.__context.imageSmoothingEnabled = !1),
          b.__initializeElement(a, a.__canvas));
        a.__imageVersion != a.__bitmapData.image.version &&
          (Oa.convertToCanvas(a.__bitmapData.image),
          (a.__canvas.width = a.__bitmapData.width + 1),
          (a.__canvas.width = a.__bitmapData.width),
          (a.__canvas.height = a.__bitmapData.height),
          a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0),
          (a.__imageVersion = a.__bitmapData.image.version));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      Kc.renderImage = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas), (a.__canvas = null));
        null == a.__image &&
          ((a.__image = window.document.createElement("img")),
          (a.__image.crossOrigin = "Anonymous"),
          (a.__image.src = a.__bitmapData.image.buffer.__srcImage.src),
          b.__initializeElement(a, a.__image));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      var Yk = function () {};
      g["openfl.display._internal.DOMDisplayObject"] = Yk;
      Yk.__name__ = "openfl.display._internal.DOMDisplayObject";
      Yk.clear = function (a, b) {
        null != a.__cacheBitmap && Kc.clear(a.__cacheBitmap, b);
        dg.clear(a, b);
      };
      var dg = function () {};
      g["openfl.display._internal.DOMShape"] = dg;
      dg.__name__ = "openfl.display._internal.DOMShape";
      dg.clear = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      var fc = function () {};
      g["openfl.display._internal.DOMTextField"] = fc;
      fc.__name__ = "openfl.display._internal.DOMTextField";
      fc.clear = function (a, b) {
        null != a.__div &&
          (b.element.removeChild(a.__div),
          (a.__div = null),
          (a.__style = null));
      };
      fc.__getAttributeMatch = function (a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3);
      };
      var mf = function (a) {
        this.buffer = a;
        this.bPos =
          this.iPos =
          this.fPos =
          this.oPos =
          this.ffPos =
          this.iiPos =
          this.tsPos =
            0;
        this.prev = qa.UNKNOWN;
      };
      g["openfl.display._internal.DrawCommandReader"] = mf;
      mf.__name__ = "openfl.display._internal.DrawCommandReader";
      mf.prototype = {
        destroy: function () {
          this.buffer = null;
          this.reset();
        },
        reset: function () {
          this.bPos =
            this.iPos =
            this.fPos =
            this.oPos =
            this.ffPos =
            this.iiPos =
            this.tsPos =
              0;
        },
        __class__: mf,
      };
      var qa = (z["openfl.display._internal.DrawCommandType"] = {
          __ename__: "openfl.display._internal.DrawCommandType",
          __constructs__:
            "BEGIN_BITMAP_FILL BEGIN_FILL BEGIN_GRADIENT_FILL BEGIN_SHADER_FILL CUBIC_CURVE_TO CURVE_TO DRAW_CIRCLE DRAW_ELLIPSE DRAW_QUADS DRAW_RECT DRAW_ROUND_RECT DRAW_TILES DRAW_TRIANGLES END_FILL LINE_BITMAP_STYLE LINE_GRADIENT_STYLE LINE_STYLE LINE_TO MOVE_TO OVERRIDE_BLEND_MODE OVERRIDE_MATRIX WINDING_EVEN_ODD WINDING_NON_ZERO UNKNOWN".split(
              " "
            ),
          BEGIN_BITMAP_FILL: {
            _hx_index: 0,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          BEGIN_FILL: {
            _hx_index: 1,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          BEGIN_GRADIENT_FILL: {
            _hx_index: 2,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          BEGIN_SHADER_FILL: {
            _hx_index: 3,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          CUBIC_CURVE_TO: {
            _hx_index: 4,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          CURVE_TO: {
            _hx_index: 5,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          DRAW_CIRCLE: {
            _hx_index: 6,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          DRAW_ELLIPSE: {
            _hx_index: 7,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          DRAW_QUADS: {
            _hx_index: 8,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          DRAW_RECT: {
            _hx_index: 9,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          DRAW_ROUND_RECT: {
            _hx_index: 10,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          DRAW_TILES: {
            _hx_index: 11,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          DRAW_TRIANGLES: {
            _hx_index: 12,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          END_FILL: {
            _hx_index: 13,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          LINE_BITMAP_STYLE: {
            _hx_index: 14,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          LINE_GRADIENT_STYLE: {
            _hx_index: 15,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          LINE_STYLE: {
            _hx_index: 16,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          LINE_TO: {
            _hx_index: 17,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          MOVE_TO: {
            _hx_index: 18,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          OVERRIDE_BLEND_MODE: {
            _hx_index: 19,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          OVERRIDE_MATRIX: {
            _hx_index: 20,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          WINDING_EVEN_ODD: {
            _hx_index: 21,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          WINDING_NON_ZERO: {
            _hx_index: 22,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
          UNKNOWN: {
            _hx_index: 23,
            __enum__: "openfl.display._internal.DrawCommandType",
            toString: l,
          },
        }),
        tg = function (a, b, c, d, e, f, h) {
          null == h && (h = !1);
          null == f && (f = !1);
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = 2);
          null == b && (b = 5);
          null == a && (a = 0);
          this.wrap = a;
          this.filter = b;
          this.mipfilter = c;
          this.lodBias = d;
          this.ignoreSampler = e;
          this.centroid = f;
          this.textureAlpha = h;
        };
      g["openfl.display._internal.SamplerState"] = tg;
      tg.__name__ = "openfl.display._internal.SamplerState";
      tg.prototype = {
        clone: function () {
          var a = new tg(
            this.wrap,
            this.filter,
            this.mipfilter,
            this.lodBias,
            this.ignoreSampler,
            this.centroid,
            this.textureAlpha
          );
          a.mipmapGenerated = this.mipmapGenerated;
          return a;
        },
        copyFrom: function (a) {
          null == a ||
            a.ignoreSampler ||
            ((this.wrap = a.wrap),
            (this.filter = a.filter),
            (this.mipfilter = a.mipfilter),
            (this.lodBias = a.lodBias),
            (this.centroid = a.centroid),
            (this.textureAlpha = a.textureAlpha));
        },
        equals: function (a) {
          return null == a
            ? !1
            : this.wrap == a.wrap &&
              this.filter == a.filter &&
              this.mipfilter == a.mipfilter &&
              this.lodBias == a.lodBias
            ? this.textureAlpha == a.textureAlpha
            : !1;
        },
        __class__: tg,
      };
      var rk = function () {
        this.inputRefs = [];
        this.inputFilter = [];
        this.inputMipFilter = [];
        this.inputs = [];
        this.inputWrap = [];
        this.overrideIntNames = [];
        this.overrideIntValues = [];
        this.overrideFloatNames = [];
        this.overrideFloatValues = [];
        this.overrideBoolNames = [];
        this.overrideBoolValues = [];
        this.paramLengths = [];
        this.paramPositions = [];
        this.paramRefs_Bool = [];
        this.paramRefs_Float = [];
        this.paramRefs_Int = [];
        this.paramTypes = [];
      };
      g["openfl.display._internal.ShaderBuffer"] = rk;
      rk.__name__ = "openfl.display._internal.ShaderBuffer";
      rk.prototype = {
        addBoolOverride: function (a, b) {
          this.overrideBoolNames[this.overrideBoolCount] = a;
          this.overrideBoolValues[this.overrideBoolCount] = b;
          this.overrideBoolCount++;
        },
        addFloatOverride: function (a, b) {
          this.overrideFloatNames[this.overrideFloatCount] = a;
          this.overrideFloatValues[this.overrideFloatCount] = b;
          this.overrideFloatCount++;
        },
        clearOverride: function () {
          this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
              0;
        },
        update: function (a) {
          this.paramIntCount =
            this.paramFloatCount =
            this.paramDataLength =
            this.paramCount =
            this.paramBoolCount =
            this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
            this.inputCount =
              0;
          this.shader = null;
          if (null != a) {
            a.__init();
            this.inputCount = a.__inputBitmapData.length;
            for (var b, c = 0, d = this.inputCount; c < d; ) {
              var e = c++;
              b = a.__inputBitmapData[e];
              this.inputs[e] = b.input;
              this.inputFilter[e] = b.filter;
              this.inputMipFilter[e] = b.mipFilter;
              this.inputRefs[e] = b;
              this.inputWrap[e] = b.wrap;
            }
            b = a.__paramBool.length;
            var f = a.__paramFloat.length,
              h = a.__paramInt.length;
            this.paramCount = b + f + h;
            this.paramBoolCount = b;
            this.paramFloatCount = f;
            this.paramIntCount = h;
            var m = 0;
            c = 0;
            for (d = b; c < d; ) {
              e = c++;
              var n = a.__paramBool[e];
              this.paramPositions[m] = this.paramDataLength;
              var p = null != n.value ? n.value.length : 0;
              this.paramLengths[m] = p;
              this.paramDataLength += p;
              this.paramTypes[m] = 0;
              this.paramRefs_Bool[e] = n;
              ++m;
            }
            c = 0;
            for (d = f; c < d; )
              (e = c++),
                (n = a.__paramFloat[e]),
                (this.paramPositions[m] = this.paramDataLength),
                (p = null != n.value ? n.value.length : 0),
                (this.paramLengths[m] = p),
                (this.paramDataLength += p),
                (this.paramTypes[m] = 1),
                (this.paramRefs_Float[e] = n),
                ++m;
            c = 0;
            for (d = h; c < d; )
              (e = c++),
                (n = a.__paramInt[e]),
                (this.paramPositions[m] = this.paramDataLength),
                (p = null != n.value ? n.value.length : 0),
                (this.paramLengths[m] = p),
                (this.paramDataLength += p),
                (this.paramTypes[m] = 2),
                (this.paramRefs_Int[e] = n),
                ++m;
            if (0 < this.paramDataLength)
              if (null == this.paramData) {
                c = this.paramDataLength;
                var l = (n = m = h = d = null);
                this.paramData = c =
                  null != c
                    ? new Float32Array(c)
                    : null != d
                    ? new Float32Array(d)
                    : null != h
                    ? new Float32Array(h.__array)
                    : null != m
                    ? new Float32Array(m)
                    : null != n
                    ? null == l
                      ? new Float32Array(n, 0)
                      : new Float32Array(n, 0, l)
                    : null;
              } else
                this.paramDataLength > this.paramData.length &&
                  ((c = this.paramDataLength),
                  (l = n = m = h = d = null),
                  (c =
                    null != c
                      ? new Float32Array(c)
                      : null != d
                      ? new Float32Array(d)
                      : null != h
                      ? new Float32Array(h.__array)
                      : null != m
                      ? new Float32Array(m)
                      : null != n
                      ? null == l
                        ? new Float32Array(n, 0)
                        : new Float32Array(n, 0, l)
                      : null),
                  c.set(this.paramData),
                  (this.paramData = c));
            c = l = n = m = h = 0;
            for (d = this.paramCount; c < d; )
              if (((e = c++), (p = this.paramLengths[e]), e < b)) {
                e = this.paramRefs_Bool[h];
                ++h;
                for (var k = 0; k < p; ) {
                  var g = k++;
                  this.paramData[l] = e.value[g] ? 1 : 0;
                  ++l;
                }
              } else if (e < b + f)
                for (e = this.paramRefs_Float[m], ++m, k = 0; k < p; )
                  (g = k++), (this.paramData[l] = e.value[g]), ++l;
              else
                for (e = this.paramRefs_Int[n], ++n, k = 0; k < p; )
                  (g = k++), (this.paramData[l] = e.value[g]), ++l;
            this.shader = a;
          }
        },
        __class__: rk,
      };
      var lb = function (a, b, c) {
        this.driverInfo = "OpenGL (Direct blitting)";
        this.backBufferHeight = this.backBufferWidth = 0;
        sa.call(this);
        this.__stage = a;
        this.__contextState = b;
        this.__stage3D = c;
        this.__context = a.window.context;
        this.gl = this.__context.webgl;
        null == this.__contextState && (this.__contextState = new gi());
        this.__state = new gi();
        var d;
        this.__vertexConstants = a = new Float32Array(512);
        this.__fragmentConstants = a = new Float32Array(512);
        var e = null;
        a = [1, 1, 1, 1];
        var f = (d = c = b = null);
        this.__positionScale = a =
          null != e
            ? new Float32Array(e)
            : null != a
            ? new Float32Array(a)
            : null != b
            ? new Float32Array(b.__array)
            : null != c
            ? new Float32Array(c)
            : null != d
            ? null == f
              ? new Float32Array(d, 0)
              : new Float32Array(d, 0, f)
            : null;
        this.__programs = new ea();
        -1 == lb.__glMaxViewportDims &&
          (lb.__glMaxViewportDims = this.gl.getParameter(
            this.gl.MAX_VIEWPORT_DIMS
          ));
        this.maxBackBufferHeight = this.maxBackBufferWidth =
          lb.__glMaxViewportDims;
        -1 == lb.__glMaxTextureMaxAnisotropy &&
          ((a = this.gl.getExtension("EXT_texture_filter_anisotropic")),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              "MAX_TEXTURE_MAX_ANISOTROPY_EXT"
            )) ||
            (a = this.gl.getExtension("MOZ_EXT_texture_filter_anisotropic")),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              "MAX_TEXTURE_MAX_ANISOTROPY_EXT"
            )) ||
            (a = this.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")),
          null != a
            ? ((lb.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT),
              (lb.__glMaxTextureMaxAnisotropy = this.gl.getParameter(
                a.MAX_TEXTURE_MAX_ANISOTROPY_EXT
              )))
            : ((lb.__glTextureMaxAnisotropy = 0),
              (lb.__glMaxTextureMaxAnisotropy = 0)));
        -1 == lb.__glDepthStencil &&
          (lb.__glDepthStencil = this.gl.DEPTH_STENCIL);
        -1 == lb.__glMemoryTotalAvailable &&
          ((a = this.gl.getExtension("NVX_gpu_memory_info")),
          null != a &&
            ((lb.__glMemoryTotalAvailable =
              a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX),
            (lb.__glMemoryCurrentAvailable =
              a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX)));
        null == lb.__driverInfo &&
          ((a = this.gl.getParameter(this.gl.VENDOR)),
          (b = this.gl.getParameter(this.gl.VERSION)),
          (c = this.gl.getParameter(this.gl.RENDERER)),
          (d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION)),
          (lb.__driverInfo =
            "OpenGL Vendor=" +
            a +
            " Version=" +
            b +
            " Renderer=" +
            c +
            " GLSL=" +
            d));
        this.driverInfo = lb.__driverInfo;
        this.__quadIndexBufferElements = 16383;
        e = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
        f = d = c = b = a = null;
        a =
          null != e
            ? new Uint16Array(e)
            : null != a
            ? new Uint16Array(a)
            : null != b
            ? new Uint16Array(b.__array)
            : null != c
            ? new Uint16Array(c)
            : null != d
            ? null == f
              ? new Uint16Array(d, 0)
              : new Uint16Array(d, 0, f)
            : null;
        d = c = b = 0;
        for (f = this.__quadIndexBufferElements; d < f; )
          d++,
            (a[b] = c),
            (a[b + 1] = c + 1),
            (a[b + 2] = c + 2),
            (a[b + 3] = c + 2),
            (a[b + 4] = c + 1),
            (a[b + 5] = c + 3),
            (b += 6),
            (c += 4);
        this.__quadIndexBuffer = this.createIndexBuffer(
          this.__quadIndexBufferCount
        );
        this.__quadIndexBuffer.uploadFromTypedArray(a);
      };
      g["openfl.display3D.Context3D"] = lb;
      lb.__name__ = "openfl.display3D.Context3D";
      lb.__super__ = sa;
      lb.prototype = r(sa.prototype, {
        clear: function (a, b, c, d, e, f, h) {
          null == h && (h = 7);
          null == f && (f = 0);
          null == e && (e = 1);
          null == d && (d = 1);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          var m = 0;
          if (0 != (h & 1)) {
            null == this.__state.renderToTexture &&
              (this.__stage.context3D != this ||
                this.__stage.__renderer.__cleared ||
                (this.__stage.__renderer.__cleared = !0),
              (this.__cleared = !0));
            m |= this.gl.COLOR_BUFFER_BIT;
            if (
              1 != this.__contextState.colorMaskRed ||
              1 != this.__contextState.colorMaskGreen ||
              1 != this.__contextState.colorMaskBlue ||
              1 != this.__contextState.colorMaskAlpha
            )
              this.gl.colorMask(!0, !0, !0, !0),
                (this.__contextState.colorMaskRed = !0),
                (this.__contextState.colorMaskGreen = !0),
                (this.__contextState.colorMaskBlue = !0),
                (this.__contextState.colorMaskAlpha = !0);
            this.gl.clearColor(a, b, c, d);
          }
          0 != (h & 2) &&
            ((m |= this.gl.DEPTH_BUFFER_BIT),
            1 != this.__contextState.depthMask &&
              (this.gl.depthMask(!0), (this.__contextState.depthMask = !0)),
            this.gl.clearDepth(e));
          0 != (h & 4) &&
            ((m |= this.gl.STENCIL_BUFFER_BIT),
            255 != this.__contextState.stencilWriteMask &&
              (this.gl.stencilMask(255),
              (this.__contextState.stencilWriteMask = 255)),
            this.gl.clearStencil(f),
            (this.__contextState.stencilWriteMask = 255));
          0 != m && (this.__setGLScissorTest(!1), this.gl.clear(m));
        },
        configureBackBuffer: function (a, b, c, d, e, f) {
          null == f && (f = !1);
          null == e && (e = !1);
          null == d && (d = !0);
          if (null == this.__stage3D)
            (this.backBufferWidth = a),
              (this.backBufferHeight = b),
              (this.__backBufferAntiAlias = c),
              (this.__state.backBufferEnableDepthAndStencil = d),
              (this.__backBufferWantsBestResolution = e),
              (this.__backBufferWantsBestResolutionOnBrowserZoom = f);
          else {
            if (
              null == this.__backBufferTexture ||
              this.backBufferWidth != a ||
              this.backBufferHeight != b
            ) {
              null != this.__backBufferTexture &&
                this.__backBufferTexture.dispose();
              null != this.__frontBufferTexture &&
                this.__frontBufferTexture.dispose();
              this.__backBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0
              );
              this.__frontBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0
              );
              null == this.__stage3D.__vertexBuffer &&
                (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
              var h = rb.toFloatVector(null, null, null, [
                a,
                b,
                0,
                1,
                1,
                0,
                b,
                0,
                0,
                1,
                a,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
              ]);
              this.__stage3D.__vertexBuffer.uploadFromVector(h, 0, 20);
              null == this.__stage3D.__indexBuffer &&
                ((this.__stage3D.__indexBuffer = this.createIndexBuffer(6)),
                (h = rb.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3])),
                this.__stage3D.__indexBuffer.uploadFromVector(h, 0, 6));
            }
            this.backBufferWidth = a;
            this.backBufferHeight = b;
            this.__backBufferAntiAlias = c;
            this.__state.backBufferEnableDepthAndStencil = d;
            this.__backBufferWantsBestResolution = e;
            this.__backBufferWantsBestResolutionOnBrowserZoom = f;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
            this.__frontBufferTexture.__getGLFramebuffer(d, c, 0);
          }
        },
        createIndexBuffer: function (a, b) {
          null == b && (b = 1);
          return new qm(this, a, b);
        },
        createProgram: function (a) {
          null == a && (a = 0);
          return new rm(this, a);
        },
        createRectangleTexture: function (a, b, c, d) {
          return new hi(this, a, b, In.toString(c), d);
        },
        createVertexBuffer: function (a, b, c) {
          null == c && (c = 1);
          return new sm(this, a, b, pn.toString(c));
        },
        drawTriangles: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          c = -1 == c ? a.__numIndices : 3 * c;
          this.__bindGLElementArrayBuffer(a.__id);
          this.gl.drawElements(
            this.gl.TRIANGLES,
            c,
            this.gl.UNSIGNED_SHORT,
            2 * b
          );
        },
        present: function () {
          this.setRenderToBackBuffer();
          if (null != this.__stage3D && null != this.__backBufferTexture) {
            this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
            var a = this.__backBufferTexture;
            this.__backBufferTexture = this.__frontBufferTexture;
            this.__frontBufferTexture = a;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(
                this.__state.backBufferEnableDepthAndStencil,
                this.__backBufferAntiAlias,
                0
              );
            this.__cleared = !1;
          }
          this.__present = !0;
        },
        setBlendFactors: function (a, b) {
          this.setBlendFactorsSeparate(a, b, a, b);
        },
        setBlendFactorsSeparate: function (a, b, c, d) {
          this.__state.blendSourceRGBFactor = a;
          this.__state.blendDestinationRGBFactor = b;
          this.__state.blendSourceAlphaFactor = c;
          this.__state.blendDestinationAlphaFactor = d;
          this.__setGLBlendEquation(this.gl.FUNC_ADD);
        },
        setColorMask: function (a, b, c, d) {
          this.__state.colorMaskRed = a;
          this.__state.colorMaskGreen = b;
          this.__state.colorMaskBlue = c;
          this.__state.colorMaskAlpha = d;
        },
        setCulling: function (a) {
          this.__state.culling = a;
        },
        setDepthTest: function (a, b) {
          this.__state.depthMask = a;
          this.__state.depthCompareMode = b;
        },
        setProgram: function (a) {
          this.__state.program = a;
          this.__state.shader = null;
          if (null != a)
            for (var b = 0, c = a.__samplerStates.length; b < c; ) {
              var d = b++;
              null == this.__state.samplerStates[d]
                ? (this.__state.samplerStates[d] = a.__samplerStates[d].clone())
                : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d]);
            }
        },
        setProgramConstantsFromMatrix: function (a, b, c, d) {
          null == d && (d = !1);
          if (
            null != this.__state.program &&
            1 == this.__state.program.__format
          )
            this.__flushGLProgram(),
              (a = new Float32Array(16)),
              (a[0] = c.rawData.get(0)),
              (a[1] = c.rawData.get(1)),
              (a[2] = c.rawData.get(2)),
              (a[3] = c.rawData.get(3)),
              (a[4] = c.rawData.get(4)),
              (a[5] = c.rawData.get(5)),
              (a[6] = c.rawData.get(6)),
              (a[7] = c.rawData.get(7)),
              (a[8] = c.rawData.get(8)),
              (a[9] = c.rawData.get(9)),
              (a[10] = c.rawData.get(10)),
              (a[11] = c.rawData.get(11)),
              (a[12] = c.rawData.get(12)),
              (a[13] = c.rawData.get(13)),
              (a[14] = c.rawData.get(14)),
              (a[15] = c.rawData.get(15)),
              yc.uniformMatrix4fv(this.gl, b, d, a);
          else {
            var e = (a = 1 == a)
              ? this.__vertexConstants
              : this.__fragmentConstants;
            c = c.rawData;
            var f = 4 * b;
            d
              ? ((e[f++] = c.get(0)),
                (e[f++] = c.get(4)),
                (e[f++] = c.get(8)),
                (e[f++] = c.get(12)),
                (e[f++] = c.get(1)),
                (e[f++] = c.get(5)),
                (e[f++] = c.get(9)),
                (e[f++] = c.get(13)),
                (e[f++] = c.get(2)),
                (e[f++] = c.get(6)),
                (e[f++] = c.get(10)),
                (e[f++] = c.get(14)),
                (e[f++] = c.get(3)),
                (e[f++] = c.get(7)),
                (e[f++] = c.get(11)))
              : ((e[f++] = c.get(0)),
                (e[f++] = c.get(1)),
                (e[f++] = c.get(2)),
                (e[f++] = c.get(3)),
                (e[f++] = c.get(4)),
                (e[f++] = c.get(5)),
                (e[f++] = c.get(6)),
                (e[f++] = c.get(7)),
                (e[f++] = c.get(8)),
                (e[f++] = c.get(9)),
                (e[f++] = c.get(10)),
                (e[f++] = c.get(11)),
                (e[f++] = c.get(12)),
                (e[f++] = c.get(13)),
                (e[f++] = c.get(14)));
            e[f++] = c.get(15);
            null != this.__state.program &&
              this.__state.program.__markDirty(a, b, 4);
          }
        },
        setRenderToBackBuffer: function () {
          this.__state.renderToTexture = null;
        },
        setRenderToTexture: function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          this.__state.renderToTexture = a;
          this.__state.renderToTextureDepthStencil = b;
          this.__state.renderToTextureAntiAlias = c;
          this.__state.renderToTextureSurfaceSelector = d;
        },
        setSamplerStateAt: function (a, b, c, d) {
          null == this.__state.samplerStates[a] &&
            (this.__state.samplerStates[a] = new tg());
          a = this.__state.samplerStates[a];
          a.wrap = b;
          a.filter = c;
          a.mipfilter = d;
        },
        setScissorRectangle: function (a) {
          null != a
            ? ((this.__state.scissorEnabled = !0),
              this.__state.scissorRectangle.copyFrom(a))
            : (this.__state.scissorEnabled = !1);
        },
        setStencilActions: function (a, b, c, d, e) {
          null == e && (e = 5);
          null == d && (d = 5);
          null == c && (c = 5);
          null == b && (b = 0);
          null == a && (a = 2);
          this.__state.stencilTriangleFace = a;
          this.__state.stencilCompareMode = b;
          this.__state.stencilPass = c;
          this.__state.stencilDepthFail = d;
          this.__state.stencilFail = e;
        },
        setStencilReferenceValue: function (a, b, c) {
          null == c && (c = 255);
          null == b && (b = 255);
          this.__state.stencilReferenceValue = a;
          this.__state.stencilReadMask = b;
          this.__state.stencilWriteMask = c;
        },
        setTextureAt: function (a, b) {
          this.__state.textures[a] = b;
        },
        setVertexBufferAt: function (a, b, c, d) {
          null == d && (d = 4);
          null == c && (c = 0);
          if (null == b)
            this.gl.disableVertexAttribArray(a), this.__bindGLArrayBuffer(null);
          else
            switch (
              (this.__bindGLArrayBuffer(b.__id),
              this.gl.enableVertexAttribArray(a),
              (c *= 4),
              d)
            ) {
              case 0:
                this.gl.vertexAttribPointer(
                  a,
                  4,
                  this.gl.UNSIGNED_BYTE,
                  !0,
                  b.__stride,
                  c
                );
                break;
              case 1:
                this.gl.vertexAttribPointer(
                  a,
                  1,
                  this.gl.FLOAT,
                  !1,
                  b.__stride,
                  c
                );
                break;
              case 2:
                this.gl.vertexAttribPointer(
                  a,
                  2,
                  this.gl.FLOAT,
                  !1,
                  b.__stride,
                  c
                );
                break;
              case 3:
                this.gl.vertexAttribPointer(
                  a,
                  3,
                  this.gl.FLOAT,
                  !1,
                  b.__stride,
                  c
                );
                break;
              case 4:
                this.gl.vertexAttribPointer(
                  a,
                  4,
                  this.gl.FLOAT,
                  !1,
                  b.__stride,
                  c
                );
                break;
              default:
                throw C.thrown(new Jc());
            }
        },
        __bindGLArrayBuffer: function (a) {
          this.__contextState.__currentGLArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a),
            (this.__contextState.__currentGLArrayBuffer = a));
        },
        __bindGLElementArrayBuffer: function (a) {
          this.__contextState.__currentGLElementArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a),
            (this.__contextState.__currentGLElementArrayBuffer = a));
        },
        __bindGLFramebuffer: function (a) {
          this.__contextState.__currentGLFramebuffer != a &&
            (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a),
            (this.__contextState.__currentGLFramebuffer = a));
        },
        __bindGLTexture2D: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_2D, a);
          this.__contextState.__currentGLTexture2D = a;
        },
        __bindGLTextureCubeMap: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
          this.__contextState.__currentGLTextureCubeMap = a;
        },
        __dispose: function () {
          this.driverInfo += " (Disposed)";
          null != this.__stage3D &&
            ((this.__stage3D.__indexBuffer = null),
            (this.__stage3D.__vertexBuffer = null),
            (this.__stage3D = this.__stage3D.context3D = null));
          this.__positionScale =
            this.__frontBufferTexture =
            this.__fragmentConstants =
            this.__renderStage3DProgram =
            this.__context =
            this.__backBufferTexture =
              null;
          this.__present = !1;
          this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null;
        },
        __drawTriangles: function (a, b) {
          null == a && (a = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          this.gl.drawArrays(this.gl.TRIANGLES, a, b);
        },
        __flushGL: function () {
          this.__flushGLProgram();
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          this.__flushGLBlend();
          if (
            this.__contextState.colorMaskRed != this.__state.colorMaskRed ||
            this.__contextState.colorMaskGreen != this.__state.colorMaskGreen ||
            this.__contextState.colorMaskBlue != this.__state.colorMaskBlue ||
            this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha
          )
            this.gl.colorMask(
              this.__state.colorMaskRed,
              this.__state.colorMaskGreen,
              this.__state.colorMaskBlue,
              this.__state.colorMaskAlpha
            ),
              (this.__contextState.colorMaskRed = this.__state.colorMaskRed),
              (this.__contextState.colorMaskGreen =
                this.__state.colorMaskGreen),
              (this.__contextState.colorMaskBlue = this.__state.colorMaskBlue),
              (this.__contextState.colorMaskAlpha =
                this.__state.colorMaskAlpha);
          this.__flushGLCulling();
          this.__flushGLDepth();
          this.__flushGLScissor();
          this.__flushGLStencil();
          this.__flushGLTextures();
        },
        __flushGLBlend: function () {
          if (
            this.__contextState.blendDestinationRGBFactor !=
              this.__state.blendDestinationRGBFactor ||
            this.__contextState.blendSourceRGBFactor !=
              this.__state.blendSourceRGBFactor ||
            this.__contextState.blendDestinationAlphaFactor !=
              this.__state.blendDestinationAlphaFactor ||
            this.__contextState.blendSourceAlphaFactor !=
              this.__state.blendSourceAlphaFactor
          )
            this.__setGLBlend(!0),
              this.__state.blendDestinationRGBFactor ==
                this.__state.blendDestinationAlphaFactor &&
              this.__state.blendSourceRGBFactor ==
                this.__state.blendSourceAlphaFactor
                ? this.gl.blendFunc(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor)
                  )
                : this.gl.blendFuncSeparate(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                    this.__getGLBlend(this.__state.blendSourceAlphaFactor),
                    this.__getGLBlend(this.__state.blendDestinationAlphaFactor)
                  ),
              (this.__contextState.blendDestinationRGBFactor =
                this.__state.blendDestinationRGBFactor),
              (this.__contextState.blendSourceRGBFactor =
                this.__state.blendSourceRGBFactor),
              (this.__contextState.blendDestinationAlphaFactor =
                this.__state.blendDestinationAlphaFactor),
              (this.__contextState.blendSourceAlphaFactor =
                this.__state.blendSourceAlphaFactor);
        },
        __flushGLCulling: function () {
          if (this.__contextState.culling != this.__state.culling) {
            if (3 == this.__state.culling) this.__setGLCullFace(!1);
            else
              switch ((this.__setGLCullFace(!0), this.__state.culling)) {
                case 0:
                  this.gl.cullFace(this.gl.BACK);
                  break;
                case 1:
                  this.gl.cullFace(this.gl.FRONT);
                  break;
                case 2:
                  this.gl.cullFace(this.gl.FRONT_AND_BACK);
                  break;
                case 3:
                  break;
                default:
                  throw C.thrown(new Jc());
              }
            this.__contextState.culling = this.__state.culling;
          }
        },
        __flushGLDepth: function () {
          var a =
            this.__state.depthMask &&
            (null != this.__state.renderToTexture
              ? this.__state.renderToTextureDepthStencil
              : this.__state.backBufferEnableDepthAndStencil);
          this.__contextState.depthMask != a &&
            (this.gl.depthMask(a), (this.__contextState.depthMask = a));
          if (
            this.__contextState.depthCompareMode !=
            this.__state.depthCompareMode
          ) {
            switch (this.__state.depthCompareMode) {
              case 0:
                this.gl.depthFunc(this.gl.ALWAYS);
                break;
              case 1:
                this.gl.depthFunc(this.gl.EQUAL);
                break;
              case 2:
                this.gl.depthFunc(this.gl.GREATER);
                break;
              case 3:
                this.gl.depthFunc(this.gl.GEQUAL);
                break;
              case 4:
                this.gl.depthFunc(this.gl.LESS);
                break;
              case 5:
                this.gl.depthFunc(this.gl.LEQUAL);
                break;
              case 6:
                this.gl.depthFunc(this.gl.NEVER);
                break;
              case 7:
                this.gl.depthFunc(this.gl.NOTEQUAL);
                break;
              default:
                throw C.thrown(new Jc());
            }
            this.__contextState.depthCompareMode =
              this.__state.depthCompareMode;
          }
        },
        __flushGLFramebuffer: function () {
          if (null != this.__state.renderToTexture) {
            if (
              this.__contextState.renderToTexture !=
                this.__state.renderToTexture ||
              this.__contextState.renderToTextureSurfaceSelector !=
                this.__state.renderToTextureSurfaceSelector
            ) {
              var a = this.__state.renderToTexture.__getGLFramebuffer(
                this.__state.renderToTextureDepthStencil,
                this.__state.renderToTextureAntiAlias,
                this.__state.renderToTextureSurfaceSelector
              );
              this.__bindGLFramebuffer(a);
              this.__contextState.renderToTexture =
                this.__state.renderToTexture;
              this.__contextState.renderToTextureAntiAlias =
                this.__state.renderToTextureAntiAlias;
              this.__contextState.renderToTextureDepthStencil =
                this.__state.renderToTextureDepthStencil;
              this.__contextState.renderToTextureSurfaceSelector =
                this.__state.renderToTextureSurfaceSelector;
            }
            this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
            this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
            this.__setGLFrontFace(!0);
          } else {
            if (
              null == this.__stage &&
              0 == this.backBufferWidth &&
              0 == this.backBufferHeight
            )
              throw C.thrown(
                new Cb("Context3D backbuffer has not been configured")
              );
            if (
              null != this.__contextState.renderToTexture ||
              this.__contextState.__currentGLFramebuffer !=
                this.__state.__primaryGLFramebuffer ||
              this.__contextState.backBufferEnableDepthAndStencil !=
                this.__state.backBufferEnableDepthAndStencil
            )
              this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer),
                (this.__contextState.renderToTexture = null),
                (this.__contextState.backBufferEnableDepthAndStencil =
                  this.__state.backBufferEnableDepthAndStencil);
            this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
            this.__setGLStencilTest(
              this.__state.backBufferEnableDepthAndStencil
            );
            this.__setGLFrontFace(this.__stage.context3D != this);
          }
        },
        __flushGLProgram: function () {
          var a = this.__state.shader,
            b = this.__state.program;
          this.__contextState.shader != a &&
            (null != this.__contextState.shader &&
              this.__contextState.shader.__disable(),
            null != a && a.__enable(),
            (this.__contextState.shader = a));
          this.__contextState.program != b &&
            (null != this.__contextState.program &&
              this.__contextState.program.__disable(),
            null != b && b.__enable(),
            (this.__contextState.program = b));
          null != b &&
            0 == b.__format &&
            ((this.__positionScale[1] =
              this.__stage.context3D == this &&
              null == this.__state.renderToTexture
                ? 1
                : -1),
            b.__setPositionScale(this.__positionScale));
        },
        __flushGLScissor: function () {
          if (this.__state.scissorEnabled) {
            this.__setGLScissorTest(!0);
            this.__contextState.scissorEnabled = !0;
            var a = this.__state.scissorRectangle.x | 0,
              b = this.__state.scissorRectangle.y | 0,
              c = this.__state.scissorRectangle.width | 0,
              d = this.__state.scissorRectangle.height | 0;
            null == this.__state.renderToTexture &&
              null == this.__stage3D &&
              (b =
                ((this.__stage.window.__height * this.__stage.window.__scale) |
                  0) -
                (this.__state.scissorRectangle.height | 0) -
                b);
            if (
              this.__contextState.scissorRectangle.x != a ||
              this.__contextState.scissorRectangle.y != b ||
              this.__contextState.scissorRectangle.width != c ||
              this.__contextState.scissorRectangle.height != d
            )
              this.gl.scissor(a, b, c, d),
                this.__contextState.scissorRectangle.setTo(a, b, c, d);
          } else
            this.__contextState.scissorEnabled != this.__state.scissorEnabled &&
              (this.__setGLScissorTest(!1),
              (this.__contextState.scissorEnabled = !1));
        },
        __flushGLStencil: function () {
          if (
            this.__contextState.stencilTriangleFace !=
              this.__state.stencilTriangleFace ||
            this.__contextState.stencilPass != this.__state.stencilPass ||
            this.__contextState.stencilDepthFail !=
              this.__state.stencilDepthFail ||
            this.__contextState.stencilFail != this.__state.stencilFail
          )
            this.gl.stencilOpSeparate(
              this.__getGLTriangleFace(this.__state.stencilTriangleFace),
              this.__getGLStencilAction(this.__state.stencilFail),
              this.__getGLStencilAction(this.__state.stencilDepthFail),
              this.__getGLStencilAction(this.__state.stencilPass)
            ),
              (this.__contextState.stencilTriangleFace =
                this.__state.stencilTriangleFace),
              (this.__contextState.stencilPass = this.__state.stencilPass),
              (this.__contextState.stencilDepthFail =
                this.__state.stencilDepthFail),
              (this.__contextState.stencilFail = this.__state.stencilFail);
          this.__contextState.stencilWriteMask !=
            this.__state.stencilWriteMask &&
            (this.gl.stencilMask(this.__state.stencilWriteMask),
            (this.__contextState.stencilWriteMask =
              this.__state.stencilWriteMask));
          if (
            this.__contextState.stencilCompareMode !=
              this.__state.stencilCompareMode ||
            this.__contextState.stencilReferenceValue !=
              this.__state.stencilReferenceValue ||
            this.__contextState.stencilReadMask != this.__state.stencilReadMask
          )
            this.gl.stencilFunc(
              this.__getGLCompareMode(this.__state.stencilCompareMode),
              this.__state.stencilReferenceValue,
              this.__state.stencilReadMask
            ),
              (this.__contextState.stencilCompareMode =
                this.__state.stencilCompareMode),
              (this.__contextState.stencilReferenceValue =
                this.__state.stencilReferenceValue),
              (this.__contextState.stencilReadMask =
                this.__state.stencilReadMask);
        },
        __flushGLTextures: function () {
          for (
            var a = 0, b, c, d = 0, e = this.__state.textures.length;
            d < e;

          ) {
            var f = d++;
            b = this.__state.textures[f];
            c = this.__state.samplerStates[f];
            null == c &&
              ((this.__state.samplerStates[f] = new tg()),
              (c = this.__state.samplerStates[f]));
            this.gl.activeTexture(this.gl.TEXTURE0 + a);
            null != b
              ? (b.__textureTarget == this.gl.TEXTURE_2D
                  ? this.__bindGLTexture2D(b.__getTexture())
                  : this.__bindGLTextureCubeMap(b.__getTexture()),
                (this.__contextState.textures[f] = b),
                b.__setSamplerState(c))
              : this.__bindGLTexture2D(null);
            null != this.__state.program &&
              0 == this.__state.program.__format &&
              c.textureAlpha &&
              (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4),
              null != b && null != b.__alphaTexture
                ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D
                    ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture())
                    : this.__bindGLTextureCubeMap(
                        b.__alphaTexture.__getTexture()
                      ),
                  b.__alphaTexture.__setSamplerState(c),
                  this.gl.uniform1i(
                    this.__state.program.__agalAlphaSamplerEnabled[a].location,
                    1
                  ))
                : (this.__bindGLTexture2D(null),
                  null != this.__state.program.__agalAlphaSamplerEnabled[a] &&
                    this.gl.uniform1i(
                      this.__state.program.__agalAlphaSamplerEnabled[a]
                        .location,
                      0
                    )));
            ++a;
          }
        },
        __flushGLViewport: function () {
          if (null == this.__state.renderToTexture)
            if (this.__stage.context3D == this) {
              var a = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
                b =
                  (this.__stage.window.__height * this.__stage.window.__scale -
                    this.backBufferHeight -
                    (null == this.__stage3D ? 0 : this.__stage3D.get_y())) |
                  0;
              this.gl.viewport(
                a,
                b,
                this.backBufferWidth,
                this.backBufferHeight
              );
            } else
              this.gl.viewport(
                0,
                0,
                this.backBufferWidth,
                this.backBufferHeight
              );
          else
            (b = a = 0),
              this.__state.renderToTexture instanceof yk
                ? ((b = this.__state.renderToTexture),
                  (a = b.__width),
                  (b = b.__height))
                : this.__state.renderToTexture instanceof hi
                ? ((b = this.__state.renderToTexture),
                  (a = b.__width),
                  (b = b.__height))
                : this.__state.renderToTexture instanceof zk &&
                  ((b = this.__state.renderToTexture), (b = a = b.__size)),
              this.gl.viewport(0, 0, a, b);
        },
        __getGLBlend: function (a) {
          switch (a) {
            case 0:
              return this.gl.DST_ALPHA;
            case 1:
              return this.gl.DST_COLOR;
            case 2:
              return this.gl.ONE;
            case 3:
              return this.gl.ONE_MINUS_DST_ALPHA;
            case 4:
              return this.gl.ONE_MINUS_DST_COLOR;
            case 5:
              return this.gl.ONE_MINUS_SRC_ALPHA;
            case 6:
              return this.gl.ONE_MINUS_SRC_COLOR;
            case 7:
              return this.gl.SRC_ALPHA;
            case 8:
              return this.gl.SRC_COLOR;
            case 9:
              return this.gl.ZERO;
            default:
              throw C.thrown(new Jc());
          }
        },
        __getGLCompareMode: function (a) {
          switch (a) {
            case 0:
              return this.gl.ALWAYS;
            case 1:
              return this.gl.EQUAL;
            case 2:
              return this.gl.GREATER;
            case 3:
              return this.gl.GEQUAL;
            case 4:
              return this.gl.LESS;
            case 5:
              return this.gl.LEQUAL;
            case 6:
              return this.gl.NEVER;
            case 7:
              return this.gl.NOTEQUAL;
            default:
              return this.gl.EQUAL;
          }
        },
        __getGLStencilAction: function (a) {
          switch (a) {
            case 0:
              return this.gl.DECR;
            case 1:
              return this.gl.DECR_WRAP;
            case 2:
              return this.gl.INCR;
            case 3:
              return this.gl.INCR_WRAP;
            case 4:
              return this.gl.INVERT;
            case 5:
              return this.gl.KEEP;
            case 6:
              return this.gl.REPLACE;
            case 7:
              return this.gl.ZERO;
            default:
              return this.gl.KEEP;
          }
        },
        __getGLTriangleFace: function (a) {
          switch (a) {
            case 0:
              return this.gl.BACK;
            case 1:
              return this.gl.FRONT;
            case 2:
              return this.gl.FRONT_AND_BACK;
            case 3:
              return this.gl.NONE;
            default:
              return this.gl.FRONT_AND_BACK;
          }
        },
        __renderStage3D: function (a) {
          var b = a.context3D;
          if (
            null != b &&
            b != this &&
            null != b.__frontBufferTexture &&
            a.visible &&
            0 < this.backBufferHeight &&
            0 < this.backBufferWidth
          ) {
            if (null == this.__renderStage3DProgram) {
              var c = new ka();
              c.assemble(qn.toString(1), "m44 op, va0, vc0\nmov v0, va1");
              var d = new ka();
              d.assemble(
                qn.toString(0),
                "tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1"
              );
              this.__renderStage3DProgram = this.createProgram();
              this.__renderStage3DProgram.upload(c.agalcode, d.agalcode);
            }
            this.setProgram(this.__renderStage3DProgram);
            this.setBlendFactors(2, 9);
            this.setColorMask(!0, !0, !0, !0);
            this.setCulling(3);
            this.setDepthTest(!1, 0);
            this.setStencilActions();
            this.setStencilReferenceValue(0, 0, 0);
            this.setScissorRectangle(null);
            this.setTextureAt(0, b.__frontBufferTexture);
            this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
            this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
            this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
            this.drawTriangles(a.__indexBuffer);
            this.__present = !0;
          }
        },
        __setGLBlend: function (a) {
          this.__contextState.__enableGLBlend != a &&
            (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND),
            (this.__contextState.__enableGLBlend = a));
        },
        __setGLBlendEquation: function (a) {
          this.__contextState.__glBlendEquation != a &&
            (this.gl.blendEquation(a),
            (this.__contextState.__glBlendEquation = a));
        },
        __setGLCullFace: function (a) {
          this.__contextState.__enableGLCullFace != a &&
            (a
              ? this.gl.enable(this.gl.CULL_FACE)
              : this.gl.disable(this.gl.CULL_FACE),
            (this.__contextState.__enableGLCullFace = a));
        },
        __setGLDepthTest: function (a) {
          this.__contextState.__enableGLDepthTest != a &&
            (a
              ? this.gl.enable(this.gl.DEPTH_TEST)
              : this.gl.disable(this.gl.DEPTH_TEST),
            (this.__contextState.__enableGLDepthTest = a));
        },
        __setGLFrontFace: function (a) {
          this.__contextState.__frontFaceGLCCW != a &&
            (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW),
            (this.__contextState.__frontFaceGLCCW = a));
        },
        __setGLScissorTest: function (a) {
          this.__contextState.__enableGLScissorTest != a &&
            (a
              ? this.gl.enable(this.gl.SCISSOR_TEST)
              : this.gl.disable(this.gl.SCISSOR_TEST),
            (this.__contextState.__enableGLScissorTest = a));
        },
        __setGLStencilTest: function (a) {
          this.__contextState.__enableGLStencilTest != a &&
            (a
              ? this.gl.enable(this.gl.STENCIL_TEST)
              : this.gl.disable(this.gl.STENCIL_TEST),
            (this.__contextState.__enableGLStencilTest = a));
        },
        __class__: lb,
      });
      var pn = {
          fromString: function (a) {
            switch (a) {
              case "dynamicDraw":
                return 0;
              case "staticDraw":
                return 1;
              default:
                return null;
            }
          },
          toString: function (a) {
            switch (a) {
              case 0:
                return "dynamicDraw";
              case 1:
                return "staticDraw";
              default:
                return null;
            }
          },
        },
        qn = {
          toString: function (a) {
            switch (a) {
              case 0:
                return "fragment";
              case 1:
                return "vertex";
              default:
                return null;
            }
          },
        },
        In = {
          toString: function (a) {
            switch (a) {
              case 0:
                return "bgrPacked565";
              case 1:
                return "bgra";
              case 2:
                return "bgraPacked4444";
              case 3:
                return "compressed";
              case 4:
                return "compressedAlpha";
              case 5:
                return "rgbaHalfFloat";
              default:
                return null;
            }
          },
        },
        qm = function (a, b, c) {
          this.__context = a;
          this.__numIndices = b;
          a = this.__context.gl;
          this.__id = a.createBuffer();
          this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
        };
      g["openfl.display3D.IndexBuffer3D"] = qm;
      qm.__name__ = "openfl.display3D.IndexBuffer3D";
      qm.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLElementArrayBuffer(this.__id),
            yc.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            var d = b + c,
              e = this.__tempUInt16Array;
            if (
              null == this.__tempUInt16Array ||
              this.__tempUInt16Array.length < c
            )
              (this.__tempUInt16Array = null != c ? new Uint16Array(c) : null),
                null != e && this.__tempUInt16Array.set(e);
            for (c = b; c < d; )
              (e = c++), (this.__tempUInt16Array[e - b] = a.get(e));
            this.uploadFromTypedArray(this.__tempUInt16Array);
          }
        },
        __class__: qm,
      };
      var rm = function (a, b) {
        this.__context = a;
        this.__format = b;
        0 == this.__format
          ? ((this.__agalSamplerUsageMask = 0),
            (this.__agalUniforms = new A()),
            (this.__agalSamplerUniforms = new A()),
            (this.__agalAlphaSamplerUniforms = new A()),
            (this.__agalAlphaSamplerEnabled = []))
          : ((this.__glslAttribNames = []),
            (this.__glslAttribTypes = []),
            (this.__glslSamplerNames = []),
            (this.__glslUniformLocations = []),
            (this.__glslUniformNames = []),
            (this.__glslUniformTypes = []));
        this.__samplerStates = [];
      };
      g["openfl.display3D.Program3D"] = rm;
      rm.__name__ = "openfl.display3D.Program3D";
      rm.prototype = {
        upload: function (a, b) {
          if (0 == this.__format) {
            var c = [];
            a = Vc.convertToGLSL(a, null);
            b = Vc.convertToGLSL(b, c);
            5 == Pa.level &&
              (Pa.info(a, {
                fileName: "openfl/display3D/Program3D.hx",
                lineNumber: 399,
                className: "openfl.display3D.Program3D",
                methodName: "upload",
              }),
              Pa.info(b, {
                fileName: "openfl/display3D/Program3D.hx",
                lineNumber: 400,
                className: "openfl.display3D.Program3D",
                methodName: "upload",
              }));
            this.__deleteShaders();
            this.__uploadFromGLSL(a, b);
            this.__buildAGALUniformList();
            b = 0;
            for (a = c.length; b < a; ) {
              var d = b++;
              this.__samplerStates[d] = c[d];
            }
          }
        },
        __buildAGALUniformList: function () {
          if (1 != this.__format) {
            var a = this.__context.gl;
            this.__agalUniforms.clear();
            this.__agalSamplerUniforms.clear();
            this.__agalAlphaSamplerUniforms.clear();
            this.__agalAlphaSamplerEnabled = [];
            this.__agalSamplerUsageMask = 0;
            var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
            for (var c = new A(), d = new A(), e = 0; e < b; ) {
              var f = e++,
                h = a.getActiveUniform(this.__glProgram, f),
                m = h.name,
                n = h.size,
                p = h.type;
              h = new Ak(this.__context);
              h.name = m;
              h.size = n;
              h.type = p;
              h.location = a.getUniformLocation(this.__glProgram, h.name);
              m = h.name.indexOf("[");
              0 <= m && (h.name = h.name.substring(0, m));
              switch (h.type) {
                case 35674:
                  h.regCount = 2;
                  break;
                case 35675:
                  h.regCount = 3;
                  break;
                case 35676:
                  h.regCount = 4;
                  break;
                default:
                  h.regCount = 1;
              }
              h.regCount *= h.size;
              this.__agalUniforms.add(h);
              if ("vcPositionScale" == h.name) this.__agalPositionScale = h;
              else if (K.startsWith(h.name, "vc"))
                (h.regIndex = I.parseInt(h.name.substring(2))),
                  (h.regData = this.__context.__vertexConstants),
                  c.add(h);
              else if (K.startsWith(h.name, "fc"))
                (h.regIndex = I.parseInt(h.name.substring(2))),
                  (h.regData = this.__context.__fragmentConstants),
                  d.add(h);
              else if (
                K.startsWith(h.name, "sampler") &&
                -1 == h.name.indexOf("alpha")
              )
                for (
                  h.regIndex = I.parseInt(h.name.substring(7)),
                    this.__agalSamplerUniforms.add(h),
                    m = 0,
                    n = h.regCount;
                  m < n;

                )
                  (p = m++),
                    (this.__agalSamplerUsageMask |= 1 << (h.regIndex + p));
              else
                K.startsWith(h.name, "sampler") && K.endsWith(h.name, "_alpha")
                  ? ((m = h.name.indexOf("_") - 7),
                    (h.regIndex = I.parseInt(h.name.substring(7, 7 + m)) + 4),
                    this.__agalAlphaSamplerUniforms.add(h))
                  : K.startsWith(h.name, "sampler") &&
                    K.endsWith(h.name, "_alphaEnabled") &&
                    ((h.regIndex = I.parseInt(h.name.substring(7))),
                    (this.__agalAlphaSamplerEnabled[h.regIndex] = h));
              5 == Pa.level &&
                Pa.verbose(
                  "" +
                    f +
                    " name:" +
                    h.name +
                    " type:" +
                    h.type +
                    " size:" +
                    h.size +
                    " location:" +
                    I.string(h.location),
                  {
                    fileName: "openfl/display3D/Program3D.hx",
                    lineNumber: 577,
                    className: "openfl.display3D.Program3D",
                    methodName: "__buildAGALUniformList",
                  }
                );
            }
            this.__agalVertexUniformMap = new ii(vh.array(c));
            this.__agalFragmentUniformMap = new ii(vh.array(d));
          }
        },
        __deleteShaders: function () {
          var a = this.__context.gl;
          null != this.__glProgram && (this.__glProgram = null);
          null != this.__glVertexShader &&
            (a.deleteShader(this.__glVertexShader),
            (this.__glVertexShader = null));
          null != this.__glFragmentShader &&
            (a.deleteShader(this.__glFragmentShader),
            (this.__glFragmentShader = null));
        },
        __disable: function () {},
        __enable: function () {
          var a = this.__context.gl;
          a.useProgram(this.__glProgram);
          if (0 == this.__format) {
            this.__agalVertexUniformMap.markAllDirty();
            this.__agalFragmentUniformMap.markAllDirty();
            for (var b = this.__agalSamplerUniforms.h; null != b; ) {
              var c = b.item;
              b = b.next;
              if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
              else
                throw C.thrown(new Jc("!!! TODO: uniform location on webgl"));
            }
            for (b = this.__agalAlphaSamplerUniforms.h; null != b; )
              if (((c = b.item), (b = b.next), 1 == c.regCount))
                a.uniform1i(c.location, c.regIndex);
              else
                throw C.thrown(new Jc("!!! TODO: uniform location on webgl"));
          }
        },
        __flush: function () {
          0 == this.__format &&
            (this.__agalVertexUniformMap.flush(),
            this.__agalFragmentUniformMap.flush());
        },
        __markDirty: function (a, b, c) {
          1 != this.__format &&
            (a
              ? this.__agalVertexUniformMap.markDirty(b, c)
              : this.__agalFragmentUniformMap.markDirty(b, c));
        },
        __setPositionScale: function (a) {
          1 != this.__format &&
            null != this.__agalPositionScale &&
            this.__context.gl.uniform4fv(this.__agalPositionScale.location, a);
        },
        __uploadFromGLSL: function (a, b) {
          var c = this.__context.gl;
          this.__glVertexSource = a;
          this.__glFragmentSource = b;
          this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
          c.shaderSource(this.__glVertexShader, a);
          c.compileShader(this.__glVertexShader);
          if (
            0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)
          ) {
            var d =
              "Error compiling vertex shader\n" +
              c.getShaderInfoLog(this.__glVertexShader);
            Pa.error(d + ("\n" + a), {
              fileName: "openfl/display3D/Program3D.hx",
              lineNumber: 869,
              className: "openfl.display3D.Program3D",
              methodName: "__uploadFromGLSL",
            });
          }
          this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
          c.shaderSource(this.__glFragmentShader, b);
          c.compileShader(this.__glFragmentShader);
          0 ==
            c.getShaderParameter(this.__glFragmentShader, c.COMPILE_STATUS) &&
            ((d =
              "Error compiling fragment shader\n" +
              c.getShaderInfoLog(this.__glFragmentShader)),
            Pa.error(d + ("\n" + b), {
              fileName: "openfl/display3D/Program3D.hx",
              lineNumber: 881,
              className: "openfl.display3D.Program3D",
              methodName: "__uploadFromGLSL",
            }));
          this.__glProgram = c.createProgram();
          if (0 == this.__format)
            for (b = 0; 16 > b; ) {
              var e = b++;
              d = "va" + e;
              -1 != a.indexOf(" " + d) &&
                c.bindAttribLocation(this.__glProgram, e, d);
            }
          else
            for (b = 0, a = this.__glslAttribNames; b < a.length; )
              if (
                ((d = a[b]),
                ++b,
                -1 < d.indexOf("Position") && K.startsWith(d, "openfl_"))
              ) {
                c.bindAttribLocation(this.__glProgram, 0, d);
                break;
              }
          c.attachShader(this.__glProgram, this.__glVertexShader);
          c.attachShader(this.__glProgram, this.__glFragmentShader);
          c.linkProgram(this.__glProgram);
          0 == c.getProgramParameter(this.__glProgram, c.LINK_STATUS) &&
            ((d =
              "Unable to initialize the shader program\n" +
              c.getProgramInfoLog(this.__glProgram)),
            Pa.error(d, {
              fileName: "openfl/display3D/Program3D.hx",
              lineNumber: 922,
              className: "openfl.display3D.Program3D",
              methodName: "__uploadFromGLSL",
            }));
        },
        __class__: rm,
      };
      var Ak = function (a) {
        this.context = a;
        this.isDirty = !0;
        this.regDataPointer = new mm(null, 0);
      };
      g["openfl.display3D.Uniform"] = Ak;
      Ak.__name__ = "openfl.display3D.Uniform";
      Ak.prototype = {
        flush: function () {
          var a = this.context.gl,
            b = 4 * this.regIndex;
          switch (this.type) {
            case 35664:
              Bn.uniform2fv(
                a,
                this.location,
                this.regData.subarray(b, b + 2 * this.regCount)
              );
              break;
            case 35665:
              var c = this.location;
              b = this.regData.subarray(b, b + 3 * this.regCount);
              var d = null;
              null != d ? a.uniform3fv(c, b, d, null) : a.uniform3fv(c, b);
              break;
            case 35666:
              c = this.location;
              b = this.regData.subarray(b, b + 4 * this.regCount);
              d = null;
              null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b);
              break;
            case 35674:
              yc.uniformMatrix2fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 4 * this.size)
              );
              break;
            case 35675:
              yc.uniformMatrix3fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 9 * this.size)
              );
              break;
            case 35676:
              yc.uniformMatrix4fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 16 * this.size)
              );
              break;
            default:
              (c = this.location),
                (b = this.regData.subarray(b, b + 4 * this.regCount)),
                (d = null),
                null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b);
          }
        },
        __class__: Ak,
      };
      var ii = function (a) {
        this.__uniforms = a;
        this.__uniforms.sort(function (a, b) {
          return ia.compare(a.regIndex, b.regIndex);
        });
        var b = 0;
        a = 0;
        for (var c = this.__uniforms; a < c.length; ) {
          var d = c[a];
          ++a;
          d.regIndex + d.regCount > b && (b = d.regIndex + d.regCount);
        }
        this.__registerLookup = rb.toObjectVector(null, b);
        a = 0;
        for (c = this.__uniforms; a < c.length; ) {
          d = c[a];
          ++a;
          b = 0;
          for (var e = d.regCount; b < e; ) {
            var f = b++;
            this.__registerLookup.set(d.regIndex + f, d);
          }
        }
        this.__anyDirty = this.__allDirty = !0;
      };
      g["openfl.display3D.UniformMap"] = ii;
      ii.__name__ = "openfl.display3D.UniformMap";
      ii.prototype = {
        flush: function () {
          if (this.__anyDirty) {
            for (var a = 0, b = this.__uniforms; a < b.length; ) {
              var c = b[a];
              ++a;
              if (this.__allDirty || c.isDirty) c.flush(), (c.isDirty = !1);
            }
            this.__anyDirty = this.__allDirty = !1;
          }
        },
        markAllDirty: function () {
          this.__anyDirty = this.__allDirty = !0;
        },
        markDirty: function (a, b) {
          if (!this.__allDirty)
            for (
              b = a + b,
                b > this.__registerLookup.get_length() &&
                  (b = this.__registerLookup.get_length());
              a < b;

            ) {
              var c = this.__registerLookup.get(a);
              null != c
                ? ((this.__anyDirty = c.isDirty = !0),
                  (a = c.regIndex + c.regCount))
                : ++a;
            }
        },
        __class__: ii,
      };
      var sm = function (a, b, c, d) {
        this.__context = a;
        this.__numVertices = b;
        this.__vertexSize = c;
        a = this.__context.gl;
        this.__id = a.createBuffer();
        this.__stride = 4 * this.__vertexSize;
        this.__usage = 0 == pn.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
      };
      g["openfl.display3D.VertexBuffer3D"] = sm;
      sm.__name__ = "openfl.display3D.VertexBuffer3D";
      sm.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLArrayBuffer(this.__id),
            yc.bufferData(b, b.ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            b *= this.__vertexSize;
            var d = c * this.__vertexSize;
            c = b + d;
            var e = this.__tempFloat32Array;
            if (
              null == this.__tempFloat32Array ||
              this.__tempFloat32Array.length < d
            )
              (this.__tempFloat32Array =
                null != d ? new Float32Array(d) : null),
                null != e && this.__tempFloat32Array.set(e);
            for (d = b; d < c; )
              (e = d++), (this.__tempFloat32Array[e - b] = a.get(e));
            this.uploadFromTypedArray(
              aj.toArrayBufferView(this.__tempFloat32Array)
            );
          }
        },
        __class__: sm,
      };
      var gi = function () {
        this.backBufferEnableDepthAndStencil = !1;
        this.blendDestinationAlphaFactor = 9;
        this.blendSourceAlphaFactor = 2;
        this.blendDestinationRGBFactor = 9;
        this.blendSourceRGBFactor = 2;
        this.colorMaskAlpha =
          this.colorMaskBlue =
          this.colorMaskGreen =
          this.colorMaskRed =
            !0;
        this.culling = 3;
        this.depthCompareMode = 4;
        this.depthMask = !0;
        this.samplerStates = [];
        this.scissorRectangle = new ma();
        this.stencilCompareMode = 0;
        this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
        this.stencilReadMask = 255;
        this.stencilReferenceValue = 0;
        this.stencilTriangleFace = 2;
        this.stencilWriteMask = 255;
        this.textures = [];
        this.__frontFaceGLCCW = !0;
        this.__glBlendEquation = 32774;
      };
      g["openfl.display3D._internal.Context3DState"] = gi;
      gi.__name__ = "openfl.display3D._internal.Context3DState";
      gi.prototype = { __class__: gi };
      var Vc = function () {};
      g["openfl.display3D._internal.agal.AGALConverter"] = Vc;
      Vc.__name__ = "openfl.display3D._internal.agal.AGALConverter";
      Vc.prefixFromType = function (a, b) {
        switch (a) {
          case 0:
            return "va";
          case 1:
            return b == ug.VERTEX ? "vc" : "fc";
          case 2:
            return b == ug.VERTEX ? "vt" : "ft";
          case 3:
            return "output_";
          case 4:
            return "v";
          case 5:
            return "sampler";
          default:
            throw C.thrown(new Jc("Invalid data!"));
        }
      };
      Vc.readUInt64 = function (a) {
        var b = a.readInt();
        a = a.readInt();
        return new eb(a, b);
      };
      Vc.convertToGLSL = function (a, b) {
        a.position = 0;
        a.__endian = 1;
        var c = a.readByte() & 255;
        if (176 == c) return a.readUTF();
        if (160 != c)
          throw C.thrown(new Jc("Magic value must be 0xA0, may not be AGAL"));
        var d = a.readInt();
        if (1 != d) throw C.thrown(new Jc("Version must be 1"));
        if (161 != (a.readByte() & 255))
          throw C.thrown(new Jc("Shader type ID must be 0xA1"));
        c = 0 == (a.readByte() & 255) ? ug.VERTEX : ug.FRAGMENT;
        for (var e = new Bk(), f = ""; ; ) {
          d = a.position;
          if (!Hc.gt(bl.get_length(a), d)) break;
          var h = a.readInt();
          d = a.readUnsignedInt();
          var m = Vc.readUInt64(a),
            n = Vc.readUInt64(a);
          d = ih.parse(d, c);
          m = vg.parse(m, c, d.mask);
          var p = vg.parse(n, c, d.mask);
          f += "\t";
          switch (h) {
            case 0:
              f += I.string(d.toGLSL() + " = " + m.toGLSL() + "; // mov");
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 1:
              f += I.string(
                d.toGLSL() +
                  " = " +
                  m.toGLSL() +
                  " + " +
                  p.toGLSL() +
                  "; // add"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 2:
              f += I.string(
                d.toGLSL() +
                  " = " +
                  m.toGLSL() +
                  " - " +
                  p.toGLSL() +
                  "; // sub"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 3:
              f += I.string(
                d.toGLSL() +
                  " = " +
                  m.toGLSL() +
                  " * " +
                  p.toGLSL() +
                  "; // mul"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 4:
              f += I.string(
                d.toGLSL() +
                  " = " +
                  m.toGLSL() +
                  " / " +
                  p.toGLSL() +
                  "; // div"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 5:
              f =
                -1 < m.toGLSL().indexOf(".")
                  ? f +
                    I.string(d.toGLSL() + " = 1.0 / " + m.toGLSL() + "; // rcp")
                  : f +
                    I.string(
                      d.toGLSL() + " = vec4(1) / " + m.toGLSL() + "; // rcp"
                    );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 6:
              f += I.string(
                d.toGLSL() +
                  " = min(" +
                  m.toGLSL() +
                  ", " +
                  p.toGLSL() +
                  "); // min"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 7:
              f += I.string(
                d.toGLSL() +
                  " = max(" +
                  m.toGLSL() +
                  ", " +
                  p.toGLSL() +
                  "); // max"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 8:
              f += I.string(
                d.toGLSL() + " = fract(" + m.toGLSL() + "); // frc"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 9:
              f += I.string(
                d.toGLSL() + " = sqrt(" + m.toGLSL() + "); // sqrt"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 10:
              f += I.string(
                d.toGLSL() + " = inversesqrt(" + m.toGLSL() + "); // rsq"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 11:
              f += I.string(
                d.toGLSL() +
                  " = pow(" +
                  m.toGLSL() +
                  ", " +
                  p.toGLSL() +
                  "); // pow"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 12:
              f += I.string(d.toGLSL() + " = log2(" + m.toGLSL() + "); // log");
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 13:
              f += I.string(d.toGLSL() + " = exp2(" + m.toGLSL() + "); // exp");
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 14:
              f += I.string(
                d.toGLSL() + " = normalize(" + m.toGLSL() + "); // normalize"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 15:
              f += I.string(d.toGLSL() + " = sin(" + m.toGLSL() + "); // sin");
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 16:
              f += I.string(d.toGLSL() + " = cos(" + m.toGLSL() + "); // cos");
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 17:
              m.sourceMask = p.sourceMask = 7;
              f += I.string(
                d.toGLSL() +
                  " = cross(vec3(" +
                  m.toGLSL() +
                  "), vec3(" +
                  p.toGLSL() +
                  ")); // crs"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 18:
              m.sourceMask = p.sourceMask = 7;
              f += I.string(
                d.toGLSL() +
                  " = vec4(dot(vec3(" +
                  m.toGLSL() +
                  "), vec3(" +
                  p.toGLSL() +
                  ")))" +
                  d.getWriteMask() +
                  "; // dp3"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 19:
              m.sourceMask = p.sourceMask = 15;
              f += I.string(
                d.toGLSL() +
                  " = vec4(dot(vec4(" +
                  m.toGLSL() +
                  "), vec4(" +
                  p.toGLSL() +
                  ")))" +
                  d.getWriteMask() +
                  "; // dp4"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 20:
              f += I.string(d.toGLSL() + " = abs(" + m.toGLSL() + "); // abs");
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 21:
              f += I.string(d.toGLSL() + " = -" + m.toGLSL() + "; // neg");
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 22:
              f += I.string(
                d.toGLSL() +
                  " = clamp(" +
                  m.toGLSL() +
                  ", 0.0, 1.0); // saturate"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              break;
            case 23:
              h = e.getRegisterUsage(p);
              h != ja.VECTOR_4 && h != ja.VECTOR_4_ARRAY
                ? ((f += I.string(
                    d.toGLSL() +
                      " = " +
                      m.toGLSL() +
                      " * mat3(" +
                      p.toGLSL(!1) +
                      "); // m33"
                  )),
                  e.addDR(d, ja.VECTOR_4),
                  e.addSR(m, ja.VECTOR_4),
                  e.addSR(p, ja.MATRIX_4_4))
                : ((m.sourceMask = p.sourceMask = 7),
                  (f += I.string(
                    d.toGLSL() +
                      " = vec3(dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 0) +
                      "), dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 1) +
                      "),dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 2) +
                      ")); // m33"
                  )),
                  e.addDR(d, ja.VECTOR_4),
                  e.addSR(m, ja.VECTOR_4),
                  e.addSR(p, ja.VECTOR_4, 0),
                  e.addSR(p, ja.VECTOR_4, 1),
                  e.addSR(p, ja.VECTOR_4, 2));
              break;
            case 24:
              h = e.getRegisterUsage(p);
              h != ja.VECTOR_4 && h != ja.VECTOR_4_ARRAY
                ? ((f += I.string(
                    d.toGLSL() +
                      " = " +
                      m.toGLSL() +
                      " * " +
                      p.toGLSL(!1) +
                      "; // m44"
                  )),
                  e.addDR(d, ja.VECTOR_4),
                  e.addSR(m, ja.VECTOR_4),
                  e.addSR(p, ja.MATRIX_4_4))
                : ((m.sourceMask = p.sourceMask = 15),
                  (f += I.string(
                    d.toGLSL() +
                      " = vec4(dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 0) +
                      "), dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 1) +
                      "), dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 2) +
                      "), dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 3) +
                      ")); // m44"
                  )),
                  e.addDR(d, ja.VECTOR_4),
                  e.addSR(m, ja.VECTOR_4),
                  e.addSR(p, ja.VECTOR_4, 0),
                  e.addSR(p, ja.VECTOR_4, 1),
                  e.addSR(p, ja.VECTOR_4, 2),
                  e.addSR(p, ja.VECTOR_4, 3));
              break;
            case 25:
              d.mask &= 7;
              h = e.getRegisterUsage(p);
              h != ja.VECTOR_4 && h != ja.VECTOR_4_ARRAY
                ? ((f += I.string(
                    d.toGLSL() +
                      " = " +
                      m.toGLSL() +
                      " * " +
                      p.toGLSL(!1) +
                      "; // m34"
                  )),
                  e.addDR(d, ja.VECTOR_4),
                  e.addSR(m, ja.VECTOR_4),
                  e.addSR(p, ja.MATRIX_4_4))
                : ((m.sourceMask = p.sourceMask = 15),
                  (f += I.string(
                    d.toGLSL() +
                      " = vec3(dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 0) +
                      "), dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 1) +
                      "),dot(" +
                      m.toGLSL(!0) +
                      "," +
                      p.toGLSL(!0, 2) +
                      ")); // m34"
                  )),
                  e.addDR(d, ja.VECTOR_4),
                  e.addSR(m, ja.VECTOR_4),
                  e.addSR(p, ja.VECTOR_4, 0),
                  e.addSR(p, ja.VECTOR_4, 1),
                  e.addSR(p, ja.VECTOR_4, 2));
              break;
            case 39:
              m.sourceMask = 15;
              f += I.string(
                "if (any(lessThan(" + m.toGLSL() + ", vec4(0)))) discard;"
              );
              e.addSR(m, ja.VECTOR_4);
              break;
            case 40:
              p = jh.parse(n, c);
              switch (p.d) {
                case 0:
                  2 == p.t
                    ? ((m.sourceMask = 3),
                      e.addSaR(p, ja.SAMPLER_2D_ALPHA),
                      (f += I.string(
                        "if (" + p.toGLSL() + "_alphaEnabled) {\n"
                      )),
                      (f += I.string(
                        "\t\t" +
                          d.toGLSL() +
                          " = vec4(texture2D(" +
                          p.toGLSL() +
                          ", " +
                          m.toGLSL() +
                          ").xyz, texture2D(" +
                          p.toGLSL() +
                          "_alpha, " +
                          m.toGLSL() +
                          ").x); // tex + alpha\n"
                      )),
                      (f += "\t} else {\n"),
                      (f += I.string(
                        "\t\t" +
                          d.toGLSL() +
                          " = texture2D(" +
                          p.toGLSL() +
                          ", " +
                          m.toGLSL() +
                          "); // tex\n"
                      )),
                      (f += "\t}"))
                    : ((m.sourceMask = 3),
                      e.addSaR(p, ja.SAMPLER_2D),
                      (f += I.string(
                        d.toGLSL() +
                          " = texture2D(" +
                          p.toGLSL() +
                          ", " +
                          m.toGLSL() +
                          "); // tex"
                      )));
                  break;
                case 1:
                  2 == p.t
                    ? ((m.sourceMask = 7),
                      e.addSaR(p, ja.SAMPLER_CUBE_ALPHA),
                      (f += I.string(
                        "if (" + p.toGLSL() + "_alphaEnabled) {\n"
                      )),
                      (f += I.string(
                        "\t\t" +
                          d.toGLSL() +
                          " = vec4(textureCube(" +
                          p.toGLSL() +
                          ", " +
                          m.toGLSL() +
                          ").xyz, textureCube(" +
                          p.toGLSL() +
                          "_alpha, " +
                          m.toGLSL() +
                          ").x); // tex + alpha\n"
                      )),
                      (f += "\t} else {\n"),
                      (f += I.string(
                        "\t\t" +
                          d.toGLSL() +
                          " = textureCube(" +
                          p.toGLSL() +
                          ", " +
                          m.toGLSL() +
                          "); // tex"
                      )),
                      (f += "\t}"))
                    : ((m.sourceMask = 7),
                      (f += I.string(
                        d.toGLSL() +
                          " = textureCube(" +
                          p.toGLSL() +
                          ", " +
                          m.toGLSL() +
                          "); // tex"
                      )),
                      e.addSaR(p, ja.SAMPLER_CUBE));
              }
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              null != b && (b[p.n] = p.toSamplerState());
              break;
            case 41:
              m.sourceMask = p.sourceMask = 15;
              f += I.string(
                d.toGLSL() +
                  " = vec4(greaterThanEqual(" +
                  m.toGLSL() +
                  ", " +
                  p.toGLSL() +
                  "))" +
                  d.getWriteMask() +
                  "; // ste"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 42:
              m.sourceMask = p.sourceMask = 15;
              f += I.string(
                d.toGLSL() +
                  " = vec4(lessThan(" +
                  m.toGLSL() +
                  ", " +
                  p.toGLSL() +
                  "))" +
                  d.getWriteMask() +
                  "; // slt"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 44:
              m.sourceMask = p.sourceMask = 15;
              f += I.string(
                d.toGLSL() +
                  " = vec4(equal(" +
                  m.toGLSL() +
                  ", " +
                  p.toGLSL() +
                  "))" +
                  d.getWriteMask() +
                  "; // seq"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            case 45:
              m.sourceMask = p.sourceMask = 15;
              f += I.string(
                d.toGLSL() +
                  " = vec4(notEqual(" +
                  m.toGLSL() +
                  ", " +
                  p.toGLSL() +
                  "))" +
                  d.getWriteMask() +
                  "; // sne"
              );
              e.addDR(d, ja.VECTOR_4);
              e.addSR(m, ja.VECTOR_4);
              e.addSR(p, ja.VECTOR_4);
              break;
            default:
              throw C.thrown(new Jc("Opcode " + h));
          }
          f += "\n";
        }
        null == Vc.limitedProfile &&
          ((d = ci.context.getParameter(7938)),
          (Vc.limitedProfile =
            -1 < d.indexOf("OpenGL ES") || -1 < d.indexOf("WebGL")));
        a =
          "" +
          I.string(
            "// AGAL " + (c == ug.VERTEX ? "vertex" : "fragment") + " shader\n"
          );
        a = Vc.limitedProfile
          ? a +
            "#version 100\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n"
          : a + "#version 120\n";
        a += I.string(e.toGLSL(!1));
        c == ug.VERTEX && (a += "uniform vec4 vcPositionScale;\n");
        a = a + "void main() {\n" + I.string(e.toGLSL(!0));
        a += I.string(f);
        c == ug.VERTEX && (a += "\tgl_Position *= vcPositionScale;\n");
        return a + "}\n";
      };
      var ih = function () {};
      g["openfl.display3D._internal.agal._AGALConverter.DestRegister"] = ih;
      ih.__name__ =
        "openfl.display3D._internal.agal._AGALConverter.DestRegister";
      ih.parse = function (a, b) {
        var c = new ih();
        c.programType = b;
        c.type = (a >>> 24) & 15;
        c.mask = (a >>> 16) & 15;
        c.n = a & 65535;
        return c;
      };
      ih.prototype = {
        getWriteMask: function () {
          var a = ".";
          0 != (this.mask & 1) && (a += "x");
          0 != (this.mask & 2) && (a += "y");
          0 != (this.mask & 4) && (a += "z");
          0 != (this.mask & 8) && (a += "w");
          return a;
        },
        toGLSL: function (a) {
          null == a && (a = !0);
          var b =
            3 == this.type
              ? this.programType == ug.VERTEX
                ? "gl_Position"
                : "gl_FragColor"
              : Vc.prefixFromType(this.type, this.programType) + this.n;
          a && 15 != this.mask && (b += this.getWriteMask());
          return b;
        },
        __class__: ih,
      };
      var ug = (z[
          "openfl.display3D._internal.agal._AGALConverter.ProgramType"
        ] = {
          __ename__:
            "openfl.display3D._internal.agal._AGALConverter.ProgramType",
          __constructs__: ["VERTEX", "FRAGMENT"],
          VERTEX: {
            _hx_index: 0,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.ProgramType",
            toString: l,
          },
          FRAGMENT: {
            _hx_index: 1,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.ProgramType",
            toString: l,
          },
        }),
        Bk = function () {
          this.mEntries = [];
        };
      g["openfl.display3D._internal.agal.RegisterMap"] = Bk;
      Bk.__name__ = "openfl.display3D._internal.agal.RegisterMap";
      Bk.prototype = {
        add: function (a, b, c, d) {
          for (var e = 0, f = this.mEntries; e < f.length; ) {
            var h = f[e];
            ++e;
            if (h.type == a && h.name == b && h.number == c) {
              if (h.usage != d)
                throw C.thrown(
                  new Jc("Cannot use register in multiple ways yet (mat4/vec4)")
                );
              return;
            }
          }
          h = new tm();
          h.type = a;
          h.name = b;
          h.number = c;
          h.usage = d;
          this.mEntries.push(h);
        },
        addDR: function (a, b) {
          this.add(a.type, a.toGLSL(!1), a.n, b);
        },
        addSaR: function (a, b) {
          this.add(a.type, a.toGLSL(), a.n, b);
        },
        addSR: function (a, b, c) {
          null == c && (c = 0);
          0 != a.d
            ? (this.add(
                a.itype,
                Vc.prefixFromType(a.itype, a.programType) + a.n,
                a.n,
                ja.VECTOR_4
              ),
              this.add(
                a.type,
                Vc.prefixFromType(a.type, a.programType) + a.o,
                a.o,
                ja.VECTOR_4_ARRAY
              ))
            : this.add(a.type, a.toGLSL(!1, c), a.n + c, b);
        },
        getRegisterUsage: function (a) {
          return 0 != a.d
            ? ja.VECTOR_4_ARRAY
            : this.getUsage(a.type, a.toGLSL(!1), a.n);
        },
        getUsage: function (a, b, c) {
          for (var d = 0, e = this.mEntries; d < e.length; ) {
            var f = e[d];
            ++d;
            if (f.type == a && f.name == b && f.number == c) return f.usage;
          }
          return ja.UNUSED;
        },
        toGLSL: function (a) {
          this.mEntries.sort(function (a, b) {
            return a.number - b.number;
          });
          this.mEntries.sort(function (a, b) {
            return pa.__cast(a.type, cn) - pa.__cast(b.type, cn);
          });
          for (var b = "", c = 0, d = this.mEntries.length; c < d; ) {
            var e = c++;
            e = this.mEntries[e];
            if (!((a && 2 != e.type) || (!a && 2 == e.type)) && 3 != e.type) {
              switch (e.type) {
                case 0:
                  b += "attribute ";
                  break;
                case 1:
                  b += "uniform ";
                  break;
                case 2:
                  b += "\t";
                  break;
                case 3:
                  break;
                case 4:
                  b += "varying ";
                  break;
                case 5:
                  b += "uniform ";
                  break;
                default:
                  throw C.thrown(new Jc());
              }
              switch (e.usage._hx_index) {
                case 0:
                  Pa.info("Missing switch patten: RegisterUsage.UNUSED", {
                    fileName:
                      "openfl/display3D/_internal/agal/AGALConverter.hx",
                    lineNumber: 750,
                    className: "openfl.display3D._internal.agal.RegisterMap",
                    methodName: "toGLSL",
                  });
                  break;
                case 1:
                  b += "vec4 ";
                  break;
                case 2:
                  b += "mat4 ";
                  break;
                case 3:
                  b += "sampler2D ";
                  break;
                case 5:
                  b += "samplerCube ";
                  break;
                case 7:
                  b += "vec4 ";
              }
              e.usage == ja.SAMPLER_2D_ALPHA
                ? ((b += "sampler2D "),
                  (b += I.string(e.name)),
                  (b += ";\n"),
                  (b += "uniform "),
                  (b += "sampler2D "),
                  (b += I.string(e.name + "_alpha")),
                  (b += ";\n"),
                  (b += "uniform "),
                  (b += "bool "),
                  (b += I.string(e.name + "_alphaEnabled")))
                : e.usage == ja.SAMPLER_CUBE_ALPHA
                ? ((b += "samplerCube "),
                  (b += I.string(e.name)),
                  (b += ";\n"),
                  (b += "uniform "),
                  (b += "samplerCube "),
                  (b += I.string(e.name + "_alpha")),
                  (b += ";\n"),
                  (b += "uniform "),
                  (b += "bool "),
                  (b += I.string(e.name + "_alphaEnabled")))
                : (b =
                    e.usage == ja.VECTOR_4_ARRAY
                      ? b + I.string(e.name + "[128]")
                      : b + I.string(e.name));
              b += ";\n";
            }
          }
          return b;
        },
        __class__: Bk,
      };
      var tm = function () {};
      g["openfl.display3D._internal.agal._AGALConverter.RegisterMapEntry"] = tm;
      tm.__name__ =
        "openfl.display3D._internal.agal._AGALConverter.RegisterMapEntry";
      tm.prototype = { __class__: tm };
      var ja = (z[
          "openfl.display3D._internal.agal._AGALConverter.RegisterUsage"
        ] = {
          __ename__:
            "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
          __constructs__:
            "UNUSED VECTOR_4 MATRIX_4_4 SAMPLER_2D SAMPLER_2D_ALPHA SAMPLER_CUBE SAMPLER_CUBE_ALPHA VECTOR_4_ARRAY".split(
              " "
            ),
          UNUSED: {
            _hx_index: 0,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
          VECTOR_4: {
            _hx_index: 1,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
          MATRIX_4_4: {
            _hx_index: 2,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
          SAMPLER_2D: {
            _hx_index: 3,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
          SAMPLER_2D_ALPHA: {
            _hx_index: 4,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
          SAMPLER_CUBE: {
            _hx_index: 5,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
          SAMPLER_CUBE_ALPHA: {
            _hx_index: 6,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
          VECTOR_4_ARRAY: {
            _hx_index: 7,
            __enum__:
              "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
            toString: l,
          },
        }),
        jh = function () {};
      g["openfl.display3D._internal.agal._AGALConverter.SamplerRegister"] = jh;
      jh.__name__ =
        "openfl.display3D._internal.agal._AGALConverter.SamplerRegister";
      jh.parse = function (a, b) {
        var c = new jh();
        c.programType = b;
        b = 60;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.f = b;
        b = 56;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.m = b;
        b = 52;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.w = b;
        b = 48;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.s = b;
        b = 44;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.d = b;
        b = 40;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.t = b;
        b = 32;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.type = b;
        b = 16;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        c.b = b;
        b = a.low & 65535;
        c.n = b;
        return c;
      };
      jh.prototype = {
        toGLSL: function () {
          return Vc.prefixFromType(this.type, this.programType) + this.n;
        },
        toSamplerState: function () {
          switch (this.f) {
            case 0:
              var a = 5;
              break;
            case 1:
              a = 4;
              break;
            default:
              throw C.thrown(new Jc());
          }
          switch (this.m) {
            case 0:
              var b = 2;
              break;
            case 1:
              b = 1;
              break;
            case 2:
              b = 0;
              break;
            default:
              throw C.thrown(new Jc());
          }
          switch (this.w) {
            case 0:
              var c = 0;
              break;
            case 1:
              c = 2;
              break;
            default:
              throw C.thrown(new Jc());
          }
          return new tg(
            c,
            a,
            b,
            ((this.b << 24) >> 24) / 8,
            4 == (this.s & 4),
            1 == (this.s & 1),
            2 == this.t
          );
        },
        __class__: jh,
      };
      var vg = function () {};
      g["openfl.display3D._internal.agal._AGALConverter.SourceRegister"] = vg;
      vg.__name__ =
        "openfl.display3D._internal.agal._AGALConverter.SourceRegister";
      vg.parse = function (a, b, c) {
        var d = new vg();
        d.programType = b;
        b = 63;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 1;
        d.d = b;
        b = 48;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 3;
        d.q = b;
        b = 40;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.itype = b;
        b = 32;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.type = b;
        b = 24;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.s = b;
        b = 16;
        b =
          0 == b
            ? new eb(a.high, a.low)
            : 32 > b
            ? new eb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
            : new eb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.o = b;
        b = a.low & 65535;
        d.n = b;
        d.sourceMask = c;
        return d;
      };
      vg.prototype = {
        toGLSL: function (a, b) {
          null == b && (b = 0);
          null == a && (a = !0);
          if (3 == this.type)
            return this.programType == ug.VERTEX
              ? "gl_Position"
              : "gl_FragColor";
          var c = 228 == this.s && 15 == this.sourceMask,
            d = "";
          if (5 != this.type && !c) {
            if (0 != (this.sourceMask & 1))
              switch (this.s & 3) {
                case 0:
                  d += "x";
                  break;
                case 1:
                  d += "y";
                  break;
                case 2:
                  d += "z";
                  break;
                case 3:
                  d += "w";
              }
            if (0 != (this.sourceMask & 2))
              switch ((this.s >> 2) & 3) {
                case 0:
                  d += "x";
                  break;
                case 1:
                  d += "y";
                  break;
                case 2:
                  d += "z";
                  break;
                case 3:
                  d += "w";
              }
            if (0 != (this.sourceMask & 4))
              switch ((this.s >> 4) & 3) {
                case 0:
                  d += "x";
                  break;
                case 1:
                  d += "y";
                  break;
                case 2:
                  d += "z";
                  break;
                case 3:
                  d += "w";
              }
            if (0 != (this.sourceMask & 8))
              switch ((this.s >> 6) & 3) {
                case 0:
                  d += "x";
                  break;
                case 1:
                  d += "y";
                  break;
                case 2:
                  d += "z";
                  break;
                case 3:
                  d += "w";
              }
          }
          c = Vc.prefixFromType(this.type, this.programType);
          if (0 == this.d) c += this.n + b;
          else {
            c += this.o;
            var e = "";
            switch (this.q) {
              case 0:
                e = "x";
                break;
              case 1:
                e = "y";
                break;
              case 2:
                e = "z";
                break;
              case 3:
                e = "w";
            }
            e =
              Vc.prefixFromType(this.itype, this.programType) +
              this.n +
              "." +
              e;
            c += "[ int(" + e + ") +" + b + "]";
          }
          a && "" != d && (c += "." + d);
          return c;
        },
        __class__: vg,
      };
      var pb = function (a) {
        sa.call(this);
        this.__context = a;
        var b = this.__context.gl;
        this.__textureID = b.createTexture();
        this.__textureContext = this.__context.__context;
        if (null == pb.__supportsBGRA) {
          pb.__textureInternalFormat = b.RGBA;
          pb.__supportsBGRA = !1;
          pb.__textureFormat = b.RGBA;
          pb.__compressedFormats = new lc();
          pb.__compressedFormatsAlpha = new lc();
          a = b.getExtension("WEBGL_compressed_texture_s3tc");
          var c = b.getExtension("WEBGL_compressed_texture_etc1");
          b = b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
          if (null != a) {
            var d = a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            pb.__compressedFormats.h[0] = d;
            d = a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            pb.__compressedFormatsAlpha.h[0] = d;
          }
          null != c &&
            ((d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (pb.__compressedFormats.h[2] = d),
            (d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (pb.__compressedFormatsAlpha.h[2] = d));
          null != b &&
            ((d = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG),
            (pb.__compressedFormats.h[1] = d),
            (d = b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG),
            (pb.__compressedFormatsAlpha.h[1] = d));
        }
        this.__internalFormat = pb.__textureInternalFormat;
        this.__format = pb.__textureFormat;
      };
      g["openfl.display3D.textures.TextureBase"] = pb;
      pb.__name__ = "openfl.display3D.textures.TextureBase";
      pb.__super__ = sa;
      pb.prototype = r(sa.prototype, {
        dispose: function () {
          var a = this.__context.gl;
          null != this.__alphaTexture &&
            (this.__alphaTexture.dispose(), (this.__alphaTexture = null));
          null != this.__textureID &&
            (a.deleteTexture(this.__textureID), (this.__textureID = null));
          null != this.__glFramebuffer &&
            (a.deleteFramebuffer(this.__glFramebuffer),
            (this.__glFramebuffer = null));
          null != this.__glDepthRenderbuffer &&
            (a.deleteRenderbuffer(this.__glDepthRenderbuffer),
            (this.__glDepthRenderbuffer = null));
          null != this.__glStencilRenderbuffer &&
            (a.deleteRenderbuffer(this.__glStencilRenderbuffer),
            (this.__glStencilRenderbuffer = null));
        },
        __getGLFramebuffer: function (a, b, c) {
          b = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = b.createFramebuffer()),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            b.framebufferTexture2D(
              b.FRAMEBUFFER,
              b.COLOR_ATTACHMENT0,
              b.TEXTURE_2D,
              this.__textureID,
              0
            ),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                Pa.warn(
                  "Error: Context3D.setRenderToTexture status:" +
                    c +
                    " width:" +
                    this.__width +
                    " height:" +
                    this.__height,
                  {
                    fileName: "openfl/display3D/textures/TextureBase.hx",
                    lineNumber: 201,
                    className: "openfl.display3D.textures.TextureBase",
                    methodName: "__getGLFramebuffer",
                  }
                )));
          a &&
            null == this.__glDepthRenderbuffer &&
            (this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            0 != lb.__glDepthStencil
              ? ((this.__glStencilRenderbuffer = this.__glDepthRenderbuffer =
                  b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  lb.__glDepthStencil,
                  this.__width,
                  this.__height
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer
                ))
              : ((this.__glDepthRenderbuffer = b.createRenderbuffer()),
                (this.__glStencilRenderbuffer = b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.DEPTH_COMPONENT16,
                  this.__width,
                  this.__height
                ),
                b.bindRenderbuffer(
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer
                ),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.STENCIL_INDEX8,
                  this.__width,
                  this.__height
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer
                )),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                Pa.warn(
                  "Error: Context3D.setRenderToTexture status:" +
                    c +
                    " width:" +
                    this.__width +
                    " height:" +
                    this.__height,
                  {
                    fileName: "openfl/display3D/textures/TextureBase.hx",
                    lineNumber: 239,
                    className: "openfl.display3D.textures.TextureBase",
                    methodName: "__getGLFramebuffer",
                  }
                )),
            b.bindRenderbuffer(b.RENDERBUFFER, null));
          return this.__glFramebuffer;
        },
        __getTexture: function () {
          return this.__textureID;
        },
        __setSamplerState: function (a) {
          if (!a.equals(this.__samplerState)) {
            var b = this.__context.gl;
            this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP
              ? this.__context.__bindGLTextureCubeMap(this.__textureID)
              : this.__context.__bindGLTexture2D(this.__textureID);
            var c;
            switch (a.wrap) {
              case 0:
                var d = (c = b.CLAMP_TO_EDGE);
                break;
              case 1:
                c = b.CLAMP_TO_EDGE;
                d = b.REPEAT;
                break;
              case 2:
                d = c = b.REPEAT;
                break;
              case 3:
                c = b.REPEAT;
                d = b.CLAMP_TO_EDGE;
                break;
              default:
                throw C.thrown(new Cb("wrap bad enum"));
            }
            var e = 5 == a.filter ? b.NEAREST : b.LINEAR;
            switch (a.mipfilter) {
              case 0:
                var f =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_LINEAR
                    : b.LINEAR_MIPMAP_LINEAR;
                break;
              case 1:
                f =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_NEAREST
                    : b.LINEAR_MIPMAP_NEAREST;
                break;
              case 2:
                f = 5 == a.filter ? b.NEAREST : b.LINEAR;
                break;
              default:
                throw C.thrown(new Cb("mipfiter bad enum"));
            }
            b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, f);
            b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, e);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, d);
            null == this.__samplerState && (this.__samplerState = a.clone());
            this.__samplerState.copyFrom(a);
            return !0;
          }
          return !1;
        },
        __uploadFromImage: function (a) {
          var b = this.__context.gl,
            c;
          if (this.__textureTarget == b.TEXTURE_2D) {
            if (1 == a.buffer.bitsPerPixel) var d = (c = b.ALPHA);
            else (c = pb.__textureInternalFormat), (d = pb.__textureFormat);
            this.__context.__bindGLTexture2D(this.__textureID);
            a.type == Yd.DATA || a.get_premultiplied()
              ? !a.get_premultiplied() &&
                a.get_transparent() &&
                b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1)
              : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
            a.type == Yd.DATA
              ? yc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  a.buffer.width,
                  a.buffer.height,
                  0,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_data()
                )
              : yc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_src()
                );
            this.__context.__bindGLTexture2D(null);
          }
        },
        __class__: pb,
      });
      var zk = function (a, b, c, d, e) {
        pb.call(this, a);
        this.__width = this.__height = this.__size = b;
        this.__optimizeForRenderToTexture = d;
        this.__streamingLevels = e;
        this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
        this.__uploadedSides = 0;
      };
      g["openfl.display3D.textures.CubeTexture"] = zk;
      zk.__name__ = "openfl.display3D.textures.CubeTexture";
      zk.__super__ = pb;
      zk.prototype = r(pb.prototype, {
        __getGLFramebuffer: function (a, b, c) {
          var d = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = d.createFramebuffer()),
            (this.__framebufferSurface = -1));
          if (
            this.__framebufferSurface != c &&
            ((this.__framebufferSurface = c),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            d.framebufferTexture2D(
              d.FRAMEBUFFER,
              d.COLOR_ATTACHMENT0,
              d.TEXTURE_CUBE_MAP_POSITIVE_X + c,
              this.__textureID,
              0
            ),
            this.__context.__enableErrorChecking)
          ) {
            var e = d.checkFramebufferStatus(d.FRAMEBUFFER);
            e != d.FRAMEBUFFER_COMPLETE &&
              Pa.error(
                "Error: Context3D.setRenderToTexture status:" +
                  e +
                  " width:" +
                  this.__width +
                  " height:" +
                  this.__height,
                {
                  fileName: "openfl/display3D/textures/CubeTexture.hx",
                  lineNumber: 278,
                  className: "openfl.display3D.textures.CubeTexture",
                  methodName: "__getGLFramebuffer",
                }
              );
          }
          return pb.prototype.__getGLFramebuffer.call(this, a, b, c);
        },
        __setSamplerState: function (a) {
          if (pb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_CUBE_MAP),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != lb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > lb.__glMaxTextureMaxAnisotropy &&
                (a = lb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(
                b.TEXTURE_CUBE_MAP,
                lb.__glTextureMaxAnisotropy,
                a
              );
            }
            return !0;
          }
          return !1;
        },
        __class__: zk,
      });
      var hi = function (a, b, c, d, e) {
        pb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = e;
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
        this.uploadFromTypedArray(null);
        e && this.__getGLFramebuffer(!0, 0, 0);
      };
      g["openfl.display3D.textures.RectangleTexture"] = hi;
      hi.__name__ = "openfl.display3D.textures.RectangleTexture";
      hi.__super__ = pb;
      hi.prototype = r(pb.prototype, {
        uploadFromTypedArray: function (a) {
          var b = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          yc.texImage2D(
            b,
            this.__textureTarget,
            0,
            this.__internalFormat,
            this.__width,
            this.__height,
            0,
            this.__format,
            b.UNSIGNED_BYTE,
            a
          );
          this.__context.__bindGLTexture2D(null);
        },
        __setSamplerState: function (a) {
          if (pb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            if (0 != lb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > lb.__glMaxTextureMaxAnisotropy &&
                (a = lb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, lb.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: hi,
      });
      var yk = function (a, b, c, d, e, f) {
        pb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = e;
        this.__streamingLevels = f;
        a = this.__context.gl;
        this.__textureTarget = a.TEXTURE_2D;
        this.__context.__bindGLTexture2D(this.__textureID);
        yc.texImage2D(
          a,
          this.__textureTarget,
          0,
          this.__internalFormat,
          this.__width,
          this.__height,
          0,
          this.__format,
          a.UNSIGNED_BYTE,
          null
        );
        this.__context.__bindGLTexture2D(null);
        e && this.__getGLFramebuffer(!0, 0, 0);
      };
      g["openfl.display3D.textures.Texture"] = yk;
      yk.__name__ = "openfl.display3D.textures.Texture";
      yk.__super__ = pb;
      yk.prototype = r(pb.prototype, {
        __setSamplerState: function (a) {
          if (pb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_2D),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != lb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > lb.__glMaxTextureMaxAnisotropy &&
                (a = lb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, lb.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: yk,
      });
      var um = function (a) {
        pb.call(this, a);
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
      };
      g["openfl.display3D.textures.VideoTexture"] = um;
      um.__name__ = "openfl.display3D.textures.VideoTexture";
      um.__super__ = pb;
      um.prototype = r(pb.prototype, {
        dispose: function () {
          null != this.__netStream &&
            null != this.__netStream.__video &&
            this.__netStream.__video.removeEventListener(
              "timeupdate",
              q(this, this.__onTimeUpdate)
            );
          pb.prototype.dispose.call(this);
        },
        __onTimeUpdate: function (a) {
          null != this.__netStream &&
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState &&
            this.__textureReady();
        },
        __getTexture: function () {
          if (
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState
          ) {
            var a = this.__context.gl;
            this.__context.__bindGLTexture2D(this.__textureID);
            yc.texImage2D(
              a,
              a.TEXTURE_2D,
              0,
              a.RGBA,
              a.RGBA,
              a.UNSIGNED_BYTE,
              this.__netStream.__video
            );
            this.__cacheTime = this.__netStream.__video.currentTime;
          }
          return this.__textureID;
        },
        __textureReady: function () {
          this.videoWidth = this.__netStream.__video.videoWidth;
          this.videoHeight = this.__netStream.__video.videoHeight;
          var a = new Ca("textureReady");
          this.dispatchEvent(a);
        },
        __class__: um,
      });
      var Cb = function (a, b) {
        null == b && (b = 0);
        null == a && (a = "");
        this.message = a;
        this.errorID = b;
        this.name = "Error";
      };
      g["openfl.errors.Error"] = Cb;
      Cb.__name__ = "openfl.errors.Error";
      Cb.prototype = {
        toString: function () {
          return null != this.message ? this.message : "Error";
        },
        __class__: Cb,
      };
      var Eg = function (a) {
        null == a && (a = "");
        Cb.call(this, a);
        this.name = "ArgumentError";
      };
      g["openfl.errors.ArgumentError"] = Eg;
      Eg.__name__ = "openfl.errors.ArgumentError";
      Eg.__super__ = Cb;
      Eg.prototype = r(Cb.prototype, { __class__: Eg });
      var kh = function (a) {
        null == a && (a = "");
        Cb.call(this, a);
        this.name = "IOError";
      };
      g["openfl.errors.IOError"] = kh;
      kh.__name__ = "openfl.errors.IOError";
      kh.__super__ = Cb;
      kh.prototype = r(Cb.prototype, { __class__: kh });
      var Uh = function (a, b) {
        kh.call(this, "End of file was encountered");
        this.name = "EOFError";
        this.errorID = 2030;
      };
      g["openfl.errors.EOFError"] = Uh;
      Uh.__name__ = "openfl.errors.EOFError";
      Uh.__super__ = kh;
      Uh.prototype = r(kh.prototype, { __class__: Uh });
      var Jc = function (a) {
        null == a && (a = "");
        Cb.call(this, a, 0);
        this.name = "IllegalOperationError";
      };
      g["openfl.errors.IllegalOperationError"] = Jc;
      Jc.__name__ = "openfl.errors.IllegalOperationError";
      Jc.__super__ = Cb;
      Jc.prototype = r(Cb.prototype, { __class__: Jc });
      var ui = function (a) {
        null == a && (a = "");
        Cb.call(this, a, 0);
        this.name = "RangeError";
      };
      g["openfl.errors.RangeError"] = ui;
      ui.__name__ = "openfl.errors.RangeError";
      ui.__super__ = Cb;
      ui.prototype = r(Cb.prototype, { __class__: ui });
      var qh = function (a) {
        null == a && (a = "");
        Cb.call(this, a, 0);
        this.name = "TypeError";
      };
      g["openfl.errors.TypeError"] = qh;
      qh.__name__ = "openfl.errors.TypeError";
      qh.__super__ = Cb;
      qh.prototype = r(Cb.prototype, { __class__: qh });
      var Ca = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.eventPhase = 2;
      };
      g["openfl.events.Event"] = Ca;
      Ca.__name__ = "openfl.events.Event";
      Ca.prototype = {
        isDefaultPrevented: function () {
          return this.__preventDefault;
        },
        preventDefault: function () {
          this.cancelable && (this.__preventDefault = !0);
        },
        stopImmediatePropagation: function () {
          this.__isCanceledNow = this.__isCanceled = !0;
        },
        stopPropagation: function () {
          this.__isCanceled = !0;
        },
        __class__: Ca,
      };
      var Ck = function (a, b, c, d, e, f, h) {
        null == h && (h = 0);
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        Ca.call(this, a, b, c);
        this.timestamp = d;
        this.accelerationX = e;
        this.accelerationY = f;
        this.accelerationZ = h;
      };
      g["openfl.events.AccelerometerEvent"] = Ck;
      Ck.__name__ = "openfl.events.AccelerometerEvent";
      Ck.__super__ = Ca;
      Ck.prototype = r(Ca.prototype, { __class__: Ck });
      var lh = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        Ca.call(this, a, b, c);
        this.activating = d;
      };
      g["openfl.events.ActivityEvent"] = lh;
      lh.__name__ = "openfl.events.ActivityEvent";
      lh.__super__ = Ca;
      lh.prototype = r(Ca.prototype, { __class__: lh });
      var lf = function (a, b, c, d) {
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !1);
        Ca.call(this, a, b, c);
        this.text = d;
      };
      g["openfl.events.TextEvent"] = lf;
      lf.__name__ = "openfl.events.TextEvent";
      lf.__super__ = Ca;
      lf.prototype = r(Ca.prototype, { __class__: lf });
      var Qd = function (a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !1);
        lf.call(this, a, b, c, d);
        this.errorID = e;
      };
      g["openfl.events.ErrorEvent"] = Qd;
      Qd.__name__ = "openfl.events.ErrorEvent";
      Qd.__super__ = lf;
      Qd.prototype = r(lf.prototype, { __class__: Qd });
      var ph = function (a) {
        this.active = !1;
        this.reset(a);
      };
      g["openfl.events._EventDispatcher.DispatchIterator"] = ph;
      ph.__name__ = "openfl.events._EventDispatcher.DispatchIterator";
      ph.prototype = {
        copy: function () {
          this.isCopy || ((this.list = this.list.slice()), (this.isCopy = !0));
        },
        hasNext: function () {
          return this.index < this.list.length;
        },
        next: function () {
          return this.list[this.index++];
        },
        remove: function (a, b) {
          if (this.active)
            if (this.isCopy) {
              b = this.index;
              for (var c = this.list.length; b < c; ) {
                var d = b++;
                if (this.list[d] == a) {
                  this.list.splice(d, 1);
                  break;
                }
              }
            } else b < this.index && this.index--;
        },
        reset: function (a) {
          this.list = a;
          this.isCopy = !1;
          this.index = 0;
        },
        start: function () {
          this.active = !0;
        },
        stop: function () {
          this.active = !1;
        },
        __class__: ph,
      };
      var oh = function (a, b, c) {
        this.callback = a;
        this.useCapture = b;
        this.priority = c;
      };
      g["openfl.events._EventDispatcher.Listener"] = oh;
      oh.__name__ = "openfl.events._EventDispatcher.Listener";
      oh.prototype = {
        match: function (a, b) {
          return ia.compareMethods(this.callback, a)
            ? this.useCapture == b
            : !1;
        },
        __class__: oh,
      };
      var sg = function (a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e && (e = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        Ca.call(this, a, b, c);
        this.keyCode = f;
        this.shiftKey = e;
        this.relatedObject = d;
      };
      g["openfl.events.FocusEvent"] = sg;
      sg.__name__ = "openfl.events.FocusEvent";
      sg.__super__ = Ca;
      sg.prototype = r(Ca.prototype, { __class__: sg });
      var cg = function (a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        lh.call(this, a, b, c);
        this.fullScreen = d;
        this.interactive = e;
      };
      g["openfl.events.FullScreenEvent"] = cg;
      cg.__name__ = "openfl.events.FullScreenEvent";
      cg.__super__ = lh;
      cg.prototype = r(lh.prototype, { __class__: cg });
      var Qg = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !0);
        Ca.call(this, a, b, c);
        this.device = d;
      };
      g["openfl.events.GameInputEvent"] = Qg;
      Qg.__name__ = "openfl.events.GameInputEvent";
      Qg.__super__ = Ca;
      Qg.prototype = r(Ca.prototype, { __class__: Qg });
      var Dk = function (a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        this.status = d;
        this.redirected = e;
        Ca.call(this, a, b, c);
      };
      g["openfl.events.HTTPStatusEvent"] = Dk;
      Dk.__name__ = "openfl.events.HTTPStatusEvent";
      Dk.__super__ = Ca;
      Dk.prototype = r(Ca.prototype, { __class__: Dk });
      var Ch = function (a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !0);
        Qd.call(this, a, b, c, d, e);
      };
      g["openfl.events.IOErrorEvent"] = Ch;
      Ch.__name__ = "openfl.events.IOErrorEvent";
      Ch.__super__ = Qd;
      Ch.prototype = r(Qd.prototype, { __class__: Ch });
      var vk = function (a, b, c, d, e, f, h, m, n, p, l) {
        null == l && (l = !1);
        null == p && (p = !1);
        null == n && (n = !1);
        null == m && (m = !1);
        null == h && (h = !1);
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        Ca.call(this, a, b, c);
        this.charCode = d;
        this.keyCode = e;
        this.keyLocation = null != f ? f : 0;
        this.ctrlKey = h;
        this.altKey = m;
        this.shiftKey = n;
        this.controlKey = p;
        this.commandKey = l;
      };
      g["openfl.events.KeyboardEvent"] = vk;
      vk.__name__ = "openfl.events.KeyboardEvent";
      vk.__super__ = Ca;
      vk.prototype = r(Ca.prototype, { __class__: vk });
      var wb = function (a, b, c, d, e, f, h, m, n, p, l, k, g) {
        null == g && (g = 0);
        null == k && (k = !1);
        null == l && (l = 0);
        null == p && (p = !1);
        null == n && (n = !1);
        null == m && (m = !1);
        null == h && (h = !1);
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        Ca.call(this, a, b, c);
        this.shiftKey = n;
        this.altKey = m;
        this.ctrlKey = h;
        this.bubbles = b;
        this.relatedObject = f;
        this.delta = l;
        this.localX = d;
        this.localY = e;
        this.buttonDown = p;
        this.commandKey = k;
        this.clickCount = g;
        this.isRelatedObjectInaccessible = !1;
        this.stageY = this.stageX = NaN;
      };
      g["openfl.events.MouseEvent"] = wb;
      wb.__name__ = "openfl.events.MouseEvent";
      wb.__create = function (a, b, c, d, e, f, h) {
        null == h && (h = 0);
        a = new wb(
          a,
          !0,
          !1,
          e.x,
          e.y,
          null,
          wb.__ctrlKey,
          wb.__altKey,
          wb.__shiftKey,
          wb.__buttonDown,
          h,
          wb.__commandKey
        );
        a.stageX = c;
        a.stageY = d;
        a.target = f;
        return a;
      };
      wb.__super__ = Ca;
      wb.prototype = r(Ca.prototype, { __class__: wb });
      var Ek = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.info = d;
        Ca.call(this, a, b, c);
      };
      g["openfl.events.NetStatusEvent"] = Ek;
      Ek.__name__ = "openfl.events.NetStatusEvent";
      Ek.__super__ = Ca;
      Ek.prototype = r(Ca.prototype, { __class__: Ek });
      var fh = function (a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        Ca.call(this, a, b, c);
        this.bytesLoaded = d;
        this.bytesTotal = e;
      };
      g["openfl.events.ProgressEvent"] = fh;
      fh.__name__ = "openfl.events.ProgressEvent";
      fh.__super__ = Ca;
      fh.prototype = r(Ca.prototype, { __class__: fh });
      var si = function (a, b, c, d, e, f) {
        null == f && (f = !0);
        null == c && (c = !1);
        null == b && (b = !1);
        Ca.call(this, a, b, c);
        this.objectMatrix = d;
        this.objectColorTransform = e;
        this.allowSmoothing = f;
      };
      g["openfl.events.RenderEvent"] = si;
      si.__name__ = "openfl.events.RenderEvent";
      si.__super__ = Ca;
      si.prototype = r(Ca.prototype, { __class__: si });
      var Fk = function (a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !1);
        Qd.call(this, a, b, c, d, e);
      };
      g["openfl.events.SecurityErrorEvent"] = Fk;
      Fk.__name__ = "openfl.events.SecurityErrorEvent";
      Fk.__super__ = Qd;
      Fk.prototype = r(Qd.prototype, { __class__: Fk });
      var Rd = function (
        a,
        b,
        c,
        d,
        e,
        f,
        h,
        m,
        n,
        p,
        l,
        k,
        g,
        u,
        q,
        r,
        z,
        v,
        y,
        w
      ) {
        null == r && (r = !1);
        null == q && (q = !1);
        null == u && (u = !1);
        null == g && (g = !1);
        null == k && (k = !1);
        null == p && (p = 0);
        null == n && (n = 0);
        null == m && (m = 0);
        null == h && (h = 0);
        null == f && (f = 0);
        null == e && (e = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        Ca.call(this, a, b, c);
        this.touchPointID = d;
        this.isPrimaryTouchPoint = e;
        this.localX = f;
        this.localY = h;
        this.sizeX = m;
        this.sizeY = n;
        this.pressure = p;
        this.relatedObject = l;
        this.ctrlKey = k;
        this.altKey = g;
        this.shiftKey = u;
        this.commandKey = q;
        this.controlKey = r;
        this.stageY = this.stageX = NaN;
      };
      g["openfl.events.TouchEvent"] = Rd;
      Rd.__name__ = "openfl.events.TouchEvent";
      Rd.__create = function (a, b, c, d, e, f) {
        a = new Rd(a, !0, !1, 0, !0, e.x, e.y, 1, 1, 1);
        a.stageX = c;
        a.stageY = d;
        a.target = f;
        return a;
      };
      Rd.__super__ = Ca;
      Rd.prototype = r(Ca.prototype, { __class__: Rd });
      var uk = function (a, b, c, d) {
        null == c && (c = !0);
        null == b && (b = !0);
        Qd.call(this, a, b, c);
        this.error = d;
      };
      g["openfl.events.UncaughtErrorEvent"] = uk;
      uk.__name__ = "openfl.events.UncaughtErrorEvent";
      uk.__super__ = Qd;
      uk.prototype = r(Qd.prototype, { __class__: uk });
      var sk = function () {
        sa.call(this);
      };
      g["openfl.events.UncaughtErrorEvents"] = sk;
      sk.__name__ = "openfl.events.UncaughtErrorEvents";
      sk.__super__ = sa;
      sk.prototype = r(sa.prototype, { __class__: sk });
      var Zm = function () {
        this.__leftExtension = this.__bottomExtension = 0;
        this.__needSecondBitmapData = !0;
        this.__numShaderPasses = 0;
        this.__preserveObject = !1;
        this.__rightExtension = 0;
        this.__shaderBlendMode = 10;
        this.__topExtension = 0;
        this.__smooth = !0;
      };
      g["openfl.filters.BitmapFilter"] = Zm;
      Zm.__name__ = "openfl.filters.BitmapFilter";
      Zm.prototype = {
        __applyFilter: function (a, b, c, d) {
          return b;
        },
        __initShader: function (a, b, c) {
          return null;
        },
        __class__: Zm,
      };
      var wk = function (a) {
        null != a && 16 == a.get_length()
          ? (this.rawData = a.concat(null))
          : (this.rawData = rb.toFloatVector(
              null,
              null,
              null,
              [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
            ));
      };
      g["openfl.geom.Matrix3D"] = wk;
      wk.__name__ = "openfl.geom.Matrix3D";
      wk.prototype = {
        append: function (a) {
          var b = this.rawData.get(0),
            c = this.rawData.get(4),
            d = this.rawData.get(8),
            e = this.rawData.get(12),
            f = this.rawData.get(1),
            h = this.rawData.get(5),
            m = this.rawData.get(9),
            n = this.rawData.get(13),
            p = this.rawData.get(2),
            l = this.rawData.get(6),
            k = this.rawData.get(10),
            g = this.rawData.get(14),
            u = this.rawData.get(3),
            q = this.rawData.get(7),
            r = this.rawData.get(11),
            z = this.rawData.get(15),
            v = a.rawData.get(0),
            y = a.rawData.get(4),
            w = a.rawData.get(8),
            x = a.rawData.get(12),
            O = a.rawData.get(1),
            t = a.rawData.get(5),
            A = a.rawData.get(9),
            D = a.rawData.get(13),
            C = a.rawData.get(2),
            G = a.rawData.get(6),
            T = a.rawData.get(10),
            H = a.rawData.get(14),
            ca = a.rawData.get(3),
            Y = a.rawData.get(7),
            ra = a.rawData.get(11);
          a = a.rawData.get(15);
          this.rawData.set(0, b * v + f * y + p * w + u * x);
          this.rawData.set(1, b * O + f * t + p * A + u * D);
          this.rawData.set(2, b * C + f * G + p * T + u * H);
          this.rawData.set(3, b * ca + f * Y + p * ra + u * a);
          this.rawData.set(4, c * v + h * y + l * w + q * x);
          this.rawData.set(5, c * O + h * t + l * A + q * D);
          this.rawData.set(6, c * C + h * G + l * T + q * H);
          this.rawData.set(7, c * ca + h * Y + l * ra + q * a);
          this.rawData.set(8, d * v + m * y + k * w + r * x);
          this.rawData.set(9, d * O + m * t + k * A + r * D);
          this.rawData.set(10, d * C + m * G + k * T + r * H);
          this.rawData.set(11, d * ca + m * Y + k * ra + r * a);
          this.rawData.set(12, e * v + n * y + g * w + z * x);
          this.rawData.set(13, e * O + n * t + g * A + z * D);
          this.rawData.set(14, e * C + n * G + g * T + z * H);
          this.rawData.set(15, e * ca + n * Y + g * ra + z * a);
        },
        appendTranslation: function (a, b, c) {
          var d = this.rawData;
          d.set(12, d.get(12) + a);
          d = this.rawData;
          d.set(13, d.get(13) + b);
          d = this.rawData;
          d.set(14, d.get(14) + c);
        },
        copyRawDataFrom: function (a, b, c) {
          null == c && (c = !1);
          null == b && (b = 0);
          c && this.transpose();
          for (var d = 0, e = a.get_length() - b; d < e; ) {
            var f = d++;
            this.rawData.set(f, a.get(f + b));
          }
          c && this.transpose();
        },
        identity: function () {
          this.rawData = rb.toFloatVector(
            null,
            null,
            null,
            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
          );
        },
        transpose: function () {
          var a = this.rawData.copy();
          this.rawData.set(1, a.get(4));
          this.rawData.set(2, a.get(8));
          this.rawData.set(3, a.get(12));
          this.rawData.set(4, a.get(1));
          this.rawData.set(6, a.get(9));
          this.rawData.set(7, a.get(13));
          this.rawData.set(8, a.get(2));
          this.rawData.set(9, a.get(6));
          this.rawData.set(11, a.get(14));
          this.rawData.set(12, a.get(3));
          this.rawData.set(13, a.get(7));
          this.rawData.set(14, a.get(11));
        },
        __class__: wk,
      };
      var ti = function (a) {
        this.__colorTransform = new Bb();
        this.concatenatedColorTransform = new Bb();
        this.pixelBounds = new ma();
        this.__displayObject = a;
        this.__hasMatrix = !0;
      };
      g["openfl.geom.Transform"] = ti;
      ti.__name__ = "openfl.geom.Transform";
      ti.prototype = {
        get_colorTransform: function () {
          return this.__colorTransform;
        },
        set_colorTransform: function (a) {
          this.__colorTransform.__equals(a, !1) ||
            (this.__colorTransform.__copyFrom(a),
            null != a && this.__displayObject.set_alpha(a.alphaMultiplier),
            (a = this.__displayObject),
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty()));
          return this.__colorTransform;
        },
        get_matrix: function () {
          return this.__hasMatrix
            ? this.__displayObject.__transform.clone()
            : null;
        },
        set_matrix: function (a) {
          if (null == a) return (this.__hasMatrix = !1), null;
          this.__hasMatrix = !0;
          this.__hasMatrix3D = !1;
          null != this.__displayObject &&
            this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
          return a;
        },
        __setTransform: function (a, b, c, d, e, f) {
          if (null != this.__displayObject) {
            var h = this.__displayObject.__transform;
            if (
              h.a != a ||
              h.b != b ||
              h.c != c ||
              h.d != d ||
              h.tx != e ||
              h.ty != f
            ) {
              var m = 0 == b ? a : Math.sqrt(a * a + b * b);
              var n = 0 == c ? d : Math.sqrt(c * c + d * d);
              this.__displayObject.__scaleX = m;
              this.__displayObject.__scaleY = n;
              m = (180 / Math.PI) * Math.atan2(d, c) - 90;
              m != this.__displayObject.__rotation &&
                ((this.__displayObject.__rotation = m),
                (m *= Math.PI / 180),
                (this.__displayObject.__rotationSine = Math.sin(m)),
                (this.__displayObject.__rotationCosine = Math.cos(m)));
              h.a = a;
              h.b = b;
              h.c = c;
              h.d = d;
              h.tx = e;
              h.ty = f;
              this.__displayObject.__setTransformDirty();
            }
          }
        },
        __class__: ti,
        __properties__: {
          set_matrix: "set_matrix",
          get_matrix: "get_matrix",
          set_colorTransform: "set_colorTransform",
          get_colorTransform: "get_colorTransform",
        },
      };
      var tl = function () {};
      g["openfl.media.ID3Info"] = tl;
      tl.__name__ = "openfl.media.ID3Info";
      tl.prototype = { __class__: tl };
      var Zi = function (a, b) {
        sa.call(this, this);
        this.rightPeak = this.leftPeak = 1;
        this.__soundTransform = null != b ? b : new tf();
        null != a &&
          ((this.__source = a),
          this.__source.onComplete.add(q(this, this.source_onComplete)),
          (this.__isValid = !0),
          this.__source.play());
        yd.__registerSoundChannel(this);
      };
      g["openfl.media.SoundChannel"] = Zi;
      Zi.__name__ = "openfl.media.SoundChannel";
      Zi.__super__ = sa;
      Zi.prototype = r(sa.prototype, {
        stop: function () {
          yd.__unregisterSoundChannel(this);
          this.__isValid && (this.__source.stop(), this.__dispose());
        },
        __dispose: function () {
          this.__isValid &&
            (this.__source.onComplete.remove(q(this, this.source_onComplete)),
            this.__source.dispose(),
            (this.__source = null),
            (this.__isValid = !1));
        },
        __updateTransform: function () {
          this.set_soundTransform(this.get_soundTransform());
        },
        get_position: function () {
          return this.__isValid
            ? this.__source.get_currentTime() + this.__source.offset
            : 0;
        },
        set_position: function (a) {
          if (!this.__isValid) return 0;
          this.__source.set_currentTime((a | 0) - this.__source.offset);
          return a;
        },
        get_soundTransform: function () {
          return this.__soundTransform.clone();
        },
        set_soundTransform: function (a) {
          if (null != a) {
            this.__soundTransform.pan = a.pan;
            this.__soundTransform.volume = a.volume;
            var b = yd.__soundTransform.pan + this.__soundTransform.pan;
            -1 > b && (b = -1);
            1 < b && (b = 1);
            var c = yd.__soundTransform.volume * this.__soundTransform.volume;
            this.__isValid &&
              (this.__source.set_gain(c),
              (c = this.__source.get_position()),
              (c.x = b),
              (c.z = -1 * Math.sqrt(1 - Math.pow(b, 2))),
              this.__source.set_position(c));
          }
          return a;
        },
        source_onComplete: function () {
          yd.__unregisterSoundChannel(this);
          this.__dispose();
          this.dispatchEvent(new Ca("soundComplete"));
        },
        __class__: Zi,
        __properties__: {
          set_soundTransform: "set_soundTransform",
          get_soundTransform: "get_soundTransform",
          set_position: "set_position",
          get_position: "get_position",
        },
      });
      var rn = function () {};
      g["openfl.media.SoundLoaderContext"] = rn;
      rn.__name__ = "openfl.media.SoundLoaderContext";
      var tf = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 1);
        this.volume = a;
        this.pan = b;
        this.rightToRight =
          this.rightToLeft =
          this.leftToRight =
          this.leftToLeft =
            0;
      };
      g["openfl.media.SoundTransform"] = tf;
      tf.__name__ = "openfl.media.SoundTransform";
      tf.prototype = {
        clone: function () {
          return new tf(this.volume, this.pan);
        },
        __class__: tf,
      };
      var yd = function () {};
      g["openfl.media.SoundMixer"] = yd;
      yd.__name__ = "openfl.media.SoundMixer";
      yd.__registerSoundChannel = function (a) {
        yd.__soundChannels.push(a);
      };
      yd.__unregisterSoundChannel = function (a) {
        ba.remove(yd.__soundChannels, a);
      };
      var vm = function () {
        sa.call(this);
        this.__inputControl = window.document.createElement("input");
        this.__inputControl.setAttribute("type", "file");
        this.__inputControl.onclick = function (a) {
          a.cancelBubble = !0;
          a.stopPropagation();
        };
      };
      g["openfl.net.FileReference"] = vm;
      vm.__name__ = "openfl.net.FileReference";
      vm.__super__ = sa;
      vm.prototype = r(sa.prototype, { __class__: vm });
      var wm = function () {
        sa.call(this);
      };
      g["openfl.net.NetConnection"] = wm;
      wm.__name__ = "openfl.net.NetConnection";
      wm.__super__ = sa;
      wm.prototype = r(sa.prototype, { __class__: wm });
      var xm = function (a, b) {
        sa.call(this);
        this.__connection = a;
        this.__soundTransform = new tf();
        this.__video = window.document.createElement("video");
        this.__video.setAttribute("playsinline", "");
        this.__video.setAttribute("webkit-playsinline", "");
        this.__video.setAttribute("crossorigin", "anonymous");
        this.__video.addEventListener("error", q(this, this.video_onError), !1);
        this.__video.addEventListener(
          "waiting",
          q(this, this.video_onWaiting),
          !1
        );
        this.__video.addEventListener("ended", q(this, this.video_onEnd), !1);
        this.__video.addEventListener("pause", q(this, this.video_onPause), !1);
        this.__video.addEventListener(
          "seeking",
          q(this, this.video_onSeeking),
          !1
        );
        this.__video.addEventListener(
          "playing",
          q(this, this.video_onPlaying),
          !1
        );
        this.__video.addEventListener(
          "timeupdate",
          q(this, this.video_onTimeUpdate),
          !1
        );
        this.__video.addEventListener(
          "loadstart",
          q(this, this.video_onLoadStart),
          !1
        );
        this.__video.addEventListener(
          "stalled",
          q(this, this.video_onStalled),
          !1
        );
        this.__video.addEventListener(
          "durationchanged",
          q(this, this.video_onDurationChanged),
          !1
        );
        this.__video.addEventListener(
          "canplay",
          q(this, this.video_onCanPlay),
          !1
        );
        this.__video.addEventListener(
          "canplaythrough",
          q(this, this.video_onCanPlayThrough),
          !1
        );
        this.__video.addEventListener(
          "loadedmetadata",
          q(this, this.video_onLoadMetaData),
          !1
        );
      };
      g["openfl.net.NetStream"] = xm;
      xm.__name__ = "openfl.net.NetStream";
      xm.__super__ = sa;
      xm.prototype = r(sa.prototype, {
        __dispatchStatus: function (a) {
          a = new Ek("netStatus", !1, !1, { code: a });
          this.__connection.dispatchEvent(a);
          this.dispatchEvent(a);
        },
        __playStatus: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onPlayStatus;
              b({
                code: a,
                duration: this.__video.duration,
                position: this.__video.currentTime,
                speed: this.__video.playbackRate,
                start: this.__video.startTime,
              });
            } catch (c) {
              Ba.lastError = c;
            }
        },
        video_onCanPlay: function (a) {
          this.__playStatus("NetStream.Play.canplay");
        },
        video_onCanPlayThrough: function (a) {
          this.__playStatus("NetStream.Play.canplaythrough");
        },
        video_onDurationChanged: function (a) {
          this.__playStatus("NetStream.Play.durationchanged");
        },
        video_onEnd: function (a) {
          this.__dispatchStatus("NetStream.Play.Stop");
          this.__dispatchStatus("NetStream.Play.Complete");
          this.__playStatus("NetStream.Play.Complete");
        },
        video_onError: function (a) {
          this.__dispatchStatus("NetStream.Play.Stop");
          this.__playStatus("NetStream.Play.error");
        },
        video_onLoadMetaData: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onMetaData;
              b({
                width: this.__video.videoWidth,
                height: this.__video.videoHeight,
                duration: this.__video.duration,
              });
            } catch (c) {
              Ba.lastError = c;
            }
        },
        video_onLoadStart: function (a) {
          this.__playStatus("NetStream.Play.loadstart");
        },
        video_onPause: function (a) {
          this.__playStatus("NetStream.Play.pause");
        },
        video_onPlaying: function (a) {
          this.__dispatchStatus("NetStream.Play.Start");
          this.__playStatus("NetStream.Play.playing");
        },
        video_onSeeking: function (a) {
          this.__playStatus("NetStream.Play.seeking");
          this.__dispatchStatus("NetStream.Seek.Complete");
        },
        video_onStalled: function (a) {
          this.__playStatus("NetStream.Play.stalled");
        },
        video_onTimeUpdate: function (a) {
          null != this.__video &&
            ((this.time = this.__video.currentTime),
            this.__playStatus("NetStream.Play.timeupdate"));
        },
        video_onWaiting: function (a) {
          this.__playStatus("NetStream.Play.waiting");
        },
        __class__: xm,
      });
      var Oc = function () {
        sa.call(this);
        this.client = this;
        this.objectEncoding = Oc.defaultObjectEncoding;
      };
      g["openfl.net.SharedObject"] = Oc;
      Oc.__name__ = "openfl.net.SharedObject";
      Oc.getLocal = function (a, b, c) {
        c = " ~%&\\;:\"',<>?#".split("");
        var d = !0;
        if (null == a || "" == a) d = !1;
        else
          for (var e = 0; e < c.length; ) {
            var f = c[e];
            ++e;
            if (-1 < a.indexOf(f)) {
              d = !1;
              break;
            }
          }
        if (!d)
          throw C.thrown(new Cb("Error #2134: Cannot create SharedObject."));
        null == Oc.__sharedObjects &&
          ((Oc.__sharedObjects = new ea()),
          null != ua.current && ua.current.onExit.add(Oc.application_onExit));
        c = b + "/" + a;
        if (!Object.prototype.hasOwnProperty.call(Oc.__sharedObjects.h, c)) {
          d = null;
          try {
            var h = $h.getLocalStorage();
            null == b &&
              (null != h &&
                ((d = h.getItem(window.location.href + ":" + a)),
                h.removeItem(window.location.href + ":" + a)),
              (b = window.location.pathname));
            null != h && null == d && (d = h.getItem(b + ":" + a));
          } catch (n) {
            Ba.lastError = n;
          }
          h = new Oc();
          h.data = {};
          h.__localPath = b;
          h.__name = a;
          if (null != d && "" != d)
            try {
              var m = new jd(d);
              m.setResolver({
                resolveEnum: Ya.resolveEnum,
                resolveClass: Oc.__resolveClass,
              });
              h.data = m.unserialize();
            } catch (n) {
              Ba.lastError = n;
            }
          Oc.__sharedObjects.h[c] = h;
        }
        return Oc.__sharedObjects.h[c];
      };
      Oc.__resolveClass = function (a) {
        return null != a
          ? (K.startsWith(a, "neash.") &&
              (a = K.replace(a, "neash.", "openfl.")),
            K.startsWith(a, "native.") &&
              (a = K.replace(a, "native.", "openfl.")),
            K.startsWith(a, "flash.") &&
              (a = K.replace(a, "flash.", "openfl.")),
            K.startsWith(a, "openfl._v2.") &&
              (a = K.replace(a, "openfl._v2.", "openfl.")),
            K.startsWith(a, "openfl._legacy.") &&
              (a = K.replace(a, "openfl._legacy.", "openfl.")),
            g[a])
          : null;
      };
      Oc.application_onExit = function (a) {
        for (a = ea.valueIterator(Oc.__sharedObjects.h); a.hasNext(); )
          a.next().flush();
      };
      Oc.__super__ = sa;
      Oc.prototype = r(sa.prototype, {
        flush: function (a) {
          if (0 == ia.fields(this.data).length) return 0;
          a = ud.run(this.data);
          try {
            var b = $h.getLocalStorage();
            null != b &&
              (b.removeItem(this.__localPath + ":" + this.__name),
              b.setItem(this.__localPath + ":" + this.__name, a));
          } catch (c) {
            return (Ba.lastError = c), 1;
          }
          return 0;
        },
        __class__: Oc,
      });
      var ym = function (a) {
        sa.call(this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.dataFormat = 1;
        null != a && this.load(a);
      };
      g["openfl.net.URLLoader"] = ym;
      ym.__name__ = "openfl.net.URLLoader";
      ym.__super__ = sa;
      ym.prototype = r(sa.prototype, {
        load: function (a) {
          var b = this;
          if (0 == this.dataFormat) {
            var c = new mk();
            this.__prepareRequest(c, a);
            c.load()
              .onProgress(q(this, this.httpRequest_onProgress))
              .onError(q(this, this.httpRequest_onError))
              .onComplete(function (a) {
                b.__dispatchStatus();
                b.data = a;
                a = new Ca("complete");
                b.dispatchEvent(a);
              });
          } else
            (c = new og()),
              this.__prepareRequest(c, a),
              c
                .load()
                .onProgress(q(this, this.httpRequest_onProgress))
                .onError(q(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchStatus();
                  b.data = a;
                  a = new Ca("complete");
                  b.dispatchEvent(a);
                });
        },
        __dispatchStatus: function () {
          var a = new Dk(
            "httpStatus",
            !1,
            !1,
            this.__httpRequest.responseStatus
          );
          a.responseURL = this.__httpRequest.uri;
          var b = [];
          if (
            this.__httpRequest.enableResponseHeaders &&
            null != this.__httpRequest.responseHeaders
          )
            for (
              var c = 0, d = this.__httpRequest.responseHeaders;
              c < d.length;

            ) {
              var e = d[c];
              ++c;
              b.push(new zm(e.name, e.value));
            }
          a.responseHeaders = b;
          this.dispatchEvent(a);
        },
        __prepareRequest: function (a, b) {
          this.__httpRequest = a;
          this.__httpRequest.uri = b.url;
          this.__httpRequest.method = b.method;
          if (null != b.data)
            if (Ya.typeof(b.data) == Ud.TObject) {
              var c = ia.fields(b.data);
              for (a = 0; a < c.length; ) {
                var d = c[a];
                ++a;
                this.__httpRequest.formData.h[d] = ia.field(b.data, d);
              }
            } else
              this.__httpRequest.data =
                b.data instanceof gb ? b.data : gb.ofString(I.string(b.data));
          this.__httpRequest.contentType = b.contentType;
          if (null != b.requestHeaders)
            for (a = 0, c = b.requestHeaders; a < c.length; )
              (d = c[a]),
                ++a,
                this.__httpRequest.headers.push(new ek(d.name, d.value));
          this.__httpRequest.followRedirects = b.followRedirects;
          this.__httpRequest.timeout = b.idleTimeout | 0;
          this.__httpRequest.withCredentials = b.manageCookies;
          this.__httpRequest.userAgent = b.userAgent;
          this.__httpRequest.enableResponseHeaders = !0;
        },
        httpRequest_onError: function (a) {
          this.__dispatchStatus();
          var b = 403 == a ? new Fk("securityError") : new Ch("ioError");
          b.text = I.string(a);
          this.dispatchEvent(b);
        },
        httpRequest_onProgress: function (a, b) {
          var c = new fh("progress");
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c);
        },
        __class__: ym,
      });
      var xh = function (a) {
        null != a && (this.url = a);
        this.contentType = null;
        this.followRedirects = Xf.followRedirects;
        this.idleTimeout = 0 < Xf.idleTimeout ? Xf.idleTimeout : 3e4;
        this.manageCookies = Xf.manageCookies;
        this.method = "GET";
        this.requestHeaders = [];
        this.userAgent = Xf.userAgent;
      };
      g["openfl.net.URLRequest"] = xh;
      xh.__name__ = "openfl.net.URLRequest";
      xh.prototype = { __class__: xh };
      var Xf = function () {};
      g["openfl.net.URLRequestDefaults"] = Xf;
      Xf.__name__ = "openfl.net.URLRequestDefaults";
      var zm = function (a, b) {
        null == b && (b = "");
        null == a && (a = "");
        this.name = a;
        this.value = b;
      };
      g["openfl.net.URLRequestHeader"] = zm;
      zm.__name__ = "openfl.net.URLRequestHeader";
      zm.prototype = { __class__: zm };
      var Gb = function () {
        sa.call(this);
        Gb.initialize();
        this.__interval = 0;
        this.__muted = !1;
        this.setRequestedUpdateInterval(Gb.defaultInterval);
      };
      g["openfl.sensors.Accelerometer"] = Gb;
      Gb.__name__ = "openfl.sensors.Accelerometer";
      Gb.__properties__ = { get_isSupported: "get_isSupported" };
      Gb.initialize = function () {
        if (!Gb.initialized) {
          var a = Gd.getSensors(jn.ACCELEROMETER);
          0 < a.length &&
            (a[0].onUpdate.add(Gb.accelerometer_onUpdate), (Gb.supported = !0));
          Gb.initialized = !0;
        }
      };
      Gb.accelerometer_onUpdate = function (a, b, c) {
        Gb.currentX = a;
        Gb.currentY = b;
        Gb.currentZ = c;
      };
      Gb.get_isSupported = function () {
        Gb.initialize();
        return Gb.supported;
      };
      Gb.__super__ = sa;
      Gb.prototype = r(sa.prototype, {
        addEventListener: function (a, b, c, d, e) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          sa.prototype.addEventListener.call(this, a, b, c, d, e);
          this.update();
        },
        setRequestedUpdateInterval: function (a) {
          this.__interval = a;
          if (0 > this.__interval) throw C.thrown(new Eg());
          0 == this.__interval && (this.__interval = Gb.defaultInterval);
          null != this.__timer && (this.__timer.stop(), (this.__timer = null));
          Gb.supported &&
            !this.get_muted() &&
            ((this.__timer = new Tf(this.__interval)),
            (this.__timer.run = q(this, this.update)));
        },
        update: function () {
          var a = new Ck("update");
          a.timestamp = new Date().getTime() / 1e3;
          a.accelerationX = Gb.currentX;
          a.accelerationY = Gb.currentY;
          a.accelerationZ = Gb.currentZ;
          this.dispatchEvent(a);
        },
        get_muted: function () {
          return this.__muted;
        },
        __class__: Gb,
        __properties__: { get_muted: "get_muted" },
      });
      var eh = function (a) {
        this.parentDomain = null != a ? a : eh.currentDomain;
      };
      g["openfl.system.ApplicationDomain"] = eh;
      eh.__name__ = "openfl.system.ApplicationDomain";
      eh.prototype = { __class__: eh };
      var zc = function (a, b, c, d, e, f, h, m, n, p, l, k, g) {
        this.font = a;
        this.size = b;
        this.color = c;
        this.bold = d;
        this.italic = e;
        this.underline = f;
        this.url = h;
        this.target = m;
        this.align = n;
        this.leftMargin = p;
        this.rightMargin = l;
        this.indent = k;
        this.leading = g;
      };
      g["openfl.text.TextFormat"] = zc;
      zc.__name__ = "openfl.text.TextFormat";
      zc.prototype = {
        clone: function () {
          var a = new zc(
            this.font,
            this.size,
            this.color,
            this.bold,
            this.italic,
            this.underline,
            this.url,
            this.target
          );
          a.align = this.align;
          a.leftMargin = this.leftMargin;
          a.rightMargin = this.rightMargin;
          a.indent = this.indent;
          a.leading = this.leading;
          a.blockIndent = this.blockIndent;
          a.bullet = this.bullet;
          a.kerning = this.kerning;
          a.letterSpacing = this.letterSpacing;
          a.tabStops = this.tabStops;
          a.__ascent = this.__ascent;
          a.__descent = this.__descent;
          return a;
        },
        __merge: function (a) {
          null != a.font && (this.font = a.font);
          null != a.size && (this.size = a.size);
          null != a.color && (this.color = a.color);
          null != a.bold && (this.bold = a.bold);
          null != a.italic && (this.italic = a.italic);
          null != a.underline && (this.underline = a.underline);
          null != a.url && (this.url = a.url);
          null != a.target && (this.target = a.target);
          null != a.align && (this.align = a.align);
          null != a.leftMargin && (this.leftMargin = a.leftMargin);
          null != a.rightMargin && (this.rightMargin = a.rightMargin);
          null != a.indent && (this.indent = a.indent);
          null != a.leading && (this.leading = a.leading);
          null != a.blockIndent && (this.blockIndent = a.blockIndent);
          null != a.bullet && (this.bullet = a.bullet);
          null != a.kerning && (this.kerning = a.kerning);
          null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
          null != a.tabStops && (this.tabStops = a.tabStops);
          null != a.__ascent && (this.__ascent = a.__ascent);
          null != a.__descent && (this.__descent = a.__descent);
        },
        __class__: zc,
      };
      var Dn = {
          fromString: function (a) {
            switch (a) {
              case "center":
                return 0;
              case "end":
                return 1;
              case "justify":
                return 2;
              case "left":
                return 3;
              case "right":
                return 4;
              case "start":
                return 5;
              default:
                return null;
            }
          },
        },
        vb = function (a) {
          this.textField = a;
          this.height = this.width = 100;
          this.set_text("");
          this.bounds = new ma(0, 0, 0, 0);
          this.textBounds = new ma(0, 0, 0, 0);
          this.type = 0;
          this.autoSize = 2;
          this.embedFonts = !1;
          this.selectable = !0;
          this.borderColor = 0;
          this.border = !1;
          this.backgroundColor = 16777215;
          this.background = !1;
          this.gridFitType = 1;
          this.maxChars = 0;
          this.multiline = !1;
          this.numLines = 1;
          this.scrollH = this.sharpness = 0;
          this.set_scrollV(1);
          this.wordWrap = !1;
          this.lineAscents = rb.toFloatVector(null);
          this.lineBreaks = rb.toIntVector(null);
          this.lineDescents = rb.toFloatVector(null);
          this.lineLeadings = rb.toFloatVector(null);
          this.lineHeights = rb.toFloatVector(null);
          this.lineWidths = rb.toFloatVector(null);
          this.layoutGroups = rb.toObjectVector(null);
          this.textFormatRanges = rb.toObjectVector(null);
          null == vb.__context &&
            (vb.__context = window.document
              .createElement("canvas")
              .getContext("2d"));
        };
      g["openfl.text._internal.TextEngine"] = vb;
      vb.__name__ = "openfl.text._internal.TextEngine";
      vb.findFont = function (a) {
        return bb.__fontByName.h[a];
      };
      vb.findFontVariant = function (a) {
        var b = a.font,
          c = a.bold;
        a = a.italic;
        null == b && (b = "_serif");
        var d = K.replace(K.replace(b, " Normal", ""), " Regular", "");
        return c &&
          a &&
          Object.prototype.hasOwnProperty.call(
            bb.__fontByName.h,
            d + " Bold Italic"
          )
          ? vb.findFont(d + " Bold Italic")
          : c &&
            Object.prototype.hasOwnProperty.call(bb.__fontByName.h, d + " Bold")
          ? vb.findFont(d + " Bold")
          : a &&
            Object.prototype.hasOwnProperty.call(
              bb.__fontByName.h,
              d + " Italic"
            )
          ? vb.findFont(d + " Italic")
          : vb.findFont(b);
      };
      vb.getFormatHeight = function (a) {
        vb.__context.font = vb.getFont(a);
        var b = vb.getFontInstance(a);
        if (null != a.__ascent) {
          var c = a.size * a.__ascent;
          b = a.size * a.__descent;
        } else
          null != b && 0 != b.unitsPerEM
            ? ((c = (b.ascender / b.unitsPerEM) * a.size),
              (b = Math.abs((b.descender / b.unitsPerEM) * a.size)))
            : ((c = a.size), (b = 0.185 * a.size));
        return c + b + a.leading;
      };
      vb.getFont = function (a) {
        var b = a.font,
          c = a.bold,
          d = a.italic;
        null == b && (b = "_serif");
        var e = K.replace(K.replace(b, " Normal", ""), " Regular", "");
        c &&
        d &&
        Object.prototype.hasOwnProperty.call(
          bb.__fontByName.h,
          e + " Bold Italic"
        )
          ? ((b = e + " Bold Italic"), (d = c = !1))
          : c &&
            Object.prototype.hasOwnProperty.call(bb.__fontByName.h, e + " Bold")
          ? ((b = e + " Bold"), (c = !1))
          : d &&
            Object.prototype.hasOwnProperty.call(
              bb.__fontByName.h,
              e + " Italic"
            )
          ? ((b = e + " Italic"), (d = !1))
          : (c &&
              (-1 < b.indexOf(" Bold ") || K.endsWith(b, " Bold")) &&
              (c = !1),
            d &&
              (-1 < b.indexOf(" Italic ") || K.endsWith(b, " Italic")) &&
              (d = !1));
        c = (d ? "italic " : "normal ") + "normal " + (c ? "bold " : "normal ");
        c += a.size + "px";
        c += "/" + (a.leading + a.size + 3) + "px ";
        switch (b) {
          case "_sans":
            a = "sans-serif";
            break;
          case "_serif":
            a = "serif";
            break;
          case "_typewriter":
            a = "monospace";
            break;
          default:
            a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, "$1") + "'";
        }
        return (c += "" + a);
      };
      vb.getFontInstance = function (a) {
        return vb.findFontVariant(a);
      };
      vb.prototype = {
        getBounds: function () {
          var a = this.border ? 1 : 0;
          this.bounds.width = this.width + a;
          this.bounds.height = this.height + a;
          for (
            var b = (a = this.width), c = this.layoutGroups.iterator();
            c.hasNext();

          ) {
            var d = c.next();
            d.offsetX < a && (a = d.offsetX);
            d.offsetY < b && (b = d.offsetY);
          }
          a >= this.width && (a = 2);
          b >= this.height && (b = 2);
          this.textBounds.setTo(
            Math.max(a - 2, 0),
            Math.max(b - 2, 0),
            Math.min(this.textWidth + 4, this.bounds.width + 4),
            Math.min(1.185 * this.textHeight + 4, this.bounds.height + 4)
          );
        },
        getLineBreakIndex: function (a) {
          null == a && (a = 0);
          var b = this.text.indexOf("\n", a);
          a = this.text.indexOf("\r", a);
          return -1 == b ? a : -1 == a ? b : b < a ? b : a;
        },
        getLineMeasurements: function () {
          this.lineAscents.set_length(0);
          this.lineDescents.set_length(0);
          this.lineLeadings.set_length(0);
          this.lineHeights.set_length(0);
          this.lineWidths.set_length(0);
          var a = 0,
            b = 0,
            c = null,
            d = 0,
            e = 0,
            f;
          this.textHeight = this.textWidth = 0;
          this.numLines = 1;
          this.maxScrollH = 0;
          for (var h = this.layoutGroups.iterator(); h.hasNext(); ) {
            for (f = h.next(); f.lineIndex > this.numLines - 1; )
              this.lineAscents.push(a),
                this.lineDescents.push(b),
                this.lineLeadings.push(null != c ? c : 0),
                this.lineHeights.push(d),
                this.lineWidths.push(e),
                (b = a = 0),
                (c = null),
                (e = d = 0),
                this.numLines++;
            a = Math.max(a, f.ascent);
            b = Math.max(b, f.descent);
            c = null == c ? f.leading : Math.max(c, f.leading) | 0;
            d = Math.max(d, f.height);
            e = f.offsetX - 2 + f.width;
            e > this.textWidth && (this.textWidth = e);
            f = f.offsetY - 2 + f.ascent + f.descent;
            f > this.textHeight && (this.textHeight = f);
          }
          0 == this.textHeight &&
            null != this.textField &&
            1 == this.textField.get_type() &&
            ((a = this.textField.__textFormat),
            (b = vb.getFontInstance(a)),
            null != a.__ascent
              ? ((h = a.size * a.__ascent), (f = a.size * a.__descent))
              : null != b && 0 != b.unitsPerEM
              ? ((h = (b.ascender / b.unitsPerEM) * a.size),
                (f = Math.abs((b.descender / b.unitsPerEM) * a.size)))
              : ((h = a.size), (f = 0.185 * a.size)),
            (c = a.leading),
            (a = h),
            (b = f),
            (this.textHeight = h + f));
          this.lineAscents.push(a);
          this.lineDescents.push(b);
          this.lineLeadings.push(null != c ? c : 0);
          this.lineHeights.push(d);
          this.lineWidths.push(e);
          1 == this.numLines && 0 < c && (this.textHeight += c);
          0 < this.layoutGroups.get_length() &&
            ((h = this.layoutGroups.get(this.layoutGroups.get_length() - 1)),
            null != h && h.startIndex == h.endIndex && (this.textHeight -= d));
          if (2 != this.autoSize)
            switch (this.autoSize) {
              case 0:
              case 1:
              case 3:
                this.wordWrap || (this.width = this.textWidth + 4),
                  (this.height = this.textHeight + 4),
                  (this.bottomScrollV = this.numLines);
            }
          this.maxScrollH =
            this.textWidth > this.width - 4
              ? (this.textWidth - this.width + 4) | 0
              : 0;
          this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH);
        },
        getLayoutGroups: function () {
          var a = this;
          this.layoutGroups.set_length(0);
          if (null != this.text && "" != this.text) {
            var b = -1,
              c = null,
              d = null,
              e = ec.__defaultTextFormat.clone(),
              f = 0,
              h = 0,
              m = 0,
              n = 0,
              p = 3,
              l = null,
              k = null,
              g = 0,
              u = 0,
              q = 0,
              r = -2,
              z = -1,
              v = this.text.indexOf(" "),
              y = this.getLineBreakIndex(),
              w = 2,
              x = 2,
              O = 0,
              t = 0,
              A = function (b, c, d) {
                var e = [];
                if (null == a.__useIntAdvances) {
                  var f = new Ua("Trident/7.0", "");
                  a.__useIntAdvances = f.match(E.navigator.userAgent);
                }
                if (a.__useIntAdvances) {
                  var h = 0;
                  for (f = c; f < d; ) {
                    var k = f++;
                    k = vb.__context.measureText(b.substring(c, k + 1)).width;
                    e.push(k - h);
                    h = k;
                  }
                } else
                  for (f = c; f < d; )
                    (k = f++),
                      k < b.length - 1
                        ? ((c = vb.__context.measureText(
                            b.charAt(k + 1)
                          ).width),
                          (c =
                            vb.__context.measureText(ba.substr(b, k, 2)).width -
                            c))
                        : (c = vb.__context.measureText(b.charAt(k)).width),
                      e.push(c);
                return e;
              },
              D = function (a) {
                for (var b = 0, c = 0; c < a.length; ) {
                  var d = a[c];
                  ++c;
                  b += d;
                }
                return b;
              },
              C = function (b, d) {
                null == l || l.startIndex != l.endIndex
                  ? ((l = new Gk(c.format, b, d)), a.layoutGroups.push(l))
                  : ((l.format = c.format),
                    (l.startIndex = b),
                    (l.endIndex = d));
              },
              G = function () {
                null != e.__ascent
                  ? ((h = e.size * e.__ascent), (n = e.size * e.__descent))
                  : null != d && 0 != d.unitsPerEM
                  ? ((h = (d.ascender / d.unitsPerEM) * e.size),
                    (n = Math.abs((d.descender / d.unitsPerEM) * e.size)))
                  : ((h = e.size), (n = 0.185 * e.size));
                f = e.leading;
                u = Math.ceil(h + n + f);
                u > q && (q = u);
                h > m && (m = h);
              },
              T = function () {
                return b < a.textFormatRanges.get_length() - 1
                  ? ((b += 1),
                    (c = a.textFormatRanges.get(b)),
                    e.__merge(c.format),
                    (vb.__context.font = vb.getFont(e)),
                    (d = vb.getFontInstance(e)),
                    !0)
                  : !1;
              },
              H = function (d, e) {
                if (e <= c.end) (k = A(a.text, d, e)), (g = D(k));
                else {
                  var f = d;
                  d = c.end;
                  var h = 0;
                  k = [];
                  for (g = 0; ; )
                    if (
                      (f != d && ((f = A(a.text, f, d)), (k = k.concat(f))),
                      d != e)
                    ) {
                      if (!T()) {
                        Pa.warn(
                          "You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.",
                          {
                            fileName: "openfl/text/_internal/TextEngine.hx",
                            lineNumber: 1061,
                            className: "openfl.text._internal.TextEngine",
                            methodName: "getLayoutGroups",
                          }
                        );
                        break;
                      }
                      f = d;
                      d = e < c.end ? e : c.end;
                      ++h;
                    } else {
                      g = D(k);
                      break;
                    }
                  b -= h + 1;
                  T();
                }
              },
              ca = function (b) {
                if (b <= c.end)
                  (k = A(a.text, O, b)),
                    (g = D(k)),
                    C(O, b),
                    (l.positions = k),
                    (l.offsetX = w),
                    (l.ascent = h),
                    (l.descent = n),
                    (l.leading = f),
                    (l.lineIndex = t),
                    (l.offsetY = x),
                    (l.width = g),
                    (l.height = u),
                    (w += g),
                    b == c.end && ((l = null), T(), G());
                else
                  for (;;) {
                    var d = b < c.end ? b : c.end;
                    O != d &&
                      ((k = A(a.text, O, d)),
                      (g = D(k)),
                      C(O, d),
                      (l.positions = k),
                      (l.offsetX = w),
                      (l.ascent = h),
                      (l.descent = n),
                      (l.leading = f),
                      (l.lineIndex = t),
                      (l.offsetY = x),
                      (l.width = g),
                      (l.height = u),
                      (w += g),
                      (O = d));
                    d == c.end && (l = null);
                    if (d == b) break;
                    if (!T()) {
                      Pa.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.",
                        {
                          fileName: "openfl/text/_internal/TextEngine.hx",
                          lineNumber: 1149,
                          className: "openfl.text._internal.TextEngine",
                          methodName: "getLayoutGroups",
                        }
                      );
                      break;
                    }
                    G();
                  }
                O = b;
              },
              Y = function () {
                G();
                for (var b = a.layoutGroups.get_length(); -1 < --b; ) {
                  var c = a.layoutGroups.get(b);
                  if (c.lineIndex < t) break;
                  c.lineIndex > t || ((c.ascent = m), (c.height = q));
                }
                x += q;
                q = m = 0;
                t += 1;
                w = 2;
              },
              ra = function (b) {
                if (4 <= a.width && a.wordWrap) {
                  var c = k,
                    d,
                    e,
                    f;
                  for (d = D(c); w + d > a.width - 2; ) {
                    for (f = d = e = 0; w + f < a.width - 2; ) {
                      var h = c[d];
                      0 == h ? (++d, ++e) : ((f += h), ++d);
                    }
                    if (0 == f) break;
                    else if (2 > d && f + w > a.width - 2) {
                      if (O + d - e == b) break;
                    } else
                      for (; w + f > a.width - 2; )
                        --d,
                          0 < d - e
                            ? (H(O, O + d - e), (f = g))
                            : ((d = 1), (e = 0), H(O, O + 1), (f = 0));
                    c = O + d - e;
                    ca(c);
                    Y();
                    H(c, b);
                    c = k;
                    d = g;
                  }
                }
                ca(b);
              };
            T();
            null != e.align && (p = e.align);
            G();
            for (var I, B = this.text.length + 1; O < B; )
              if (-1 < y && (-1 == v || y < v))
                O <= y
                  ? (H(O, y), ra(y), (l = null))
                  : null != l &&
                    l.startIndex != l.endIndex &&
                    (l.endIndex == v &&
                      (l.width -= l.positions[l.positions.length - 1]),
                    (l = null)),
                  c.end == y && (T(), G()),
                  Y(),
                  (O = y + 1),
                  (z = y),
                  (y = this.getLineBreakIndex(O)),
                  null != e.align && (p = e.align);
              else if (-1 < v)
                for (
                  null != l && l.startIndex != l.endIndex && (l = null), I = !1;
                  O < this.text.length;

                ) {
                  var K = -1;
                  -1 == v ? (K = y) : ((K = v + 1), -1 < y && y < K && (K = y));
                  -1 == K && (K = this.text.length);
                  H(O, K);
                  if (2 == p) {
                    if (0 < k.length && O == r) {
                      O += 1;
                      var J = k.shift();
                      g -= J;
                      w += J;
                    }
                    0 < k.length &&
                      K == v + 1 &&
                      (--K, (J = k.pop()), (g -= J));
                  }
                  this.wordWrap &&
                    w + g > this.width - 2 &&
                    ((I = !0),
                    0 < k.length &&
                      K == v + 1 &&
                      w + g - k[k.length - 1] <= this.width - 2 &&
                      (I = !1));
                  if (I) {
                    2 != p &&
                      (null != l || 0 < this.layoutGroups.get_length()) &&
                      ((I = l),
                      null == I &&
                        (I = this.layoutGroups.get(
                          this.layoutGroups.get_length() - 1
                        )),
                      (I.width -= I.positions[I.positions.length - 1]),
                      I.endIndex--);
                    I = this.layoutGroups.get_length() - 1;
                    for (J = 0; ; ) {
                      l = this.layoutGroups.get(I);
                      if (0 < I && l.startIndex > r) ++J;
                      else break;
                      --I;
                    }
                    O == r + 1 && Y();
                    w = 2;
                    if (0 < J) {
                      I = this.layoutGroups.get(
                        this.layoutGroups.get_length() - J
                      ).offsetX;
                      J = this.layoutGroups.get_length() - J;
                      for (var F = this.layoutGroups.get_length(); J < F; ) {
                        var M = J++;
                        l = this.layoutGroups.get(M);
                        l.offsetX -= I;
                        l.offsetY = x;
                        l.lineIndex = t;
                        w += l.width;
                      }
                    }
                    ra(K);
                    I = !1;
                  } else
                    null != l && O == v
                      ? (2 != p &&
                          ((l.endIndex = v),
                          (l.positions = l.positions.concat(k)),
                          (l.width += g)),
                        (w += g),
                        (O = K))
                      : null == l || 2 == p
                      ? ra(K)
                      : ((J = K < c.end ? K : c.end),
                        J < K && ((k = A(this.text, O, J)), (g = D(k))),
                        (l.endIndex = J),
                        (l.positions = l.positions.concat(k)),
                        (l.width += g),
                        (w += g),
                        J == c.end &&
                          ((l = null), T(), G(), (O = J), J != K && ca(K)),
                        y == K && ++K,
                        (O = K));
                  K = this.text.indexOf(" ", O);
                  y == r &&
                    ((l.endIndex = y),
                    0 > y - l.startIndex - l.positions.length &&
                      l.positions.push(0),
                    (O = y + 1));
                  r = v;
                  v = K;
                  if (
                    (-1 < y && y <= O && (v > y || -1 == v)) ||
                    O > this.text.length
                  )
                    break;
                }
              else
                O < this.text.length &&
                  (H(O, this.text.length), ra(this.text.length), Y()),
                  (O += 1);
            z == O - 2 &&
              -1 < z &&
              (C(O, O),
              (l.positions = []),
              (l.ascent = h),
              (l.descent = n),
              (l.leading = f),
              (l.lineIndex = t),
              (l.offsetX = 2),
              (l.offsetY = x),
              (l.width = 0),
              (l.height = u));
          }
        },
        restrictText: function (a) {
          if (null == a) return a;
          null != this.__restrictRegexp &&
            (a = this.__restrictRegexp.split(a).join(""));
          return a;
        },
        setTextAlignment: function () {
          for (
            var a = -1,
              b = 0,
              c,
              d,
              e = !1,
              f = 0,
              h = this.layoutGroups.get_length();
            f < h;

          ) {
            var m = f++;
            c = this.layoutGroups.get(m);
            if (c.lineIndex != a)
              switch (
                ((a = c.lineIndex),
                (b = this.width - 4 - c.format.rightMargin),
                c.format.align)
              ) {
                case 0:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round((b - this.lineWidths.get(a)) / 2)
                      : 0;
                  break;
                case 2:
                  if (this.lineWidths.get(a) < b) {
                    d = 1;
                    for (
                      var n = m + 1, p = this.layoutGroups.get_length();
                      n < p;

                    ) {
                      var l = n++;
                      if (this.layoutGroups.get(l).lineIndex == a)
                        (0 != l &&
                          32 !=
                            ba.cca(
                              this.text,
                              this.layoutGroups.get(l).startIndex - 1
                            )) ||
                          ++d;
                      else break;
                    }
                    if (
                      1 < d &&
                      ((c = this.layoutGroups.get(m + d - 1)),
                      (n = ba.cca(this.text, c.endIndex)),
                      c.endIndex < this.text.length && 10 != n && 13 != n)
                    )
                      for (
                        b = (b - this.lineWidths.get(a)) / (d - 1),
                          e = !0,
                          n = 1;
                        (this.layoutGroups.get(m + n).offsetX += b * n),
                          ++n < d;

                      );
                  }
                  b = 0;
                  break;
                case 4:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round(b - this.lineWidths.get(a))
                      : 0;
                  break;
                default:
                  b = 0;
              }
            0 < b && (c.offsetX += b);
          }
          e && this.getLineMeasurements();
        },
        update: function () {
          null == this.text || 0 == this.textFormatRanges.get_length()
            ? (this.lineAscents.set_length(0),
              this.lineBreaks.set_length(0),
              this.lineDescents.set_length(0),
              this.lineLeadings.set_length(0),
              this.lineHeights.set_length(0),
              this.lineWidths.set_length(0),
              this.layoutGroups.set_length(0),
              (this.textHeight = this.textWidth = 0),
              (this.numLines = 1),
              (this.maxScrollH = 0),
              (this.bottomScrollV = this.maxScrollV = 1))
            : (this.getLayoutGroups(),
              this.getLineMeasurements(),
              this.setTextAlignment());
          this.getBounds();
        },
        get_bottomScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (
            var a = 0,
              b = this.lineHeights.get_length(),
              c = b - 1,
              d = this.lineHeights.get_length();
            c < d;

          ) {
            var e = c++;
            if (a + this.lineHeights.get(e) <= this.height - 4)
              a += this.lineHeights.get(e);
            else {
              b = e;
              break;
            }
          }
          return 1 > b ? 1 : b;
        },
        get_maxScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          var a = this.numLines - 1,
            b = 0;
          10 == ba.cca(this.text, this.text.length - 1) && --a;
          for (var c = a; 0 <= a; )
            if (b + this.lineHeights.get(a) <= this.height - 4)
              (b += this.lineHeights.get(a)), --a;
            else break;
          a = a == c ? this.numLines : a + 2;
          return 1 > a ? 1 : a;
        },
        get_scrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          var a = this.get_maxScrollV();
          return this.scrollV > a ? a : this.scrollV;
        },
        set_scrollV: function (a) {
          1 > a && (a = 1);
          return (this.scrollV = a);
        },
        set_text: function (a) {
          return (this.text = a);
        },
        __class__: vb,
        __properties__: {
          set_text: "set_text",
          set_scrollV: "set_scrollV",
          get_scrollV: "get_scrollV",
          get_maxScrollV: "get_maxScrollV",
          get_bottomScrollV: "get_bottomScrollV",
        },
      };
      var Af = function (a, b, c) {
        this.format = a;
        this.start = b;
        this.end = c;
      };
      g["openfl.text._internal.TextFormatRange"] = Af;
      Af.__name__ = "openfl.text._internal.TextFormatRange";
      Af.prototype = { __class__: Af };
      var Gk = function (a, b, c) {
        this.format = a;
        this.startIndex = b;
        this.endIndex = c;
      };
      g["openfl.text._internal.TextLayoutGroup"] = Gk;
      Gk.__name__ = "openfl.text._internal.TextLayoutGroup";
      Gk.prototype = { __class__: Gk };
      var Md = function (a, b, c, d, e) {
        null == e && (e = 0);
        sa.call(this);
        this.device = a;
        this.id = b;
        this.minValue = c;
        this.maxValue = d;
        this.value = e;
      };
      g["openfl.ui.GameInputControl"] = Md;
      Md.__name__ = "openfl.ui.GameInputControl";
      Md.__super__ = sa;
      Md.prototype = r(sa.prototype, { __class__: Md });
      var Cl = function (a, b) {
        this.__controls = [];
        this.__button = new lc();
        this.__axis = new lc();
        this.id = a;
        this.name = b;
        a = new Md(this, "AXIS_0", -1, 1);
        this.__axis.h[0] = a;
        this.__controls.push(a);
        a = new Md(this, "AXIS_1", -1, 1);
        this.__axis.h[1] = a;
        this.__controls.push(a);
        a = new Md(this, "AXIS_2", -1, 1);
        this.__axis.h[2] = a;
        this.__controls.push(a);
        a = new Md(this, "AXIS_3", -1, 1);
        this.__axis.h[3] = a;
        this.__controls.push(a);
        a = new Md(this, "AXIS_4", -1, 1);
        this.__axis.h[4] = a;
        this.__controls.push(a);
        a = new Md(this, "AXIS_5", -1, 1);
        this.__axis.h[5] = a;
        this.__controls.push(a);
        for (b = 0; 15 > b; ) {
          var c = b++;
          a = new Md(this, "BUTTON_" + c, 0, 1);
          this.__button.h[c] = a;
          this.__controls.push(a);
        }
      };
      g["openfl.ui.GameInputDevice"] = Cl;
      Cl.__name__ = "openfl.ui.GameInputDevice";
      Cl.prototype = {
        getControlAt: function (a) {
          return 0 <= a && a < this.__controls.length
            ? this.__controls[a]
            : null;
        },
        get_numControls: function () {
          return this.__controls.length;
        },
        __class__: Cl,
        __properties__: { get_numControls: "get_numControls" },
      };
      var Xm = function () {};
      g["openfl.ui.Keyboard"] = Xm;
      Xm.__name__ = "openfl.ui.Keyboard";
      Xm.__getCharCode = function (a, b) {
        null == b && (b = !1);
        if (b) {
          switch (a) {
            case 48:
              return 41;
            case 49:
              return 33;
            case 50:
              return 64;
            case 51:
              return 35;
            case 52:
              return 36;
            case 53:
              return 37;
            case 54:
              return 94;
            case 55:
              return 38;
            case 56:
              return 42;
            case 57:
              return 40;
            case 186:
              return 58;
            case 187:
              return 43;
            case 188:
              return 60;
            case 189:
              return 95;
            case 190:
              return 62;
            case 191:
              return 63;
            case 192:
              return 126;
            case 219:
              return 123;
            case 220:
              return 124;
            case 221:
              return 125;
            case 222:
              return 34;
          }
          if (65 <= a && 90 >= a) return a - 65 + 65;
        } else {
          switch (a) {
            case 8:
              return 8;
            case 9:
              return 9;
            case 13:
              return 13;
            case 27:
              return 27;
            case 32:
              return 32;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
          }
          if (48 <= a && 57 >= a) return a - 48 + 48;
          if (65 <= a && 90 >= a) return a - 65 + 97;
        }
        if (96 <= a && 105 >= a) return a - 96 + 48;
        switch (a) {
          case 8:
            return 8;
          case 13:
            return 13;
          case 46:
            return 127;
          case 106:
            return 42;
          case 107:
            return 43;
          case 108:
            return 44;
          case 110:
            return 45;
          case 111:
            return 46;
        }
        return 0;
      };
      var sc = function () {};
      g["openfl.ui.Mouse"] = sc;
      sc.__name__ = "openfl.ui.Mouse";
      sc.__properties__ = { set_cursor: "set_cursor" };
      sc.hide = function () {
        sc.__hidden = !0;
        for (var a = 0, b = ua.current.__windows; a < b.length; ) {
          var c = b[a];
          ++a;
          c.set_cursor(null);
        }
      };
      sc.show = function () {
        sc.__hidden = !1;
        var a = sc.__cursor;
        sc.__cursor = null;
        sc.set_cursor(a);
      };
      sc.set_cursor = function (a) {
        null == a && (a = "auto");
        var b = null;
        switch (a) {
          case "arrow":
            b = Ub.ARROW;
            break;
          case "button":
            b = Ub.POINTER;
            break;
          case "crosshair":
            b = Ub.CROSSHAIR;
            break;
          case "custom":
            b = Ub.CUSTOM;
            break;
          case "hand":
            b = Ub.MOVE;
            break;
          case "ibeam":
            b = Ub.TEXT;
            break;
          case "resize_nesw":
            b = Ub.RESIZE_NESW;
            break;
          case "resize_ns":
            b = Ub.RESIZE_NS;
            break;
          case "resize_nwse":
            b = Ub.RESIZE_NWSE;
            break;
          case "resize_we":
            b = Ub.RESIZE_WE;
            break;
          case "wait":
            b = Ub.WAIT;
            break;
          case "waitarrow":
            b = Ub.WAIT_ARROW;
        }
        if (null != b && !sc.__hidden)
          for (var c = 0, d = ua.current.__windows; c < d.length; ) {
            var e = d[c];
            ++c;
            e.set_cursor(b);
          }
        return (sc.__cursor = a);
      };
      var Gn = {
          toLimeCursor: function (a) {
            switch (a) {
              case "arrow":
                return Ub.ARROW;
              case "auto":
                return Ub.DEFAULT;
              case "button":
                return Ub.POINTER;
              case "crosshair":
                return Ub.CROSSHAIR;
              case "custom":
                return Ub.CUSTOM;
              case "hand":
                return Ub.MOVE;
              case "ibeam":
                return Ub.TEXT;
              case "resize_nesw":
                return Ub.RESIZE_NESW;
              case "resize_ns":
                return Ub.RESIZE_NS;
              case "resize_nwse":
                return Ub.RESIZE_NWSE;
              case "resize_we":
                return Ub.RESIZE_WE;
              case "wait":
                return Ub.WAIT;
              case "waitarrow":
                return Ub.WAIT_ARROW;
              default:
                return Ub.DEFAULT;
            }
          },
        },
        Tg = function () {};
      g["openfl.ui.Multitouch"] = Tg;
      Tg.__name__ = "openfl.ui.Multitouch";
      var ka = function (a) {
        null == a && (a = !1);
        this.debugEnabled = a;
        ka.initialized || ka.init();
      };
      g["openfl.utils.AGALMiniAssembler"] = ka;
      ka.__name__ = "openfl.utils.AGALMiniAssembler";
      ka.init = function () {
        ka.initialized = !0;
        var a = ka.OPMAP,
          b = new hb("mov", 2, 0, 0);
        a.h.mov = b;
        a = ka.OPMAP;
        b = new hb("add", 3, 1, 0);
        a.h.add = b;
        a = ka.OPMAP;
        b = new hb("sub", 3, 2, 0);
        a.h.sub = b;
        a = ka.OPMAP;
        b = new hb("mul", 3, 3, 0);
        a.h.mul = b;
        a = ka.OPMAP;
        b = new hb("div", 3, 4, 0);
        a.h.div = b;
        a = ka.OPMAP;
        b = new hb("rcp", 2, 5, 0);
        a.h.rcp = b;
        a = ka.OPMAP;
        b = new hb("min", 3, 6, 0);
        a.h.min = b;
        a = ka.OPMAP;
        b = new hb("max", 3, 7, 0);
        a.h.max = b;
        a = ka.OPMAP;
        b = new hb("frc", 2, 8, 0);
        a.h.frc = b;
        a = ka.OPMAP;
        b = new hb("sqt", 2, 9, 0);
        a.h.sqt = b;
        a = ka.OPMAP;
        b = new hb("rsq", 2, 10, 0);
        a.h.rsq = b;
        a = ka.OPMAP;
        b = new hb("pow", 3, 11, 0);
        a.h.pow = b;
        a = ka.OPMAP;
        b = new hb("log", 2, 12, 0);
        a.h.log = b;
        a = ka.OPMAP;
        b = new hb("exp", 2, 13, 0);
        a.h.exp = b;
        a = ka.OPMAP;
        b = new hb("nrm", 2, 14, 0);
        a.h.nrm = b;
        a = ka.OPMAP;
        b = new hb("sin", 2, 15, 0);
        a.h.sin = b;
        a = ka.OPMAP;
        b = new hb("cos", 2, 16, 0);
        a.h.cos = b;
        a = ka.OPMAP;
        b = new hb("crs", 3, 17, 0);
        a.h.crs = b;
        a = ka.OPMAP;
        b = new hb("dp3", 3, 18, 0);
        a.h.dp3 = b;
        a = ka.OPMAP;
        b = new hb("dp4", 3, 19, 0);
        a.h.dp4 = b;
        a = ka.OPMAP;
        b = new hb("abs", 2, 20, 0);
        a.h.abs = b;
        a = ka.OPMAP;
        b = new hb("neg", 2, 21, 0);
        a.h.neg = b;
        a = ka.OPMAP;
        b = new hb("sat", 2, 22, 0);
        a.h.sat = b;
        a = ka.OPMAP;
        b = new hb("m33", 3, 23, 16);
        a.h.m33 = b;
        a = ka.OPMAP;
        b = new hb("m44", 3, 24, 16);
        a.h.m44 = b;
        a = ka.OPMAP;
        b = new hb("m34", 3, 25, 16);
        a.h.m34 = b;
        a = ka.OPMAP;
        b = new hb("ddx", 2, 26, 288);
        a.h.ddx = b;
        a = ka.OPMAP;
        b = new hb("ddy", 2, 27, 288);
        a.h.ddy = b;
        a = ka.OPMAP;
        b = new hb("ife", 2, 28, 897);
        a.h.ife = b;
        a = ka.OPMAP;
        b = new hb("ine", 2, 29, 897);
        a.h.ine = b;
        a = ka.OPMAP;
        b = new hb("ifg", 2, 30, 897);
        a.h.ifg = b;
        a = ka.OPMAP;
        b = new hb("ifl", 2, 31, 897);
        a.h.ifl = b;
        a = ka.OPMAP;
        b = new hb("els", 0, 32, 1921);
        a.h.els = b;
        a = ka.OPMAP;
        b = new hb("eif", 0, 33, 1409);
        a.h.eif = b;
        a = ka.OPMAP;
        b = new hb("kil", 1, 39, 160);
        a.h.kil = b;
        a = ka.OPMAP;
        b = new hb("tex", 3, 40, 40);
        a.h.tex = b;
        a = ka.OPMAP;
        b = new hb("sge", 3, 41, 0);
        a.h.sge = b;
        a = ka.OPMAP;
        b = new hb("slt", 3, 42, 0);
        a.h.slt = b;
        a = ka.OPMAP;
        b = new hb("sgn", 2, 43, 0);
        a.h.sgn = b;
        a = ka.OPMAP;
        b = new hb("seq", 3, 44, 0);
        a.h.seq = b;
        a = ka.OPMAP;
        b = new hb("sne", 3, 45, 0);
        a.h.sne = b;
        a = ka.SAMPLEMAP;
        b = new Jb("rgba", 8, 0);
        a.h.rgba = b;
        a = ka.SAMPLEMAP;
        b = new Jb("compressed", 8, 1);
        a.h.compressed = b;
        a = ka.SAMPLEMAP;
        b = new Jb("compressedalpha", 8, 2);
        a.h.compressedalpha = b;
        a = ka.SAMPLEMAP;
        b = new Jb("dxt1", 8, 1);
        a.h.dxt1 = b;
        a = ka.SAMPLEMAP;
        b = new Jb("dxt5", 8, 2);
        a.h.dxt5 = b;
        a = ka.SAMPLEMAP;
        b = new Jb("video", 8, 3);
        a.h.video = b;
        a = ka.SAMPLEMAP;
        b = new Jb("2d", 12, 0);
        a.h["2d"] = b;
        a = ka.SAMPLEMAP;
        b = new Jb("3d", 12, 2);
        a.h["3d"] = b;
        a = ka.SAMPLEMAP;
        b = new Jb("cube", 12, 1);
        a.h.cube = b;
        a = ka.SAMPLEMAP;
        b = new Jb("mipnearest", 24, 1);
        a.h.mipnearest = b;
        a = ka.SAMPLEMAP;
        b = new Jb("miplinear", 24, 2);
        a.h.miplinear = b;
        a = ka.SAMPLEMAP;
        b = new Jb("mipnone", 24, 0);
        a.h.mipnone = b;
        a = ka.SAMPLEMAP;
        b = new Jb("nomip", 24, 0);
        a.h.nomip = b;
        a = ka.SAMPLEMAP;
        b = new Jb("nearest", 28, 0);
        a.h.nearest = b;
        a = ka.SAMPLEMAP;
        b = new Jb("linear", 28, 1);
        a.h.linear = b;
        a = ka.SAMPLEMAP;
        b = new Jb("anisotropic2x", 28, 2);
        a.h.anisotropic2x = b;
        a = ka.SAMPLEMAP;
        b = new Jb("anisotropic4x", 28, 3);
        a.h.anisotropic4x = b;
        a = ka.SAMPLEMAP;
        b = new Jb("anisotropic8x", 28, 4);
        a.h.anisotropic8x = b;
        a = ka.SAMPLEMAP;
        b = new Jb("anisotropic16x", 28, 5);
        a.h.anisotropic16x = b;
        a = ka.SAMPLEMAP;
        b = new Jb("centroid", 16, 1);
        a.h.centroid = b;
        a = ka.SAMPLEMAP;
        b = new Jb("single", 16, 2);
        a.h.single = b;
        a = ka.SAMPLEMAP;
        b = new Jb("ignoresampler", 16, 4);
        a.h.ignoresampler = b;
        a = ka.SAMPLEMAP;
        b = new Jb("repeat", 20, 1);
        a.h.repeat = b;
        a = ka.SAMPLEMAP;
        b = new Jb("wrap", 20, 1);
        a.h.wrap = b;
        a = ka.SAMPLEMAP;
        b = new Jb("clamp", 20, 0);
        a.h.clamp = b;
        a = ka.SAMPLEMAP;
        b = new Jb("clamp_u_repeat_v", 20, 2);
        a.h.clamp_u_repeat_v = b;
        a = ka.SAMPLEMAP;
        b = new Jb("repeat_u_clamp_v", 20, 3);
        a.h.repeat_u_clamp_v = b;
      };
      ka.prototype = {
        assemble: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = 1);
          var e = na.getTimer();
          this.agalcode = new id(0);
          this.error = "";
          var f = !1;
          "fragment" == a
            ? (f = !0)
            : "vertex" != a &&
              (this.error =
                'ERROR: mode needs to be "fragment" or "vertex" but is "' +
                a +
                '".');
          this.agalcode.__endian = 1;
          this.agalcode.writeByte(160);
          this.agalcode.writeUnsignedInt(c);
          this.agalcode.writeByte(161);
          this.agalcode.writeByte(f ? 1 : 0);
          this.initregmap(c, d);
          a = K.replace(b, "\r", "\n").split("\n");
          b = 0;
          d = a.length;
          for (
            var h = new Ua("<.*>", "g"),
              m = new Ua("([\\w\\.\\-\\+]+)", "gi"),
              n = new Ua("^\\w{3}", "ig"),
              p = new Ua(
                "vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?",
                "gi"
              ),
              l = new Ua("\\[.*\\]", "ig"),
              k = new Ua("^\\b[A-Za-z]{1,3}", "ig"),
              g = new Ua("\\d+", ""),
              u = new Ua("(\\.[xyzw]{1,4})", ""),
              q = new Ua("[A-Za-z]{1,3}", "ig"),
              r = new Ua("(\\.[xyzw]{1,1})", ""),
              z = new Ua("\\+\\d{1,3}", "ig"),
              v = 0;
            v < d && "" == this.error;

          ) {
            var y = K.trim(a[v]),
              O = y.indexOf("//");
            -1 != O && (y = ba.substr(y, 0, O));
            var w = h.match(y) ? h.matchedPos().pos : -1;
            O = null;
            -1 != w &&
              ((O = this.match(ba.substr(y, w, null), m)),
              (y = ba.substr(y, 0, w)));
            var x = null;
            n.match(y) && ((w = n.matched(0)), (x = ka.OPMAP.h[w]));
            if (null == x)
              3 <= y.length &&
                Pa.warn("warning: bad line " + v + ": " + a[v], {
                  fileName: "openfl/utils/AGALMiniAssembler.hx",
                  lineNumber: 262,
                  className: "openfl.utils.AGALMiniAssembler",
                  methodName: "assemble",
                });
            else if (
              (this.debugEnabled &&
                Pa.info(x, {
                  fileName: "openfl/utils/AGALMiniAssembler.hx",
                  lineNumber: 272,
                  className: "openfl.utils.AGALMiniAssembler",
                  methodName: "assemble",
                }),
              null == x)
            )
              3 <= y.length &&
                Pa.warn("warning: bad line " + v + ": " + a[v], {
                  fileName: "openfl/utils/AGALMiniAssembler.hx",
                  lineNumber: 279,
                  className: "openfl.utils.AGALMiniAssembler",
                  methodName: "assemble",
                });
            else {
              y = ba.substr(y, y.indexOf(x.name) + x.name.length, null);
              if (0 != (x.flags & 256) && 2 > c) {
                this.error = "error: opcode requires version 2.";
                break;
              }
              if (0 != (x.flags & 64) && f) {
                this.error =
                  "error: opcode is only allowed in vertex programs.";
                break;
              }
              if (0 != (x.flags & 32) && !f) {
                this.error =
                  "error: opcode is only allowed in fragment programs.";
                break;
              }
              this.verbose &&
                Pa.info("emit opcode=" + I.string(x), {
                  fileName: "openfl/utils/AGALMiniAssembler.hx",
                  lineNumber: 308,
                  className: "openfl.utils.AGALMiniAssembler",
                  methodName: "assemble",
                });
              this.agalcode.writeUnsignedInt(x.emitCode);
              ++b;
              if (4096 < b) {
                this.error = "error: too many opcodes. maximum is 4096.";
                break;
              }
              var t = this.match(y, p);
              if (t.length != x.numRegister) {
                this.error =
                  "error: wrong number of operands. found " +
                  t.length +
                  " but expected " +
                  x.numRegister +
                  ".";
                break;
              }
              var A = !1,
                D = 160;
              y = 0;
              for (w = t.length; y < w; ) {
                var C = y++,
                  G = !1,
                  T = this.match(t[C], l);
                0 < T.length &&
                  ((t[C] = K.replace(t[C], T[0], "0")),
                  this.verbose &&
                    Pa.info("IS REL", {
                      fileName: "openfl/utils/AGALMiniAssembler.hx",
                      lineNumber: 344,
                      className: "openfl.utils.AGALMiniAssembler",
                      methodName: "assemble",
                    }),
                  (G = !0));
                var H = this.match(t[C], k);
                if (0 == H.length) {
                  this.error =
                    "error: could not parse operand " + C + " (" + t[C] + ").";
                  A = !0;
                  break;
                }
                var ca = ka.REGMAP.h[H[0]];
                this.debugEnabled &&
                  Pa.info(ca, {
                    fileName: "openfl/utils/AGALMiniAssembler.hx",
                    lineNumber: 363,
                    className: "openfl.utils.AGALMiniAssembler",
                    methodName: "assemble",
                  });
                if (null == ca) {
                  this.error =
                    "error: could not find register name for operand " +
                    C +
                    " (" +
                    t[C] +
                    ").";
                  A = !0;
                  break;
                }
                if (f) {
                  if (0 == (ca.flags & 32)) {
                    this.error =
                      "error: register operand " +
                      C +
                      " (" +
                      t[C] +
                      ") only allowed in vertex programs.";
                    A = !0;
                    break;
                  }
                  if (G) {
                    this.error =
                      "error: register operand " +
                      C +
                      " (" +
                      t[C] +
                      ") relative adressing not allowed in fragment programs.";
                    A = !0;
                    break;
                  }
                } else if (0 == (ca.flags & 64)) {
                  this.error =
                    "error: register operand " +
                    C +
                    " (" +
                    t[C] +
                    ") only allowed in fragment programs.";
                  A = !0;
                  break;
                }
                t[C] = ba.substr(
                  t[C],
                  t[C].indexOf(ca.name) + ca.name.length,
                  null
                );
                var Y = G ? this.match(T[0], g) : this.match(t[C], g);
                H = 0;
                0 < Y.length && (H = I.parseInt(Y[0]));
                if (Hc.gt(H, ca.range)) {
                  y = ca.range + 1;
                  this.error =
                    "error: register operand " +
                    C +
                    " (" +
                    t[C] +
                    ") index exceeds limit of " +
                    (null == y ? "null" : I.string(Hc.toFloat(y))) +
                    ".";
                  A = !0;
                  break;
                }
                var ra = this.match(t[C], u),
                  J = 0 == C && 0 == (x.flags & 128),
                  E = 2 == C && 0 != (x.flags & 8),
                  B = 0,
                  F = 0,
                  M = 0;
                if (J && G) {
                  this.error = "error: relative can not be destination";
                  A = !0;
                  break;
                }
                if (0 < ra.length) {
                  for (var N = (Y = 0), Qb = ra[0].length, bd = 1; bd < Qb; )
                    (N = ba.cca(ra[0], bd) - 120),
                      Hc.gt(N, 2) && (N = 3),
                      (Y = J ? Y | (1 << N) : Y | (N << ((bd - 1) << 1))),
                      ++bd;
                  if (!J) for (; 4 >= bd; ) (Y |= N << ((bd - 1) << 1)), ++bd;
                } else Y = J ? 15 : 228;
                if (G) {
                  ra = this.match(T[0], q);
                  B = ka.REGMAP.h[ra[0]];
                  if (null == B) {
                    this.error = "error: bad index register";
                    A = !0;
                    break;
                  }
                  B = B.emitCode;
                  N = this.match(T[0], r);
                  if (0 == N.length) {
                    this.error = "error: bad index register select";
                    A = !0;
                    break;
                  }
                  F = ba.cca(N[0], 1) - 120;
                  Hc.gt(F, 2) && (F = 3);
                  T = this.match(T[0], z);
                  0 < T.length && (M = I.parseInt(T[0]));
                  if (0 > M || 255 < M) {
                    this.error =
                      "error: index offset " + M + " out of bounds. [0..255]";
                    A = !0;
                    break;
                  }
                  this.verbose &&
                    Pa.info(
                      "RELATIVE: type=" +
                        B +
                        "==" +
                        ra[0] +
                        " sel=" +
                        (null == F ? "null" : I.string(Hc.toFloat(F))) +
                        "==" +
                        N[0] +
                        " idx=" +
                        (null == H ? "null" : I.string(Hc.toFloat(H))) +
                        " offset=" +
                        M,
                      {
                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                        lineNumber: 518,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble",
                      }
                    );
                }
                this.verbose &&
                  Pa.info(
                    "  emit argcode=" +
                      I.string(ca) +
                      "[" +
                      (null == H ? "null" : I.string(Hc.toFloat(H))) +
                      "][" +
                      Y +
                      "]",
                    {
                      fileName: "openfl/utils/AGALMiniAssembler.hx",
                      lineNumber: 525,
                      className: "openfl.utils.AGALMiniAssembler",
                      methodName: "assemble",
                    }
                  );
                if (J)
                  this.agalcode.writeShort(H),
                    this.agalcode.writeByte(Y),
                    this.agalcode.writeByte(ca.emitCode),
                    (D -= 32);
                else {
                  if (E) {
                    this.verbose &&
                      Pa.info("  emit sampler", {
                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                        lineNumber: 541,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble",
                      });
                    C = 5;
                    T = G = 0;
                    for (ca = null == O ? 0 : O.length; T < ca; )
                      (Y = T++),
                        this.verbose &&
                          Pa.info("    opt: " + O[Y], {
                            fileName: "openfl/utils/AGALMiniAssembler.hx",
                            lineNumber: 552,
                            className: "openfl.utils.AGALMiniAssembler",
                            methodName: "assemble",
                          }),
                        (J = ka.SAMPLEMAP.h[O[Y]]),
                        null == J
                          ? ((G = parseFloat(O[Y])),
                            this.verbose &&
                              Pa.info("    bias: " + G, {
                                fileName: "openfl/utils/AGALMiniAssembler.hx",
                                lineNumber: 565,
                                className: "openfl.utils.AGALMiniAssembler",
                                methodName: "assemble",
                              }))
                          : (16 != J.flag && (C &= ~(15 << J.flag)),
                            (C |= J.mask << J.flag));
                    this.agalcode.writeShort(H);
                    this.agalcode.writeByte((8 * G) | 0);
                    this.agalcode.writeByte(0);
                    this.agalcode.writeUnsignedInt(C);
                    this.verbose &&
                      Pa.info("    bits: " + (C - 5), {
                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                        lineNumber: 586,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble",
                      });
                  } else
                    0 == C && (this.agalcode.writeUnsignedInt(0), (D -= 32)),
                      this.agalcode.writeShort(H),
                      this.agalcode.writeByte(M),
                      this.agalcode.writeByte(Y),
                      this.agalcode.writeByte(ca.emitCode),
                      this.agalcode.writeByte(B),
                      this.agalcode.writeShort(G ? F | 32768 : 0);
                  D -= 64;
                }
              }
              for (y = 0; y < D; ) this.agalcode.writeByte(0), (y += 8);
              if (A) break;
            }
            ++v;
          }
          "" != this.error &&
            ((this.error += "\n  at line " + v + " " + a[v]),
            bl.set_length(this.agalcode, 0),
            Pa.info(this.error, {
              fileName: "openfl/utils/AGALMiniAssembler.hx",
              lineNumber: 631,
              className: "openfl.utils.AGALMiniAssembler",
              methodName: "assemble",
            }));
          if (this.debugEnabled) {
            c = "generated bytecode:";
            f = bl.get_length(this.agalcode);
            y = 0;
            for (w = f; y < w; )
              (f = y++),
                0 == f % 16 && (c += "\n"),
                0 == f % 4 && (c += " "),
                (f = K.hex(this.agalcode.b[f], 2)),
                2 > f.length && (f = "0" + f),
                (c += f);
            Pa.info(c, {
              fileName: "openfl/utils/AGALMiniAssembler.hx",
              lineNumber: 662,
              className: "openfl.utils.AGALMiniAssembler",
              methodName: "assemble",
            });
          }
          this.verbose &&
            Pa.info(
              "AGALMiniAssembler.assemble time: " +
                (na.getTimer() - e) / 1e3 +
                "s",
              {
                fileName: "openfl/utils/AGALMiniAssembler.hx",
                lineNumber: 667,
                className: "openfl.utils.AGALMiniAssembler",
                methodName: "assemble",
              }
            );
          return this.agalcode;
        },
        initregmap: function (a, b) {
          var c = ka.REGMAP,
            d = new Ed(
              "va",
              "vertex attribute",
              0,
              b ? 1024 : 1 == a || 2 == a ? 7 : 15,
              66
            );
          c.h.va = d;
          c = ka.REGMAP;
          d = new Ed(
            "vc",
            "vertex constant",
            1,
            b ? 1024 : 1 == a ? 127 : 249,
            66
          );
          c.h.vc = d;
          c = ka.REGMAP;
          d = new Ed(
            "vt",
            "vertex temporary",
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            67
          );
          c.h.vt = d;
          c = ka.REGMAP;
          d = new Ed("vo", "vertex output", 3, b ? 1024 : 0, 65);
          c.h.vo = d;
          c = ka.REGMAP;
          d = new Ed("vi", "varying", 4, b ? 1024 : 1 == a ? 7 : 9, 99);
          c.h.vi = d;
          c = ka.REGMAP;
          d = new Ed(
            "fc",
            "fragment constant",
            1,
            b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199,
            34
          );
          c.h.fc = d;
          c = ka.REGMAP;
          d = new Ed(
            "ft",
            "fragment temporary",
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            35
          );
          c.h.ft = d;
          c = ka.REGMAP;
          d = new Ed("fs", "texture sampler", 5, b ? 1024 : 7, 34);
          c.h.fs = d;
          c = ka.REGMAP;
          d = new Ed("fo", "fragment output", 3, b ? 1024 : 1 == a ? 0 : 3, 33);
          c.h.fo = d;
          c = ka.REGMAP;
          d = new Ed(
            "fd",
            "fragment depth output",
            6,
            b ? 1024 : 1 == a ? -1 : 0,
            33
          );
          c.h.fd = d;
          c = ka.REGMAP;
          d = new Ed("iid", "instance id", 7, b ? 1024 : 0, 66);
          c.h.iid = d;
          d = ka.REGMAP.h.vo;
          ka.REGMAP.h.op = d;
          d = ka.REGMAP.h.vi;
          ka.REGMAP.h.i = d;
          d = ka.REGMAP.h.vi;
          ka.REGMAP.h.v = d;
          d = ka.REGMAP.h.fo;
          ka.REGMAP.h.oc = d;
          d = ka.REGMAP.h.fd;
          ka.REGMAP.h.od = d;
          d = ka.REGMAP.h.vi;
          ka.REGMAP.h.fi = d;
        },
        match: function (a, b) {
          for (var c = [], d = 0; b.matchSub(a, d); )
            (d = b.matched(0)), c.push(d), (d = b.matchedPos().pos + d.length);
          return c;
        },
        __class__: ka,
      };
      var hb = function (a, b, c, d) {
        this.name = a;
        this.numRegister = b;
        this.emitCode = c;
        this.flags = d;
      };
      g["openfl.utils._AGALMiniAssembler.OpCode"] = hb;
      hb.__name__ = "openfl.utils._AGALMiniAssembler.OpCode";
      hb.prototype = { __class__: hb };
      var Ed = function (a, b, c, d, e) {
        this.name = a;
        this.longName = b;
        this.emitCode = c;
        this.range = d;
        this.flags = e;
      };
      g["openfl.utils._AGALMiniAssembler.Register"] = Ed;
      Ed.__name__ = "openfl.utils._AGALMiniAssembler.Register";
      Ed.prototype = {
        toString: function () {
          return (
            '[Register name="' +
            this.name +
            '", longName="' +
            this.longName +
            '", emitCode=' +
            (null == this.emitCode
              ? "null"
              : I.string(Hc.toFloat(this.emitCode))) +
            ", range=" +
            (null == this.range ? "null" : I.string(Hc.toFloat(this.range))) +
            ", flags=" +
            (null == this.flags ? "null" : I.string(Hc.toFloat(this.flags))) +
            "]"
          );
        },
        __class__: Ed,
      };
      var Jb = function (a, b, c) {
        this.name = a;
        this.flag = b;
        this.mask = c;
      };
      g["openfl.utils._AGALMiniAssembler.Sampler"] = Jb;
      Jb.__name__ = "openfl.utils._AGALMiniAssembler.Sampler";
      Jb.prototype = { __class__: Jb };
      var Hk = function () {};
      g["openfl.utils.IAssetCache"] = Hk;
      Hk.__name__ = "openfl.utils.IAssetCache";
      Hk.__isInterface__ = !0;
      Hk.prototype = {
        __class__: Hk,
        __properties__: { get_enabled: "get_enabled" },
      };
      var Ik = function () {
        this.__enabled = !0;
        this.bitmapData = new ea();
        this.font = new ea();
        this.sound = new ea();
      };
      g["openfl.utils.AssetCache"] = Ik;
      Ik.__name__ = "openfl.utils.AssetCache";
      Ik.__interfaces__ = [Hk];
      Ik.prototype = {
        clear: function (a) {
          if (null == a)
            (this.bitmapData = new ea()),
              (this.font = new ea()),
              (this.sound = new ea());
          else {
            for (var b = ea.keysIterator(this.bitmapData.h); b.hasNext(); ) {
              var c = b.next();
              K.startsWith(c, a) && this.removeBitmapData(c);
            }
            for (b = ea.keysIterator(this.font.h); b.hasNext(); )
              (c = b.next()), K.startsWith(c, a) && this.removeFont(c);
            for (b = ea.keysIterator(this.sound.h); b.hasNext(); )
              (c = b.next()), K.startsWith(c, a) && this.removeSound(c);
          }
        },
        getBitmapData: function (a) {
          return this.bitmapData.h[a];
        },
        getFont: function (a) {
          return this.font.h[a];
        },
        getSound: function (a) {
          return this.sound.h[a];
        },
        hasBitmapData: function (a) {
          return Object.prototype.hasOwnProperty.call(this.bitmapData.h, a);
        },
        hasFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.font.h, a);
        },
        hasSound: function (a) {
          return Object.prototype.hasOwnProperty.call(this.sound.h, a);
        },
        removeBitmapData: function (a) {
          var b = W.cache.image;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
          b = this.bitmapData;
          return Object.prototype.hasOwnProperty.call(b.h, a)
            ? (delete b.h[a], !0)
            : !1;
        },
        removeFont: function (a) {
          var b = W.cache.font;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
          b = this.font;
          return Object.prototype.hasOwnProperty.call(b.h, a)
            ? (delete b.h[a], !0)
            : !1;
        },
        removeSound: function (a) {
          var b = W.cache.audio;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
          b = this.sound;
          return Object.prototype.hasOwnProperty.call(b.h, a)
            ? (delete b.h[a], !0)
            : !1;
        },
        setBitmapData: function (a, b) {
          this.bitmapData.h[a] = b;
        },
        setFont: function (a, b) {
          this.font.h[a] = b;
        },
        setSound: function (a, b) {
          this.sound.h[a] = b;
        },
        get_enabled: function () {
          return this.__enabled;
        },
        __class__: Ik,
        __properties__: { get_enabled: "get_enabled" },
      };
      var Yf = function () {
        xb.call(this);
      };
      g["openfl.utils.AssetLibrary"] = Yf;
      Yf.__name__ = "openfl.utils.AssetLibrary";
      Yf.fromManifest = function (a) {
        a = xb.fromManifest(a);
        if (null != a) {
          if (a instanceof Yf) return a;
          var b = new Yf();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      Yf.__super__ = xb;
      Yf.prototype = r(xb.prototype, {
        exists: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.exists(a, b)
            : xb.prototype.exists.call(this, a, b);
        },
        getAsset: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.getAsset(a, b)
            : xb.prototype.getAsset.call(this, a, b);
        },
        getAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.getAudioBuffer(a)
            : xb.prototype.getAudioBuffer.call(this, a);
        },
        getBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.getBytes(a)
            : xb.prototype.getBytes.call(this, a);
        },
        getFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.getFont(a)
            : xb.prototype.getFont.call(this, a);
        },
        getImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.getImage(a)
            : xb.prototype.getImage.call(this, a);
        },
        getText: function (a) {
          return null != this.__proxy
            ? this.__proxy.getText(a)
            : xb.prototype.getText.call(this, a);
        },
        isLocal: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.isLocal(a, b)
            : xb.prototype.isLocal.call(this, a, b);
        },
        loadAsset: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.loadAsset(a, b)
            : xb.prototype.loadAsset.call(this, a, b);
        },
        load: function () {
          return null != this.__proxy
            ? this.__proxy.load()
            : xb.prototype.load.call(this);
        },
        loadAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadAudioBuffer(a)
            : xb.prototype.loadAudioBuffer.call(this, a);
        },
        loadBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadBytes(a)
            : xb.prototype.loadBytes.call(this, a);
        },
        loadFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadFont(a)
            : xb.prototype.loadFont.call(this, a);
        },
        loadImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadImage(a)
            : xb.prototype.loadImage.call(this, a);
        },
        loadText: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadText(a)
            : xb.prototype.loadText.call(this, a);
        },
        unload: function () {
          null != this.__proxy
            ? this.__proxy.unload()
            : xb.prototype.unload.call(this);
        },
        __class__: Yf,
      });
      var la = function () {};
      g["openfl.utils.Assets"] = la;
      la.__name__ = "openfl.utils.Assets";
      la.addEventListener = function (a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        W.onChange.has(la.LimeAssets_onChange) ||
          W.onChange.add(la.LimeAssets_onChange);
        la.dispatcher.addEventListener(a, b, c, d, e);
      };
      la.dispatchEvent = function (a) {
        return la.dispatcher.dispatchEvent(a);
      };
      la.exists = function (a, b) {
        return W.exists(a, b);
      };
      la.getBitmapData = function (a, b) {
        null == b && (b = !0);
        if (b && la.cache.get_enabled() && la.cache.hasBitmapData(a)) {
          var c = la.cache.getBitmapData(a);
          if (la.isValidBitmapData(c)) return c;
        }
        c = W.getImage(a, !1);
        return null != c
          ? ((c = J.fromImage(c)),
            b && la.cache.get_enabled() && la.cache.setBitmapData(a, c),
            c)
          : null;
      };
      la.getFont = function (a, b) {
        null == b && (b = !0);
        if (b && la.cache.get_enabled() && la.cache.hasFont(a))
          return la.cache.getFont(a);
        var c = W.getFont(a, !1);
        if (null != c) {
          var d = new bb();
          d.__fromLimeFont(c);
          b && la.cache.get_enabled() && la.cache.setFont(a, d);
          return d;
        }
        return new bb();
      };
      la.getLibrary = function (a) {
        return W.getLibrary(a);
      };
      la.getSound = function (a, b) {
        null == b && (b = !0);
        if (b && la.cache.get_enabled() && la.cache.hasSound(a)) {
          var c = la.cache.getSound(a);
          if (la.isValidSound(c)) return c;
        }
        c = W.getAudioBuffer(a, !1);
        return null != c
          ? ((c = Wd.fromAudioBuffer(c)),
            b && la.cache.get_enabled() && la.cache.setSound(a, c),
            c)
          : null;
      };
      la.getText = function (a) {
        return W.getText(a);
      };
      la.hasLibrary = function (a) {
        return W.hasLibrary(a);
      };
      la.isValidBitmapData = function (a) {
        return null != a && null != a.image;
      };
      la.isValidSound = function (a) {
        return !0;
      };
      la.loadLibrary = function (a) {
        return W.loadLibrary(a).then(function (b) {
          var c = null;
          null != b &&
            (b instanceof Yf
              ? (c = b)
              : ((c = new Yf()), (c.__proxy = b), W.registerLibrary(a, c)));
          return Ja.withValue(c);
        });
      };
      la.loadSound = function (a, b) {
        null == b && (b = !0);
        null == b && (b = !0);
        var c = new Wc();
        W.loadAudioBuffer(a, b)
          .onComplete(function (d) {
            null != d
              ? ((d = Wd.fromAudioBuffer(d)),
                b && la.cache.get_enabled() && la.cache.setSound(a, d),
                c.complete(d))
              : c.error('[Assets] Could not load Sound "' + a + '"');
          })
          .onError(q(c, c.error))
          .onProgress(q(c, c.progress));
        return c.future;
      };
      la.LimeAssets_onChange = function () {
        la.dispatchEvent(new Ca("change"));
      };
      var bl = {
          __properties__: {
            set_length: "set_length",
            get_length: "get_length",
          },
          fromBytes: function (a) {
            return null == a ? null : a instanceof id ? a : id.fromBytes(a);
          },
          toBytes: function (a) {
            return a;
          },
          get_length: function (a) {
            return null == a ? 0 : a.length;
          },
          set_length: function (a, b) {
            0 < b && (a.__resize(b), b < a.position && (a.position = b));
            return (a.length = b);
          },
        },
        Jk = function () {};
      g["haxe.lang.Iterator"] = Jk;
      Jk.__name__ = "haxe.lang.Iterator";
      Jk.__isInterface__ = !0;
      Jk.prototype = { __class__: Jk };
      var Kk = function () {};
      g["haxe.lang.Iterable"] = Kk;
      Kk.__name__ = "haxe.lang.Iterable";
      Kk.__isInterface__ = !0;
      Kk.prototype = { __class__: Kk };
      var Jn = (z["polymod.Framework"] = {
          __ename__: "polymod.Framework",
          __constructs__: "NME LIME OPENFL HEAPS KHA CUSTOM UNKNOWN".split(" "),
          NME: { _hx_index: 0, __enum__: "polymod.Framework", toString: l },
          LIME: { _hx_index: 1, __enum__: "polymod.Framework", toString: l },
          OPENFL: { _hx_index: 2, __enum__: "polymod.Framework", toString: l },
          HEAPS: { _hx_index: 3, __enum__: "polymod.Framework", toString: l },
          KHA: { _hx_index: 4, __enum__: "polymod.Framework", toString: l },
          CUSTOM: { _hx_index: 5, __enum__: "polymod.Framework", toString: l },
          UNKNOWN: { _hx_index: 6, __enum__: "polymod.Framework", toString: l },
        }),
        Za = function () {};
      g["polymod.Polymod"] = Za;
      Za.__name__ = "polymod.Polymod";
      Za.init = function (a) {
        Za.onError = a.errorCallback;
        var b = a.modRoot,
          c = a.dirs,
          d = null;
        try {
          var e = a.apiVersion;
          if (null == e || "" == e) e = "*.*.*";
          d = wg.fromString(e);
        } catch (k) {
          Ba.lastError = k;
          var f = C.caught(k).unwrap();
          Za.error(
            "parse_api_version",
            "Error parsing api version: (" + I.string(f) + ")",
            "init"
          );
          return [];
        }
        e = [];
        var h = [];
        if (null != a.modVersions)
          for (var m = 0, n = a.modVersions; m < n.length; ) {
            f = n[m];
            ++m;
            var p = null;
            try {
              p = wg.fromString(f);
            } catch (k) {
              (Ba.lastError = k),
                (f = C.caught(k).unwrap()),
                Za.error(
                  "param_mod_version",
                  "There was an error with one of the mod version patterns you provided: " +
                    I.string(f),
                  "init"
                ),
                (p = wg.fromString("*.*.*"));
            }
            h.push(p);
          }
        m = 0;
        for (n = c.length; m < n; )
          if (((p = m++), null != c[p])) {
            var l = c[p];
            c[p] = N.pathJoin(b, c[p]);
            f = Za.getMetadata(c[p]);
            null != f &&
              ((f.id = l),
              3 > f.apiVersion.checkCompatibility(d)
                ? Za.error(
                    "version_conflict_api",
                    'Mod "' +
                      l +
                      '" was built for incompatible API version ' +
                      f.apiVersion.toString() +
                      ", current API version is " +
                      a.apiVersion.toString(),
                    "init"
                  )
                : 0 == d.major &&
                  d.minor != f.apiVersion.minor &&
                  Za.warning(
                    "version_prerelease_api",
                    'Modding API is in pre-release, some things might have changed!\nMod "' +
                      l +
                      '" was built for API version ' +
                      f.apiVersion.toString() +
                      ", current API version is " +
                      d.toString(),
                    "init"
                  ),
              (p = h.length > p ? h[p] : null),
              null != p &&
                3 > p.checkCompatibility(f.modVersion) &&
                Za.error(
                  "version_conflict_mod",
                  "Mod pack wants version " +
                    p.toString() +
                    " of mod(" +
                    f.id +
                    "), found incompatible version " +
                    f.modVersion.toString() +
                    " instead",
                  "init"
                ),
              e.push(f));
          }
        Fd.init({
          framework: a.framework,
          dirs: c,
          parseRules: a.parseRules,
          ignoredFiles: a.ignoredFiles,
          customBackend: a.customBackend,
          extensionMap: a.extensionMap,
        });
        Fd.exists("_polymod_pack.txt") && Za.initModPack(a);
        return e;
      };
      Za.error = function (a, b, c) {
        null == c && (c = "unknown");
        if (null != Za.onError) Za.onError(new ji(gn.ERROR, a, b, c));
      };
      Za.warning = function (a, b, c) {
        null == c && (c = "unknown");
        if (null != Za.onError) Za.onError(new ji(gn.WARNING, a, b, c));
      };
      Za.notice = function (a, b, c) {
        null == c && (c = "unknown");
        if (null != Za.onError) Za.onError(new ji(gn.NOTICE, a, b, c));
      };
      Za.getMetadata = function (a) {
        Za.error("missing_mod", 'Could not find mod directory: "' + a + '"');
        return null;
      };
      Za.initModPack = function (a) {
        var b = Fd.getText("_polymod_pack.txt");
        if (null != b) {
          b = Za.getModPack(b);
          var c = b.versions;
          a.dirs = b.mods;
          a.modVersions = c;
          Za.init(a);
        }
      };
      Za.getModPack = function (a) {
        if (null != a) {
          a = a.split(",");
          if (null == a || 0 == a.length) return null;
          for (var b = [], c = 0, d = a.length; c < d; ) {
            var e = c++;
            b[e] = "*.*.*";
            if (-1 != a[e].indexOf(":")) {
              var f = a[e].split(":");
              null != f && 2 == f.length && ((a[e] = f[0]), (b[e] = f[1]));
            }
          }
          return { mods: a, versions: b };
        }
        return null;
      };
      var $m = function () {};
      g["polymod.ModMetadata"] = $m;
      $m.__name__ = "polymod.ModMetadata";
      $m.prototype = { __class__: $m };
      var ji = function (a, b, c, d) {
        this.severity = a;
        this.code = b;
        this.message = c;
        this.origin = d;
      };
      g["polymod.PolymodError"] = ji;
      ji.__name__ = "polymod.PolymodError";
      ji.prototype = { __class__: ji };
      var gn = (z["polymod.PolymodErrorType"] = {
          __ename__: "polymod.PolymodErrorType",
          __constructs__: ["NOTICE", "WARNING", "ERROR"],
          NOTICE: {
            _hx_index: 0,
            __enum__: "polymod.PolymodErrorType",
            toString: l,
          },
          WARNING: {
            _hx_index: 1,
            __enum__: "polymod.PolymodErrorType",
            toString: l,
          },
          ERROR: {
            _hx_index: 2,
            __enum__: "polymod.PolymodErrorType",
            toString: l,
          },
        }),
        ki = function () {};
      g["polymod.backends.IBackend"] = ki;
      ki.__name__ = "polymod.backends.IBackend";
      ki.__isInterface__ = !0;
      ki.prototype = { __class__: ki };
      var xg = function () {};
      g["polymod.backends.StubBackend"] = xg;
      xg.__name__ = "polymod.backends.StubBackend";
      xg.__interfaces__ = [ki];
      xg.prototype = {
        init: function () {},
        destroy: function () {},
        clearCache: function () {},
        exists: function (a) {
          return !1;
        },
        getBytes: function (a) {
          return null;
        },
        getText: function (a) {
          return null;
        },
        stripAssetsPrefix: function (a) {
          return a;
        },
        __class__: xg,
      };
      var Lk = function () {
        Za.error(
          "failed_create_backend",
          "HEAPSBackend requires the heaps library, did you forget to install it?"
        );
      };
      g["polymod.backends.HEAPSBackend"] = Lk;
      Lk.__name__ = "polymod.backends.HEAPSBackend";
      Lk.__super__ = xg;
      Lk.prototype = r(xg.prototype, { __class__: Lk });
      var $c = function () {};
      g["polymod.backends.LimeBackend"] = $c;
      $c.__name__ = "polymod.backends.LimeBackend";
      $c.__interfaces__ = [ki];
      $c.getDefaultAssetLibrary = function () {
        null == $c.defaultAssetLibrary &&
          ($c.defaultAssetLibrary = W.getLibrary("default"));
        return $c.defaultAssetLibrary;
      };
      $c.restoreDefaultAssetLibrary = function () {
        null != $c.defaultAssetLibrary &&
          W.registerLibrary("default", $c.defaultAssetLibrary);
      };
      $c.prototype = {
        init: function () {
          this.fallback = $c.getDefaultAssetLibrary();
          this.modLibrary = new yg(this);
          W.registerLibrary("default", this.modLibrary);
        },
        destroy: function () {
          $c.restoreDefaultAssetLibrary();
          this.polymodLibrary = null;
          this.modLibrary.destroy();
          this.fallback = this.modLibrary = null;
        },
        exists: function (a) {
          return this.modLibrary.exists(a, null);
        },
        getBytes: function (a) {
          return this.modLibrary.getBytes(a);
        },
        getText: function (a) {
          return this.modLibrary.getText(a);
        },
        clearCache: function () {
          if (null != $c.defaultAssetLibrary) {
            for (var a = ea.keysIterator(W.cache.audio.h); a.hasNext(); ) {
              var b = a.next(),
                c = W.cache.audio;
              Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            }
            for (a = ea.keysIterator(W.cache.font.h); a.hasNext(); )
              (b = a.next()),
                (c = W.cache.font),
                Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            for (a = ea.keysIterator(W.cache.image.h); a.hasNext(); )
              (b = a.next()),
                (c = W.cache.image),
                Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
          }
        },
        stripAssetsPrefix: function (a) {
          0 == N.uIndexOf(a, "assets/") && (a = N.uSubstring(a, 7));
          return a;
        },
        __class__: $c,
      };
      var yg = function (a) {
        this.b = a;
        this.p = this.b.polymodLibrary;
        this.fallback = this.b.fallback;
        this.hasFallback = null != this.fallback;
        xb.call(this);
      };
      g["polymod.backends.LimeModLibrary"] = yg;
      yg.__name__ = "polymod.backends.LimeModLibrary";
      yg.LimeToPoly = function (a) {
        switch (a) {
          case "BINARY":
            return "BYTES";
          case "FONT":
            return "FONT";
          case "IMAGE":
            return "IMAGE";
          case "MANIFEST":
            return "MANIFEST";
          case "MUSIC":
            return "AUDIO_MUSIC";
          case "SOUND":
            return "AUDIO_SOUND";
          case "TEMPLATE":
            return "TEMPLATE";
          case "TEXT":
            return "TEXT";
          default:
            return "UNKNOWN";
        }
      };
      yg.__super__ = xb;
      yg.prototype = r(xb.prototype, {
        destroy: function () {
          this.type = this.fallback = this.p = this.b = null;
        },
        getAsset: function (a, b) {
          var c = this.p.check(a, yg.LimeToPoly(b));
          return "TEXT" == b
            ? this.getText(a)
            : !c && this.hasFallback
            ? this.fallback.getAsset(a, b)
            : xb.prototype.getAsset.call(this, a, b);
        },
        exists: function (a, b) {
          var c = this.p.check(a, yg.LimeToPoly(b));
          return !c && this.hasFallback ? this.fallback.exists(a, b) : c;
        },
        getAudioBuffer: function (a) {
          return this.p.check(a)
            ? (this.p.file(a), Wb.fromBytes(null))
            : this.hasFallback
            ? this.fallback.getAudioBuffer(a)
            : null;
        },
        getBytes: function (a) {
          this.p.file(a);
          if (this.p.check(a)) this.p.file(a);
          else if (this.hasFallback) return this.fallback.getBytes(a);
          return null;
        },
        getFont: function (a) {
          return this.p.check(a)
            ? (this.p.file(a), tb.fromBytes(null))
            : this.hasFallback
            ? this.fallback.getFont(a)
            : null;
        },
        getImage: function (a) {
          return this.p.check(a)
            ? (this.p.file(a), Da.fromBytes(null))
            : this.hasFallback
            ? this.fallback.getImage(a)
            : null;
        },
        getText: function (a) {
          var b = null;
          this.p.check(a)
            ? (b = xb.prototype.getText.call(this, a))
            : this.hasFallback && (b = this.fallback.getText(a));
          null != b && (b = this.p.mergeAndAppendText(a, b));
          return b;
        },
        loadBytes: function (a) {
          return this.p.check(a)
            ? zf.loadFromFile(this.p.file(a))
            : this.hasFallback
            ? this.fallback.loadBytes(a)
            : zf.loadFromFile("");
        },
        loadFont: function (a) {
          if (this.p.check(a)) {
            var b = this.paths;
            a = this.p.file(a);
            return tb.loadFromName(b.h[a]);
          }
          return this.hasFallback
            ? this.fallback.loadFont(a)
            : tb.loadFromName(this.paths.h[""]);
        },
        loadImage: function (a) {
          return this.p.check(a)
            ? Da.loadFromFile(this.p.file(a))
            : this.hasFallback
            ? this.fallback.loadImage(a)
            : Da.loadFromFile("");
        },
        loadAudioBuffer: function (a) {
          if (this.p.check(a)) {
            var b = this.pathGroups,
              c = this.p.file(a);
            if (Object.prototype.hasOwnProperty.call(b.h, c))
              return (
                (b = this.pathGroups),
                (c = this.p.file(a)),
                Wb.loadFromFiles(b.h[c])
              );
            b = this.paths;
            c = this.p.file(a);
            return Wb.loadFromFile(b.h[c]);
          }
          return this.hasFallback
            ? this.fallback.loadAudioBuffer(a)
            : Wb.loadFromFile("");
        },
        loadText: function (a) {
          if (this.p.check(a)) {
            var b = new og(),
              c = this.paths;
            a = this.p.file(a);
            return b.load(c.h[a]);
          }
          if (this.hasFallback) return this.fallback.loadText(a);
          b = new og();
          return b.load("");
        },
        isLocal: function (a, b) {
          return this.p.check(a)
            ? !0
            : this.hasFallback
            ? this.fallback.isLocal(a, b)
            : !1;
        },
        __class__: yg,
      });
      var Mk = function () {
        Za.error(
          "failed_create_backend",
          "NMEBackend requires the nme library, did you forget to install it?"
        );
      };
      g["polymod.backends.NMEBackend"] = Mk;
      Mk.__name__ = "polymod.backends.NMEBackend";
      Mk.__super__ = xg;
      Mk.prototype = r(xg.prototype, { __class__: Mk });
      var Nk = function () {};
      g["polymod.backends.OpenFLBackend"] = Nk;
      Nk.__name__ = "polymod.backends.OpenFLBackend";
      Nk.__super__ = $c;
      Nk.prototype = r($c.prototype, {
        clearCache: function () {
          $c.prototype.clearCache.call(this);
          la.cache.clear();
        },
        __class__: Nk,
      });
      var Am = function (a) {
        this.dirs = this.ignoredFiles = this.parseRules = null;
        this.backend = a.backend;
        this.backend.polymodLibrary = this;
        this.dirs = a.dirs;
        this.parseRules = a.parseRules;
        this.ignoredFiles =
          null != a.ignoredFiles ? a.ignoredFiles.slice() : [];
        this.extensions = a.extensionMap;
        this.backend.clearCache();
        this.init();
      };
      g["polymod.backends.PolymodAssetLibrary"] = Am;
      Am.__name__ = "polymod.backends.PolymodAssetLibrary";
      Am.prototype = {
        destroy: function () {
          null != this.backend && this.backend.destroy();
        },
        mergeAndAppendText: function (a, b) {
          return (b = N.mergeAndAppendText(
            b,
            a,
            this.dirs,
            q(this, this.getTextDirectly),
            this.parseRules
          ));
        },
        getExtensionType: function (a) {
          a = a.toLowerCase();
          return 0 == Object.prototype.hasOwnProperty.call(this.extensions.h, a)
            ? "BYTES"
            : this.extensions.h[a];
        },
        getTextDirectly: function (a, b) {
          null == b && (b = "");
          this.checkDirectly(a, b)
            ? (this.file(a, b), (a = null))
            : (a = this.backend.getBytes(a));
          return null == a ? null : a.getString(0, a.length);
        },
        exists: function (a) {
          return this.backend.exists(a);
        },
        getText: function (a) {
          return this.backend.getText(a);
        },
        check: function (a, b) {
          var c = this._checkExists(a);
          c &&
            null != b &&
            "BYTES" != b &&
            ((a = this.type.h[a]), (c = a == b || "BYTES" == a));
          return c;
        },
        checkDirectly: function (a, b) {
          a = this.backend.stripAssetsPrefix(a);
          null != b && "" != b && N.uCombine([b, N.sl(), a]);
          return !1;
        },
        file: function (a, b) {
          null == b && (b = "");
          a = this.backend.stripAssetsPrefix(a);
          if ("" != b) return N.pathJoin(b, a);
          b = 0;
          for (var c = this.dirs; b < c.length; ) {
            var d = c[b];
            ++b;
            N.pathJoin(d, a);
          }
          return "";
        },
        _checkExists: function (a) {
          if (
            0 < this.ignoredFiles.length &&
            -1 != this.ignoredFiles.indexOf(a)
          )
            return !1;
          a = this.backend.stripAssetsPrefix(a);
          for (var b = 0, c = this.dirs; b < c.length; ) {
            var d = c[b];
            ++b;
            N.pathJoin(d, a);
          }
          return !1;
        },
        init: function () {
          this.type = new ea();
          this.extensions = new ea();
          this.initExtensions();
          null == this.parseRules && (this.parseRules = li.getDefault());
          if (null != this.dirs)
            for (var a = 0, b = this.dirs; a < b.length; ) {
              var c = b[a];
              ++a;
              this.initMod(c);
            }
        },
        initExtensions: function () {
          null == this.extensions && (this.extensions = new ea());
          this._extensionSet("mp3", "AUDIO_GENERIC");
          this._extensionSet("ogg", "AUDIO_GENERIC");
          this._extensionSet("wav", "AUDIO_GENERIC");
          this._extensionSet("jpg", "IMAGE");
          this._extensionSet("png", "IMAGE");
          this._extensionSet("gif", "IMAGE");
          this._extensionSet("tga", "IMAGE");
          this._extensionSet("bmp", "IMAGE");
          this._extensionSet("tif", "IMAGE");
          this._extensionSet("tiff", "IMAGE");
          this._extensionSet("txt", "TEXT");
          this._extensionSet("xml", "TEXT");
          this._extensionSet("json", "TEXT");
          this._extensionSet("csv", "TEXT");
          this._extensionSet("tsv", "TEXT");
          this._extensionSet("mpf", "TEXT");
          this._extensionSet("tsx", "TEXT");
          this._extensionSet("tmx", "TEXT");
          this._extensionSet("vdf", "TEXT");
          this._extensionSet("ttf", "FONT");
          this._extensionSet("otf", "FONT");
        },
        _extensionSet: function (a, b) {
          0 == Object.prototype.hasOwnProperty.call(this.extensions.h, a) &&
            (this.extensions.h[a] = b);
        },
        initMod: function (a) {
          if (null != a) {
            var b = null;
            if ("" == a || null == a) b = [];
            try {
              b = [];
            } catch (e) {
              throw (
                ((Ba.lastError = e),
                (b = C.caught(e).unwrap()),
                C.thrown(
                  "ModAssetLibrary._initMod(" + a + ") failed : " + I.string(b)
                ))
              );
            }
            for (a = 0; a < b.length; ) {
              var c = b[a];
              ++a;
              var d = N.uLastIndexOf(c, ".");
              d = -1 != d ? c.substring(d + 1) : "";
              d = d.toLowerCase();
              d = this.getExtensionType(d);
              this.type.h[c] = d;
            }
          }
        },
        __class__: Am,
      };
      var Fd = function () {};
      g["polymod.backends.PolymodAssets"] = Fd;
      Fd.__name__ = "polymod.backends.PolymodAssets";
      Fd.init = function (a) {
        var b = a.framework;
        null == b
          ? ((b = Fd.autoDetectFramework()),
            Za.notice("framework_autodetect", " going with " + I.string(b)))
          : Za.notice("framework_init", " user specified " + I.string(b));
        switch (b._hx_index) {
          case 0:
            var c = new Mk();
            break;
          case 1:
            c = new $c();
            break;
          case 2:
            c = new Nk();
            break;
          case 3:
            c = new Lk();
            break;
          case 5:
            null != a.customBackend
              ? (c = Ya.createInstance(a.customBackend, []))
              : (Za.error(
                  "undefined_custom_backend",
                  "params.customBackend was not defined!"
                ),
                (c = null));
            break;
          default:
            c = null;
        }
        if (null == c)
          return (
            Za.error(
              "failed_create_backend",
              "could not create a backend for framework(" + I.string(b) + ")!"
            ),
            null
          );
        null != Fd.library && Fd.library.destroy();
        Fd.library = new Am({
          backend: c,
          dirs: a.dirs,
          parseRules: a.parseRules,
          ignoredFiles: a.ignoredFiles,
          extensionMap: a.extensionMap,
        });
        c.init();
        return Fd.library;
      };
      Fd.exists = function (a) {
        return Fd.library.exists(a);
      };
      Fd.getText = function (a) {
        return Fd.library.getText(a);
      };
      Fd.autoDetectFramework = function () {
        return Jn.OPENFL;
      };
      var Zf = function () {};
      g["polymod.format.BaseParseFormat"] = Zf;
      Zf.__name__ = "polymod.format.BaseParseFormat";
      Zf.__isInterface__ = !0;
      Zf.prototype = { __class__: Zf };
      var nd = function () {
        this._quoted = !1;
        this._delimeter = "";
        this._rgx = null;
      };
      g["polymod.format.CSV"] = nd;
      nd.__name__ = "polymod.format.CSV";
      nd.parse = function (a, b, c) {
        null == c && (c = !0);
        null == b && (b = ",");
        var d = new nd();
        d._parse(a, b, c);
        return d;
      };
      nd.parseWithFormat = function (a, b) {
        return b.get_isSimpleMode()
          ? nd.parseSimple(a)
          : nd.parse(a, b.delimeter, b.quotedCells);
      };
      nd.parseSimple = function (a) {
        var b = "\n";
        -1 != a.indexOf("\r\n") && (b = "\r\n");
        var c = a.split(b);
        a = c.shift().split(",");
        b = [];
        for (var d = 0; d < c.length; ) {
          var e = c[d];
          ++d;
          e = e.split(",");
          b.push(e);
        }
        c = new nd();
        c.fields = a;
        c.grid = b;
        return c;
      };
      nd.prototype = {
        _parse: function (a, b, c) {
          null == c && (c = !0);
          null == b && (b = ",");
          this._delimeter = b;
          this._quoted = c;
          "" != a && this.processRows(this.getRows(a));
        },
        clearArray: function (a) {
          if (null != a)
            for (var b = a.length - 1; 0 <= b; )
              this.destroyThing(a[b]), (a[b] = null), a.splice(b, 1), --b;
        },
        destroyThing: function (a) {
          null != a && a instanceof Array && this.clearArray(a);
        },
        getCells: function (a) {
          null == this._rgx &&
            (a.charAt(a.length - 1) == this._delimeter &&
              (a = ba.substr(a, 0, a.length - 1)),
            (this._rgx =
              "," == this._delimeter
                ? new Ua(
                    ",(?=(?:[^\\x22]*\\x22[^\\x22]*\\x22)*(?![^\\x22]*\\x22))",
                    "gm"
                  )
                : new Ua(
                    this._delimeter + '(?=(?:[^"]*"[^"]*")*(?![^"]*"))',
                    "gm"
                  )));
          return this._rgx.split(a);
        },
        getRows: function (a) {
          var b = "\r\n";
          -1 == a.indexOf("\r\n") && (b = "\n");
          return a.split(b);
        },
        processCells: function (a, b) {
          null == b && (b = 0);
          null == this.grid && ((this.grid = []), (this.fields = []));
          var c = [];
          for (var d = 0, e = a.length; d < e; ) {
            var f = d++;
            f = this._quoted ? ba.substr(a[f], 1, a[f].length - 2) : a[f];
            0 == b ? this.fields.push(f) : c.push(f);
          }
          this.grid.push(c);
          this.clearArray(a);
        },
        processRows: function (a) {
          for (var b = 0, c = a.length; b < c; ) {
            var d = b++;
            this.processCells(this.getCells(a[d]), d);
          }
        },
        __class__: nd,
      };
      var li = function () {
        this.formats = new ea();
      };
      g["polymod.format.ParseRules"] = li;
      li.__name__ = "polymod.format.ParseRules";
      li.getDefault = function () {
        var a = new li();
        a.addFormat("csv", new Ok(",", !0));
        a.addFormat("tsv", new Pk());
        a.addFormat("xml", new Qk());
        a.addFormat("json", new Rk());
        a.addFormat("txt", new Sk());
        return a;
      };
      li.prototype = {
        get: function (a) {
          return this.formats.h[a];
        },
        addFormat: function (a, b) {
          this.formats.h[a] = b;
        },
        __class__: li,
      };
      var Ok = function (a, b) {
        this.format = Bm.CSV;
        this.delimeter = a;
        this.quotedCells = b;
      };
      g["polymod.format.CSVParseFormat"] = Ok;
      Ok.__name__ = "polymod.format.CSVParseFormat";
      Ok.__interfaces__ = [Zf];
      Ok.prototype = {
        get_isSimpleMode: function () {
          return "," == this.delimeter ? 0 == this.quotedCells : !1;
        },
        append: function (a, b, c) {
          var d = "\n";
          -1 != a.indexOf("\r\n") && (d = "\r\n");
          if (this.lookForHeaders) {
            var e = "\n";
            -1 != b.indexOf("\r\n") && (e = "\r\n");
            var f = N.uLength(b),
              h = N.uLastIndexOf(b, e);
            if (h == f - 1 || h == f - 2) b = N.uSubstr(b, 0, f - N.uLength(e));
            try {
              var m = nd.parseWithFormat(a, this);
              var n = nd.parseWithFormat(b, this);
            } catch (ln) {
              return (
                (Ba.lastError = ln),
                (d = C.caught(ln).unwrap()),
                Za.error(
                  "append_error",
                  "CSV Append error (" + c + ") : " + I.string(d)
                ),
                a
              );
            }
            e = N.uLength(a);
            f = N.uLastIndexOf(a, d);
            b = !1;
            if (f == e - 1 || f == e - 2)
              (a = N.uSubstr(a, 0, e - N.uLength(d))), (b = !0);
            var p = 0;
            e = 0;
            for (f = m.fields.length; e < f; )
              (h = e++), (h = m.fields[h]), -1 != n.fields.indexOf(h) && ++p;
            this.lookForHeaders &&
              p < ((m.fields.length / 2) | 0) &&
              Za.error(
                "append_error",
                "Mod file(" +
                  c +
                  ") is missing most or all of the expected header fields",
                "init"
              );
            p = [];
            e = 0;
            for (f = n.grid.length; e < f; ) {
              for (var l = e++, k = "", g = 0, u = m.fields.length; g < u; ) {
                var q = g++;
                h = m.fields[q];
                var r = n.fields.indexOf(h);
                -1 != r
                  ? ((h = n.grid[l][r]), null == h && (h = ""), (k += h))
                  : -1 == p.indexOf(h) && p.push(h);
                q != m.fields.length - 1 && (k += this.delimeter);
              }
              a += d + k;
            }
            b && (a += d);
            for (e = 0; e < p.length; )
              (h = p[e]),
                ++e,
                Za.warning(
                  "append_error",
                  "Mod file(" +
                    c +
                    ') missing expected field "' +
                    h +
                    '", values will default to empty string.',
                  "init"
                );
            return a;
          }
          return N.appendCSVOrTSV(a, b, c);
        },
        merge: function (a, b, c) {
          try {
            var d = nd.parseWithFormat(a, this);
            var e = nd.parseWithFormat(b, this);
          } catch (k) {
            return (
              (Ba.lastError = k),
              (d = C.caught(k).unwrap()),
              Za.error(
                "merge_error",
                "CSV Merge error (" + c + ") : " + I.string(d)
              ),
              a
            );
          }
          a = 0;
          for (c = e.grid; a < c.length; )
            if (((e = c[a]), ++a, (b = 0 < e.length ? e[0] : ""), "" != b))
              for (var f = 0, h = d.grid.length; f < h; ) {
                var m = f++;
                m = d.grid[m];
                if (b == m[0])
                  for (var n = 0, p = e.length; n < p; ) {
                    var l = n++;
                    l < m.length && (m[l] = e[l]);
                  }
              }
          return this.print(d);
        },
        print: function (a) {
          for (var b = "", c = 0, d = a.fields.length; c < d; ) {
            var e = c++;
            b += I.string(a.fields[e]);
            e != a.fields.length - 1 && (b += I.string(this.delimeter));
          }
          -1 == b.indexOf("\n") && (b += "\r\n");
          a = a.grid;
          c = 0;
          for (d = a.length; c < d; ) {
            e = c++;
            for (var f = a[e], h = 0, m = f.length; h < m; ) {
              var n = h++,
                p = f[n];
              this.quotedCells && (b += String.fromCodePoint(34));
              Ml.iter(p, function (a) {
                b += String.fromCodePoint(a);
              });
              this.quotedCells && (b += String.fromCodePoint(34));
              n != f.length - 1 && (b += I.string(this.delimeter));
            }
            e != a.length - 1 && (b += "\r\n");
          }
          return b;
        },
        __class__: Ok,
        __properties__: { get_isSimpleMode: "get_isSimpleMode" },
      };
      var Pk = function () {
        this.format = Bm.TSV;
      };
      g["polymod.format.TSVParseFormat"] = Pk;
      Pk.__name__ = "polymod.format.TSVParseFormat";
      Pk.__interfaces__ = [Zf];
      Pk.prototype = {
        append: function (a, b, c) {
          return N.appendCSVOrTSV(a, b, c);
        },
        merge: function (a, b, c) {
          a = zg.parse(a);
          c = 0;
          for (b = zg.parse(b).grid; c < b.length; ) {
            var d = b[c];
            ++c;
            var e = 0 < d.length ? d[0] : "";
            if ("" != e)
              for (var f = 0, h = a.grid.length; f < h; ) {
                var m = f++;
                m = a.grid[m];
                if (e == m[0])
                  for (var n = 0, p = d.length; n < p; ) {
                    var l = n++;
                    l < m.length && (m[l] = d[l]);
                  }
              }
          }
          return this.print(a);
        },
        print: function (a) {
          for (var b = "", c = 0, d = a.fields.length; c < d; ) {
            var e = c++;
            b += I.string(a.fields[e]);
            e != a.fields.length - 1 && (b += String.fromCodePoint(9));
          }
          -1 == b.indexOf("\n") && (b += "\r\n");
          a = a.grid;
          c = 0;
          for (d = a.length; c < d; ) {
            e = c++;
            for (var f = a[e], h = 0, m = f.length; h < m; ) {
              var n = h++;
              Ml.iter(f[n], function (a) {
                b += String.fromCodePoint(a);
              });
              n != f.length - 1 && (b += String.fromCodePoint(9));
            }
            e != a.length - 1 && (b += "\r\n");
          }
          return b;
        },
        __class__: Pk,
      };
      var Qk = function (a, b, c) {
        null == a && (a = !1);
        this.prettyPrint = !1;
        null == b && (b = []);
        null == c && (c = []);
        this.stripHeaders = b;
        this.stripFooters = c;
        this.prettyPrint = a;
        this.format = Bm.XML;
      };
      g["polymod.format.XMLParseFormat"] = Qk;
      Qk.__name__ = "polymod.format.XMLParseFormat";
      Qk.__interfaces__ = [Zf];
      Qk.prototype = {
        append: function (a, b, c) {
          return null != this.stripHeaders && null != this.stripFooters
            ? N.appendSpecialXML(a, b, this.stripHeaders, this.stripFooters)
            : N.appendXML(a, b);
        },
        merge: function (a, b, c) {
          var d = null,
            e = null;
          try {
            (d = D.parse(a)), (e = D.parse(b));
          } catch (f) {
            throw (
              ((Ba.lastError = f),
              (a = C.caught(f).unwrap()),
              C.thrown(
                "Error parsing XML files during merge (" +
                  c +
                  ") " +
                  I.string(a)
              ))
            );
          }
          try {
            gc.mergeXMLNodes(d, e);
          } catch (f) {
            throw (
              ((Ba.lastError = f),
              (a = C.caught(f).unwrap()),
              C.thrown(
                "Error combining XML files during merge (" +
                  c +
                  ") " +
                  I.string(a)
              ))
            );
          }
          return this.print(d);
        },
        print: function (a) {
          return pf.print(a, this.prettyPrint);
        },
        __class__: Qk,
      };
      var Rk = function (a, b) {
        this.replacer = b;
        this.space = a;
        this.format = Bm.JSON;
      };
      g["polymod.format.JSONParseFormat"] = Rk;
      Rk.__name__ = "polymod.format.JSONParseFormat";
      Rk.__interfaces__ = [Zf];
      Rk.prototype = {
        parse: function (a) {
          return JSON.parse(a);
        },
        append: function (a, b, c) {
          var d = N.uLastIndexOf(a, "}");
          c = N.uSubstr(a, 0, d);
          d = N.uSubstr(a, d, a.length);
          var e = N.uIndexOf(b, "{"),
            f = N.uLastIndexOf(b, "}");
          b = N.uSubstring(b, e + 1, f);
          if (null == b || "" == b) return a;
          c = N.uTrimFinalEndlines(c);
          b = N.uTrimFinalEndlines(b);
          b = N.uTrimFirstEndlines(b);
          d = N.uTrimFinalEndlines(d);
          return c + ",\n" + b + d;
        },
        merge: function (a, b, c) {
          var d = null,
            e = null;
          try {
            d = this.parse(a);
          } catch (h) {
            Ba.lastError = h;
            var f = C.caught(h).unwrap();
            Za.error(
              "merge_error",
              "JSON merge error (" +
                c +
                "): couldn't parse base text! : " +
                I.string(f)
            );
          }
          try {
            e = this.parse(b);
          } catch (h) {
            return (
              (Ba.lastError = h),
              (f = C.caught(h).unwrap()),
              Za.error(
                "merge_error",
                "JSON merge error (" +
                  c +
                  "): couldn't parse merge text! : " +
                  I.string(f)
              ),
              a
            );
          }
          if (Object.prototype.hasOwnProperty.call(e, "merge"))
            if (e.merge instanceof Array)
              for (a = e.merge, b = 0; b < a.length; )
                (e = a[b]), ++b, (d = this._mergeJson(d, e, c));
            else
              Za.error(
                "merge_error",
                "JSON merge error (" +
                  c +
                  '): merge file must contain a single top-level array named "merge"! (Found an object, not an array)'
              );
          else
            Za.error(
              "merge_error",
              "JSON merge error (" +
                c +
                '): merge file must contain a single top-level array named "merge"!'
            );
          return this.print(d);
        },
        _mergeJson: function (a, b, c) {
          var d = this._getTargetSignature(b.target),
            e = d[0];
          if (null == e)
            return (
              Za.warning(
                "merge_error",
                "JSON merge failed (" + c + "), sig was " + I.string(d)
              ),
              a
            );
          for (
            var f = !1,
              h = a,
              m = 0,
              n = "",
              p = { next: null, parent: null, arrIndex: -1, target: null };
            !f;

          )
            (p = this._descend(h, e, n, p)),
              (h = null == p ? null : p.next),
              "" != n && (n += "."),
              (n += this._targSigElementToString(e)),
              ++m,
              null == h
                ? (Za.warning(
                    "merge_error",
                    "JSON merge failed (" +
                      c +
                      '), could not find object "' +
                      n +
                      '")'
                  ),
                  (f = !0))
                : m < d.length
                ? (e = d[m])
                : (this._inject(p.parent, p.target, p.arrIndex, b.payload, n),
                  (f = !0));
          return a;
        },
        _targSigElementToString: function (a) {
          var b = a.value;
          if (null != a.arrayIndeces && 0 < a.arrayIndeces.length) {
            var c = 0;
            for (a = a.arrayIndeces; c < a.length; ) {
              var d = a[c];
              ++c;
              0 <= d && (b += "[" + d + "]");
            }
          }
          return b;
        },
        _inject: function (a, b, c, d, e) {
          null == e && (e = "");
          -1 == c
            ? Object.prototype.hasOwnProperty.call(a, b)
              ? ((c = ia.field(a, b)),
                (d = this._mergeObjects(c, d, e)),
                (a[b] = d))
              : (a[b] = d)
            : a instanceof Array &&
              (a.length > c
                ? ((c = a[c]), this._mergeObjects(c, d, e))
                : Za.warning(
                    "merge_error",
                    "JSON merge failed, array index (" +
                      c +
                      ") out of bounds for array of length (" +
                      a.length +
                      ") at " +
                      e
                  ));
        },
        _mergeObjects: function (a, b, c) {
          null == c && (c = "");
          if (a instanceof Array && b instanceof Array) return b;
          if (a instanceof Array || b instanceof Array)
            (h = a instanceof Array ? "array" : "object"),
              (m = b instanceof Array ? "array" : "object"),
              Za.warning(
                "merge_error",
                "JSON can't merge @ (" +
                  c +
                  ") because base is (" +
                  h +
                  ") but payload is (" +
                  m +
                  ")"
              );
          else
            for (var d = 0, e = ia.fields(b); d < e.length; ) {
              var f = e[d];
              ++d;
              if (Object.prototype.hasOwnProperty.call(a, f))
                if (
                  ((h = ia.field(a, f)),
                  (m = ia.field(b, f)),
                  h instanceof Array && m instanceof Array)
                )
                  a[f] = m;
                else if (h instanceof Array || m instanceof Array) {
                  var h = h instanceof Array ? "array" : "object",
                    m = m instanceof Array ? "array" : "object";
                  Za.warning(
                    "merge_error",
                    "Can't merge field (" +
                      f +
                      ") @ (" +
                      c +
                      ") because base is (" +
                      h +
                      ") but payload is (" +
                      m +
                      ")"
                  );
                } else {
                  d = this.isPrimitive(a);
                  b = this.isPrimitive(b);
                  if (d && b) return m;
                  if (d != b) return h;
                  c = this.copyVal(this._mergeObjects(h, m, c + "." + f));
                  a[f] = c;
                  break;
                }
              else a[f] = ia.field(b, f);
            }
          return a;
        },
        copyVal: function (a) {
          var b = null;
          "number" == typeof a && (a | 0) === a && (b = a | 0);
          "number" == typeof a && (b = pa.__cast(a, Im));
          "string" == typeof a && I.string(b);
          return (b = "boolean" == typeof a ? 1 == a : I.string(a));
        },
        isPrimitive: function (a) {
          return "string" == typeof a ||
            "number" == typeof a ||
            ("number" == typeof a && (a | 0) === a) ||
            "boolean" == typeof a
            ? !0
            : !1;
        },
        _descend: function (a, b, c, d) {
          null == c && (c = "");
          null == d &&
            (d = { next: null, parent: null, arrIndex: -1, target: null });
          if (null == a || null == b) return null;
          if (0 == Object.prototype.hasOwnProperty.call(a, b.value))
            return (
              Za.warning(
                "merge_error",
                "JSON merge error : object (" +
                  c +
                  ") has no field (" +
                  b.value +
                  ")"
              ),
              null
            );
          var e = ia.field(a, b.value);
          d.next = e;
          d.parent = a;
          d.target = b.value;
          if (null == e) return d;
          if (0 < b.arrayIndeces.length)
            if (((d.next = e), e instanceof Array)) {
              a = e;
              var f = b.arrayIndeces.slice();
              for (c += "." + b.value; 0 < f.length; )
                (b = f.shift()),
                  b < a.length
                    ? ((d.parent = e),
                      (e = a[b]),
                      (d.next = e),
                      (d.arrIndex = b),
                      e instanceof Array
                        ? (a = e)
                        : Za.warning(
                            "merge_error",
                            "JSON merge error : invalid array access [" +
                              b +
                              '] on target "' +
                              c +
                              '"'
                          ))
                    : Za.warning(
                        "merge_error",
                        "JSON merge error : array index (" +
                          b +
                          ') out of bounds on target "' +
                          c +
                          '" with length ' +
                          a.length
                      ),
                  (c += "[" + b + "]");
            } else return null;
          return d;
        },
        _getTargetSignature: function (a) {
          if (null == a) return [];
          for (var b = [], c = a.split("."), d = 0; d < c.length; ) {
            var e = c[d];
            ++d;
            if (-1 != e.indexOf("[")) {
              e = e.split("[");
              for (var f = e.shift(), h = []; 0 < e.length; ) {
                var m = e.shift();
                m = N.uTrimFinalCharIf(m, "]");
                var n = I.parseInt(m);
                if (null != n && 0 <= n) h.push(n);
                else {
                  Za.warning(
                    "merge_error",
                    "JSON merge error: found invalid array index (" +
                      m +
                      ") in signature (" +
                      a +
                      ")"
                  );
                  break;
                }
              }
              b.push({ value: f, arrayIndeces: h });
            } else b.push({ value: e, arrayIndeces: [] });
          }
          return b;
        },
        print: function (a) {
          return JSON.stringify(a, this.replacer, this.space);
        },
        __class__: Rk,
      };
      var Sk = function () {
        this.format = Bm.PLAINTEXT;
      };
      g["polymod.format.PlainTextParseFormat"] = Sk;
      Sk.__name__ = "polymod.format.PlainTextParseFormat";
      Sk.__interfaces__ = [Zf];
      Sk.prototype = {
        append: function (a, b, c) {
          c = N.uCharAt(a, N.uLength(a) - 1);
          N.uCharAt(a, N.uLength(a) - 1);
          var d = "",
            e = "\n",
            f = N.uIndexOf(a, "\r"),
            h = N.uIndexOf(a, "\n");
          -1 != f && h == f + 1 && (e = "\r\n");
          "\n" != c && (d = e);
          return N.uCombine([a, d, b]);
        },
        merge: function (a, b, c) {
          Za.warning(
            "merge_error",
            "(" + c + ") Plain text does not support merging!"
          );
          return a;
        },
        __class__: Sk,
      };
      var Bm = (z["polymod.format.TextFileFormat"] = {
          __ename__: "polymod.format.TextFileFormat",
          __constructs__: "PLAINTEXT LINES CSV TSV XML JSON".split(" "),
          PLAINTEXT: {
            _hx_index: 0,
            __enum__: "polymod.format.TextFileFormat",
            toString: l,
          },
          LINES: {
            _hx_index: 1,
            __enum__: "polymod.format.TextFileFormat",
            toString: l,
          },
          CSV: {
            _hx_index: 2,
            __enum__: "polymod.format.TextFileFormat",
            toString: l,
          },
          TSV: {
            _hx_index: 3,
            __enum__: "polymod.format.TextFileFormat",
            toString: l,
          },
          XML: {
            _hx_index: 4,
            __enum__: "polymod.format.TextFileFormat",
            toString: l,
          },
          JSON: {
            _hx_index: 5,
            __enum__: "polymod.format.TextFileFormat",
            toString: l,
          },
        }),
        zg = function () {
          nd.call(this);
        };
      g["polymod.format.TSV"] = zg;
      zg.__name__ = "polymod.format.TSV";
      zg.parse = function (a) {
        var b = "\n";
        -1 != a.indexOf("\r\n") && (b = "\r\n");
        var c = a.split(b);
        a = c.shift().split("\t");
        b = [];
        for (var d = 0; d < c.length; ) {
          var e = c[d];
          for (++d; "\t" == e.charAt(e.length - 1); )
            e = ba.substr(e, 0, e.length - 1);
          e = e.split("\t");
          b.push(e);
        }
        c = new zg();
        c.fields = a;
        c.grid = b;
        return c;
      };
      zg.__super__ = nd;
      zg.prototype = r(nd.prototype, { __class__: zg });
      var gc = function () {};
      g["polymod.format.XMLMerge"] = gc;
      gc.__name__ = "polymod.format.XMLMerge";
      gc.mergeXMLWork = function (a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = !0);
        if (
          null != a &&
          null != b &&
          (6 == a.nodeType && (a = a.firstElement()),
          6 == b.nodeType && (b = b.firstElement()),
          0 == a.nodeType && 0 == b.nodeType)
        ) {
          if (a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          if ("merge" != a.nodeName) {
            if (b.nodeType != D.Element)
              throw C.thrown(
                "Bad node type, expected Element but found " +
                  (null == b.nodeType ? "null" : ha.toString(b.nodeType))
              );
            var e = "merge" == b.nodeName;
          } else e = !0;
          if (!e) {
            if (c)
              for (c = b.elements(); c.hasNext(); ) {
                var f = c.next();
                if (null != f) {
                  if (f.nodeType != D.Element)
                    throw C.thrown(
                      "Bad node type, expected Element but found " +
                        (null == f.nodeType ? "null" : ha.toString(f.nodeType))
                    );
                  if ("merge" != f.nodeName) {
                    if (f.nodeType != D.Element)
                      throw C.thrown(
                        "Bad node type, expected Element but found " +
                          (null == f.nodeType
                            ? "null"
                            : ha.toString(f.nodeType))
                      );
                    e = gc.countNodes(a, f.nodeName);
                    if (f.nodeType != D.Element)
                      throw C.thrown(
                        "Bad node type, expected Element but found " +
                          (null == f.nodeType
                            ? "null"
                            : ha.toString(f.nodeType))
                      );
                    var h = gc.countNodes(b, f.nodeName);
                    if (0 == e && 0 < h) {
                      e = null;
                      if (f.nodeType == D.Element) {
                        if (f.nodeType != D.Element)
                          throw C.thrown(
                            "Bad node type, expected Element but found " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        e = D.createElement(f.nodeName);
                        for (h = f.attributes(); h.hasNext(); ) {
                          var m = h.next();
                          e.set(m, f.get(m));
                        }
                        for (f = f.elements(); f.hasNext(); ) {
                          m = f.next();
                          h = null;
                          if (m.nodeType == D.Element) {
                            if (m.nodeType != D.Element)
                              throw C.thrown(
                                "Bad node type, expected Element but found " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createElement(m.nodeName);
                            for (var n = m.attributes(); n.hasNext(); ) {
                              var p = n.next();
                              h.set(p, m.get(p));
                            }
                            for (m = m.elements(); m.hasNext(); )
                              (n = m.next()), h.addChild(N.copyXml(n, h));
                          } else if (m.nodeType == D.PCData) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createPCData(m.nodeValue);
                          } else if (m.nodeType == D.CData) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createCData(m.nodeValue);
                          } else if (m.nodeType == D.Comment) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createComment(m.nodeValue);
                          } else if (m.nodeType == D.DocType) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createDocType(m.nodeValue);
                          } else if (m.nodeType == D.ProcessingInstruction) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createProcessingInstruction(m.nodeValue);
                          } else if (m.nodeType == D.Document)
                            for (
                              h = D.createDocument(), m = m.elements();
                              m.hasNext();

                            )
                              (n = m.next()), h.addChild(N.copyXml(n, h));
                          h.parent = e;
                          e.addChild(h);
                        }
                      } else if (f.nodeType == D.PCData) {
                        if (f.nodeType == D.Document || f.nodeType == D.Element)
                          throw C.thrown(
                            "Bad node type, unexpected " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        e = D.createPCData(f.nodeValue);
                      } else if (f.nodeType == D.CData) {
                        if (f.nodeType == D.Document || f.nodeType == D.Element)
                          throw C.thrown(
                            "Bad node type, unexpected " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        e = D.createCData(f.nodeValue);
                      } else if (f.nodeType == D.Comment) {
                        if (f.nodeType == D.Document || f.nodeType == D.Element)
                          throw C.thrown(
                            "Bad node type, unexpected " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        e = D.createComment(f.nodeValue);
                      } else if (f.nodeType == D.DocType) {
                        if (f.nodeType == D.Document || f.nodeType == D.Element)
                          throw C.thrown(
                            "Bad node type, unexpected " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        e = D.createDocType(f.nodeValue);
                      } else if (f.nodeType == D.ProcessingInstruction) {
                        if (f.nodeType == D.Document || f.nodeType == D.Element)
                          throw C.thrown(
                            "Bad node type, unexpected " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        e = D.createProcessingInstruction(f.nodeValue);
                      } else if (f.nodeType == D.Document)
                        for (
                          e = D.createDocument(), f = f.elements();
                          f.hasNext();

                        ) {
                          m = f.next();
                          h = null;
                          if (m.nodeType == D.Element) {
                            if (m.nodeType != D.Element)
                              throw C.thrown(
                                "Bad node type, expected Element but found " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createElement(m.nodeName);
                            for (n = m.attributes(); n.hasNext(); )
                              (p = n.next()), h.set(p, m.get(p));
                            for (m = m.elements(); m.hasNext(); )
                              (n = m.next()), h.addChild(N.copyXml(n, h));
                          } else if (m.nodeType == D.PCData) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createPCData(m.nodeValue);
                          } else if (m.nodeType == D.CData) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createCData(m.nodeValue);
                          } else if (m.nodeType == D.Comment) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createComment(m.nodeValue);
                          } else if (m.nodeType == D.DocType) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createDocType(m.nodeValue);
                          } else if (m.nodeType == D.ProcessingInstruction) {
                            if (
                              m.nodeType == D.Document ||
                              m.nodeType == D.Element
                            )
                              throw C.thrown(
                                "Bad node type, unexpected " +
                                  (null == m.nodeType
                                    ? "null"
                                    : ha.toString(m.nodeType))
                              );
                            h = D.createProcessingInstruction(m.nodeValue);
                          } else if (m.nodeType == D.Document)
                            for (
                              h = D.createDocument(), m = m.elements();
                              m.hasNext();

                            )
                              (n = m.next()), h.addChild(N.copyXml(n, h));
                          h.parent = e;
                          e.addChild(h);
                        }
                      e.parent = null;
                      a.addChild(e);
                    } else {
                      if (f.nodeType != D.Element)
                        throw C.thrown(
                          "Bad node type, expected Element but found " +
                            (null == f.nodeType
                              ? "null"
                              : ha.toString(f.nodeType))
                        );
                      if (1 == gc.countNodes(a, f.nodeName)) {
                        if (f.nodeType != D.Element)
                          throw C.thrown(
                            "Bad node type, expected Element but found " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        e = 1 == gc.countNodes(b, f.nodeName);
                      } else e = !1;
                      if (e) {
                        if (f.nodeType != D.Element)
                          throw C.thrown(
                            "Bad node type, expected Element but found " +
                              (null == f.nodeType
                                ? "null"
                                : ha.toString(f.nodeType))
                          );
                        gc.mergeXMLWork(a.elementsNamed(f.nodeName).next(), f);
                      } else {
                        e = null;
                        if (f.nodeType == D.Element) {
                          if (f.nodeType != D.Element)
                            throw C.thrown(
                              "Bad node type, expected Element but found " +
                                (null == f.nodeType
                                  ? "null"
                                  : ha.toString(f.nodeType))
                            );
                          e = D.createElement(f.nodeName);
                          for (h = f.attributes(); h.hasNext(); )
                            (m = h.next()), e.set(m, f.get(m));
                          for (f = f.elements(); f.hasNext(); ) {
                            m = f.next();
                            h = null;
                            if (m.nodeType == D.Element) {
                              if (m.nodeType != D.Element)
                                throw C.thrown(
                                  "Bad node type, expected Element but found " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createElement(m.nodeName);
                              for (n = m.attributes(); n.hasNext(); )
                                (p = n.next()), h.set(p, m.get(p));
                              for (m = m.elements(); m.hasNext(); )
                                (n = m.next()), h.addChild(N.copyXml(n, h));
                            } else if (m.nodeType == D.PCData) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createPCData(m.nodeValue);
                            } else if (m.nodeType == D.CData) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createCData(m.nodeValue);
                            } else if (m.nodeType == D.Comment) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createComment(m.nodeValue);
                            } else if (m.nodeType == D.DocType) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createDocType(m.nodeValue);
                            } else if (m.nodeType == D.ProcessingInstruction) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createProcessingInstruction(m.nodeValue);
                            } else if (m.nodeType == D.Document)
                              for (
                                h = D.createDocument(), m = m.elements();
                                m.hasNext();

                              )
                                (n = m.next()), h.addChild(N.copyXml(n, h));
                            h.parent = e;
                            e.addChild(h);
                          }
                        } else if (f.nodeType == D.PCData) {
                          if (
                            f.nodeType == D.Document ||
                            f.nodeType == D.Element
                          )
                            throw C.thrown(
                              "Bad node type, unexpected " +
                                (null == f.nodeType
                                  ? "null"
                                  : ha.toString(f.nodeType))
                            );
                          e = D.createPCData(f.nodeValue);
                        } else if (f.nodeType == D.CData) {
                          if (
                            f.nodeType == D.Document ||
                            f.nodeType == D.Element
                          )
                            throw C.thrown(
                              "Bad node type, unexpected " +
                                (null == f.nodeType
                                  ? "null"
                                  : ha.toString(f.nodeType))
                            );
                          e = D.createCData(f.nodeValue);
                        } else if (f.nodeType == D.Comment) {
                          if (
                            f.nodeType == D.Document ||
                            f.nodeType == D.Element
                          )
                            throw C.thrown(
                              "Bad node type, unexpected " +
                                (null == f.nodeType
                                  ? "null"
                                  : ha.toString(f.nodeType))
                            );
                          e = D.createComment(f.nodeValue);
                        } else if (f.nodeType == D.DocType) {
                          if (
                            f.nodeType == D.Document ||
                            f.nodeType == D.Element
                          )
                            throw C.thrown(
                              "Bad node type, unexpected " +
                                (null == f.nodeType
                                  ? "null"
                                  : ha.toString(f.nodeType))
                            );
                          e = D.createDocType(f.nodeValue);
                        } else if (f.nodeType == D.ProcessingInstruction) {
                          if (
                            f.nodeType == D.Document ||
                            f.nodeType == D.Element
                          )
                            throw C.thrown(
                              "Bad node type, unexpected " +
                                (null == f.nodeType
                                  ? "null"
                                  : ha.toString(f.nodeType))
                            );
                          e = D.createProcessingInstruction(f.nodeValue);
                        } else if (f.nodeType == D.Document)
                          for (
                            e = D.createDocument(), f = f.elements();
                            f.hasNext();

                          ) {
                            m = f.next();
                            h = null;
                            if (m.nodeType == D.Element) {
                              if (m.nodeType != D.Element)
                                throw C.thrown(
                                  "Bad node type, expected Element but found " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createElement(m.nodeName);
                              for (n = m.attributes(); n.hasNext(); )
                                (p = n.next()), h.set(p, m.get(p));
                              for (m = m.elements(); m.hasNext(); )
                                (n = m.next()), h.addChild(N.copyXml(n, h));
                            } else if (m.nodeType == D.PCData) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createPCData(m.nodeValue);
                            } else if (m.nodeType == D.CData) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createCData(m.nodeValue);
                            } else if (m.nodeType == D.Comment) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createComment(m.nodeValue);
                            } else if (m.nodeType == D.DocType) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createDocType(m.nodeValue);
                            } else if (m.nodeType == D.ProcessingInstruction) {
                              if (
                                m.nodeType == D.Document ||
                                m.nodeType == D.Element
                              )
                                throw C.thrown(
                                  "Bad node type, unexpected " +
                                    (null == m.nodeType
                                      ? "null"
                                      : ha.toString(m.nodeType))
                                );
                              h = D.createProcessingInstruction(m.nodeValue);
                            } else if (m.nodeType == D.Document)
                              for (
                                h = D.createDocument(), m = m.elements();
                                m.hasNext();

                              )
                                (n = m.next()), h.addChild(N.copyXml(n, h));
                            h.parent = e;
                            e.addChild(h);
                          }
                        e.parent = null;
                        a.addChild(e);
                      }
                    }
                  }
                }
              }
            if (d)
              for (h = b.attributes(); h.hasNext(); )
                (m = h.next()), a.set(m, b.get(m));
          }
        }
      };
      gc.countNodes = function (a, b) {
        var c = 0;
        for (a = a.elementsNamed(b); a.hasNext(); ) a.next(), ++c;
        return c;
      };
      gc.mergeXML = function (a, b, c, d) {
        if (6 == a.nodeType) var e = "";
        else {
          if (a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          e = a.nodeName;
        }
        if (6 == b.nodeType) var f = "";
        else {
          if (b.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == b.nodeType ? "null" : ha.toString(b.nodeType))
            );
          f = b.nodeName;
        }
        if (
          e == f &&
          ((e = gc.getNodeSignature(a)), (f = gc.getNodeSignature(b)), e == f)
        )
          for (f = 0; f < c.length; ) {
            var h = c[f];
            ++f;
            if (0 == h.indexOf(e))
              if (h == e) {
                var m = d.h[h];
                if (null == m && "" == h && "" == e)
                  if (6 == a.nodeType && 6 == b.nodeType) {
                    h = a.firstElement();
                    var n = b.firstElement();
                    gc.mergeXML(h, n, c, d);
                  } else break;
                if (null != m && 0 == m.length % 2 && 2 <= m.length)
                  for (h = 0, n = (m.length / 2) | 0; h < n; ) {
                    var p = h++,
                      l = m[2 * p];
                    p = m[2 * p + 1];
                    a.get(l) == p && (b.get(l), gc.mergeXMLWork(a, b));
                  }
              } else
                for (m = a.elements(); m.hasNext(); )
                  for (h = m.next(), n = b.elements(); n.hasNext(); )
                    (l = n.next()), gc.mergeXML(h, l, c, d);
          }
      };
      gc.mergeXMLNodes = function (a, b) {
        if (null != b) {
          var c = [""],
            d = gc.getNodeMergeMap(b, c);
          gc.mergeXML(a, b, c, d);
        }
      };
      gc.getNodeMergeMap = function (a, b) {
        var c = new ea();
        if (null == a) return c;
        for (a = a.elements(); a.hasNext(); ) {
          var d = a.next();
          if (d.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == d.nodeType ? "null" : ha.toString(d.nodeType))
            );
          if ("merge" != d.nodeName) {
            var e = gc.getNodeMergeMap(d, b);
            c = gc.mergeMapsDestructively(c, e);
            e = gc.getNodeSignature(d);
            if (d.nodeType != D.Document && d.nodeType != D.Element)
              throw C.thrown(
                "Invalid nodeType " +
                  (null == d.nodeType ? "null" : ha.toString(d.nodeType))
              );
            var f = d;
            if (Ma.resolve(f, "merge")) {
              0 == Object.prototype.hasOwnProperty.call(c.h, e) &&
                (c.h[e] = []);
              d = c.h[e];
              var h = Ib.resolve(Xa.resolve(f, "merge"), "key")
                ? Pb.resolve(Xa.resolve(f, "merge"), "key")
                : "";
              f = Xa.resolve(f, "merge").get(h);
              d.push(h);
              d.push(f);
              -1 == b.indexOf(e) && b.push(e);
            }
          }
        }
        return c;
      };
      gc.getNodeSignature = function (a) {
        for (var b = []; null != a && 0 == a.nodeType; ) {
          if (a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          b.push(a.nodeName);
          a = 0 == a.nodeType ? a.parent : null;
        }
        a = "";
        for (var c = 0, d = b.length; c < d; ) {
          var e = c++;
          a += b[b.length - 1 - e];
          e != b.length - 1 && (a += ".");
        }
        return a;
      };
      gc.mergeMapsDestructively = function (a, b) {
        null == a && (a = new ea());
        if (null == b) return a;
        for (var c = ea.keysIterator(b.h); c.hasNext(); ) {
          var d = c.next();
          if (Object.prototype.hasOwnProperty.call(a.h, d)) {
            var e = a.h[d];
            d = b.h[d];
            for (var f = 0; f < d.length; ) {
              var h = d[f];
              ++f;
              e.push(h);
            }
          } else
            (a.h[d] = b.h[d]),
              Object.prototype.hasOwnProperty.call(b.h, d) && delete b.h[d];
        }
        return a;
      };
      var wg = function () {};
      g["polymod.util.SemanticVersion"] = wg;
      wg.__name__ = "polymod.util.SemanticVersion";
      wg.fromString = function (a) {
        var b = new wg();
        b.original = a;
        if ("" == a || null == a)
          throw C.thrown("SemanticVersion.hx: string is empty!");
        var c = "";
        if (-1 != a.indexOf("+")) {
          var d = a.split("+");
          a = d[0];
        }
        -1 != a.indexOf("-") && ((d = a.split("-")), (a = d[0]), (c = d[1]));
        d = a.split(".");
        if (3 > d.length)
          throw C.thrown(
            'SemanticVersion.hx: needs major, minor, and patch versions! :"' +
              a +
              '"'
          );
        for (var e = 0, f = d.length; e < f; ) {
          var h = e++,
            m = d[h];
          if (1 < m.length && "0" == m.charAt(0))
            throw C.thrown(
              'SemanticVersion.hx: no leading zeroes allowed! :"' + a + '"'
            );
          for (var n = 0, p = m.length; n < p; ) {
            var l = n++;
            switch (m.charAt(l)) {
              case "*":
              case "0":
              case "1":
              case "2":
              case "3":
              case "4":
              case "5":
              case "6":
              case "7":
              case "8":
              case "9":
                break;
              default:
                switch (h) {
                  case 0:
                    b = "major";
                    break;
                  case 1:
                    b = "minor";
                    break;
                  case 2:
                    b = "patch";
                    break;
                  default:
                    b = "";
                }
                throw C.thrown(
                  "SemanticVersion.hx: couldn't parse " +
                    b +
                    ' version! :"' +
                    a +
                    '"'
                );
            }
          }
        }
        h = f = e = null;
        "*" == d[0] && (e = -1);
        "*" == d[1] && (f = -1);
        "*" == d[2] && (h = -1);
        null == e && (e = I.parseInt(d[0]));
        null == f && (f = I.parseInt(d[1]));
        null == h && (h = I.parseInt(d[2]));
        if (null == e)
          throw C.thrown(
            "SemanticVersion.hx: couldn't parse major version! :\"" + a + '"'
          );
        if (null == f)
          throw C.thrown(
            "SemanticVersion.hx: couldn't parse minor version! :\"" + a + '"'
          );
        if (null == h)
          throw C.thrown(
            "SemanticVersion.hx: couldn't parse patch version! :\"" + a + '"'
          );
        -1 == e && (h = f = -1);
        -1 == f && (h = -1);
        b.major = e;
        b.minor = f;
        b.patch = h;
        b.preRelease = [];
        if (-1 == e || -1 == f || -1 == h) c = "";
        if (null != c && "" != c) {
          if (1 < e)
            throw C.thrown(
              'SemanticVersion.hx: pre-release version not allowed post 1.0.0! :"' +
                a +
                '"'
            );
          if (1 == e) {
            if (0 < f)
              throw C.thrown(
                'SemanticVersion.hx: pre-release version not allowed post 1.0.0! :"' +
                  a +
                  '"'
              );
            if (0 < h)
              throw C.thrown(
                'SemanticVersion.hx: pre-release version not allowed post 1.0.0! :"' +
                  a +
                  '"'
              );
          }
          d = c.split(".");
          if (null != d && 0 < d.length)
            for (e = 0; e < d.length; ) {
              m = d[e];
              ++e;
              l = I.parseInt(m);
              if (null != l && 0 < m.length && "0" == m.charAt(0))
                throw C.thrown(
                  'SemanticVersion.hx: no leading zeroes allowed! :"' + a + '"'
                );
              b.preRelease.push(m);
            }
        }
        b.effective = b.major + "." + b.minor + "." + b.patch;
        null != b.preRelease &&
          0 < b.preRelease.length &&
          (b.effective = b.effective + "-" + b.preRelease.join("."));
        return b;
      };
      wg.prototype = {
        checkCompatibility: function (a) {
          var b = 0;
          if (a.major == this.major || -1 == a.major || -1 == this.major)
            if (
              (++b, a.minor >= this.minor || -1 == a.minor || -1 == this.minor)
            )
              ++b,
                (a.patch >= this.patch || -1 == a.patch || -1 == this.patch) &&
                  ++b;
          return b;
        },
        toString: function () {
          return this.effective;
        },
        __class__: wg,
      };
      var N = function () {};
      g["polymod.util.Util"] = N;
      N.__name__ = "polymod.util.Util";
      N.mergeAndAppendText = function (a, b, c, d, e) {
        for (var f = 0; f < c.length; ) {
          var h = c[f];
          ++f;
          var m = h;
          null == m && (m = "");
          N.hasSpecial(b, "_merge", m) && (a = N.mergeText(a, b, h, d, e));
          m = h;
          null == m && (m = "");
          N.hasSpecial(b, "_append", m) && (a = N.appendText(a, b, h, d, e));
        }
        return a;
      };
      N.mergeText = function (a, b, c, d, e) {
        null == c && (c = "");
        var f = N.uExtension(b, !0);
        0 == N.uIndexOf(b, "assets/") && (b = N.uSubstring(b, 7));
        var h = "_merge" + N.sl() + b,
          m = e.get(b);
        null == m && (m = e.get(f));
        if (null != m) return (c = d(h, c)), m.merge(a, c, b);
        Za.error(
          "merge_error",
          "Could not merge file (" +
            b +
            "), no parse format was specified for extension (" +
            f +
            ")."
        );
        return a;
      };
      N.appendText = function (a, b, c, d, e) {
        var f = N.uExtension(b, !0);
        0 == N.uIndexOf(b, "assets/") && (b = N.uSubstring(b, 7));
        var h = e.get(b);
        null == h && (h = e.get(f));
        return null != h
          ? ((c = d(N.pathJoin("_append", b), c)), h.append(a, c, b))
          : a;
      };
      N.appendCSVOrTSV = function (a, b, c) {
        c = N.uCharAt(a, N.uLength(a) - 1);
        N.uCharAt(a, N.uLength(a) - 1);
        var d = "",
          e = "\n",
          f = N.uIndexOf(a, "\r"),
          h = N.uIndexOf(a, "\n");
        -1 != f && h == f + 1 && (e = "\r\n");
        "\n" != c && (d = e);
        b = N.uSplitReplace(b, "\n" == e ? "\r\n" : "\n", e);
        return N.uCombine([a, d, b]);
      };
      N.appendSpecialXML = function (a, b, c, d) {
        a = N.stripXML(a, !0, !0, c, d);
        b = N.stripXML(b, !0, !0, c, d);
        c = N.uCat('<?xml version="1.0" encoding="utf-8" ?>', "<data>");
        c = N.uCat(c, a);
        c = N.uCat(c, b);
        return (c = N.uCat(c, "</data>"));
      };
      N.appendXML = function (a, b) {
        a = N.stripXML(a, !1, !0);
        b = N.stripXML(b, !0, !1);
        return N.uCat(a, b);
      };
      N.stripComments = function (a) {
        for (
          var b = N.uIndexOf(a, "\x3c!--"), c = N.uIndexOf(a, "--\x3e");
          -1 != b && -1 != c;

        ) {
          var d = N.uLength(a);
          b = N.uSubstr(a, 0, b);
          a = N.uSubstr(a, c + 3, d - (c + 3));
          a = N.uCat(b, a);
          b = N.uIndexOf(a, "\x3c!--");
          c = N.uIndexOf(a, "--\x3e");
        }
        return a;
      };
      N.trimLeadingWhiteSpace = function (a) {
        for (
          var b = ["\r", "\n", " ", "\t"], c = N.uLength(a), d = 0;
          d < b.length;

        ) {
          var e = b[d];
          for (++d; 0 == N.uIndexOf(a, e); ) (a = N.uSubstr(a, 1, c - 1)), --c;
        }
        return a;
      };
      N.trimTrailingWhiteSpace = function (a) {
        for (
          var b = ["\r", "\n", " ", "\t"], c = N.uLength(a), d = 0;
          d < b.length;

        ) {
          var e = b[d];
          for (++d; N.uCharAt(a, c - 1) == e; )
            (a = N.uSubstr(a, 0, c - 1)), --c;
        }
        return a;
      };
      N.stripXML = function (a, b, c, d, e) {
        null == c && (c = !0);
        null == b && (b = !0);
        a = N.stripComments(a);
        if (b) {
          if (0 == N.uIndexOf(a, "<?xml")) {
            var f = N.uIndexOf(a, ">");
            a = N.uSubstr(a, f + 1, N.uLength(a) - (f + 1));
            a = N.trimLeadingWhiteSpace(a);
          }
          0 == N.uIndexOf(a, "<data") &&
            ((f = N.uIndexOf(a, ">")),
            (a = N.uSubstr(a, f + 1, N.uLength(a) - (f + 1))),
            (a = N.trimLeadingWhiteSpace(a)));
          if (null != d)
            for (b = 0; b < d.length; )
              (f = d[b]),
                ++b,
                0 == N.uIndexOf(a, f) &&
                  ((f = N.uIndexOf(a, ">")),
                  (a = N.uSubstr(a, f + 1, N.uLength(a) - (f + 1))),
                  (a = N.trimLeadingWhiteSpace(a)));
        }
        if (
          c &&
          ((a = N.trimTrailingWhiteSpace(a)),
          (c = N.uLength(a)),
          N.uLastIndexOf(a, "</data>") == c - 7 && (a = N.uSubstr(a, 0, c - 7)),
          null != e)
        )
          for (b = 0; b < e.length; )
            (d = e[b]),
              ++b,
              (a = N.trimTrailingWhiteSpace(a)),
              (c = N.uLength(a)),
              (f = N.uLength(d)),
              N.uLastIndexOf(a, d) == c - f && (a = N.uSubstr(a, 0, c - f));
        return a;
      };
      N.hasSpecial = function (a, b, c) {
        return !1;
      };
      N.pathJoin = function (a, b) {
        var c =
            N.uLastIndexOf(a, "/") == N.uLength(a) - 1 ||
            N.uLastIndexOf(a, "\\") == N.uLength(a) - 1,
          d = 0 == N.uIndexOf(b, "/") || 0 == N.uIndexOf(b, "\\");
        a = c || d ? N.uCombine([a, b]) : N.uCombine([a, N.sl(), b]);
        return (a = N.cleanSlashes(a));
      };
      N.cleanSlashes = function (a) {
        a = N.uSplitReplace(a, "\\", "/");
        return (a = N.uSplitReplace(a, "//", "/"));
      };
      N.sl = function () {
        return "/";
      };
      N.copyXml = function (a, b) {
        var c = null;
        if (a.nodeType == D.Element) {
          if (a.nodeType != D.Element)
            throw C.thrown(
              "Bad node type, expected Element but found " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          c = D.createElement(a.nodeName);
          for (var d = a.attributes(); d.hasNext(); ) {
            var e = d.next();
            c.set(e, a.get(e));
          }
          for (a = a.elements(); a.hasNext(); )
            (d = a.next()), c.addChild(N.copyXml(d, c));
        } else if (a.nodeType == D.PCData) {
          if (a.nodeType == D.Document || a.nodeType == D.Element)
            throw C.thrown(
              "Bad node type, unexpected " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          c = D.createPCData(a.nodeValue);
        } else if (a.nodeType == D.CData) {
          if (a.nodeType == D.Document || a.nodeType == D.Element)
            throw C.thrown(
              "Bad node type, unexpected " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          c = D.createCData(a.nodeValue);
        } else if (a.nodeType == D.Comment) {
          if (a.nodeType == D.Document || a.nodeType == D.Element)
            throw C.thrown(
              "Bad node type, unexpected " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          c = D.createComment(a.nodeValue);
        } else if (a.nodeType == D.DocType) {
          if (a.nodeType == D.Document || a.nodeType == D.Element)
            throw C.thrown(
              "Bad node type, unexpected " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          c = D.createDocType(a.nodeValue);
        } else if (a.nodeType == D.ProcessingInstruction) {
          if (a.nodeType == D.Document || a.nodeType == D.Element)
            throw C.thrown(
              "Bad node type, unexpected " +
                (null == a.nodeType ? "null" : ha.toString(a.nodeType))
            );
          c = D.createProcessingInstruction(a.nodeValue);
        } else if (a.nodeType == D.Document)
          for (c = D.createDocument(), a = a.elements(); a.hasNext(); )
            (d = a.next()), c.addChild(N.copyXml(d, c));
        c.parent = b;
        return c;
      };
      N.uCat = function (a, b) {
        a = "" + I.string(null == a ? "null" : "" + a);
        return (a += I.string(null == b ? "null" : "" + b));
      };
      N.uCharAt = function (a, b) {
        return a.charAt(b);
      };
      N.uCombine = function (a) {
        for (var b = "", c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b += null == d ? "null" : "" + d;
        }
        return b;
      };
      N.uExtension = function (a, b) {
        null == b && (b = !1);
        var c = N.uLastIndexOf(a, ".");
        a = N.uSubstr(a, c + 1, N.uLength(a) - (c + 1));
        b && (a = a.toLowerCase());
        return a;
      };
      N.uIndexOf = function (a, b, c) {
        return a.indexOf(b, c);
      };
      N.uLastIndexOf = function (a, b, c) {
        return a.lastIndexOf(b, c);
      };
      N.uLength = function (a) {
        return a.length;
      };
      N.uTrimFinalCharIf = function (a, b) {
        var c = N.uLength(a);
        N.uLastIndexOf(a, b) == c - 1 &&
          ((a = N.uSubstr(a, 0, c - 1)), N.uLength(a));
        return a;
      };
      N.uTrimFinalEndlines = function (a) {
        for (var b = !1, c; !b; )
          (c = N.uTrimFinalCharIf(a, "\n")),
            (c = N.uTrimFinalCharIf(c, "\r")),
            c == a ? (b = !0) : (a = c);
        return a;
      };
      N.uTrimFirstCharIf = function (a, b) {
        var c = N.uLength(a);
        0 == N.uIndexOf(a, b) && ((a = N.uSubstr(a, 1, c)), N.uLength(a));
        return a;
      };
      N.uTrimFirstEndlines = function (a) {
        for (var b = !1, c; !b; )
          (c = N.uTrimFirstCharIf(a, "\n")),
            (c = N.uTrimFirstCharIf(c, "\r")),
            c == a ? (b = !0) : (a = c);
        return a;
      };
      N.uSplit = function (a, b) {
        return a.split(b);
      };
      N.uSplitReplace = function (a, b, c) {
        if (-1 == N.uIndexOf(a, b)) return a;
        b = N.uSplit(a, b);
        if (null == b || 2 > b.length) return a;
        a = "";
        for (var d = 0, e = b.length; d < e; ) {
          var f = d++,
            h = b[f];
          a += null == h ? "null" : "" + h;
          f != b.length - 1 && (a += null == c ? "null" : "" + c);
        }
        return a;
      };
      N.uSubstr = function (a, b, c) {
        return ba.substr(a, b, c);
      };
      N.uSubstring = function (a, b, c) {
        return a.substring(b, c);
      };
      E.$haxeUID |= 0;
      uc.count = 0;
      "undefined" != typeof performance &&
        "function" == typeof performance.now &&
        (ba.now = performance.now.bind(performance));
      g.Math = Math;
      null == String.fromCodePoint &&
        (String.fromCodePoint = function (a) {
          return 65536 > a
            ? String.fromCharCode(a)
            : String.fromCharCode((a >> 10) + 55232) +
                String.fromCharCode((a & 1023) + 56320);
        });
      String.prototype.__class__ = g.String = String;
      String.__name__ = "String";
      g.Array = Array;
      Array.__name__ = "Array";
      Date.prototype.__class__ = g.Date = Date;
      Date.__name__ = "Date";
      var cn = {},
        tn = {},
        Im = Number,
        sn = Boolean,
        hl = {},
        nn = {};
      pa.__toStr = {}.toString;
      zb.content = [
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleX",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQlBTVVJCVkJpVmpWQkJEc0F3Q0FLMy8vKzRZNWV5R05hREpoNVVCSlNTTUlrYW9RSW9BSXk1aktrOXRENWJHcmdBRkRVMGVZZGtMbjFXdUFsWHM5SGpzUlVmY3lWRHE4dlNQNWxUYi96SEY2VW9FeGRNWXJPSEFBQUFBRWxGVGtTdVFtQ0M",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMaximizeButton",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQUIyQUFBQWRnRk9leVlJQUFBQUIzUkpUVVVIM2dNSkNSOFVCaGtEeVFBQUFFOUpSRUZVR05PdGtFRVN3REFJQW92Ly8vUDJvb2FhOUJaUFpvQXdxd0NlTlpMVUQ5ZkNIVzc2VFkyZmR3MklVOVVwZUhlVU5kMVlBRm5kTUFGUW1ndTV0eGFWM202VDV5bW9EL0gwT3ZrTFNBOUI4bis0Y2pvQUFBQUFTVVZPUks1Q1lJST0",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_GraphicLogo",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUdRQUFBQmtDQVlBQUFCdzRwVlVBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBS1QybERRMUJRYUc5MGIzTm9iM0FnU1VORElIQnliMlpwYkdVQUFIamFuVk5uVkZQcEZqMzMzdlJDUzRpQWxFdHZVaFVJSUZKQ2k0QVVrU1lxSVFrUVNvZ2hvZGtWVWNFUlJVVUVHOGlnaUFPT2pvQ01GVkVzRElvSzJBZmtJYUtPZzZPSWlzcjc0WHVqYTlhODkrYk4vclhYUHVlczg1Mnp6d2ZBQ0F5V1NETlJOWUFNcVVJZUVlQ0R4OFRHNGVRdVFJRUtKSEFBRUFpelpDRnovU01CQVBoK1BEd3JJc0FIdmdBQmVOTUxDQURBVFp2QU1CeUgvdy9xUXBsY0FZQ0VBY0Iwa1RoTENJQVVBRUI2amtLbUFFQkdBWUNkbUNaVEFLQUVBR0RMWTJMakFGQXRBR0FuZitiVEFJQ2QrSmw3QVFCYmxDRVZBYUNSQUNBVFpZaEVBR2c3QUt6UFZvcEZBRmd3QUJSbVM4UTVBTmd0QURCSlYyWklBTEMzQU1ET0VBdXlBQWdNQURCUmlJVXBBQVI3QUdESUl5TjRBSVNaQUJSRzhsYzg4U3V1RU9jcUFBQjRtYkk4dVNRNVJZRmJDQzF4QjFkWExoNG96a2tYS3hRMllRSmhta0F1d25tWkdUS0JOQS9nODh3QUFLQ1JGUkhnZy9QOWVNNE9yczdPTm82MkRsOHQ2cjhHL3lKaVl1UCs1YytyY0VBQUFPRjBmdEgrTEMrekdvQTdCb0J0L3FJbDdnUm9YZ3VnZGZlTFpySVBRTFVBb09uYVYvTncrSDQ4UEVXaGtMbloyZVhrNU5oS3hFSmJZY3BYZmY1bndsL0FWLzFzK1g0OC9QZjE0TDdpSklFeVhZRkhCUGpnd3N6MFRLVWN6NUlKaEdMYzVvOUgvTGNMLy93ZDB5TEVTV0s1V0NvVTQxRVNjWTVFbW96ek1xVWlpVUtTS2NVbDB2OWs0dDhzK3dNKzN6VUFzR28rQVh1UkxhaGRZd1AyU3ljUVdIVEE0dmNBQVBLN2I4SFVLQWdEZ0dpRDRjOTMvKzgvL1VlZ0pRQ0Faa21TY1FBQVhrUWtMbFRLc3ovSENBQUFSS0NCS3JCQkcvVEJHQ3pBQmh6QkJkekJDL3hnTm9SQ0pNVENRaEJDQ21TQUhISmdLYXlDUWlpR3piQWRLbUF2MUVBZE5NQlJhSWFUY0E0dXdsVzREajF3RC9waENKN0JLTHlCQ1FSQnlBZ1RZU0hhaUFGaWlsZ2pqZ2dYbVlYNEljRklCQktMSkNESmlCUlJJa3VSTlVneFVvcFVJRlZJSGZJOWNnSTVoMXhHdXBFN3lBQXlndnlHdkVjeGxJR3lVVDNVRExWRHVhZzNHb1JHb2d2UVpIUXhtbzhXb0p2UWNyUWFQWXcyb2VmUXEyZ1AybzgrUThjd3dPZ1lCelBFYkRBdXhzTkNzVGdzQ1pOank3RWlyQXlyeGhxd1Zxd0R1NG4xWTgreGR3UVNnVVhBQ1RZRWQwSWdZUjVCU0ZoTVdFN1lTS2dnSENRMEVkb0pOd2tEaEZIQ0p5S1RxRXUwSnJvUitjUVlZakl4aDFoSUxDUFdFbzhUTHhCN2lFUEVOeVFTaVVNeUo3bVFBa214cEZUU0V0SkcwbTVTSStrc3FaczBTQm9qazhuYVpHdXlCem1VTENBcnlJWGtuZVRENURQa0crUWg4bHNLbldKQWNhVDRVK0lvVXNwcVNobmxFT1UwNVFabG1ESkJWYU9hVXQyb29WUVJOWTlhUXEyaHRsS3ZVWWVvRXpSMW1qbk5neFpKUzZXdG9wWFRHbWdYYVBkcHIraDB1aEhkbFI1T2w5Qlgwc3ZwUitpWDZBUDBkd3dOaGhXRHg0aG5LQm1iR0FjWVp4bDNHSytZVEtZWjA0c1p4MVF3TnpIcm1PZVpENWx2VlZncXRpcDhGWkhLQ3BWS2xTYVZHeW92VkttcXBxcmVxZ3RWODFYTFZJK3BYbE45cmtaVk0xUGpxUW5VbHF0VnFwMVE2MU1iVTJlcE82aUhxbWVvYjFRL3BINVovWWtHV2NOTXcwOURwRkdnc1YvanZNWWdDMk1aczNnc0lXc05xNFoxZ1RYRUpySE4yWHgyS3J1WS9SMjdpejJxcWFFNVF6TktNMWV6VXZPVVpqOEg0NWh4K0p4MFRnbm5LS2VYODM2SzNoVHZLZUlwRzZZMFRMa3haVnhycXBhWGxsaXJTS3RScTBmcnZUYXU3YWVkcHIxRnUxbjdnUTVCeDBvblhDZEhaNC9PQlozblU5bFQzYWNLcHhaTlBUcjFyaTZxYTZVYm9idEVkNzl1cCs2WW5yNWVnSjVNYjZmZWViM24raHg5TC8xVS9XMzZwL1ZIREZnR3N3d2tCdHNNemhnOHhUVnhiendkTDhmYjhWRkRYY05BUTZWaGxXR1g0WVNSdWRFOG85VkdqVVlQakduR1hPTWs0MjNHYmNhakpnWW1JU1pMVGVwTjdwcFNUYm1tS2FZN1REdE14ODNNemFMTjFwazFtejB4MXpMbm0rZWIxNXZmdDJCYWVGb3N0cWkydUdWSnN1UmFwbG51dHJ4dWhWbzVXYVZZVlZwZHMwYXRuYTBsMXJ1dHU2Y1JwN2xPazA2cm50Wm53N0R4dHNtMnFiY1pzT1hZQnR1dXRtMjJmV0ZuWWhkbnQ4V3V3KzZUdlpOOXVuMk4vVDBIRFlmWkRxc2RXaDErYzdSeUZEcFdPdDZhenB6dVAzM0Y5SmJwTDJkWXp4RFAyRFBqdGhQTEtjUnBuVk9iMDBkbkYyZTVjNFB6aUl1SlM0TExMcGMrTHBzYnh0M0l2ZVJLZFBWeFhlRjYwdldkbTdPYnd1Mm8yNi91TnU1cDdvZmNuOHcwbnltZVdUTnowTVBJUStCUjVkRS9DNStWTUd2ZnJINVBRMCtCWjdYbkl5OWpMNUZYcmRld3Q2VjNxdmRoN3hjKzlqNXluK00rNHp3MzNqTGVXVi9NTjhDM3lMZkxUOE52bmwrRjMwTi9JLzlrLzNyLzBRQ25nQ1VCWndPSmdVR0JXd0w3K0hwOEliK09QenJiWmZheTJlMUJqS0M1UVJWQmo0S3RndVhCclNGb3lPeVFyU0gzNTVqT2tjNXBEb1ZRZnVqVzBBZGg1bUdMdzM0TUo0V0hoVmVHUDQ1d2lGZ2EwVEdYTlhmUjNFTnozMFQ2UkpaRTNwdG5NVTg1cnkxS05TbytxaTVxUE5vM3VqUzZQOFl1WmxuTTFWaWRXRWxzU3h3NUxpcXVObTVzdnQvODdmT0g0cDNpQytON0Y1Z3Z5RjF3ZWFIT3d2U0ZweGFwTGhJc09wWkFUSWhPT0pUd1FSQXFxQmFNSmZJVGR5V09Dbm5DSGNKbklpL1JOdEdJMkVOY0toNU84a2dxVFhxUzdKRzhOWGtreFRPbExPVzVoQ2Vwa0x4TURVemRtenFlRnBwMklHMHlQVHE5TVlPU2taQnhRcW9oVFpPMlorcG41bVoyeTZ4bGhiTCt4VzZMdHk4ZWxRZkphN09RckFWWkxRcTJRcWJvVkZvbzF5b0hzbWRsVjJhL3pZbktPWmFybml2TjdjeXp5dHVRTjV6dm4vL3RFc0lTNFpLMnBZWkxWeTBkV09hOXJHbzVzanh4ZWRzSzR4VUZLNFpXQnF3OHVJcTJLbTNWVDZ2dFY1ZXVmcjBtZWsxcmdWN0J5b0xCdFFGcjZ3dFZDdVdGZmV2YzErMWRUMWd2V2QrMVlmcUduUnMrRlltS3JoVGJGNWNWZjlnbzNIamxHNGR2eXIrWjNKUzBxYXZFdVdUUFp0Sm02ZWJlTFo1YkRwYXFsK2FYRG00TjJkcTBEZDlXdE8zMTlrWGJMNWZOS051N2c3WkR1YU8vUExpOFphZkp6czA3UDFTa1ZQUlUrbFEyN3RMZHRXSFgrRzdSN2h0N3ZQWTA3TlhiVzd6My9UN0p2dHRWQVZWTjFXYlZaZnRKKzdQM1A2NkpxdW40bHZ0dFhhMU9iWEh0eHdQU0EvMEhJdzYyMTduVTFSM1NQVlJTajlZcjYwY094eCsrL3AzdmR5ME5OZzFWalp6RzRpTndSSG5rNmZjSjMvY2VEVHJhZG94N3JPRUgweDkySFdjZEwycENtdkthUnB0VG12dGJZbHU2VDh3KzBkYnEzbnI4UjlzZkQ1dzBQRmw1U3ZOVXlXbmE2WUxUazJmeXo0eWRsWjE5Zmk3NTNHRGJvclo3NTJQTzMyb1BiKys2RUhUaDBrWC9pK2M3dkR2T1hQSzRkUEt5MitVVFY3aFhtcTg2WDIzcWRPbzgvcFBUVDhlN25MdWFycmxjYTdudWVyMjFlMmIzNlJ1ZU44N2Q5TDE1OFJiLzF0V2VPVDNkdmZONmIvZkY5L1hmRnQxK2NpZjl6c3U3MlhjbjdxMjhUN3hmOUVEdFFkbEQzWWZWUDF2KzNOanYzSDlxd0hlZzg5SGNSL2NHaFlQUC9wSDFqdzlEQlkrWmo4dUdEWWJybmpnK09UbmlQM0w5NmZ5blE4OWt6eWFlRi82aS9zdXVGeFl2ZnZqVjY5Zk8wWmpSb1pmeWw1Ty9iWHlsL2VyQTZ4bXYyOGJDeGg2K3lYZ3pNVjcwVnZ2dHdYZmNkeDN2bzk4UFQrUjhJSDhvLzJqNXNmVlQwS2Y3a3htVGsvOEVBNWp6L0dNekxkc0FBQUFnWTBoU1RRQUFlaVVBQUlDREFBRDUvd0FBZ09rQUFIVXdBQURxWUFBQU9wZ0FBQmR2a2wvRlJnQUFCTTFKUkVGVWVOcnMyOCtMRzJVWXdQSFhabTZDdVhrMGRFMFRzVCtTbVQxb2Q1Rmsrd3ZwbXRHYmlFaE9YbFZRTDE0Q25rdjNYRVFESG9SQ1llbXBiS21kcE10U3dVejIxUE1jUlBCU2dwQmxZVWQ0UEd5em1VMDJ1L01tNzQvbm1mZDk0ZmtIOHVHYk4rL2tIUVpkRDVSTXgydkRqbHRnUkJjczNjanZsUnJ0dmJJUE1vY3BBK2w2QUIxM0FGMnZCYjNsUEMwSXZ6VXMrUVBaR09wQkNNR29odEFMY2d5bTJzU0dNU3o1emIyeUg2bUV3QUV5aG9rd3dPaUV3QVdTaEhubTFsUkQ3QmNidGIyU3Y2c1RBaWZJR0NaUUFiTmZiTlNHNVVhQUFRSTNTQkptMjYySS8ycjZxSUlOZ2dhSTREUE0vdm5iQlJWbmlleURMQWhEQVlJbUNPY1pSdGRad2l5UUZEQVVJZWlEekRoY0RrdCtreUpFZGtCZXpSL0JsYWh6NjJaRUZTSlRJTHRCQmZKYmIwTitzd2pQcjkyMElCZ3cyTllTc0swbDhpZ3NTeGhaUUdGWnc2Q093cktJa1p4N1gzeGdRV1RPNXRQTHFURW9vcEFDYVQrOXhBVkJFWVdaZ0VFSmhabUNRUVdGbVlSQkFZV1pob0VkaFptSWdSbUZtWXFCRllWQnh3MU14UmpORDkrOGp3amttVnN6R1dNMG4vL280UUJoakRIb2VHMlRNVENoSElMMGx2T3YvaEkxRmdNSlNqVCtIN3BiL1ZvSHhzYnZGOUZnNkVZWmx2emoxMmtQNzlpcXcyZytlUWNkaGthVWFQcmFqTUlOSGpPR0RwU3BPc2FWZUpzV1F6bEtOUHR5Mlk1YmtMbkJVOEpRaFRLemp2RUc3N1VzeGpUSzM5VjF0WFVjZ1J6K0RJNHN4dkc1L1BPN3dsSE9yR084d1ZjL3RoaVNVVXIrTHQrTGp3S2VjMlVKUXpUS2ZySEI5MUlTYkxzVml5RUhaVmh1QlBPOUh0ejFOaXlHZUJUdU9pWTIrSUhGRUljeWR4Mko1MXhOaXlFT1plNDZKamI0M2RNZ0JoMFhLbzh2R0lmQmk3SndIV21lYzVtT3dZTWlwSTdFYzY2MnhUaDkzdnF0UFBPU3Q3QTZabTN3Rm9QdjVyM1FPaWFmYzFrTVBoVGhkU1RYeTA0MXNoaDhLRkxxR0sxTHplZEI3bUhGZnVncFVSNnRYNWRYeDlVMXFLMnVBVlErZlFFV0pjVTh1UTI1UC8rUkI3SmFoMkIxRGNDaXBNVjRDVTRZZzlPUGE5THFTSTVGU1lFUnh1RDA0a0JxSGNrcGZ2WEFBcHlHTVJxUmxaeFVoMFhod0JCZHlhdzZMRXBLREpHVm5GV0hSVW1KSWFxU05IVVlqWklXUTBRbFBIVVlpY0tMc1dnbHZIV1loUEphOENVL3hpS1Z6RnRIY3M1Ly8wczJNVHJmemdleFNDV0wxSkdjTis5OFp6RVdyVVJFSFZsRUVZWVJ4cERyeFp2SzY4Z1Npa2lNMGJBK0ZKVFhrUVVVR1JoT0dFTXVQR2hycVlNeWlpeU1WSlhJcklNaWlteU1NeXVSWFFjbEZCVVlwMWFpcW83a3ZQSFRaOFpqekt4RVpSMmplZS9EZitIMVg5ZU54aml4RWgxMVlFVFJoVEZWaVk0NnNLSG94RGlxUkhjZFdGQXdZQnlCNks1RE53b1dEQ2VNQVUwZHVsQXdZVGhoREtqcVVJMkNEZU1RQkNIR2FKWS8rVXZhblMrTUdPaEJaRjNFdzRwQkFrUTB5cm50dTJneHlJQ0lRam0zY3g4MUJpbVFSVkVvWUpBRG1SZUZDZ1pKRUY0VVNoaGtRZEtpVU1NZ0RYTFdSVHlLR09SQlpxRlF4Y2dFeUNRS1pZek1nSXhRcUdOa0JtU2xEdTJWYTFCZ2ZTamt3b08yQmRFMWRRaXVyc0gwL2RnK1ZKeGVIRmdRM1JBVHkrbkhOV293ak5oWFU3UmFoeWJ2TFg1S01DekxFSk1yMS91dm1Rc1BJZ3N5LzFmVFlLVU9MZEh2MjJPR1laZ2hsbTlBbmtsY0dHRVlRb3dOMlJESFZnL3lUaGkzY21FOHNDQW5uU1YwTFNRd0RNTlBXSzBReUdBWTlyT0V0cVhwMVAvL0FOd29yczhWOE1oV0FBQUFBRWxGVGtTdVFtQ0M",
        },
        {
          name: "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileDiamond",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQWlBQUFBQWdDQVlBQUFBckZzTTFBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQXlKcFZGaDBXRTFNT21OdmJTNWhaRzlpWlM1NGJYQUFBQUFBQUR3L2VIQmhZMnRsZENCaVpXZHBiajBpNzd1L0lpQnBaRDBpVnpWTk1FMXdRMlZvYVVoNmNtVlRlazVVWTNwcll6bGtJajgrSUR4NE9uaHRjRzFsZEdFZ2VHMXNibk02ZUQwaVlXUnZZbVU2Ym5NNmJXVjBZUzhpSUhnNmVHMXdkR3M5SWtGa2IySmxJRmhOVUNCRGIzSmxJRFV1TXkxak1ERXhJRFkyTGpFME5UWTJNU3dnTWpBeE1pOHdNaTh3TmkweE5EbzFOam95TnlBZ0lDQWdJQ0FnSWo0Z1BISmtaanBTUkVZZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklqNGdQSEprWmpwRVpYTmpjbWx3ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlnZUcxc2JuTTZlRzF3UFNKb2RIUndPaTh2Ym5NdVlXUnZZbVV1WTI5dEwzaGhjQzh4TGpBdklpQjRiV3h1Y3pwNGJYQk5UVDBpYUhSMGNEb3ZMMjV6TG1Ga2IySmxMbU52YlM5NFlYQXZNUzR3TDIxdEx5SWdlRzFzYm5NNmMzUlNaV1k5SW1oMGRIQTZMeTl1Y3k1aFpHOWlaUzVqYjIwdmVHRndMekV1TUM5elZIbHdaUzlTWlhOdmRYSmpaVkpsWmlNaUlIaHRjRHBEY21WaGRHOXlWRzl2YkQwaVFXUnZZbVVnVUdodmRHOXphRzl3SUVOVE5pQW9WMmx1Wkc5M2N5a2lJSGh0Y0UxTk9rbHVjM1JoYm1ObFNVUTlJbmh0Y0M1cGFXUTZNek5HUmtFd05FSXhPRVV3TVRGRk5EazVRVGRDUlVVME56Z3lPVFkyT0RjaUlIaHRjRTFOT2tSdlkzVnRaVzUwU1VROUluaHRjQzVrYVdRNk16TkdSa0V3TkVNeE9FVXdNVEZGTkRrNVFUZENSVVUwTnpneU9UWTJPRGNpUGlBOGVHMXdUVTA2UkdWeWFYWmxaRVp5YjIwZ2MzUlNaV1k2YVc1emRHRnVZMlZKUkQwaWVHMXdMbWxwWkRvek0wWkdRVEEwT1RFNFJUQXhNVVUwT1RsQk4wSkZSVFEzT0RJNU5qWTROeUlnYzNSU1pXWTZaRzlqZFcxbGJuUkpSRDBpZUcxd0xtUnBaRG96TTBaR1FUQTBRVEU0UlRBeE1VVTBPVGxCTjBKRlJUUTNPREk1TmpZNE55SXZQaUE4TDNKa1pqcEVaWE5qY21sd2RHbHZiajRnUEM5eVpHWTZVa1JHUGlBOEwzZzZlRzF3YldWMFlUNGdQRDk0Y0dGamEyVjBJR1Z1WkQwaWNpSS9QckhzdVhJQUFBTHRTVVJCVkhqYTdOakJidVVnRUVUUk1QLy96NDRpelNhenlpakdYTGZPbGJLSnpLTUZEVlRWdXE3ckF3QmV4cjhYMXpvMDc4ZERkZnp2UmIwT3pYdFhIWGMvVE92UXZEK3Q0K21IZUIyYTl4dC8zR01BZnZGSVhJZm1QWEdCWHpkOTg4UmpmQjJhdDFKN1plOHF2VnVZa3dBQmNQc0ZkaDJhOThsTDlkcjA3YzdmT2pXMnNuYVYzcW1jblp3SUlVQ0FkNHNBQ1VURFBWZlNnMHJ0bGIycjlHN3U4UzlBZ0FEdkZSK24zVnZGdlZiY2UyVnNaZTBxdlZNNU8wUUlBUUxjZW9GSUlCcnV1WkllVkdxdjdGMmxkejMrQkFnd1NueWNkbThWOTFweDc1V3hsYldyOUU3bDdCQWhCQWh3NndVaWdXaTQ1MHA2VUttOXNuZVYzdlg0Z3dEQktQRngycjFWM0d2RnZWZkdWdGF1MGp1VnMwT0VnQURCclJlSUJLTGhuaXZwUWFYMnl0NVZldGZqRHdJRW84VEhhZmRXY2E4VjkxNFpXMW03U3U5VXpnNFJBZ0lFdDE0Z0VvaUdlNjZrQjVYYUszdFg2VjJQUDBDQWpCSWZwOTFieGIxVzNIdGxiR1h0S3IxVE9UdEVDRUNBM0hxQlNDQWE3cm1TSGxScXIreGRwWGM5L2dBQk1rcDhuSFp2RmZkYWNlK1ZzWlcxcS9STzVld1FJUUFCY3VzRklvRm91T2RLZWxDcHZiSjNsZDcxK0FNWUpVQUFBQUFCOGpqcjc5K0plWC95dnlmbWZhS085ZENZeW0rc1FYdFg2ZDNDbkFBSWtCR3NRNWZwT25TcHIwM2Y3dnl0VTJNcmExZnBuY3JaSVlJQUFtU1VDSkhBTk5LREhYVklZT2IwTHZFQkVDQjR1WXVVd1BUSFZ0YXUwanVWczBNRUFRVElLQkVpZ1dta0J6dnFrTURNNlYzaUF5QkE4SElYS1lIcGo2MnNYYVYzS21lSENBSUJnbEVpUkFMVFNBOTIxQ0dCbWRPN3hBY0lFT0RsTGxJQzB4OWJXYnRLNzFUT0RoRUVBZ1NqUklnRXBwRWU3S2hEQWpPbmQ0a1BFQ0RBeTEya0JLWS90ckoybGQ2cG5CMGlpQUFCUm9rUUNVd2pQZGhSaHdSbVR1OFNId1FJZ0plN1NBbE1mMnhsN1NxOVV6azdSQkFCQW93U0lSS1lSbnF3b3c0SnpKemVKVDRJRUFBdmQ1RVNtUDdZeXRwVmVxZHlkbklpaUFBQjhKc0xUQUxUU0E5MjFDR0JtZE83T2ZIeHhhY0FBd0RrMWZzODNpRUEyd0FBQUFCSlJVNUVya0pnZ2c9PQ",
        },
        {
          name: "__ASSET__:file_flixel_system_VirtualInputData",
          data: "YmFzZSA9IDI2NiA0NiA4NCA4NAp0aHVtYiA9IDI2NiAxMzEgNTIgNTIKYSA9IDAgMCAxMzIgNDUKYiA9IDAgNDYgMTMyIDQ1CmMgPSAwIDkyIDEzMiA0NQpkb3duID0gMCAxMzggMTMyIDQ1CmxlZnQgPSAxMzMgMCAxMzIgNDUKcmlnaHQgPSAxMzMgNDYgMTMyIDQ1CnVwID0gMTMzIDkyIDEzMiA0NQp4ID0gMjY2IDAgMTMyIDQ1CnkgPSAxMzMgMTM4IDEzMiA0NQo",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicCloseButton",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFnQUFBQUlDQVlBQUFERUQ3NkxBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFkZ0FBQUhZQlRuc21DQUFBQUJsMFJWaDBVMjltZEhkaGNtVUFkM2QzTG1sdWEzTmpZWEJsTG05eVo1dnVQQm9BQUFCL1NVUkJWQmlWVFkweENzSlFFQVhIYnlTZXdNdWxUV2R2YTZPbGxXSnBDQ0syaWsxT1krY3RRc1lpcS9rREM4dnM3bHZVU3UzVXBVcFdPN1ZDM1RqU3FXVU1EK0dldisxdGlKZDZ5dm95ajl3NzhWQVhLb21SR2JCaW9nY0dBTlNrTm5GNVY0L1IzOVNFMm9hNHF2TjRkdzUzS1lBMzBBRDFQeGJXUUFGOHZwYVlyTldBYU5WMEFBQUFBRWxGVGtTdVFtQ0M",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicBitmapLog",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQm1KTFIwUUFBQUFBQUFENVE3dC9BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUIzUkpUVVVIM2dRWkV4c2Fka1ZHNHdBQUFFRkpSRUZVR05PVnpjc0pBREFJQk5FdDFUSnl0UFBKS2VSbnhBd3NlSGlnOUJOUW1mRURBU3REUUdXWTRRdStjQWhQN013cytqaU94cDR5dk9ZWkxrRkFIVzZYWUMwODhkcWRBQUFBQUVsRlRrU3VRbUND",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicStats",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFBeFNVUkJWSGphWXZ6Ly96OERzWUNKZ1FSQWpPTC9VRXdkaytHbTBkVE5XQlZqdFpvK3ptQWtKUVlCQUFBQS8vOERBTDhIREFscWRHWVJBQUFBQUVsRlRrU3VRbUND",
        },
        {
          name: "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileSquare",
          data: "",
        },
        {
          name: "__ASSET__:bitmap_flixel_input_mouse__FlxMouse_GraphicCursor",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJnQUFBQWdDQVlBQUFBSVhyZzRBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQW1SSlJFRlVlTnEwbHM5ckUwRVV4Nzg3MllTZ0psVFNTaVdwVnZyRElxaEZVSUtnK0NlSUlncWVGRS9pVFJDOHBMUVhqeUwwNGc5Q29tWFRKSVcwT1ZVRU1UZEJSSWs1VzZXdGtLSlNiR25EcHNuNlprMlczVFFicytua3dkdVpuVm0rbjMwenczc2pCVUxCQ0lBcGRNbGMrL3orZDlScTVMbHVBT1JhTzhrZkR5ZW5XMGJ5YU9LZVl3RGpEMDNUZEFnSlJFUkhJTkVlYUpWS0ZZeEprQ1NKajAzWVJYTC85bVZib2Q2QmtIMEV1bWxTdlNjMEVnTnc1ZXAxakE2UENJY1lnQU0rUDU0OG5zYXh3VUdoRUdaKzJTaFZNSjlLNCtqQUVXRVFDMkM3cEVKakhpeWswd2dGZzBJZ3JIRmdhYm1vaTJkbWt6amMzNzlueUM3QW44MHQvRjdmMFBlQ1F3NzE5UmtRT29xUlBRTzRmVjBwNnUzdzBCQXl5U1FDZ1VESGtLYUE0czkxYkc2VjlQN3hrVkU5a29NOVBSMUJtTjNFVWkwS2JpZkd4akNuS1BEN2ZJNGh0b0RWNGkrbzVSM2ovZlRKVXdSSk9JYllBbmgrK3I2NlpoazdNejRPSlI2SDErdHRHOEphVFg3N3NZWkt0V29aQzU4OWg5U3JtYlloTFFHcXVxTXZWYU9kRDRjeEU0M0M0M2JEVkU4aWpnR05tMjIyU3hjdUl2Nzh4WDhoY2l2eFdTV0dmUDRUYmV4K0VtcitLVjhxdFZ3MlEyQ3U4YmFBVk9JbEZ1YlQvejZTWFdBdTF1N1J0MENhQXJJa25Na2t3UXVjTE11UW1PUTBReGlRWFlEWGkxa2thR2tZWTVEZExqNzBsdnhCaDhuVVl3SGtjbThRaXo0MUw4a2lMM1pVbzdjN3Jja0c0T09IOXlnVThuQVRzMWI4cytUWFNGd1ZVbkMrRkQ3VFh4czNpemtSNGtZRUx1c0o0ZUkzbTRuYkxZT1RWS0dRM3hEeDU1YUxWNjBmSTcvRDg1ekltMTA5Z21ma3QwU0wxMi9YdmRUZTdkYjEvYThBQXdDWlVNUU16UW9keXdBQUFBQkpSVTVFcmtKZ2dnPT0",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorRotate",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQkVTVVJCVkJpVmRjNUpEZ0F3Q0FMQVl2ei9sK25KQkJjOFZaMFNRZkpKYVFOZDVFQndmUmhVaVZSNG9WVnA1cHp2TUhDZDRhQmlWR0k3MmlXSERCeHVVUEg1NFFNNWNROFhwbTRKVmdBQUFBQkpSVTVFcmtKZ2dnPT0",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMinimizeButton",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQUIyQUFBQWRnRk9leVlJQUFBQUIzUkpUVVVIM2dNSkNSMDFlRVp4RlFBQUFEOUpSRUZVR05OaitQLy8vMzhHQWdDdUJzWkExb1JOREM2QnJoQ1p6L1QvLzM4bWZOWVQ0elR5QUNPNjhZeU1qRmpGbUpBbHNacUVMRWRVOEJBYjRBQzRjRkxGc3d1SW53QUFBQUJKUlU1RXJrSmdnZz09",
        },
        {
          name: "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoLight",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUVBQUFBQkFDQVlBQUFDcWFYSGVBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQnE1SlJFRlVlTnJVVzR0dTR6WVE1TktVYzNmcHQvYWYrcE01MjVLNFJRQ3gySnZiRi8xSTJ3Q0VaRWQyTk1QWnQwTGx6Ny9LQzMvb1NkL0RyN3JCOXNXZzZVN0E5Q295MmhjQXB3ZStpNFB2NC84Q0FSUzhSM2VBbE5ld3VBNC9RNCtTMEw0SU9EMWdDcFM0RC81cUFpeEFsSHd2SW9PVHBQQ0VtcDVHQUUwQ0orTzZqQk5rQjlSVFRLSTlDTndDR0wwWDdUd0xnS3lBWlllSUtUVTg2Z1ExSXNaN1ZRRS9TNEE4NzQ0S1h1b0RNdktPVm5XVWdJQ3NSUWNKRkpBeFJVeDdFSHlGY3dSY0EySTg4QU5rRjY5SlVRWTdEalEwaDVZQWI1RkFEdUFxRnNGNWhvQU93UHZ4K1E0cTZBYjR0Qis0eHdscTREWGdKK1cxWmc3c0VERFdMc0NpQ1hqK0ljd1ZXbkwzU1pFK0FwWkFjVlZGRmFSNGRqN0FzZ0MrSDUvWndROGcwRzRvd1EyUjdRNnZYNVhkSHlBYkFHOEtHZmdkMnU0UDRKczR4OWZqZm5ieG5YMDJTclNKM2RkMi9pU09UUnkxZFlMcjBRZDBBRDhBeTRYa2FVUjRvZkkzTWxvaXhkWGlPMG9ld1M2d21xSUdWSUFrUUlKZWp6WCszbVlrUldnS2x2Ui9lZDBtS2poTi9pY0Q5RmtjeitMMzQ5b0t6cENGbzBQZ0RmeUk1ZUZaMmUzeWlBL3draHEwOHdVQXY4SDVJb2lRU2tCUExuZitKcFpHZ0JWQ2krSVV6YWpRa3BWZURhUXZ3WDg3UUkvMVRmeE9tb1NtQUFSL0ZZUlI0RGhMMER0SU9VRnliSitVVUllN1AwQi9QNERMOVNaSWtHYkFRSUFFdjRqZEw0cGlNR21xQWp3Wi9RVFZDVklpSDdETW9BRUJBL0FuQ1QrTzQzZEJ6aG5zZWhBZzdmNFQvRThnQ3NIdlNzSlVJVzBtbzcvSVVSZ2tKd3lpL1dzRWZBSitQd2dZUzVyRzRoRHdDZjRDU2lsR2xyZ2JaS0FTckVZclo0b2hMZDNGMEhkV0NQaHhrUEN1S0dFUkpFb0h1QjdnaDBwSUFhOGxSaWVSTVZZbFd6VHJnMHd4cEJFaGZjRWlTSkFFSUFudmdvQXpSQUpwLzJkbDUyVitzRUtJYk1mN0o1RU00YkljSWJWRTFXZWx2bG9PZ0k0UUNaQ21nQXBZaGRldjRzWXQ4R05wOVlaSHdpOUtpRExCNGhSQUo4TVJuc0VSRG4vd0J4Q3dnTk5hUWZvTXdHVmtXSlQwR2plcVo3ckhUUWtSTldoalJabmdHWlNBSmpITW9JRUNic0lrQnZnQi9BMXlDU3Uxcm80RDU0d1BvQ0FaaWtwZ0xTcThLZUZ4Z0tuQ0I4aW9JTUZmSUwxdWlWTGJhNzJGWVRBVEZTaHdqTTFSeGpDUlJlejRKbXI5TTZUTkMrUU5sdXk5QnF4cEJqTzFnQlVleVZBRGtxRVJVK0hHUmlSb3prNlRrNm5TN0N5eUpZWVRzeDNpQW0xeEN0cG94ZWtZUlUzVnUwQVh1TW1aMlI4N0ZSZzcvVDJyMVYyVWZvRDNXYTk5bmhtcjNhMEE3WTk3N1d4TVQzZFk2MEV3SmtJYnRMMnNuUDllOEdZWUpLZU5aTzF3VDdTeE1HbTVpci9KSWd6dVVQL2Z4R2MyY2R3VVFsQTkzc3pBRElQUkdKcVYzbDBQMmxpeXJKV2xMWW5QVk1nRHJzcTZBUUdhU3Rnd3lSSjFoVnBDTWw3ZkhuY2VnVjlFL0Vid0MrUUJzZ3orT0k2WFl3MHlWa1VORmhIZUlOWE5BNnkrR2twdGQzYitDbVZ0aGZSMmhZS25ReW44QVNSY3dUUlFBWmFQaUtLYW1ncVQ0Z09zY1pVbCtjWG81bGdWWDRmTTd3T1dSOFNtQUk4YzVUOEthY2FPRjRNRWRxUXZuVnd6cXJvVkNDQWdZQld5bCtDUmdCV1VnSW9vR1FjWW1ZQVg0anFFdEhiY21CeVdrTkx4dllGUGtBckFqdEJGVVlFa3dsSUFubk1tQ2hSbnlvbzl0azNKNkc3S0VGVHVyblJ5NkJUeEd1bEFmOExTRklBT2taMlErRnRWT0JNR05UVnNrUGRYQXp6dVBqWkZPNWpCVGV5MGpBWVhKVS9ZamR6QWNvUnVGR0NuZHU0d2t4dm5ZMngxVlZTek83dGZ3UVIyVUFIbUJSZHh0SnhnRDU0eWNVM0E2NkdqS2V4S3I2REF6ck1DQ25jZkJ5TmFQbkZUdlArcWhNTTlDSU4zT1VFckJTYVIxR3lKTWZkTk5FS3QyV0EzU0pESHEyUDdtZDNIOUQ1VkRHbFBjZlNnNVl4Z21taDV6VXlIVjZXbXNNQjNweVpJSzhDZHBSdkFOeU5ibEFTY2xLNU9FVTdRZXo1Z0Qyb0JiL2VuTTBFdkg3Q2V5Y0dFYVFCcHg4MWxtcGRlaldFOUtUSlRLdk1qaVZCSlBKT3p3WmdMbldBTituajRqSkJHUkUvbS96elRGR21KM2ZjYURkM0lGYW80N2tyTHF6Z0U0UENUamVaSWxQV0Z1NS90Q211NUFRNGdHRVpaVlF3cHZhZkROQ2ZibmVKTEE1d3BnKzl1aVZId1hsZUlRSDlnTlRpTEUyVllxZTZpZmlGUE5IZW5HaUxraEVRQ1U4RHFyMExPRUQwMm55R2lPS0dPWnh1aldSTW9Tbmkwd2lRcFQyaVEwNGttQnp3N3RRZ0hOcDhpWW1ZeTVEMTBxRDJwVGNiTWdCTmtsNENFakpON3lmOExjS0tEck8yOE5ZTG53QXk4bHJ5MzAwODFnZG5Ka1VXSU5YVGxoQkl5NzAwUFJlNGx3RXFPTEFkcDNTQWxBSEJ5V0hNWCtHY29nQnhpSWpJeWl1STdydmt5QWlJMXpONGtUeWpqS2VDZlFVQlcyc1dwS1NJbitCTGd6eVlnVXNXak4vNi8rdS94NkticDN3QnEvZnd0d0FDRGVkRE1KazlyRWdBQUFBQkpSVTVFcmtKZ2dnPT0",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicConsole",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFCVVNVUkJWSGphdEpIUkNVQWhEQVBqRzhVVjNNbmhuTVZaWE9IOFVTaFBoSW9ZeUUrNXRJRUdRRjU5T3BDRm82UXFLVzFwd0RvRERTaS91WUFGbmk0amxEM3d2SUlOWEcxMmQ0NUFCZEt1V25qMmxENEFLVWJYUXNkOGx3a0FBQUFBU1VWT1JLNUNZSUk9",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Eraser_GraphicEraserTool",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROWEcxNHpZQUFBUW5jSEpXVjNpYzdWZGJiNkpBR0lWWGZzV0VmVjBGckZZbGFyT3hhZmJGVGJOdDBzMitVYUNXS0pjQWpiWi9iWlBkOTAzL1MvL0J1bmlqaUZ6bUJ0cVcwMkFyenN5WmM4NDNIL1h2djk4dmpNTTRpOFhpK2ZsNWJqck1FcjJ6dWFPb0U5MEh0L3JZc1ByOHk2OC9QREMwUG4vVEdva2paNmpmRzErZlhQM3E2ZHUxK2pSUnV4cC9OdUI2Y3psWXdOUjlCY3pOcWVYSjh6NnZhUGF0TGdkL0wyOExQRmdOOFNkOS9zdnlBL0JqZEFtR3RxdURWbDJzcWVLcENFNmx1blRTYkxmYm4wRkRsRVJCYkFoU295YTE1Wk9HTElwZ0EzN0FCYTg5Vjd1VHY1OWZiT2lDZDMzKzN2Y2RXUkJtczFsOWRsSzMzYkVnZGJ2ZDVUS05SaTBZVWZNZUxWK1oxeXp2MDNxUjdUcm51cWU2aHVNYnRnV1c3NVZiKzhIdjh6d0hJdGpvTXAyUXlQTHFLNDExMVRhRnVlSUlVbDBVd3BXWGl3ZWo1YUdySzc3dFh0djJkTEJXZm1HNCtzeDJKeDRZWHJXQUZNd0tmcHFkSnJneExNMmVlVDBoUGk5cFNmMDh1QWFCVWMyYTJLbUp6V3VwSTdlYWNsUDZHWm0vSGhTYlBySTE0KzR4YWZxcDNPcHNwa2NHYmEwU1lsN2hlcWlwb1lYT2d6dGRKYVdwZ2o3VlRkM3l2Y0JHYWRkR1RaWHZiTmRVL0lGaEttTmRjS3h4VDNpOW1ibS85ZDJnVW9JaUZjSXFqYXdPbUpJQllxajRTY0J1cmtQeG8rL2dmZm9QNzhENzBuL2cvTkZLbno3L2FnZlkrWE52UG45azlkVDQ5MmhoOTBHSG44MjQ4dms1Y3YwNHBSL3lFK3RuWDMraE9rQ3QvakFOb0pkL3RQclI4aWZseDgyZUZ2OTJEd2ZMbjhBQVN2cFRzaTg2ZnhpTzdERWsvRm1ad3pxQnowOVM5VW44SElILytBNFErRS9GQUtMNnk2ajY0dk9QYlFRVFlQZnhpOElmKzIrbjlQeGplOEVEcmZNUFV3dTArTm53WmVjUDZQMlM4Y2NWUisraG53UlUvZ1MxUkgwQTEzL1U3Tk1jUU9ablU5OWdBVU0veHJtbmwvLytYc2lBNHo5cDlvbjVjNmo2eWJQZjRjZnpQN0tYb3ZOUDc2TG9Ucnl1QmN1ZjFjT2puNk5lc2NkdkNuK09Rb0pTb09FL1EzQUtJUG5wRkhzQ29QV3o5Tld6S1B3RkFkNy9yUHh4MVIrZGZvNTBQZXorbjZJL3IrL3NEVVpFTmo4UysyWUN2ZjVmMktGUDRPY1M5YU03UURWL1ZBT281NS9aOVZKMlFDLy9NaEI3L083eTUzUzlKTkErLzBVamdSOURkUkt5YzgvZ0QyY1Rra01oaVo5SzMwazRDYkQ4Mi9sbElEMS9HaEdnNXM4Qk1zNGRjaWlrNVU5c1AybitKZUZJemo5SFdUOVIvdEZWc0oyQW5KdWZmN0dOSUp1ZmhCdk9PUzVYUDlZbXFPYVB1d002K1JlTC9QeHhhd0J1YmtINjM5SDVMeFk3NUZ3cVA2U2F2S2RkRG4rT2ZwaFZVYk9DNVVmOURrQ2JIMnBoakdJTmc4L21oKzJFYkdRc0F2K1IxSDlPL3JEMVYxaitNT1NJZ09TSDdZVElIZk90NUI4aVNTSEJjd0pQZnhJVDNuTWFuWjhlTndGS0o0d3k3M1ZDU3QrWXlGQVdlNUxTd3lvdkZaVFAveHZHVWFnK0pQdFI1SDFjbmZCRDRmRFZYNkZDaFFvVktueHNMQ3BVb0lCTFJtSEdqTTRBUnFxcTZnUGlQMUhNM1VabjEzZmJBQUFBU0cxclFrYjYzc3IrQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXBwRE9oQUFBNWNHMXJWRk40bk8xOTJYZmJ4cEkrYm02Y1JQSWlPNW1UZVpnWG5UUHpPNytuNUJJTHQwZFJGQ1hGbE1RUWxDM254UWNFaVZnVGVSbFpWdUxod2Y4K1hWWGRXQnFOVmFSRU9iaStVWk5ZRzE5VmY3VjBOWGowdkhlOWVERzJ6eGVPLzJKOGRMN1EvY0Y0TjlLTWZ6MCtYN1NzZWNPejVqUC9iTGpyTFJyK0sycGVIdmE5aGE3N0I0Y1RiTWQ3dHJkb0cvN1lQajFudTN2NzdBb2UvczhmRFlmWGk5NkkvZG5kbVh4Y2FCdmFWSE8xMTlwSW0ydnYyS2R6N2NJL1BENWllemJabm5kc2o2Nzl4UGFlYTMreEl5NzhjZjlrQ3BmY09jWXI3N0FPbS9PTzMrc2ZRaWQ3UjZ6bkhtdndPWHIySGg1a0QzQ2ZmWUJOYjRnYmU4K3gyVDNtRjlnYjRQZnhCQThhOVBEYllJek5NVzIwUitlTGJzdnZUV2puaEs0K3Nla21SM1E5YWc1M29KZkgwS3VHM3ovUnp4Y2QxaGh3bWY2SmljMkFiVFJZWTFCalF1TVhRdWJmVmNobzI5b08yM3JGdnYvRVBsMncxdEUrc2oyejI4Uk12eUZtK3Fvd2U4Z3gyOWN1R1M0ZnREZHMzNVUyejhUR0ltem1HZGcwbE5pNGJneWJSZ1kyYm9ld01ZM1M2T2dXd2VNUVBBN0IweUY0T2dSUHg3ZEh2N0c3VEgzYjV1M29oS0hXZE5nRy9xRVlnTTg0Z0x2YWU2WmM3eG1NVExXWTBrV1BqSUxKTG94b0dzMHNOSjBDYUVxYWxvV21wR25PY2tjblF0aHFLU0MwUnozYVkxTWJoZlE3RG1rUHgrTzU1bkpBdHppZ05nUFRZN3E0clkzWnAwOXMyeXgzMUNxeDFEMXJ1ZVBXZEN1T1c2ZnN1RTNENkZFQ295SGIrNjdLdUpYUkthUnI2NDJPMEtBRHR2MFNCK01OTldqSnRySUVRbzNWNmsrSVVHWDlLY0w3YTRtTm9QUStZdk1HTllQUTJlRG85Sm5XWElFMXZEWFd5ZVJ3MTZvNHNCb0VUWU9nYVJBMERZS21RZEEwQ2tLekZVQVQ3RUUxbXJQdjE5cm5lMG5PZXR4dGFCSk1UWUxKSVpnY2drbnRGQlNGS1J5RldUQVo2dzNURXNmWmt4UmxRazRxajlHZE0xRVdRazFDcUVrSU5Rc2k5RlNKMElUaGM4NTg5WXNjdmw1WFRUS1hya2xxblBwbzlhZjNGaWVqSWs2UE9FNDdURXN1bVczdnNiK2ZBQmVPMW5jY3JXSjhCUDJPd05PeUNCL2NuNHRQeDhxd2J4amJSUkNhM2REMkc0U1FRUWhaaEpCRkNGa1U4SUZVWXhFZlBBYUdLMnhER1F4RjNEeGh1dllYOHhFK1VlQ1hqYVJTMGJLQjFMc2NTbU9hRlR6TFVKWUtueXVEYVhTTGdmbUVnN25MRk80Q1V6Qy9CK21Henh6UWJ6aWdMeG1NVnpFWTJ6UENzUzFTTTJwSElpdU1nVk5qNDlYSTk3Y3F4ekZHcHhpQ1BaNS82RlhDYXlNeWlOK3l6KysxOTlrSkxZNmFiaFlPYmZTR1ZkNU5iVFlJTnVSUEFNN0x5alpVUSs0M1lCYWVkekQxV1duc3NnbFE2RnZISmVUbVMzSTJHbG5PaHJGU1phc0swSytNMTg3aHFCaEFWcE1BMHFlU2JvbHNhWU13Y3JPSURkUWlYN2ZRZ0VSd2F2RVlDSlZxSmFOUzFxMkEyS29PMERIYk84VUIraTVUemZUdWN2WHNMa2d0aXRIREFLTTM2Tkc3REFFblNKdCtHODlnRmFJdWpneXFWYTZIcGhzdWh3ZE1ZRUY0V25OT1huQXlBSVNKMDJKMnM2Q0NqWmxlR2ZNNSs5Qkw2bFUyWmtLamR0SFhBTnJQRHJnbDNQQ2hGS1pTd3EzdGxsY3JpK2VYSGE1WDVzeGFObTZLZ2RrVDJXWnVib29qV2NWN1U3c2RtTVpQQjlNMXlvTVorRzVOZzlBa2JTeUdwajR2N0h5UXR3WWdlaFdVY0lTMjh5cC84bEZTUXM4cTRIaDRWb1d4SzB3RDEwR0VjZmtxQ0pwbkMrY1hiQU41d2VKRERGajhNRlpvNTBZQU1WaU56MmdiNHJ3NFp0di95SWxiTzRSc2w1QkZVeGxCdG5IVHZLTkZ1SkwyZ1pwMHVOSEZtQVNnaGJrc3dOYkl3TGJKczQvTXZGSDgyaVYwV3h6ZUZzZTN4UUdtRVEwZnBwNDBvd1RlOHZnQWpYOHhNTXNGdXZFNEYrT3Rpc24vSW1xYVJMT0FvcHFHU2xGYkhFa09aQnFPZ2FJS0hLVnhuNC9qQktlSFhlMlBNaU8rRUpERnZFRTFrampRd2VoTWwyNnNjY1RqYUJaQWpxTkRuOGdnSFZIQnBBTXNSSUJwdWdrazdxU2hUcWkrVys2MFZNRzhRV001QlFscU9GdUpLZmNlUjlIdUphZllzOEVTdWVJRDlMWGZjSi83RFJxZ1MrVUVPOXBlMU1kR2pDZkpZaWQ0VXVsYW95RXFHdmc2S3dXdlBGUjl0TjUvc0wxSC9KTU1WWXBCS1ROdzllYThTS3BQN1M2dVVzOG8wNWZNcldSakp5WnVob0Y2cGFNbjU2VmNaWGJQeUFqZ3doaWxncSs5TXZDaUpqZDB0TVd3MVR2ekdKN2ZjRHhQRkRVeGtEUUYzeEVtbUcyY3NIRDRoR3EySGpyS2VLK0FJWWJBS2lPWjREcUVwTUU5RzllUXdyMFpkN1RKUzgyeElZd3RDYzhPQjdSRGlMcTgxTWpsbUxvZDJTTERoN0g0a0N5YUdRY2ZoQTg1R25Pck14NExyOUpPUm84cVVXeEdSSEdPRG52ZWJJaFQxdFFJSndqTWI1NE9tNUpQS1d5M2NOWnh1Q1E4U3IxQWlBTmJCMXdhQTVJR1lveW1lUWM5RElRYXFwSEFWRnN0QWxIM2NqSDhRUjB0OGxtQllxaTJLNkpheUh4elQ5MXpwTlFyNXdackdnUFZVb0hhc3RUSzNPUjFBazFlS01EYWVPNmZuS0V4K2o2MlBlYUE4KzhBdE80VkJub3pTQXBkb1E4S0JUc2ZpMWdza2RRV2sxTzZNNy9wNUJTSHRpa3BiSngxd1dHeXNTZzRuU1lFc2xoZllGSUx5Sm91SVl1dGlTMHFMQ3JvbU9OMndIRzBFNzZsQ3IrSEFYNjN3TFhtckJEWFNrbU5nR296cHdWU1FzaUNDQkpsS21rVnZRTFFWb0V5MElLS1N4OXplRjhpakhPZUJzRUN6d3J1dThmVjFJdXJxZWNzaVZadjZvS3FLZFZRaFVQa0NFU05WeEFGeVZNeCtSaVdDeXlOampJRGgyNXFIb3FRU3lzWlY1b2kvUVl1N28zaVNsTUZKSmJGcGhYT1ZvT3hXQjJXTkEwZHhFUEZLaDVLQUNuQ3lXRE1JMlhjS0pHcHJPSU9jbkpocWdPZGYvRmhmQkpoMVFheHFsU01MSElmWTI1MTNtdHZwV0grQ3FPQTdHSGVLWi9xRkxBV0tZM25abjZxckFPVWpMeHltS2Vab3JSY1hEemZEckNoY2JjVFFWVStmRlJMbVczTVRkWHdsaVlSbFdHNjJTaU9IcXA3RXI2cGxaL0tET0NUVXBtZzM0Z2ZmVERwQTdsSkxGb2lOd2srb0J2ZmFwQ2ZoSlpuTEZTVVBOSmltSXBTaVFGNG9pcEU0V0VpdGwyWW5UTEdQVk1mRVVOVmlsanRIWEZNVFJXbWJrZnRkM1o1WE5ybFdjMXVpOXg0VkVDUmNldUYzcWJJd0JWV1RPRXJ3YnFOZDVvSFZTZXdTRWdGcDk3a2VMYmllRG9sckhoTFNac05GVzFTUXJoS0haU3dQdkdWTHdZM1A5aWEySkxpdFRnWHluWTdIYlRRUWY4ZnBuc094a0haWTdwWmRWSzdoSjJoZUNjU1RaYVl0V1cwcVJ6VHNIM0F0dzlvZTZCL2FHSGEzTUMwYVZnTFBjUlJmVUJoa2FxZTdKVGg5dzROK1NjTWNZVHIvaWhReHpjNHN3dkpxWG1pWmtCR3QxVTFWdGVMSitzQ0syNjJ5azlZQ0N1ZXR4YnJRUGcvQjBuL0p3KzZCeHc2VSt0WG1NQnRGeWxqTEpLZU0rUGVZM3p3TWpWUmhPREZ3aHlqbzhoc0hKQzNVd2FuelJBbmJWdmJSdy95ejJ6RWxCYTVXT1duZ0V6UE44bXUwaUxyYzVYMTBHOFZzaDg1WkM4d3krTmlQZkZIWEZFSzh3K3d3RzhiSjhKaDdVeDJEWXN5T1V3VkdVV1JOUE9WVDBJU0k1aGtWcTJVOXBrOENqUjVxVEZyMGJQaGsySTh5MGJ1RGJmTE1jY2JDVE9TSHVyRXMwTXBaYmRwQW5rY0JJenYwYUY4bzMwUWRRalptcnk4R3U4cy9EdktNajZJV3lQd0cyV3lSR21hVEI2NW5UVGVlUWcraVNENEZ3YmQyeGhabHNZUWF6TktGREFIT0ZyNUxsRGwxZVRnNHhTd054Z3N1bTNGdkRoT0hlRUc4VUZvNjRpSFAvQ0lsSUtQeEVOeStpaFBDbUtHSkNDUGtqTWs2cm1tVEVFa3B0aVZmR0oyTy9FNUVrOXB6OVI1ZXFsWXdWV3J0TXExbHhkamg3TWozTGVLWnBhUmJBRDlkcFBRbDRMNW91QVBHTnhRMzFwMmVxb0MrSVdzSWxiTlJiQjNsT2s4WVJlTDVKemxxRXJKSm9LK3g4RWtVeklZTGVwYm5MRHRWMmdjOHhhVExzTzNhQmFmRTVFdzdPWW5TMFN0alJSTVpYa1cvbURZdjE0TW91dHZQWVROeG9UZGVXU0ZxWWR3SGVNTEE5NGlrS2VwZXppTUEzcU9BZG1pQWZWL3NJZXNPUmozOFpEeG1QWWRVSE1HalQrSWhuYlVJYjdjRjBJNHFVdlJQYWVwZTZwMXlhQXVzV1kvNk5FejFoODNlQUhGakx0VlY1SDNLWHdNYkwvTHB6SmhvTHJhSDh4dWlkZFZEUFpmTU9DUGQrbmloK3p6L2dqZXdES2dWNncwOEg5K1pKY3VkdkgzcjhDK1Y3Q3ZjZlByNkJVdklYYXg3d2lkSHhQZFF5NjZYVnlSNUxLQmRxRVEzNWlEbU5TbzZKNXE0ak5KZkdZdHZncmllOExGTjJZQXVleWhJYlh5dXlURUo0R29WTWVjRmppbW1tQWRFcXhUQzdhQ1lEZURjUW1KUkhDb28yYlJpeVFaeGI3VGpIM1ZCR2lSQUsxYWdEY1ltU1NJS3d6eUx3VnMwc2hVSDNOYTRKZ2JVYTZ1MTVLdElOblEvWEx3QldCaFBiUEgwOWhpKzJuSzltcFNhNUxVbXJYUWJpQzBFYnFiYm1UVnVzZERackg5TkdWN05hRzFTV2p0V21nM0VOb0FnWmtGc0FqaGhOdFBVN1pYRTFxSGhOYXBoVlpCYUkrNTBQYjRHdFlQU0hwUi8rVXhGNVBxaU5QY0k2cUp0RXNpN2RZaXJTRFNiN2xJZXpnNSt6RW93dkNDZFZDWHdSaVV0MVlUbDB2aWNtdHhWUkRYUmhBVXdzaWhOL3JJOFh5NFI0N253ejNWUkRjajBjMXEwZDNBNHIzRWlydDV3dUtGMjA5VHRsY1QycHlFTnErRmRvTllmUlJtK29PZ1lEUHdJNlA3VGpQMlZST2dSd0wwWWgxN0ZHalRYSnRxZlpUSUc1eUlFT1VoUW52ay9hYzUrNnQxVXVmWlkyajdlZ1RZUWQrSWZUTmozNnpZdHdrSllCK1Q0bFcwOVFuWFZ0Z3p4VmR0WE9HaUM1aTJpZXByUzYwa1pnZVVLYkxyWjZNVDdqVzZUanUrMTJxR2U2Y3QrZHhXMXFudGpGTjF1VWZ5TUxsLzNWL2U2S3haYklVNGJYR2N4cmhjYVIvTDllRFk1QWd5VlIya2ZzUTFKYUlvOEY5cTcxVkFydW9tYTRJeUZBbTl4N0s5SysyRXIxLzZQVjhqalc3RGFYWlROS250OGc3bWEyU3g2NnpKeUEzR2F6aUc4M0FTd3lxN2MvazRGYnZPSGVQME5NSndiS1R5RWZ3S3kwS3BiaTluN0RhNmpNbU5sR0dWSEhOUjhsS3EzS3B1Y3NjNFA1TndqaUNjeDVJL2gzMlpOZ3pIU1lOaDVySGQ4WjFkK2N4TXRKZDhvelhSN0Qwc2NzWWFFaXpBQ2F5VG4rUFhHUTNUbFExRzZCanAwMjVibjZZNVJ2cmM4dGkzMk43QU1XbzVjN2VocHpsR3lRdnJjbzlrS2Q2Lzd0K3hianprdWdIRldEUzdEUzlkZlp1bkVTb1h3b2p1bEgxaEsreTM0V1E0eXJMejBmaTVFMTQyMVRNUjNTbWtEdXZiOXp2V2hVMnVDNUgzakxGOXVaclFha0V4b0hwd2RScWRKSnpCQ0dtMVpMOGdnaWVjMlBiU0JoZmRPTTMxWXY4dnJBeHIzUDA3MW9lTlNDN2dBL0xEWlVRYkxGV251bTJycFV2bTBneWViRHJydUJLWGRvSzlMZGVZNjJwSTV0NXM2czZTRXIyYkxxeUpWR3g4VGV5MUpCV2xrbmZOTHZNYjA1VGNNdUJmbXBKUG0xTnpxcWNvZWF1VkhEMmhrcy9tOEUrSkJReXNUbEhDWHV2dXJ3bG5VN1NTOUo5VDRySDBidkg0UWhiTURhNnp4THp5M3FCL3ZkZ2JSS1pUNTRqVElkWklnMi9iWTMrdjhRMlpZaDV1SGhTZU85cVZ2emV5cnhmOTNUMzQ4eHp4czFsY0RMSEhpVGJWL3B0OElMKy8rd0pYdVhub0szOWtpUHFSY3piRVNpNFdVME1wKzVYMmhwL3hENjBSTzNJejdFL2kySzgwWFRwNmcvWGxBcmwycmsyMHo5Q21YUGNoOXRyQmhhSi9obHJCai81VyswK3RFZjZUenR4alQrVnhYKzhJM3hWMXFQWDVtZjlQVzJodDNOdGl2V1A5MHd6dEovYlpaVnZnRTJ5YjRZLzlkZGkyTnR0RDkyamlrVzMyVjJkNzRKc3Y0UkMrM1dzSGN6UVh3YlA5azUxamFrMnBsd2ZJYnBTdlVEMmZGLzZUenV4aFBmd1ZWb1RaV0sxNWxZcmpSa1ErMllnL2pod3BxczB1eVU4SzVObVdudUl4dzNvRytTaDgyUVl1M0VWZFk5Rlg2bDFDblByOE5VY09sdGhFMFpKbHVoWFJteU9zUzczaVAxWnlqdFpCM0V1WDdoVklJdmhSczNmWXg0L0JHV2JzakVmNFhyYVAyaCtweDh2OW9yVUpzWEdwbE9hTVhVMmxyVS93SlFaLzh2d3BqT1JaNHZ5TnVMWXpYZktrWGtRMS9wRDFsNVlXbnZPZkthR3JmTTBqbjdtRTBRSHFZUGJkSTdxb3ZEdjlWZ0REaWJHUWcyTXA3eGxrSEo0RmpFTWFmWm1xSDdJTS9qKzcreC9zL2dNY1QzUE1BMTd5Y1hYQ3pyeGdXayt2MlhyTE5PWTk2dlFsMnhiRjdKUWRmMHhMcFBsZEhrWVlkenZDdVVqUkZkaDVqSVZrdjk5YmRwYlpxMmJubXAxcmRxN1orWDZ6OC9lY25XMTJiYkgybTQ3SHFGT2puMm04cjV4dDFKeGRjM2JOMlRWbmYxR2N2WkhrN0h2TDBIck4wRFZEMXd4ZE0vUVh4ZENibktGL1E2My9qZDNqZCthTDNsZU90bXFPcmptNjV1aWFvNzhvamhaZWRJU2o3eTFEbXpWRDF3eGRNM1ROMEY4a1E0OFo4bkEva01kOVplaFd6ZEExUTljTVhUUDBQV1JvaFJiVWxYYzFPOStJbldVdXE5bTVadWVhblFVN2g1SmRCanZYbFhjMU85ZnNYTE56emM3cnhNNTE1VjNOMlRWbjE1eGRjL2I5NGV5NjhxNW02SnFoYTRhdUdYcGRHYnF1dktzNXV1Ym9tcU5yamw1ZmpxNHI3MnFHcmhtNlp1aWFvZGVkb2V2S3U1cWhhNGF1R2JwbTZMdGg2RDQ3Q3JRendsbFNiUWZYcHdRN1ovT2NqRm9yd1pKNVhPZXdNZHZWTFBadnhqRHFMSVhyYnFKdlQyTFBxNVl3MkExRFl0Zm9XZGxWZ2ZGajZTMk1JVU4wTXF4TWtyZE4xcFBtcldpYjBLRHRtQTZWMWJZdHJtM2hMNE84amgxMU0rMXpFclBGWDZMMi9VTnJyMGozc3JLRTY2NTdUN2p1UmJsZTlrYS80OW9IdFJITW8xeXJPbU81MHFHdU1sNG5UOVNVZkpMYUU4MzNSQTJwWDdVbldzMFQxYVYrckpzbitpamtVOGJRa1NlOEFVT1AyUjNPa1dscmhxNFp1Z2hER3pWRDF3eGQ1d3FVRFAwNDVGTnRsc25SV3pHbTJzYmUwcTgvWFVTaXVFZXhWWC9Mak45a1hzbGp2eWJuTkEvWkREaXZ6ZjVaN0hqQmZpYjdCTDlOQ24wUTkra2dYM29ZOVFFSDF2SGI2djBEbGJaVTBiMHRaTE1MdE0yeHEyay93eitGQnVicDBGVHJNaTF3MlYrd2hITzBvQlp5bk5BaHlBdUFCbmxNdzRTbXd0RWQ5aDAwYjhhT2ordlFmN0E3OVJoV0hpSkpuUHFhWVhhSnZBbzgveWY3ZmhYZ0ROcjF2d0ZpRC9ETzIvQTNkdFh2dEZuQmZOUnFKSm1IZmJRSER6Ukgwcml2R0VwTjZSZzNoNStSV1N0b3lXWk01OFErV1RleS9FSjVMT1Zwa1lFczAySGF3R1NCckFQYUFmcFNuWW1LZURFdENkTjhxMjlWdFBwcDF1NG1mTGx1bGxLdE4zRU5mTVM0ZE1ZaWowL1l5KzBJVnVKWDhuWVEwZmRzM3pCQTlHTUZaZ0tkc05oK0QvMTNIYTJienA3WlN2ajJIYzVNRGxwQnNIOHo5aDk0VjkxYllhWW43TGozWUl2UVgzck5aZnFhZmY5ZG02WkljRXM2NXczM3BlTm4vWk05VDFQUzhVMjJINlQybHYxOWpWcjJLWFhXY0NOMkxEemxMT1hJaDdFamY5ZkU3MTBXdTI3ME9lTkhQazE5em5qUFZVLzZMUFZjdVgrcXMrVTdDNmtrbisxMlpxelU0eUxPZUROa3F5dEpIMEtwcVo1elMzbFdFWVN5ZEREdm5tcHNaVzJVSTZTMGNUTFBpRExWbUdTUGtVZVJzNHFNeHNlSzQvT2VKWGxHbm1hcGU1WCs3RStVejU0eWJrcXg5QWJiQW5LNHh1dFg5UjFOeHJYQXNWTzA1WE5reHk2My82SFZoLzN3SEEzMEw0R2h1NWdYbUtFUEtXZGZWc1BRajBMWjROWGVhK2ZvVDN6MDkwY010UDNSNUhweE50eUZYMXQ3UlkwZmJqT2FUZG9LSDN5Sk5iazBsbnJWVGRMVnBWOFQ0dDlsWG5NMVRLblN6YkxhSFdIWXl0b2Q5eitNd1A5bzF2NUg3WC9jTy85RE5TWnEzNlAyUFc3ZjkvZ20rbmFHU3J3TWQ3VXcwOURsY1NGNEV5MEZMemZ1bEpkWE01TGorSlhEL3BsMmdON0t2elFiNTVvKzRUM2h1U0Mvc2h3L2NCYjRnY1lhK29GdmtQOWVoN2szNlR6MUhPb21PNCs4UEFmWHJIOEMveWxsNUlEVlNHSmI1TXlubUYya0dUV2V0eXAwM21yMHJJaXVsTk8rSDVsRUx4TlArQzg1dTdja1BYUURQZFRYVGcrM1VQK2l6MXhNczZZSy9PNU9ROHJKczV5dWJJWmIyRjdxOTRVaWh4M09kZ0lHczR3cWhIeTdNa083NG5BckFiTWVCbFpJeG5QWW9GRk9ySllBWjFLeGhuSyt4Tm0wYjVsa1B1QWNMTWpwYzJCemszUHFEMUtyRGxRWjYxWGxqbFh5aXN2OEFicyt2SjlwSHBIeUFHTlJtcGVsK29NcXVXSVBLendhVERZZ0NSanZIczVSaFRPaERmUUpRRUozRzZ1dENuMFZqbm5vUCtValZid3BhNXZuSjNkWUx6N0FQRk1GU1Jnb0F3UEhrb01lZ010YUMyY1JvOTVaRStkK2lsWGszQ2RKNUdNYWw4clh3VHcyeVNUOFhtVVU2R3lmaHhHT0ZjeVlpTXpjT21Vc1ZvTjlpRjAyeGh2aU8rdlpFVjQ5V1dsWEZtM2piNGUyQ3NWczNKOWdKUTdNNG9PUHZSMmNYejFEQnhJd3NaYURKR0RnOVlGckxQVDdtbWpGQVdlUVU1UHQ2NktYQ0RMeFVBYnVyVWpnZThSVVBMbUlveStWdnR0WHJJZHhpLzFENnRuL3cxcEh1NGg1Q0YrQnR0MkMvTE9sbWEwSlQ3VjlkdFluOUJmUGNhNDdUeHYrRFROKzBUT2lPQWg4UGdVei9kOHpLZitNSGtINnY3S3J0ZUlaNFVhUUVUYi9KaU0rWDJyWlVuK2svYWJCKzk3ZUxtSHNkL21xSmNqN3RJSzR6a0QyaFJWTlU2eGdnbml1aFQ3OWxMVno5TkpuNkoyWTZISGNoaXllc21Qb3FjdU8rMmZLTSs5eXpLZExNSS81UVlZaWQ1QS8xdDlHam80K2Uzb0ZXTmxvcjhuUTdxREgyVUxkK0FtUHB5eWloWGJjUTl1aG80MW9ZcFhjSEhWb3p2YkJFVTRpMmx1Ti9qeExSU05aWTlhOUplYlBrbVpjRTc3bEZXdVhXUEg5TGxoM0c5OWFmdnk3eUxBUTQwSHRHVVY4Vk9XZmpQamFYeUFYeXdnV1FYMkxYZWNkMXZYVG51MmdXazQ5RG45RWZncVBmNDN6YlI5eDNlcFZ3VlVDWmYxb2E0Mzk2Qjh5OEZpR0I1SjFmWlc5YU43S2FNL1RtaUthOXlpKzlVWnhGMVNNR3ZoZms4Ly9kTkVUYUNmMFJkU2FmbGtqUHgxTE9kOXpqSlVlTUpjaHBMQ0QvczkydUtleS96VkhQQnRZdlR2RlBKdUxTSnRvUDEzdUZjUGZKcTZaRXZYQTRIWE4wWGVEbU94Mi9DOEhuL28xdzBvOGRiSHg5SVB5ekUrOGxhdTMwK2FPVnFVRmFiS1V4eU90TzR4WGlJdjNYaHhnajkrdmZKMWh2T3E2L3NVcGdjUDlXMmtZbDJTeEduMjUzaUYvcGFHOCttK2RWaHBDckZWMjFZRmN3Vkt2TmJ6OXRZYWRXMkRscjFOV1RhaFpXTHdmN2hpdkQ3NWVjb1p6MlV3czEvTFZUUHgzWXVMeWE3Ni9MQ1pPcmhXc3VmaExYZmVkeHNYZnNDZTdRTjkveHZSQzFDUkd0MVdaQy9Rd0swanhwc3R6ME4zSVdqVmFSZHRnSEhTM3EyaFhWWk1ZeFMvT1lEQWFQeXZpSlJoVFhZd0NvVmFqSzdHa0cxd3YvY3d1enVhWkJlVDdERFdSbnVBU1J3bG8rUFlOcFQ3RCtZWTIycGt1U3IyRnM0dmRtTlNubURudXhxUU8vM2w0N08za2tGZFZJWmlQNnQzcXd2ZFlEL09aOTRwV1MzOW1ueTB1RFZpTHQ4ZDFKR3BCSWFkTmJGaDlicnFEbG5DT0k1enkweDJjYTRqbXAxdFlCMlBpZkFMOHBlOFc2dFA5MW8wc05LdkxhRXVhZVpoZ2I2RGZkeVVucWhtOHYzTEtRN1M2ckRiUUY3c2tEK1lPNVFQYjdxOThWQ2pHWmZJRDFwYWRhNVFMdGxrZnp2a244TEFodW9oSzVidXdQbkRGTW1relNiU3hNcWVORlRyd3Q0VzJzb25lMGYyVlNSTER1RVFlSXZaenJOeUYrRnhVdzRvcStCRkdXVmZJaVc4MGVyY254RlhYT0s2aTk2N2lsY0RNMlJ4amJ3OGpYWmdmbWVNWlFqb08rcUp0SEI4TnZrckc0SjVybCsyQmlvb3FkY3hwK1lpdjBVOXdJNUdvbkZsWVZYMTZHYVRoZjBjMkU2TC9HLzRkN1V5dUY3M2Q0Zm5DOHp3TC92a0QrdGJBLy9tOVVTRHg3M0FPQk43czZ5QXFiakRqTWczeTdKZVlyUi9pNkp6NzQvN0pkTUd1c1hOOGpvMTl2akRuSGIvWFB6eGY2SDd2Nk9oOE1XY04yK3o0UFhzUEQ3SUh1TTgrd0crOUlUWFBzZGs5NWhmWUcrRDM4UVNQSGZUdzIyQ016VEZ0dEVmc1dOZnZUV2puaEs0K3Nla21SM1E5YWc1M29KZkgwS3VHM3ovUm9UdjlFd011MHo4eHNSbXdqUVpyREdwTWFQeEJGQnNQc1FuZW5oUFlCeStSL1RwTjNjUHhHbENmQi9TVUEraXN3YjdoY3czR2ZUeGtQS1o5QjlTY1FlTlB6bnJYQzdyeEF4WVlrcEY3eHdUKy9Icnhjc1NPNlRUOEE5NU83Ti9ZOVppRUo0ZnNLU2FIL2ZORjI1dFpIcjZOWjNJMldNNkYvTDJ6MGZWaWNEU0JSOWdkanFFWkRmRkpSanVvZ0VQVWpSSHNnb3VNSnZ3N1EwTDNkMFpEYW14NDZKMmRYZnkyMDhmR25vRDZqSVo5T0dFZkx0cndmeG45ZXI1b1FtdlQxeE5xUm5EKy91QVFtbDlzT01aaDdSNTluY0RsZnJGN0NPeHdoSWdlUStmMjdTRnNHOXFuMFBTcEdkb29nVjM3Q0U3YjI3WGhZWTVmMmZCdGFPTzNnd2txMXNHRWlMS1BCQStEOWs5c3NXemFQeHZnc1dkSDJQL0pHQy9Iem9UbXJMK0RGeCtjc1F0by92R1JkYjFnZjg0WExSOGJqeHFkbW9iVXNIWUF4elAxYWZyWU1JTnhiRGZvV3JiT1c0TzNKclo3eDd0dzNHUUhSOXhrOUJLYU0zZ1EzZC90bmVJeHV6M1V1dDNlRG03dDcrQzMvdEgxWWppWWVJdkd6MDEvY2pLaUQrTkR2cVYzd2ovNHUyY0lzWDkwekxwM2ROekhhL3FqL1dNTWFFZWFnK1ptbTVtM3d5TVUyT2h3U0EwYytsODR4QXdNUllIc2RUNzFhaUxWVXlwaWpxUS93MUtMbnpCc05iQXdybzFsc2xNMDVWTW1KZFpqLzNCSXduM0ZKRDNjZWNWbzhQaytiRGdkbzg0TitTaDl5UzR6UlU1ejBDZTg5SWREaE9qSXh1T09kdkV5L1VOVWdOMGhVTUllWEhMM09XemZHOEs5ZlAvRklYdm1GM1NRN3lmdTErRDMyMFIyaGJlbXcxcFhtcnVkeGU3WUtIVEh3NlA5WU1QWnlRRGZla0JOL0IwSU9KaW5OSmFuTkpRNzhaSGNuYnVRVEp6czRHTVVmcEJ2UThCUW9vcEgwRXVDNXUrUCs5ZUwvWk16NlBqK3lTdHNiUGJOYkxIMkZiWENlREZ6NXJFeitzeXgyTy9qUGZmN3p5Tzc5dnNITU1EN0wrQkdKellTN29tTkN1MlArcnZzdG1NMFN5L0dSMFM3dTVGbS9Dc2pxWlkxYjNqV2ZDWWpldGozRmpvYnlhRC9yQjN2MmQ2aWJmaGoreFNOemY0dTJscm93d2llTzJKZ043aUJIZkUwdzNua3B5ckp4SUxPajlqMnZ5RGtMR0pldlF6enF0L1V2SFpiRmMxcnA1QjVMWVRNdjZ1UXdhVW83OUNSL29rSERnNFdEOHh1RXpQOWhwanBxOExzSWNlTURQc0hYUHArbGVPdVdWWGROZGVOWWRQSXdNYnRFRGFtVVJvZDNTSjRISUxISVhnNkJFK0g0T240OW9qeG16djFiWnUzNEI0WXpCV3diZjZoR0lEUE9JRGhha0I2NjJyMHlDaVk3TUtJcHRITVF0TXA3L3htb1NscG1yUGMwWWtRdGxvS0NPMVJqL2JZMUJZSkliWTRvR0pDYTFzYkMrT1hPMnFWV09vc2tGbnF1QzBSU3VnVlFva1NZVmFJVVpFd3F4QTZaUUt0TlVWbkt4R0UzbENEbG13clZ4eUtyaXhNcjh6N2E0bU5vUFErWXZNR05VTUU2b1JPSDFNcFY3ZklPcGtjN2xvVkIxYURvR2tRTkEyQ3BrSFFOQWlhUmtGb3RnSm9najJvUmhUS2ZyNlg1S3pIM1lZbXdkUWttQnlDeVNHWTFFNUJVWmpDVVpnRms3SGVNQzF4bkQxSlVTYmtwUElZM1RrVFpTSFVKSVNhaEZDeklFSlBsUWhOTUZYOEFSUFI5MUdUektWcmtocW5QbHI5NmIzRnlhaUkweU9PMHc3VEV2cTV5RXNzNG44VFRJa1JXc1g0Q1BvZGdhZGxFVDY0UHhlZmpwVmgzekMyaXlBMHU2SHROd2doZ3hDeUNDR0xFTElvNEFPcHhpSStlQXdNVjlpR01oaUt1Qm1tYVA3UzZHVlJlWDZDcVZTMGJDRDFMb2ZTbUdZRnp6S1VwY0xueW1BYTNXSmdQdUZnN3VKc0diM3pTNlFiUGdjVmFRUW81Rml2WWpDMlo0UmpXNlJtMUk1RVZoZ0RwOGJHcTVIdmIxV09ZNHhPTVFSN1BQL1FxNFRYUm1RUVV5M2orK3lFRmtkTk53dUhObnJES3UrbU5oc0VHL0luQU9kbFpSdXFJZmNiTUF2UE81ajZyRFIyMlFRbzlLM2pFbkx6SlRrYmpTeG53MWlwc2xVRjZGZkdhelNWSHdYSWFoSkErbFRTTFpFdGJSQkdiaGF4Z1ZyazZ4WWFrQWhPTFI0RG9WS3RaRlRLdWhVUVc5VUJPc2FpQVJpZzd6TFZUTzh1VjgvdWd0U2lHRDBNTUtMRm15NldibHdFQy9KaUdheEMxTVdSUWJYSzlkQjB3K1h3Z0Frc0NFOXJ6c2tMVGdhQU1IRmF6RzRXVkxBeDB5dGpQbWNmZWttOXlzWk1hTlJ1TUllY0hYQkx1T0ZES1V5bGhGdmJMYTlXRnM4dk8xeXZ6Sm0xYk53VUE3TW5zczNjM0JSSHNvcjNwblk3TUkyZkRxWnJsQWN6OE4yYUJxRkoybGdNVFgxZTJQa2didzFBOUNvbzRZalcydVJQUGtwSzZGa0ZIQS9QcWpCMmhXbmdPb2d3TGw4RlFmTnM0ZnlDYlNBdldIeUlBWXNmeGdydDNBZ2d2c1NaOGZlUkY0VUlxK0ZvZitURXJSMUN0a3ZJb3FtTUlOdTRhZDdSSWx4SiswQk5PdHpvWWt3QzBNSmNGbFVrcFdQYjVObEhadDRvZnUwU3VpME9iNHZqMitJQTA0aUdEMU5QbWxFQ2IzbDhnTWEvR0pqbEF0MTRuSXZ4VnNYa2Z4RTFUYUpaUUZGTlE2V29MWTRrQnpJTngwQlJCWTdTdU0vSGNZTFR3NjcyUjVrUlh3aklZdDZnR2trYzZHQjBwa3MzMWpqaWNUUUxJTWZSb1U5a2tJNm9ZTklCRmlKY1liWDV1ZlpCR3VxRTZydmxUa3NWekJzMGxsT1FvSWF6bFpoeTczRVU3VjV5aWowYkxKRXJQdURMTWNNWGgwTVpsbXFDSFcwdjZtTWp4cE5rc1JNOHFYU3QwUkFWRFh5ZGxZSlhIcW8rV3U4LytQdHI0Sk1NVllwQktUTnc5ZWE4U0twUDdTNnVVczhvMDVmTXJXUmpKeVp1d2xXLzZlakplU2xYbWQwek1nSzRNRWFwNEd1dkRMeW95UTBkYlRGczljNDhodWMzSE04VFJVMU1EK3NXSFcwV1c1MlJITEt5SGpyS2VLK0FJWWJBS2lPWjREcUVwTUU5RzllUXdyMFpkN1RKUzgyeElZd3RDYzhPQjdSRGlMcTgxTWpsbUxvZDJTTERoN0g0a0N5YUdRY2ZoQTg1R25PckE2WGU1RlhheWVoUkpZck5pQ2hvYVhMZWJJaFQxdFFJSndqTWI1NE9tNUpQS1d5M2NOWnh1Q1E4U3IxQWlBTmJCMXdhQTVJR1lveW1lUWM5RElRYXFwSEFWRnN0QWxIM2NqSDhRUjB0OGxtQllxaTJLNkpheUh4elQ5MXpwTlFyNXdackdnUFZVb0hhc3RUSzNPUjFBazFlS01EYWVPNmZuS0V4K2o2MlBlYUE4KzhBdE80VkJub3pTQXJSdXh6ZTRZcmFBaFpMSkxYRjVKVHV6Rzg2T2NXaGJVb0tHMmRkY0poc0xBcE9wd21CTE5ZWG1OUUNzcVpMeUdKcllvc0tpd282NXJnZGNCenRoRytwd3U5aGdOOHRjSzA1SzhTMVVsSWpvTnJNYVlHVUVMSWdna1NaU2xwRnJ3QzBWYUFNdEtEaTBzY2MzcGYwdWhLZUJvbitZRWNaOTkzamF1ckYxZFJ6bGtTck4zVkIxWlJxcU1JaGNnU2l4aXVJZ3VTcG1Id015d1dXUmtlWmdVTTNOUTlGeUtXVmpDdE5rWDRERi9kR2NhV3BBaExMWXRNS1o2dkJXS3dPUzVxR0R1S2hZaFVQSllBVTRXUXc1cEV5YnBUSVZGWnhCem01TU5XQnpyLzRNRDZKc0dxRFdGVXFSaGE1anpHM091KzF0OUl3ZjRWUlFQWXc3NVJQZFFwWWk1VEdjek0vVmRZQlNrWmVPY3pUVEZGYUxpNmVid2ZZMExqYmlhQXFIejZxcGN3MjVxWnFlRXVUaU1vdzNXd1VSdy9WUFFuZjFNcFBaUWJ3U2FsTTBHL0VqejZZOUlIY0pCWXRrWnNFSDlDTmJ6WElUMExMTXhZcVNoNXBNVXhGcWNRQVh6aXVRQlFlSm1MYmhka3BZOXd6OVJFeFZLV0kxZDRSeDlSVVllcDIxSDVubDhlbFhaN1Y3TGJJalVjRkZCbTNYdWh0aWd4Y1ljVVV2aEs5T3d4V1JZTzNkSzZDVTI5eVBGdHhQSjBTVnJ5bHBNMkdpallwSVZ5bERrcFluL2pLRjRPYkgyeE5iRW54V3B3TFpidWREbHJvb05OTCtmRVZhcGxqdWxsMVVydUVuYUY0SnhKTmxwaTFaYlNwSE5Pd2ZjQzNEMmg3b0g5b1lkcmN3TFJwV0FzOXhGRjlRR0dScXA0TVhpMzlUZ3QvWGxDNDdvOENkWHhEUy9yeHRRQnl6WUNNYnF0cXJLNFhUOVlGVnR4c2xaK3dFRlk4YnkzV2dmQi9EcEwrVHg1MER6aDBwdGF2TUlIYkxsTEdXQ1E5WjhhOXgvamdaV3FpQ01HTGhUbEdSNUhaT0NCdnB3eE9teUZPMm5id3JyaE14SlFXdVZqbHA0Qk16emZKcnRJaTYzT1Y5ZEJ2RmJJZk9XVDA4ZzhYNjRrLzhoODNFeStnR2RFTEVYSnFXSlRKWWFySUtJcWttYTk4RXBJWXdTU3phcVcweitSUm9NbExqVm1MbmcyZkZPTlpObkp2dUYyT09kNUltSkgwVUNlZUhVb3B1MDBUeU9NZ1lIeVBEdVViL01YSWo3bExWdlhsMVhobjRkOVJsdkZCM0JxQjN5aVRKVXJUWlBMSTdhVHh6a1B3U1FUQnZ6RG8zc2JJc2pTR1dKdFJvb0E1d05IS2Q0RXFyeVlISDZlQXZjRmcwVzByNXNWeDZnZzNpQTlDVzBjOC9JRkhwQlI4SkI2UzAwZDVVaEF6SkFGNWxKd2hVYzgxWlFvaU1jV3U1Qk96MjRuUGtYaEtlNmJPMDB2RkNxNWFwVld1dmJ3WU81d2Q0YjVWTkxPTVpBUG90NXVFdmhUTUZ3Vi9vRjFnZld2WjZha0s0QmV5aWxnMUY4SGVVYWJ6aEYwc2tuT1dveW9sbXdqNkhnZVRUTWxndEtodlFlOFd2aWp5enFjbCtCYk40bk1pRW9iZC9HU0pxTFdSZ3Frc3o4SWZEUHZYaTdWN0ZkUWdHdHBSaC9oeVh3amhwQzVGOTV5bTdxbldKWU82eEpyOW9FZlBXSC9jNEFVVU0rNVdYVVhlcC9BeHNQMHVuOHE4NE8vRmVSbThybUt3LzRJQkQ2OHRnb3Nmc3MvNzhPNGg5bmszOGdLenlDNWQ3T0x2WDRGOXIyQmY0K2JYMFN0ZVF1eGkzeEU2UHlhNmgxeDB1N2dpeWNYWGlpZkZGL21KU2tsODBUM1Z4R2VTK014YWZCWEU5NFNMYjh6ZnYwZS9aUmNYNHBOQVZLcGpUZ3NjVTAyd0RnbldxUVZiUWJDYndiaUVSQ0k0MUZHejZFV1NqR0xmYWNhK2FnSzBTSUJXTGNBYmpFenhLeEx2MGJmaHNFa2pVMzNNYVlGamJrUzV1bDVMdG9Ka1EvZkx3UmVBaGZYTUhrOWppKzJuS2R1clNhMUpVbXZXUXJ1QjBFYm9icnFSVmVzZUQ1bkY5dE9VN2RXRTFpYWh0V3VoM1VCb0EvbzFuUUFXSVp4dysybks5bXBDNjVEUU9yWFFLZ2p0TVJmYUhsL0QrZ0ZKTCtxL1BPWmlVaDF4bW50RU5aRjJTYVRkV3FRVlJQb3RGMmtQSjJjL0JrVVlYckFPNmpJWWcvTFdhdUp5U1Z4dUxhNEs0dG9JZ2tJWU9mUkdIem1lRC9mSThYeTRwNXJvWmlTNldTMjZHMWk4bHhxOXhGdTJlT0gyMDVUdDFZUTJKNkhOYTZIZElGWWZoWm4rSUNqWURQekk2TDdUakgzVkJPaVJBTDFZeHg0RjJnUnZHTytqUk43Z1JJUW9EeEhhSSs4L3pkbGZyWk02eng1RDI5Y2p3QTc2UnV5YkdmdG14YjVOU0FEN21CU3ZvcTFQdUxiQ25pbSthdU1LRjExYzRHOENodnJhVWl1SjJRRmxpdXo2MmVpRWU0MnUwNDd2dFpyaDNtbExQcmVWZFdvNzQxUmQ3cEU4VE81Zjk1YzNPbXNXV3lGT1d4eW5NUzVYMnNkeVBUZzJPWUpNVlFlcEgzRk5pU2dLL0pmYWV4V1FxN3JKbXFBTVJVTHZzV3p2U2p2aDY1ZCt6OWRJbzl0d210MFVUV3E3dklQNUdsbnNPbXN5Y29QeEdvN2hQSnpFc01ydVhENU94YTV6eHpnOWpUQWNHNmw4QkwvQ3NsQ3EyOHNadTQwdVkzSWpaVmdseDF5VXZKUXF0NnFiM0RIT3p5U2NJd2puc2VUUFlWK21EY054MG1DWWVXeDNmR2RYUGpNVDdTWGZhRTAwZXcrTG5MR0dCQXR3QXV2azUvaDFSc04wWllNUk9rYjZ0TnZXcDJtT2tUNjNQUFl0dGpkd2pGck8zRzNvYVk1UjhzSzYzQ05aaXZldiszZXNHdys1Ym9oZkU2UmYvMzZicHhFcUY4S0k3cFI5WVN2c3QrRmtPTXF5ODlINHVSTmVOdFV6RWQwcHBBN3IyL2M3MW9WTnJndVI5NHl4ZmJtYTBHcEJNYUI2Y0hVYW5TU2N3UWhwdFdTL0lJSW5uTmoyMGdZWDNUak45V0wvTDZ3TWE5ejlPOWFIalVndTRBUHl3MlZFR3l4VnA3cHRxNlZMNXRJTW5tdzY2N2dTbDNhQ3ZTM1htT3RxU09iZWJPck9raEs5bXk2c2lWUnNmRTNzdFNRVnBaSjN6Uzd6RzlPVTNETGdYNXFTVDV0VGM2cW5LSG1ybFJ3OW9aTFA1dkJQaVFVTXJFNVJ3bDdyN3E4SloxTzBrdlNmVStLeDlHN3grRUlXekEydXM4Uzg4dDZnZjcySS9BcnlZL1JaWG11SFdDTU52bTN3aS9EQlBOdzhLRHgzdEt2RWJ4MXZzbkgwQm1PUEUyMnEvVGY1UURtL05id2hWbkt4bUJwSzJhKzBOL3lNZjBpL09id1orWVY2K2Rqa0x4UnZzTDVjSU5mT3RZbjJHZHFVNno3RVhqdTRVUFRQVUN2NDBkOXEvOGwvS3gzL1NXZm0vYlp6Ry9lMjhIZWM0VGViNFpmUFhiYkZDSDdiR1g3c3I4TzJ0ZkczbmVGZkU0OXNzNzg2MndQZmZBbUg4TzFlTzVpakNYL1IrWi80ZStwTnFaY0h5RzZVcjFBOW54ZitrODdzWVQzOEZWYUUyVml0ZVpXSzQwWkVQdG1JUDQ0Y0thck5Mc2xQQ3VUWmxwN2ljZkFiM3ZDeURWeTRpN3JHb3EvVXU0UTQ5Zmxyamh3c3NZbWlKY3QwSzZJM1IxaVhlc1Yvck9RY3JZTzRseTdkSzVCRThLTm03N0NQSDRNenpOZ1pqL0M5YkIrMVAxS1BsL3RGYXhOaTQxSXBUZmdkY1pXMlBzR1hHUHpKODZjd2ttZUo4emZpMnM1MHlhdnd1K0pmODhobkxtRjBnRHFZZmZlSUxpcnZUcjhWd0hCaUxPVGdXTXA3QmhtSFp3SGprRVpmcHVxSExJUFYvT3I1d3dqamJrYzQxNC85Um4xeGRoNWpJZG52OTVhZFpmYXEyYmxtNTVxZGEzYSszK3o4UFdkbm0xMWJyUDJtNHpIcTFPaG5HdThyWnhzMVo5ZWNYWE4yemRsZkZHZHZKRG43M2pLMFhqTjB6ZEExUTljTS9VVXg5Q1puNk45UTYzOWo5L2lkK2FMM2xhT3RtcU5yanE0NXV1Ym9MNHFqaFJjZDRlaDd5OUJtemRBMVE5Y01YVFAwRjhuUVk0WTgzQS9rY1Y4WnVsVXpkTTNRTlVQWERIMFBHVnFoQlhYbFhjM09OMkpubWN0cWRxN1p1V1pud2M2aFpKZkJ6blhsWGMzT05Udlg3Rnl6OHpxeGMxMTVWM04yemRrMVo5ZWNmWDg0dTY2OHF4bTZadWlhb1d1R1hsZUdyaXZ2YW82dU9icm02SnFqMTVlajY4cTdtcUZyaHE0WnVtYm9kV2ZvdXZLdVp1aWFvV3VHcmhuNmJoaTZ6NDRDN1l4d2xsVGJ3ZlVwd2M3WlBDZWoxa3F3WkI3WE9Xek1kaldML1pzeGpEcEw0YnFiNk51VDJQT3FKUXgydzVEWU5YcFdkbFZnL0ZoNkMyUElFSjBNSzVQa2JaUDFwSGtyMmlZMGFEdW1RMlcxYll0clcvakxJSzlqUjkxTSs1ekViUEdYcUgzLzBOb3IwcjJzTE9HNjY5NFRybnRScnBlOTBlKzQ5a0Z0QlBNbzE2ck9XSzUwcUt1TTE4a1ROU1dmcFBaRTh6MVJRK3BYN1lsVzgwUjFxUi9yNW9rK0N2bVVNWFRrQ1cvQTBHTjJoM05rMnBxaGE0WXV3dEJHemRBMVE5ZTVBaVZEUHc3NVZKdGxjdlJXakttMnNiZjA2MDhYa1NqdVVXelYzekxqTjVsWDh0aXZ5VG5OUXpZRHptdXpmeFk3WHJDZnlUN0JiNU5DSDhSOU9zaVhIa1o5d0lGMS9MWjYvMENsTFZWMGJ3dlo3QUp0Yyt4cTJzL3dUNkdCZVRvMDFicE1DMXoyRnl6aEhDMm9oUnduZEFqeUFxQkJIdE13b2Fsd2RJZDlCODJic2VQak92UWY3RTQ5aHBXSFNCS252bWFZWFNLdkFzLy95YjVmQlRpRGR2MXZnTmdEdlBNMi9JMWQ5VHR0VmpBZnRScEo1bUVmN2NFRHpaRTA3aXVHVWxNNnhzM2haMlRXQ2xxeUdkTTVzVS9XalN5L1VCNUxlVnBrSU10MG1EWXdXU0RyZ0hhQXZsUm5vaUplVEV2Q05OL3FXeFd0ZnBxMXV3bGZycHVsVk90TlhBTWZNUzZkc2NqakUvWnlPNEtWK0pXOEhVVDBQZHMzREJEOVdJR1pRQ2NzdHQ5RC8xMUg2NmF6WjdZU3ZuMkhNNU9EVmhEczM0ejlCOTVWOTFhWTZRazc3ajNZSXZTWFhuT1p2bWJmZjllbUtSTGNrczU1dzMzcCtGbi9aTS9UbEhSOGsrMEhxYjFsZjEramxuMUtuVFhjaUIwTFR6bExPZkpoN01qZk5mRjdsOFd1RzMzTytKRlBVNTh6M25QVmt6NUxQVmZ1bitwcytjNUNLc2xudTUwWksvVzRpRFBlRE5ucVN0S0hVR3FxNTl4U25sVUVvU3dkekx1bkdsdFpHK1VJS1cyY3pET2lURFVtMldQa1VlU3NJcVB4c2VMNHZHZEpucEduV2VwZXBULzdFK1d6cDR5YlVpeTl3YmFBSEs3eCtsVjlSNU54TFhEc0ZHMzVITm14eSsxL2FQVmhQenhIQS8xTFlPZ3U1Z1ZtNkVQSzJaZlZNUFNqVURaNHRmZmFPZm9USC8zOUVRTnRmelM1WHB3TmQrSFgxbDVSNDRmYmpHYVR0c0lIWDJKTkxvMmxYbldUZEhYcDE0VDRkNW5YWEExVHFuU3pySFpIR0xheWRzZjlEeVB3UDVxMS8xSDdIL2ZPLzFDTmlkcjNxSDJQMi9jOXZvbStuYUVTTDhOZExjdzBkSGxjQ041RVM4SExqVHZsNWRXTTVEaCs1YkIvcGgyZ3QvSXZ6Y2E1cGs5NFQzZ3V5SzhzeHcrY0JYNmdzWVorNEJ2a3Y5ZGg3azA2VHoySHVzbk9JeS9Qd1RYcm44Qi9TaGs1WURXUzJCWTU4eWxtRjJsR2plZXRDcDIzR2owcm9pdmx0TzlISnRITHhCUCtTODd1TFVrUDNVQVA5YlhUd3kzVXYrZ3pGOU9zcVFLL3U5T1FjdklzcHl1YjRSYTJsL3A5b2NoaGg3T2RnTUVzb3dvaDM2N00wSzQ0M0VyQXJJZUJGWkx4SERab2xCT3JKY0NaVkt5aG5DOXhOdTFiSnBrUE9BY0xjdm9jMk56a25QcUQxS29EVmNaNlZibGpsYnppTW4vQXJnL3ZaNXBIcER6QVdKVG1aYW4rb0VxdTJNTUtqd2FURFVnQ3hydUhjMVRoVEdnRGZRS1EwTjNHYXF0Q1g0VmpIdnBQK1VnVmI4cmE1dm5KSGRhTER6RFBWRUVTQnNyQXdMSGtvQWZnc3RiQ1djU29kOWJFdVo5aUZUbjNTUkw1bU1hbDhuVXdqMDB5Q2I5WEdRVTYyK2RoaEdNRk15WWlNN2RPR1l2VllCOWlsNDN4aHZqT2VuYUVWMDlXMnBWRjIvamJvYTFDTVJ2M0oxaUpBN1A0NEdOdkIrZFh6OUNCQkV5czVTQUpHSGg5NEJvTC9iNG1XbkhBR2VUVVpQdTY2Q1dDVER5VWdYc3JFdmdlTVJWUEx1TG9TNlh2OWhYcllkeGkvNUI2OXYrdzF0RXVZaDdDVjZCdHR5RC9iR2xtYThKVGJaK2Q5UW45eFhPYzY4N1Robi9EakYvMGpDZ09BcDlQd1V6LzkwektQNk5Ia1A2djdHcXRlRWE0RVdTRXpiL0ppTStYV3JiVUgybS9hZkMrdDdkTEdQdGR2bW9KOGo2dElLNHprSDFoUmRNVUs1Z2dubXVoVHo5bDdSeTk5Qmw2SnlaNkhMY2hpNmZzR0hycXN1UCttZkxNdXh6ejZSTE1ZMzZRb2NnZDVJLzF0NUdqbzgrZVhnRldOdHByTXJRNzZIRzJVRGQrd3VNcGkyaWhIZmZRZHVob0k1cFlKVGRISFpxemZYQ0VrNGoyVnFNL3oxTFJTTmFZZFcrSitiT2tHZGVFYjNuRjJpVldmTDhMMXQzR3Q1WWYveTR5TE1SNFVIdEdFUjlWK1NjanZ2WVh5TVV5Z2tWUTMyTFhlWWQxL2JSbk82aVdVNC9ESDVHZnd1TmY0M3piUjF5M2VsVndsVUJaUDlwYVl6LzZod3c4bHVHQlpGMWZaUythdHpMYTg3U21pT1k5aW0rOVVkd0ZGYU1HL3Rmazh6OWQ5QVRhQ1gwUnRhWmYxc2hQeDFMTzl4eGpwUWZNWlFncDdLRC9zeDN1cWV4L3pSSFBCbGJ2VGpIUDVpTFNKdHBQbDN2RjhMZUphNlpFUFRCNFhYUDAzU0FtdXgzL3k4R25mczJ3RWs5ZGJEejlvRHp6RTIvbDZ1MjB1YU5WYVVHYUxPWHhTT3NPNHhYaTRyMFhCOWpqOXl0Zlp4aXZ1cTUvY1VyZ2NQOVdHc1lsV2F4R1g2NTN5RjlwS0svK1c2ZVZoaEJybFYxMUlGZXcxR3NOYjMrdFllY1dXUG5ybEZVVGFoWVc3NGM3eHV1RHI1ZWM0VncyRTh1MWZEVVQvNTJZdVB5YTd5K0xpWk5yQldzdS9sTFhmYWR4OFRmc3lTN1E5NTh4dlJBMWlkRnRWZVlDUGN3S1VyenA4aHgwTjdKV2pWYlJOaGdIM2UwcTJsWFZKRWJ4aXpNWWpNYlBpbmdKeGxRWG8wQ28xZWhLTE9rRzEwcy9zNHV6ZVdZQitUNURUYVFudU1SUkFocStmVU9wejNDK29ZMTJwb3RTYitIc1lqY205U2xtanJzeHFjTi9IaDU3T3pua1ZWVUk1cU42dDdyd1BkYkRmT2E5b3RYU245bG5pMHNEMXVMdGNSMkpXbERJYVJNYlZwK2I3cUFsbk9NSXAveDBCK2Nhb3ZucEZ0YkJtRGlmQUgvcHU0WDZkTDkxSXd2TjZqTGFrbVllSnRnYjZQZGR5WWxxQnUrdm5QSVFyUzZyRGZURkxzbUR1VVA1d0xiN0t4OFZpbkdaL0lDMVplY2E1WUp0MW9kei9nazhiSWd1b2xMNUxxd1BYTEZNMmt3U2Jhek1hV09GRHZ4dG9hMXNvbmQwZjJXU3hEQXVrWWVJL1J3cmR5RStGOVd3b2dwK2hGSFdGWExpRzQzZTdRbHgxVFdPcStpOXEzZ2xNSE0yeDlqYncwZ1g1a2ZtZUlhUWpvTythQnZIUjRPdmtqRzQ1OXBsZTZDaW9rb2RjMW8rNG12MEU5eElKQ3BuRmxaVm4xNEdhZmpmYUdkeXZlanREczhYbnVkWjhNOGYwTGNHL3MvdmpRSXBmNGZ6SHZBMlh3ZVJjSU5abG1tUVc3L0VEUDBRUitUY0gvZFBwZ3QyalozamMyenM4NFU1Ny9pOS91SDVRdmQ3UjBmbml6bHIyR2JINzlsN2VKQTl3SDMyQVg3ckRhbDVqczN1TWIvQTNnQy9qeWQ0N0tDSDN3WmpiSTVwb3oxaXg3cCtiMEk3SjNUMWlVMDNPYUxyVVhPNEE3MDhobDQxL1A2SkR0M3BueGh3bWY2SmljMkFiVFJZWTFCalF1TVBvdGg0aUUzd3hwekFKbmlKak5kcDZoNk8xNEQ2UEtDbkhFQm5EZllObjJzdzd1TWg0ekh0TzZEbURCcC9jdGE3WHRDTkg3QmdrQXpiTy8vSWZuNjllRGxpeDNRYS9nRnZKL1p2N0hwTXdwTkQ5aFNUdy83NW91M05MQS9md0RNNUd5em5RdjdlMmVoNk1UaWF3Q1BzRHNmUWpJYjRKS01kZGpqN2dyb3hnbDF3a2RHRWYyZEk2UDdPYUVpTkRRKzlzN09MMzNiNjJOZ1RVSi9Sc0E4bjdNTkZHLzR2bzEvUEYwMW9iZnA2UXMwSXp0OGZIRUx6aXczSE9LemRvNjhUdU53dmRnK0JIWTRRMFdQbzNMNDloRzFEK3hTYVBqVkRHeVd3YXgvQmFYdTdOanpNOFNzYnZnMXQvSFl3UWNVNm1CQTU5cEhVWWFEK2lTMldTdnRuQXp6MjdBajdQeG5qNWRpWjBKejFkL0RpZ3pOMkFjMC9Qckt1Rit6UCthTGxZK05SbzFQVGtCcldEdUI0cGo1Tkh4dG1KSTd0QmwzTDFubHI4TmJFZHU5NEY0NmI3T0NJbTR4ZVFuTUdENkw3dTcxVFBHYTNoMXEzMjl2QnJmMGQvTlkvdWw0TUJ4TnYwZmk1NlU5T1J2UmhmTWkzOUU3NEIzLzNEQ0gyajQ1Wjk0Nk8rM2hOZjdSL2pFSHNTSFBReEd3emszWjRoQUliSFE2cGdVUC9Dd3ZlWUltRGk0dnVwbGorMnNTWE1GSDVhMHZ6a1B3YmZDRUVUTGwyK09UNUZLZk9ZWnEyeWFURWV1d1BYekVSRDNkZU1mNTd2ZyszT1IyVHRQbENqWjVHcnl5SGhhWTBjVHJ6aDBORTU0ajA0bWdYbS80aHluNTNDR3l3QnhmZGZRN2I5NGJzTm9kSCs4R0dzNU1Cdm5LQW12Z0xDSEJVVFdsUVRXbE1kZUpEcWp0M0laTTMyV0Y5aC8rOU9HUW92cUI3KzM3cWczekwyTmhCRC9ZU29WVThncDc5Q1BuMzB2bTlOcGdWbXpPSXQ4Tjd4dTZuRjRJc2NUOS92ODk4Z3YzK0FRekovZ3M0NHNSR2lqeXhVUVg5L3dNQmZZTnFGQXJlelFBQUFMNXRhMEpUZUp4ZFRzc09nakFRN00zZjhCTUFnK0FSeXNPR3JScW9FYnlCc1FsWFRacVl6ZjY3TFNBSDV6S1RtWjNOeUNvMVdOUjhSSjlhNEJvOTZtYTZpVXhqRU83cEtKUkdQd3Fvemh1TmpwdnJhQS9TMHJiMEFvSU9ERUxTR1V5cmNyRHh0UVpIY0pKdlpCc0dyR2NmOW1RdnRtVSt5V1lLT2RnU3oxMlRWODdJUVJvVXNseU45bHhNbTJiNlczaHA3V3pQbzZNVC9ZTlVjeDh4OWtnSisxR0piTVJJSDRMWXAwV0gwZEQvZEIvczlxc080NUFvVTRsQld2QUZwNlpmV1NEdEJGZ0FBQXExYld0Q1ZQck95djRBZjFlNkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUI0bk8yZGpaSGJPQXhHVTBnYVNTRXBKSTJra0JTU1JsSklicENiZC9QdUMwakpXYThkMjNnem50WHFoNlFJRXFJQWtQcjVjeGlHWVJpR1lSaUdZUmlHWVhoSnZuLy8vdHZ2eDQ4Zi94MjdKMVdPZTVmaDJmbnc0Y052djY5ZnYvNnE5OXErWi8xWE9hb013L3VCdk0vaTl2Q1cvcm03dG83VmJ5ZC9ya2RYRFhzK2Z2elkxdFZLL3U3L2JILzY5T25YMzIvZnZ2Mzg4dVhMZi9xaTloZTFyL0lwS2kvTzVSam5rVTc5WEs3YXo3SGFiL21UZHAxYmFWcGYxYkZoejByT25mNHZPdmwvL3Z6NTF6YjFULzh0dVpRTWtEa3lZai9uVlA3SUZKblgvbXdYOUd2T0pUKzNFOW9DNVJ2MjdPUmZNdkw0citqa3p6SGtRbisxREpGenRSWDNXZVRITmVBK3ZqcUdQZ0RLWXoweDdObkovNnorVC9sMzd3em9lZVJlZjZzdElOZmF0aXo5ekZqSjMzb0E2UHVWbm5YRDBITk4rU1BYa2xWZDZ6NUlYL2VZd0huNFdaTEhkcm9oMjRuMWpPVmZiY1JwRFA5U2RlTCtjN1FmWGMxWW5HMGZwMTluK3lsWldkNHBEL3B0NWwzWGVTeVhzcXh0MmlCNmhqSEo2cHBoR0laaEdJWmhlRVVZeDkrVFI3RFhwLy96YnkvdldmTGQraDVjNm11Nk52V3VlSVRMNk8xcUI4L21aMGlkOEpiMnZydVc5L09kL00vWThZOThobm1lOTNXK3hDNjlsZnovaHY3ekZseis5TE5oejhPbWprMG0vWGZwMjhNWDVHdnBJNTNQa1Bva1A4NWQrUU5ONTIra2pGeVAvY2krTE5zdjdkL2FwWmZ5dHgvaVVkdEF5dDkrTmg5elB5bDlpYzRzdVNBYmJMN3M1NXowQzlobldDQWo3SFlGNTFIbnRBK1Q5bWUzSGRvTTkwS2VtUmJ5N3V6Wm1WN0szM1gwcU9PQnJ2OERkV2k5NEw1dFA0NTllMTJNMEM1K3lIM1FkbC8zLzBvNzYzam5iOHhuU3ZicjlGbGRrdDZ6NjM5QXR1a0RMdXlyS1puaGIzRi9RNWI4djVNL2ZkOCtRTWY3V0ovQXp0K1k4aWN0L0FEazA4bi9LTDFYa1QvUDl2cWJzckc4aS9URjJ4Zm4rdDdwQnZTSjJ3bTZ4Ym9ZZHY3R2xML1A2K1JQbk1xWjlGTCtuTmY1dy81MjdGdExQMXRCZmFVL0xmMTM5dTNsdGRSdDBkV1IvWDA4UjhoajVVdUVsYjh4ZllpOHAzWGw4WGptVEhyZXBoNGVWZjdETUF6RE1BekRVR05iN0p2OFBENi9aMXc5OW9BWlk3OGZ0bjN4czAyK2l3dTlGWC9EL01ObloyZlQ2dnpnMWdub0RzZUU1OXpBOUMxQ1h1dnphMTluUDh6eW9LOUdQNXlqczZzZy81WGQxM1l3Zkh6WWp0QWIySDg5eDZkSXYxREc3dHRuNTNQc3QrTXZ4MmdmMkpIeFNRM0hkUDNjZmhmWGU1SHk1L3B1WHFkOWdiYnZXdWI0RDdwNVJKN3JsL1BQN0xmek5laUk2Zi9uV01sL3BmOVhkdkQwcGFkUEhSc3A3U0w3c1dNd3poekxkbG5nazlqRkN3ei81MXJ5NzN4KzRMbGZKUy9QQlN6TzlIOXdYSURMeWJsNXpyRG5Xdkl2ME1ucE95OTRoaGZXNGM1ejlmeGY2UWEzT1QvL0hhdFF6Tnl2TmQyN1hPMWJ2ZU41Zk43WkFoakQ1L1hFalRpZDFNL2QrSjluQU9UN3Y4dktzVXg3NUQ4TXd6QU13ekFNNXhoZjRHc3p2c0RuaGo2MGt1UDRBcDhiMjl6R0YvaDY1QnFyeWZnQ1g0T2QvTWNYK1B4Y1UvN2pDM3c4cmluL1lueUJqOFhLNXplK3dHRVlobUVZaG1GNGJpNjFsWFRyaGh4aGZ4SS9iTVQzWGtQamxkOFJkbXV0ck5pOUk2N2cvZHgrWmZ1UTdpbi90RE04TTE3WEI5c2J0cm5DYS9Dc1pHejVZMy9CSnJkcVN5dWJuT1Z2ZnlKbDh2bzhMdVBLbm1DYndlcGVLRE42elBMUDl1aDFDcC9CcG16Ykt6YTcrdDkydE82YlBKbUcxeEREcjRjTnZtczNYZjh2Yk5OakcxdGcvVS9hOXZuUWJuMjkxK2Z5bW9Tcjd3dVJSOHJmNjQ2eEJwclh4SHAwa0JHNFhuYmY1RElwZno4N1YyM0djdlUxbmZ3ZGIrUmo5aCt6bi81SmV1dy8rcjZZajVGUDd2ZDZlUGVNZTdrbTJNY2grNFZsdVhvdS9xbjh1LzJkL05NWDFNVWkwYS9SN2FSLzlBMjUzVEg4Rk5iejVNSHhSMmZYLysxN0s5S1BBN2VTZjljZWJQdDNQQUg5UFgxSDNiM3Mya2JHcUpCZStpa2Y5WjJCdHV4NlNSMXc1RWUvbGZ3THIrTkw3QUNzMXB6T2U4MTcyY25mWmNqdkMvdWFSNVYva1RFeTZjZmJyYS9QY2Erbm1XbDFiV1lYbDVNK3Z5Ni8xZjdkZmF5dXpldnluSzUrbm1Ic1B3ekRNQXpETUF5d21sdDF0TCtiSy9BMytGTjJjYXpENyt6bTFxMzJlYzZGNXdvZHZUL2VncEYvajMwWXRxSGxuQnBZK2VkMzdjVzJrZHAyekQvZjViRGZxZkQzUlBEL2dZLzVXdHVUOEMxeEw1WS8zN1B4UGIvcVBCSEx6SDYyakp1SEkvM2YyZWF0LzlubXV6NjIwOWxHYS8rTTJ5Sngvdmg2c0FGeXJiOVI2RzhKT2NiRWNxWXMrSWp1cmFkdXpWbGJPeHp0cDIvbU9nRXBmMEFQdUMxZzE2Y3QyRGVML0NoN3podXgzNitiVTlMdHA5MzZ1MEN2d3JYbDMvV2ZTK1R2T1Ivbzd2eldvTC9KdUpOL1BnODZuMjdCTStrVjV3cGZXLzlmS24vcmJYU3dZMjNzdzBNKzVIR2svMVArdEkxTWsvZ1F4d2c4c2ovbkVqeHVvby9ScjI0aC84SStQZmZuM1R6eXZEYkhmenY1NDhlcjlIUDg5K2orM0dFWWhtRVlobUVZaG52Z2VNdU1tVnpGZjk2SzNmdnFjQjE0NTdZL01OZUx2QmNqL3pXZTMrRDRldWJIMFkrWmcyTy9YYWF6c3FGNERsNzY2bXlIOHJ5Z2xRL1F4eWdUMTJiNXNmODZmaCtmcHN2VDJhTmVBV3lnYVEvRmJ1YzFHam12czZrWG5sZkh6MzYzWERzVTJ6OTIvbTZPbCsyNzl1ZVNObVhNY3FYZjBmMi84MVZpVTM1MithZitvMTY1OTFVTVR6ZFBLT2w4T3l2NVU4L3BSL1Q4Tkh3LzJHYnRIN1QvMFBlMktqL0hjbzZYOTFkK3p6TFBiOFZPL3BiWm44cC9wZjlUL2puLzEzNWtqbUdyNTVqbjh1N1doOXpKMzIwVVNJczI5dXh0d0ZqL1cvL2RTdjZGL1pCK3puTXU0eExhQTNtYzBmK1FiWU0wMmJaUDNPM3ZGWHhDSHYrdFpQeWU4dmY0TCtmNDJRZVkvc0ZpTmY3YnliL0llZjdkK085VjVEOE13ekFNd3pBTXd6QU13ekFNd3pBTXd6QU13ekM4THNSUUZwZCtEd1FmL2lyV3pqRkFSMXppbjcvazNFdks4TjRRMzNKTFdQK1l0WE15ZitLeEtOK2w4dWU2amtycjdMY1d1amlVam93blB1S1NXRURpbHJ3T3psR3MrMUg5R21LajROcHg5STZkOG5kNGlRdnNZdmNwazcvcjdyaGZ5a3Q4bFkrUmRzNFhJTjdjTWVlTzFVMjhOaEJyQ0dXZlpTMHl4NXZ2K2pYNW56bVg4eDAvUzE2T1JicWtmb2s1OHMreFVlK3hybG11MTBhNU9KYnJmeEVQVGovbGZqczZQVW84bCsvYjMvNmhMZXgwQVBHNnhKSjVUa0hlRzhmcFo3ditRLzZPQ1Z6aCswNzk0bGpLUytxWGN5a242VjVMLzJkY2Z1TG5NbjJiTnUxOTFMTy90K0h2S2JrZTNHNWRUN3Y3Y3Q0ZFhodk05N05xaDM2R0lyZnVleDl3NXJuaStUSTVkNEEybEJ6Vkw5QXVISjk2TFhidE92c3IvY2Yvby9PeVRYdmVWNWNlL1kvN1NsbTVyMXIzcmNycXRhSmdKYmVNRGUzU3BHdzVqNFc4RXVlVjdaNjJtUnpWcjg4alQ4OVZlaXZvd1ZYL1B6dnUvUlA1YzQ3bjNHU2FmaDUyOGVCT3Q1dUhSSjNuTnlvdVdlZXJHeXQyT3RONVpUdjArRGpMZmFaKzZmL2RmSVczc2l2RGtkNkZUdjQ1ZjZQZzNjQjlsWHRDeHA0amRBYXY2WmpYZU82UTQ5V3RjNDlZeWI5cnI0eFRyQjlXN1p2OEw5WG51M1ZLUFcvcURFZjl2L0E4aTlXN1RDZi9vN0x6VEt6eU9nL2tSRjJ5TnR4cXJHYWRtZkpuVEpqckJIcWRMNjhyMkwxYmU0NlozeDI2Y3ZEZFEvUk5ybG5YY2FaKzRlaGJ1eHg3ajNtTHZLT3U4czE1R2dsakJjaDZRYituM3ZTNzlKSGVPOVB1ZCsrRXE3R0F4em1YckJONnlYTjZWNytVKzBpdW5QUHM4MWFIWVhnei93Q2dndm9nNEw4bG93QUFEdGR0YTBKVStzN0svZ0Iva29FQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSGljN1oyTmtSd3BESVVkaUJOeElBN0VpVGdRQitKRUhNaGU2ZW8rMTd0blNVRFB6LzVZcjJwcVo3dHBFQklJMElPZWw1ZkJZREFZREFhRHdXQXdHQXdHZzhIZ1AvejY5ZXZsNTgrZmYzemlPdmVxNStKenBhd0FaZmozd2Y5UjZmbUsvak44Ly83OTVkT25UMzk4NGpyM01uejU4dVhmenk2K2ZmdjJPKyt3TjJVRTlQdEhSdFQ3dEo2Vm5rLzF2d0kyMGY2dTlsLzFVZnAybGFhVDErM2YrWjFkVlBLczVBUmRHcjFlcGN1dVorMjhlejV3YXVlcmV1dnNIK1ZyMzNXNXRHOTdIcG9QZVFXcS9xOTVaZldPKzU4L2YvNzNlK2d0MHYzNDhlUDN2WGlHdXFndkMwUTZ2UjdwTTBUK25pYnlpTHk1RjJXclhrZ1gxL1Y1NnFCcEl5OVBSeDMwZXZ5Tno2ci94OSt2WDcvK2Z1NEtPdnR6VFdYUjhpTk5sTTh6V1o4alBmY3krN3NNVVo3YkNKdkgzOUNacG9udmpGdGNjejFGR3Azek9MUjlSVDZrUnhmSXFlbFU3dmlnQzlxeXloM1hWQitxWnkyZjhYM1gvdnJNRmF6OGYxWm0xdi9wZjUyOGdjeis2bStvVTFaMzdCeDZWbjNSTHVLREw5QStxSDZCUEZaeWRycEFQc29oUC9jVlZaMzkrWkRQeTk4Wi8rOHhGN2pGL3VnOCtpUDE3dVNsL3BYOWZSM2l3TGJZUGY1R1d5Qi8vdmQraHF6MFVkcUxRdk9oVHBrdThMY3VLKzJSdVY1bGYyVFU1NzM4VEc4clcxekZMZmFuSFd1NzcrUU5aUFpYZjRmdnpmb29mZDM5aitvMjduSGQvU1MrSTdNL2V0QTJsdWxDMDZuTmFSZkk3L2JIUC9KTS9PVVp6VGV1SWVNejdFOWZVWDNRbndGMTllL3FieG5mSEpvZW1lbGIrajJlcFE5MGE2WElpL3Y0VGNEL2tjYnZJU2Q5THdQMXhvZGt1dEJ5TXZuSlg4ZEQrb2YvNzdLby9EcVhxZlRwdWgwTUJvUEJZREFZRERvNDk1ZmRmODN5YjhFOXVJUXJPQzN6TkgzRjI1N0NZK1hFcFZqUFpIR0JlMkpWL3VyWkZaL1djWmlQd3FuT3J1aTQ0bTN2SWF2R3RxdG5LczZxOGg5VlhIcTMvRnY1dEVkQjVkWTlFMTZuSzNKMThmeDd0ZXRNVnVYVi9QNEo1MVdsUHluL1ZqNnQwcFB6aHM0cCtoNEY1M2lRaFh5Y0ExbnByTktCeGhXN1p4NXBmL1RqbkZ6RmVXbmNYbVBtVmZyVDhtL2gweW85RWFNTHdMUEM4eUh6eXY3RTdWUVdsYlBUV2FVRHRUOXladkpuL3YvS0hwb1QrMWVjbDNQV3lyMVdITmx1K2RUMUtwOVcyUi91V1BrajVSUTkvOHhHeU56OWY2b0R6NnVTZjVjclc2RWFxK0JHOUg3RmVRVklxMXhNbDM2My9GdjV0TTVQMG9lampHZ1A5RFdlM2JXL2pobWU5bFFIcC9hL0ZlcHY0QnFVZDY5OFUyWVhydnZjd2RPZmxIOHJuOWJwS2JPM3pqc1pGN1RzekVZQjVSYXp0RHM2ZUEzNzY5akp4L2ZpS1MrSVQxUE9DM215NjFYNmsvSnY0ZE15M3M1bEE4b3BWbVV6SjNldWxPZVJaMGRubVk0OTcwcitybDZEd1dBd0dBd0dnOEVLeEw2SStaeUNkU0JybUZVc3Frc1RjOXNkL3VjZTJKRTFnRzRlV2VhdUxQY0c1MkpZZDNzTWZ3WGlINnkvZDlZbTNmcjFtZnNaTTY1UjE1U0IrRTZzOEZGbGR0Y2ZDWTlkQjZpdnhyZTY5cTluWTBpditzdWU1eG51YWIyZDk0cDc3cGYwekVHbU01N3A5RWwvOHppR3gyaXo4bmZ5eW1UTTBuWFhkOHZJOUxpRFZSeEo5K1JYNTNHVWcvQTRyZTdWMStkSm96NEhuU3VYby9GQTVleVVEM0NaOUJ4UnhaL2g4OGhIWS81YWw2cjhuZkpjeHFyTTZ2cU92TVFiVmNZVHJPemZuYmNFWGN6UytTLzRPdTMvNk1yUE0yVG5POG1yT21kQ09jaFNuWTNJOU85OFIxZCtsWmZ1MTNjWnF6S3I2enZ5Wm5vOFFjZVBrZCtLWit6c1grbC81MndSK2Zxbnl4ZDUwUDJPejlMK25zWGlzL0k5cjUyemhGV1oxZlVkZVRNOW5pQWIvNVZiOURaZjdmdTUydjh6WFZYOVg4dnU3TzhjOUtyL2E5NWQvNi9tZjEzLzE3S3JNcXZyTy9MZWF2K0FqaTAraHVHZmRIenArQ3VYYVRYK3E5eHUvNENlNGF2T24yZTZXczFaZkR6MU1VNTV4YXg4UlRmK2EvcXF6T3I2anJ6M3NELzFydGIvZWk5cm05elhQdVE4bXMvL1BZM09rWDFPbjgzbHV4aUJ6b1g1bmdFWi9EN2xkZVZYZWExa3JNcXNycS9TWkhvY0RBYUR3V0F3R0F3cTZOeGNQMWM0d0VlamtzdlhIeDhCeitJQ1didjdIc3pWT29MOTBzOUVGV2VyOW1PK1p6eUxDOHoyTWl1eXVJRHUyZFg5L3lmclY3VVZzVGE5bm5GdTJKOTduZ2R5NkhYbkluZTRQTkpVYS9UT0xwa2U5RnlnY3FTVnZtN2xHMC9nKysvVlBsWHNqNWdUZm1PSEkxUS9vL0VycnV1ZWVmYnZlN3hSK2NJc2p5eGVuWEZHSFM5WXhmdDJPTG91MXFsbkUrSFhNMzN0eUxqaUFrOVErWC9zand4K2JpWGphRlVIM2tjMERxZm4rQ2hmKzRWemJueFhmVlJuSm5oZVkrdjBreXhHN2YyRnRzZjVGYkREMGEyNER2S3I5TFVyNDRvTFBNSEsveU1yZlMvalZYYzRRczVTYUYvUHl1L2swWHk3TXpNaEQyMldjbHczVlRtTWJlcmZLSHZGMFoxd25abStkbVhjNVFKMzBPbGIrNno2ZUsvckRrZW83N1hNK3IrTzMxMy8zN0UvWnp2MUxPZHUzOUs5QTlwdmR6aTZYYTZ6MHRlVi9xL1AzMkovOS8vSTd1TS8rc2RQVnVtOFBmbTRXdGxmODg3Ry94MzdveU8vZG1YOFArSG9kcm5PVGw5WHh2K2RzNDRWcXZXL2N0NVpUSURyMm04N2poRDVzSi9PTWJObnNqbHdWbDZWUjdWK1BwbGJYK0hvZHJoT1Q3ZFQ5eDBabnhVekdBd0dnOEZnTUJpOGY4RG42TnJ2VWJpU3Q3NWI0eDd2dnRmWXdBbDJaWDlQWEJSclhqZ0ExcFNQcUFOMlBBSHJXbUo2dXEreTJ3ZGNBWTdoRkJwUDdIQ2xqcThGWWhhK2JpUitGdkI5ckw0T3gyL29lcFV6R1BIUm1BMXRTK01MNkt2amRsWEd6djVkWHJ0cHRFNjZEOTdsdUZjZFFmYTdJN1QzZUk3cmxLdnBBcEhtYXQvS2RNVDE3QndMY1F1TnN6b0hvNy9QUlQzUURYb2wxb1hmY2ZrcFEyUHgxVmtCdFVYRjBlMmtjWm0wcnNwNVVrZjlMYUVyZFF3b0QwdGNEL3RvckZEVEVTZWwzQ3BlMktHeXYxNnY3Sy94Y2RvOWJSSTllWHhMOC9MNGRzV3JaZnlKMjF6OW1ITElpcDAwQWJXZnh4ODlqcHZ4ZTFmcXVQcmRNZEw3K3dTZE96M2R0K1h5ZUJ6YTZ4TncrenR2UUQ3Nm01VEltT2tHVkZ6VWp2MHJIa094a3dZOUt1K1p5YXQ4bUw5SDhFb2RUN2hEeXVVRFYxMzVsaFY0ampFdXM1bnZ0YUFQT1Y5Rm45Q3hxZUlOdmYxVy9YSEgvZ0gxZjhyaktYYlNLT2VvNDZES2tYM1A3TDliUitVRThma2RkNmljbis3SHVnSWQyL1RqZXkzaWcyLzB2UnpjVXgxazE1VmZ5NTd2enRlRHl2NzRNdVhVSFR0cFZDYWZkeXJmem5mNmg3ZVprem9HMUFhNnA4ZkhaOWV0dHBOVC9rK2g0d2R6ek96ZWFvL2Q2cnJ2SlZxTlczNWZ5NjlrNmRhdXQ2VHhzaXVkbk5ieDlMbk1kMTNaL3pjWURBYUR3V0F3K0x1ZzZ4aGR6OXhySHRudFNZeDFrTDRyWmFkTVhhc1M3ODdXZ3U4QmIwRmVqK2V3N2pzOVIxS2hzeitjQU9sMjdLK3hGdFk3UFBjVzlIbUN0eUJ2Rm84a1R1NHhHK2UwaUQwNjM2VlE3bGJqRlFHZWRaK2pQTFRISUR3bXEveS82ak5McTNrVFE2bTRHQzhYK1RTV294eHl4eWxwUGJYK0tpOTh6bzVla0YzTFVibE8wSjB4Y1k1SHVRaU5wWGMrdzdsNzVaWGhDenhHcXZYejg0M093VmIrbjNLeU1yMXUyZDVzYi8vWWpkaW54M3l4YmJadm03WUNKK0p4WXV5dDdhTFRpOHZ1Y3AxZ1pYL3M2bVZtc2Y4VmorZzJDakFIcUd4NmtwOXpRZDVmc3J5ckdMRHVEOUo0TjdIVzdMZWpLdTVWZlkzdXJWS3VKZk1aSzcyNHYwT3VFNno4djl0ZjV3bTMycDkrU1Z6OVVmYlhmckZyZi93R2VhblBJMSszLzJwdkIzNUVlVlhsRDhDdVhxcjZubUExLzZPZWNJeTZCK1VXKzJ1NTdvZHZ0VDg2cEJ6Vnk2Nzl5VVBIRHJXNTduZlp5UWQvcnZ5ZnkrcytQOU5MZHMvbE9rRzIvdk45UlRxM3lNNWZxMjRjSzN2Ui9uWC93ejNzci9PLzZ0eHlvTE9iOTNITms3N01zMTArUHYvTFpORjlHQ3U5K1B6UDVScDhUTHlGOWVMZzlURDIvN3N4L1A1Z01CZ003b1ZzL2JlS1pZQzM5Szc1am1jNmhhN1h1dkcyaXAyZVlGZlg5eXd6eTAvalA2dTlrUUZkbDc0RlhEbjdVSUg0MSs1K3pWdXdvMnRQL3dqN1YvbHA3RWRqRlg3R0tlTUlIY1F0UEo0T2Q2YThMdjJQTTNITWZaVVA0NTUvSjNhcWRmQjNKRmF4a3F4dUdwUFJkdUh5S0xKeXNyckMvN2l1Tlk3dk1xbTlpRk03VjdpTHl2OXJqRi9QUzlIUGxQT3RPRUl2QjkzQm5XajU2RVhQMWFBZmx5ZUxPZXAzUDM5TE85SjRPdko0Ry9DNkJUeVc3SHhBdGcvYlk3UEV6NzJ1RlllbitWYjY0SG5peGhVSHUyTi85LzlBMjVhT1V4NTN6VGhDQnh5VjhuR3V3KzcvWGZ1akZ6MlA2VElIOUd5UFF0TmxObFo5WmZiM3VZaWVyYXZ5VXYwb3Q5anB3OHZoM2dsVy90OWx5dlphVkJ5aDY0UTAzZnNmNzJGL1pLS3RaVElIM3BMOUsyN3hXZmJQNW4vNFF2V1h1bzhDbjFSeGhLNVQvSC9YL3dPNy9nN2ZsT2s4bThQditIK3RXeWJQUGZ4L1p2K09XM3lHLy9jUDlmZHpzSHJ1VU9jcEdVZm81ZWpad2FwOWUxclhoYzR6cTdPWmJqZkZhdjRYY1B0WDg3L09kMmJsZFBidnVFVy9kOC81MzF2SHZkYzdnL2VGc2Y5Z2JEOFlEQWFEd1dBd0dBd0dnOEZnTUJnTUJvUEJZUEQzNFJGNzBkbjc5SkhCZmhQL3JQYTlzOGZTMzJrUllHOU05bm1FUG5WdnFjUGZhVnh4aWV4TDgzeDkvd2p2QU5JUCt6ZWV5Vk4yZFRuTlIvZnQ4YW5zcjc5andyNGo5dG5wUHJjc3oycHY4SzN5ZDN2MTFZYjZIaENIMWh2ZHNvZE0rd1Q1UGF0dFYranE4c2d5ZFYrazlvMnMvempZcjVibDZaOXFiNTQvdTlvYnNtdC8zc3RFK3ZqZjM3R2g5bjl0dkliOS9YY0gxRDcwd3c3c0k2NmdmYW5ieXhiWDliZEZPcXpzVDl1aFR6czgvNnovYzUzOGVaZWI3cUhVZlpzQjJwdSthNGw5ZnZxTTdySFZmTFZOa29idkp6Z1pRMVFYL3E2aHJHOHJxRnRYbnZxQ3pQYU12ZmlHVlpua3FlL3ZVWm4xL1hJbjl2ZTk3bHpuZjYwbjU1SjBuRlJadU05MzlJck1laTVFODZVOXFOeFhmTlBKZm5FOVg2RytBSG1xdmsyNzNQSG4yZGtCemNmM2xxL2t4NDlyL2dGMHArOWlVejB5NXZ0OHBkS3h6M20wVHRwZmZVK3Y3bVhYK1pUbWtiM2JqL2JnL2ZCMFRPQ2NVemFmY1dCRC8rM01haHhtL2JRemxpUEw2ZHl3c3o5NjFURUwvK250U08ydi9sMzNtcFBuaWYzMVhDTHRWOHZNM2wzbDg2eksvdnhQTzc0eUowQys3T05BZm5SSEc4NzhPcnFyL0tybmUrWGRkWUhLL3VvM0FXMHhpeFhvbVZGZDMxQlhuUjlXNXhzeSsxT3VqdVY2WGMrbGVwL1NjeCtkL1pISjI5Y3owTVZkZHVjV2tlNnEzTjE0ZDlLZTlOMDYycGMrMm5tS3dXRHdvZkVQaUNScW91dDN2UllBQUFEY2JXdENWUHJPeXY0QWY1N0NBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCNG5PM1NNUXJBTUF3RVFmLy92ZTRWVWhoQ1VOd2FjbE5NbzBxd042cHFOR3JPMmQzNXY3djljdm9YenJXM2dTeGRleHZJOEd4c0ExbTZ0dHBuMkxYVlBzTlhZKzF6dkZ0cm4yYzExejZYOWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRHNYUGJSYkNhRENScE5BQUFFZVcxclFsVDZ6c3IrQUgraU5nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZUp6dG1vbHQ2ekFRQlYxSUdra2hLU1NOcEpBVWtrWlNpRDgyK0dNOGJFalpzV1Q0bWdjTWRKRGlzY3RESXJYZks2V1VVa29wcFpSU1N2M1g5L2YzL3V2cmEwcUYzNE95SHBkTSt4THBYMU5WbjkxdU4rWHo4M1AvK3ZyNmMzN0xkYWNlVmRZdFZiNS9lWGs1MkdQcjlLK3Q5UC83Ky9zdlNuV3NlaitqLzJuN3orRC9tVDQrUG43YUFITUJiYU91SzR4MndYV0YxWkg0RmM2OVdacDF6RGl6dFBxemRVNFowaitrVjFBK3lqRktjNlNLVjJsVy8rZjhrZjFmZFV2d1JSLy9pYys0aUM5eW5NejVvOEtJWCtLYVowdVZWMTNYc1o2WnpVVlpIdkpqYk1yekxGdW1uMVNjV1J0SXUxUyt6K0QvRHJhYitmL3Q3ZTN3am9oOWVLYjN4MHdqZlVHYklMelM0cHoyUi95ZVZoM0xON3lYa1Y3M2ZUNlRhZEtldXJJdDV4ejQ2UDZmYWViLzdEdDlua3hLK0xEc1dPMG14MVRLVVBjei9WVGVJNi8wMzZnZFovK3U4RW9mSDliNWJBNGdIbVhrL1NmdlBZclcrRCtGelpodjZlZjVib0R0c1dIMjYreWI5TDE4TnhpTkZmayttdjAveDVEMFZaWWx5enVyN3hLUG9xMzhqeS94YmZhMW5rNS9MK2pqU1k2MTJmZG04MUhXZy94NmU4anhQTk5rek9rMjZXU1pidms3NksvYXl2K2xzbEcrQTVadCszdDc5elh0SlAzQSt3UnAwYVo0NWhUL1p6ekdKUElpelY2K0pUM3EvSytVVWtvcHBaNVRsOXJuelhUdlpTLzUxcFRySUpld1lYMGJ6YjVyK3ZmVVg3WDJlYlUvckRuVW1zbHN6WHFOMHY5OWJTTy84MGZmL0V0cklheWI5UE5yS01zNTZrZjg0ekc3djVUZTZIcVcxeXl0VWI4bTdtek5hVmJtdjRyOXN0ejdJMS9XUFBLYzlzSXp1YzZlYlNUM1hqbG5EWmQ3T1Nhd2Q3TW12TnM2eTVucmlYV1A5V2JXbXZxNlVvWDNPdGE5VEN0dFY4ZjBHWkJYWHFNZXA4UjZKZmRKbDczdXBUS2ZvKzZYYkcrai9zOWFHN1ptUDc1ck5QWlh2TnpITGVnanJQT3RDVDlXTCt5WFkxNy90eUgzSVJCN0dYWE10Y3EwVmFiWjh4clp0LzhUUVp6Ui9aSC9SMlUrUjMzK1A4WC9HWC8yL3BCMjRweTlHWTc0TS8vSldCTithcjM2bkpkN0F2aDZWS2YwUWJkUFhzL3l5ckRSUGhQM3N6OXpuWG1QeW55dXR2Qi8zMGNwbjFDbVBDOHgxakYrTXBiUm50ZUduMUl2d2hnMytJOEFHOU8rRUhOdDkzOGZjM0tQOHBqLytYOGk4eWoxKzkzL3N6S2ZxMlArejdrZE8vUitrblV0OWZFcGZZTy9pTXM4dGxYNE1idG5HTGJrL1RyblljWnc0bUxudERWN25mZ3o5eWlQbFlOL2EvRWhiU2R0eXA3WnlQK2pNcC96THNoK1c5WXBmVWZmenJwaWo5RllSZHhNcitmWC9kbjd3WnB3d3BicWxXSFVnN21rK3pmbjh0RTNHTS8zNTBaNTlURGFRTitMVEJzVFAvT2VsYm4zdFV0b2FiMUFQYjcwdjFKS0thV1VVa29wcFpSU1NsMU5PeEVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkdSTytRZmg1ZU9hdGs3anB3QUFBRlRiV3RDVlByT3l2NEFmNldGQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQjRuTzNXNFdtRFlCU0dVUWR4RVFkeEVCZHhFQWR4RVFleHZJRUx0NlloLzRvSjU0RkRtMC83NjAxc3psT1NKRW1TSkVtU0pFbVNKRW1TSkVtU0pFa2YwWEVjNTc3dlQrYzV5N1YzOTcrNlQvZHZYZGR6SE1kem1xYkh6K3dZL1N6MzFMMTFGc3V5UEY3SE1BeC92b2QwNzdKamxYMnpZWGF0emZzOXRYL1ZONy8ramU1ZnR1dDdWam5ybitWNm5YMzd4dG0vdWw3VC9jdHp2dTlmLzlmbmVYN2FQOWZzLzMxbDIzcnUxKy9idHYzNnpQZm52LzIvci9vZTEvZXI5MEN1MVhmN25FWFZueDNYYTVJa1NaSWtTWklrU2ZyM0JnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBK0VBL0N2bXN1RkxhS21ZQUFDb1hiV3RDVlByT3l2NEFmOVR3QUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQjRuTzE5Szdqc0tOYjJra2dzRW9uRUlwRklKQllaaWNRaUk1RllKQklaaVkyTWpJeU5MSmwvVWZ1YzdwNmU2Zm5VLzlTSVduUHBQbFY3MXdtd0x1KzdMbFRtNTMwMm5nRGFzNUV0eHRkR1lJZWp3d0p3WGNVRmF3RGZoWDdEODJJZDRJRUtFQUcyQ2h2UW5pVEJkOTJUMmJHRXdmSE5mSFA4OFVOdkFKV2IzVUVyMVhFenRyNXNUeFVVNEhpZFFPRW82VER3WWJtdkt6LzNDUktnM0ZRc3BGK05BNjgzZ2JoelhKM2IzcytZWGtKc01TbjhReEh6bGRJUER5dlVhOXNvN2taNVRpSTQ5WlprVUVQTVh6a1d5TkkrVHdZd0pteXJOTGlQU1cwci91N3JicEIzN3R0SEY0OXl4YkQ0alpuZ0FUeFJxb054Q1EvUkZBa3JyNWV5aFVpVGZRejZvYTdCWmFHM0hYOXhqN211Zm42Q1d5a3VvelZqZzRrMkxOYjZ1TVhBd1lKdERwNGRCSFZQb1BqdnFEbHdYUGpUL1R3dkd3OHZQN3o4dDdoT3hEb1NucE5Od3BzRmNDbTJGU0FWOXNTY0xSelZIakp3d0NjUGgzVkxjV0FDdnJUTlg3ZmcydWJBSDlVdnVKbjdOdncwSFR4K0FJVUx0QjQzTjFQcUc0SEg0VTdkMVVKUjErSFc3ZlBycDZpVWRVM2c5M3VQanZzMXlDVXVRcVpPeVlvTEdHczZHQWxybTA3QXZHMkJPZGdQL09jQ0txZDFnVlhGZkRLb2h0a2xPOUh2RVlHYnF4MjRYVWJoWWRlU0tjOExxbEpGSlVoWFl6Qk5ad1BHUHJ2NEtTOTBhV2lUWnBqMTFRblJ1RmlHUHNyS0hLZ1N5MFhMeGZMaktSV1cxRHdQTE9rMjluTTB4ZUhBZjlZMW0zcmdZdkEvcEtKS0gvRGc5bHdiUEJsUEhFMGxUeU1vTitRMjREcW5GajBKbmFycS9kT0xCMWxCby9mQ2cwZ050cXNJa0V5Z2N6YWJ6Z05OZzFqcXlQbENZMWlkSnNlWVNyMFRkQVJsdXk3SzloTDhxTThKTXk0WWFtVW9sTTgvMUR3L25TMHg2U1J3blU4QlBRRDlmM2dVR2hLTUMvL2EvUWtmWFR4S2RNS2h0MVpubTVwZ2ZFa3NQT1M0bFgzZ1J2TU9VV3BkMEc4bFcxQmgwZjBCaURiOUdGZ1NXYi9OUE9FWHFqOFFxRmx2YUFDQVJwNFgvREEyTitHQnJSODJTa2J4bDBkYjhJVUZkM1lwbXM4M1B5d2M1RUIzamdxTkJtNU40TWVtM1JOdHpBWEthejQvOWVqSlROcHE3dyt6RlQyQTNRL2FKWGVEV29ocGVrWlVlQWFCRVBTRUpCR0JyMnRROWppYlJiZVFiZkw0Q1dwQlQ1bngxTmY2M29Dcm5odytmdjZTaHVYYzROaUdrYm9HNlVJNStyWGlDWVlMMXFRQ09GV3RxMHNjRGtQRGRyUnFZdXNQVEF2bzVlZER2QUx2Z0htdkJhRUw1eDZOTzZSdEYyb0xVQzdVQlNDWCtPUHZSR3Z4RmNMcWQvNmhWZjlGd3NLQU0vVGNxTUdVa1pXU09IanJWY0NGU3NyOHVYTVNqNk1TaVo1Y2hMTUlEdWpKbjQ0ck93WjlCd1J6clJoR0VPTWRVU2dlUzBtdDd2ZW1XTjJiaE1hb0Nya3hDOHY2L2l0TGovcW82R1JZakI5ZE8wckVvNDd2WXdpSWVDU2RwMFRSMTdmZUR4Q2VvaE5ZWUduWEhpRHNxT3ZSRUVCc3pJLzdjbTZ3YlNTQnFNWmUxem5PaE85NlFrZlBucUJSUFJYR2JtWVE1R3VFUk9yMnJHVTdDanlvL2ZnV1lkUDhQaXkxNHFLZW0yckc3MnVITUVLZlczQW85ZUlrdngwQXVvZkhvSkhiOXN4dy9UUU1ic3NaeTNGZ2xGakdrL2tKK25iUHRmYm9HTmt1ZVBWSWJvejdqVzl5bjBxK2dNODFyUEhCNFA5STRCeDFxWW54NnV1SGw0OExadUNuRmd6dDE5ZGg3QmlWaG9sYldoY1pPajQ4eDAxQVNxTTU4d0w5QXF6aUpOTnhYUlVCb1FCOVBVaUZGZ3hyQk5EK004YktHTHJqci9ucHNycDB2MUdUUFgrQ0FTd0pOOGJIQnJYZnUvM3M2dWR6RGNRK2tPT2lNL2kyNzk3Y05sdW0wV2VWcUpjTVVreU4ySTJxcVBrUnJUOFh0eWdNalNaMzNTNDNReU4rUW5zSWdsMnYwd3JYNHBkVjFGY0NzZ3czbWRJeGYycHJmb0psbEdOSHU3OXlGc3ZIK1IvUTQwVFlMaHNTUGZUTFM3VGM3dXNJeFVEZFY5M0hzVTBTQS9zdzVZQ1FBK1A3N2Vqa3ZERE9YQWJhOG5oL2tQT3Vkczl4MzA1YW9ncytJd1RHRFlPRWpPQkNSWmNKbWFVcGxZSzZKbm5ZUVgxMDVUOUMrK29MV2V4dEtNSlhTWERoZ2NteDhvRHhDN2g4dlRLWEsrajk0Rnd5dC9ZZzdkNHBrR3pjT0xmV2RHd1lCUnpCUUZvdVFyMkFvKzhZQkpWbDhZV0xqWU5TVTkvMGdjYURiVDVrbUVtQjZmNXMvdlR5SjA0TllZWmt4S0pITTdrbGpZYThJNnNwUCtpOHp5UUZBWE1mSE44SkExODFQUk95N1ZrY3gwSlNJeTFySW5GSFVDM1FaUkwrSXVkbXJjRUl3dUVsMXFrdHo1TXpIamZxME9UTXlEalVUVG1aR1lIUGlobUtMQnVzNk9SZkttNDdTSUxCK3NaRkZrTEdzWVlkMW1Oc3YzNzR6dTZ4NXczTG5WdURqaTl6WVo5bnVFa1ZGMFVJTXVVc2VnUFNNZG9YZElFYk9wSnJUTWJUNTg3QkJxSE43UnpJbVFnUDVhT0xSeW5tSE5SN0VqZktiL0RMeFc1a3FQaWs2TGZ3NFpWN1FITDFVSmcrRU1acnduZU1hOWU5dnFFTEk3Z1BhMWdYWm5tUkV0WkZ4L2VheUVHcHpVTENPY0oxVFJDdzI5NDBVRDI1WHdUVGJKS1F4bWRYajY3WWg5MU9sUlRWSTVaZmJwbUhSKytrY0FOd0N5eGFoUjRTLzFWMW16YklrL2ZEVnFhYjA3QzQ1VEJGUzVFM0tueTMvUmhkcjN1ZC9EYzFSbHpwMUxhNytucFIyQldnZWlIaGdzY0hDWFVWU0lBKzd2L3pwblZ3bXJMYTl2VlUyYU83YnpOUUtZajR0RnZnWHRVMjQ5YmE4K05nSUMyYVpDWVM0U285dGlYRXdNcG1XWkk4djE2U2c5aTNZRjgybmFqZnlIeG9IYmpNNndVejJLRStnSVF5SUJsUXVoRDZjZi9YTndjVno0NnpDLzNWRHZ3c1RuTythcnRHbVQxQ3RZcjhZQXVvN1lHemxVT244dllFYVk1Vmtpa0JVdW1RajBCTXhkOEcwcTZFaS8rSkhRSzN4NmR0WWp3eUUwWklrMUp4c0xJY3c3bEd2UjdsNC9qM1dCeTZhWTNranJMMVQyMnNSMEg5M1JDMzlOSjlPcllxR3I3TEUzVU14R1lGMkRvZFFNcXJVa2laTGdQeTJlK0tzRGJDOGJ5eHd6YU9hcERsQWFkajVrZFBjRTh0RFJENnJUWWRTQmZTL2ZyY3luOUxuY2xLNXR0VndNN3NGanE2U3NlRHZwMksvY2wyUEdkNmp1T002QVR4SVBIL0NERkdLbkZ0bVMwN2t3MUo4bzBVQURjTlB3UGVIdUpQN0NoWmNnM1paR1hIQ3MvSlJnYktGdzNsbVFuUyt0R2wvNVp5eGRoSWxoQWZ5OEZoN01mSDI2SG9wVDRZeGhBQUxLR1Z1Szh6LzRzYlJPeGFDSXU1UmZIS3hxNEIwbkZ4OE96WU4zQWJnVCs0ZzhpTTNrdXNCcEQzeFNVT3lLY2tnVHNQNHJ3L0h2MVJySElZalRhemNGQUROMkM4WVptR3VPbGVQWVFIaFAzSlV1ZTJYeGVHOVptektXMmpoTWMrd0VRekl4N0Nvd3k4WHljTjUwbit3aDNKclhVUHpZdER3Y290VW8xdUVHWGpyNFN6c3MvekgzTnpsY0R1VE0vTVBNaXRMeE8xNEJ0U0tYeE1kRjh4dStueXdUeDE5WDFGQ2tUSWVtekM4U1FVU05NUkRpdnZUZ2dkWHhVeTdMOXpCMk1CMjY4dDhuSklrVll1b0JtenBZajBHdi9PMU5hUEo0Q1I3NHlaaFNoOUMrQnZDYkx0T2wzb3JLZmJOcWRHYUd4M3NZYThRSXpTZXNaN05ycFFYNWsvREFHMkRVWHJHOUxkR05Cb3M2TDIzN21qZzhOMm91Wkxxd3d2KzBMcElrM1MvckpvTzhEWDhmSDZGK2NFMExHaGI3L3JLV2RTQW0wZ3d5U3NOYjhzSUpSRmczajhLRCtxT2hPMlo4QlY2N1dGRjBhOE5KNlo2c0FnQ2VqZ0Znanp0ZCs1dzBVMGpJRUdJWmF6Y1Q4UWJPU1lCNUQxUWE3MURvaWZGbGwydE81ek9tMVNIcW9vUndmL3NGcmZlZHBIY1lRcmR6QVJLVTU2Ky9ibjRYV0lXZlF0eFNhVnA0L293Q0tpV1JBSlBTZEpodjNPSFlNNDhMZm9HSHU3bVcySUcwd3Zmb1M1anhtRHdpSCtqOGY3L3k3alF1K3U0TmpSekVFOXFKNzQ1N3l4V1puTERIeDZCUFR3T21hSkd5UENySDl2YUxreVdHcUIrTWU4U1h3eDF0aHBNeE5CS0h6NXAzWVFaakhGQXhPbDFnMU9TNENJbWt6QXphc2EyaTZmNjlQclA5SnkyVjNEY1VKVG9GNGpieGJ5L2k1c2dDVUVlZ0xpNG9HTERhL0U5MW5TNDM1cGlPU1VnMUN1QUloeEVCN3JkU1kzS0lRRkhQbFZPMElDb1pKc0lIcEc2M2pYamdhemdhS0xUWnYzeS9JTExIeFFaZ3hXOWRhZzltdUNrU2ViVHJyMFlzeVVMNkVrUlU2VnVhb0tTQU5CMTJuZSsxRUxQWUoxTFI4dlZPWlJRVVE1azZPbzBtZlY3RmZ0OE9BbFdWcnZybHlBbjlwaDFLV2s0eldRVDYxcWNxZ1B5OUh4cWZoMUlqbmoxa0xZZW5DRHpLeldkbXlscld3OUM0TVFqeDRWeWJoWjdPakhlWjhWM0w0MWRBUDloYWJTRVF2WGJVV0RnWHFlSy95cUhlOU5HN0craXo2b1RMOXJ4ejJMY25JTU5JMEQrZXpxcC93VUwyZjlENXBGd0hJUy9zQitVSVlZcG01QzMxdWdybHhuV3hWN29hdUhrbWNhbytOWjJ3TjJVcDlYSnh1R2h3cDdSbVd3YlRIdjNnR01ld3NDM1hlK0J3Tk0vOVU3a0IwM3FDWWtrZWYrZVBwajJ2akQwRENmQzRHT25tN2Q5b256N1NZUit0cDF4VUExYzBQb0ZFUFZzVzJjOFI4NFNCaUQ0MlZtOGUrNXhuUU1rczQ4VUVwYS8vU09zRUNEaisrUStjamMvK2dkb2JzV05KMUxmSzZQSTJBT0YzMFhZWjlyRVZKTzR2K2dKNWQrU1ZVaHdtdnlWd0dBZ1V5TW0xclg5VVNZQkU1TGxjR2xCZmZNb1ZYakJneWpuTS9FOS8zZE83U2FaOHdTNzB4K1lTaGQ1YS9lSVVKcWR1Z28wV2J5eC9VZm83KzU5RnkzODBMbEJYMlNRWFZJOTFLaHBLQVJCczRDQU5WbjYvZVk3aHBOSCs0THFEdzNod3hQaTdjNnlPM0tXL2R0Tm5YdGR2YU8zY2M3TTQ3bXRUM0kvTzUzSGVtbmQ0eHVIdWo3ci8vNCtvK1hCS1NrTTNCTC9zNU5vcVMycFlPb3EzdnpMZ0IwQzY0aW9RUHpiblNhR2o4VDRPdU5aR254c0dMTVF6YXo4ejJ3eWtVSnN4bWdIcTBlMVE2RkxJQ2xHOUd1VDhnS3NwejFNTGxvL25hSHkwY1hqNUk3SGoyNjcvVk5WaVdsRS9iM204cXFpSEw4cHdEQTVNSTBuVWdZRFIwNGN1VFoxQVpMN0kyQXlYaTY3VUVjOURyS01nM2FFV1hBTHFtc0FkZmRuekJPUEdlZDYrU0QrSmtuaUtiSzdzMDJvK21ISmNIRFI4d3gxdGEzYlgzdW9WNXFybTd0MHIzVFUvMHdERU42QVl2SDdVeFloalA5bk1oVmcvYUVUVHRlQmVMK1hoVitXR093dlk2QUFXRUJHdWgyQTBkSUJYVWk0ZWNOTVlyemEwN1hTLzFVZ2o4c2lObm5jb005N3R5T2hsaDlOa05DRUZjMjI3c0FrRWJmRjZoYzdqT1diWHMwSVYwNS8rRzdyZGZjU2pSdTZSVFlFelZLMDNPRWQ0TGNYZ3lxUkovM2FLZ1BnbzMwakhyMmdydTJvOS85T1ArVjRCeFE2NVJkbDNxZEYvRHp1akcyRzNpbDRuNFhBUHkxU2pnalk3NGxnYysrRTY2M1kwWjdaUE9YRzkzZkF4MjZ2VzhkOTRoQWQ4VXdpVkZ6VUsvanVSS2FYeFhNZ2M0Z1B3Z3plVUl5eEpCN2ZMNy9CVFd6cDdpSGZjcytlSHR4S0dHL3N0dlJnbUdoUHdXQWp0RCtVWk1sOHFmTWJNR3M5alQwZ3FUUGduaHRWMG5YaG9CSDdhK21RK2dhMHZUc01STHFFcElJMnhKcjExSFcvWXd6YVVwb0c5d3N4LytBK3VQNmlScEx1cHBTaVBmRnhQQ2lGY1RDeVBiSVR3Rmcrc2puaGNxeXU0YVBQQ0h6alZzUW5yaE9kOW4wdG1IRTNQaTJvbHFBanNCNGlWeFNkSGFhQWRKZVdrcnQzV0ZjS0FIS0hzaGFtVkJGbG8vci8rNGdNWXFhM3FNRm9XaU80UGVkN0hrR01QZFRBSkJNSWNoNURzMVJBMUFQeko0UTdTTlNRTk94SmpTdllaODVFQUluTXNrQm5zU0w0TFpKRmF4Rnh6aFl5ZmhKY3RYRUNqU29FNVlxZVo3OVloL1BmNHZMdk5NYUx5T0pEWGl3M2RIY084WXlVbjRYQUtxTEFmWGlHZGJoVHpmUDdhSm83NVBWbUZXTzgxNElwMnNFOUEyN21xWGpweWprdnFBc3BZaWZNaGlIL05jcHowTUg5em9vMlpBN2x4eFJNejY5L2pUaEtmb2xpUG5VWWpidUYwSTRBZjFjb0JRZnN3Qnd0ZldheWV5clpUenF1dTFUNmJrUWtJTFk3Tm9yMDJwejhNUndqSVM0Q044bFBDWVpkSHN6UDR5akNLeDhUZ1lwY0RjUllwblVBbi91NCtrLzFHR2thZVJFRTdWWGJBaC9raFlCb2Izd2lGaVhud0xBV3RvK08zWDRuU21rYTI4REtTTlg0Y2pOVTVwdXJtTlN2WGowbEh0YndITllkakdrckRrMWlSRmZyQnFzTUV2cEdQWEJHSW9SdHRXWk45bytuZ0JVY0tFMWg0dTQyYlNrYkJvenBWUDhJdGlkNmt6dXZZaFlrT3FGNTUyclcrRTFiZmFoK0E0TXVyOVJBRDBpZFgzMmtjWnd6NWdxZUkxaTl0V0p1dTdqbCtNamFVMHJzL2xBdTFvaGtBbit0OCt1Zm1yZzBsbVUzYXdWR0pHaHROSWtIajgxaXBXZ2JRWjA2bldJWFNDSEpZNUFqdmZkaFRvT05HZzQyNE80bUtHN2RIWHNGelBBTy9vS3pwRlBwREZCTDNLTHZ3UyttUVVLRzhZUnoxSXFOY0RIKy8vTDdHbmNKbW9qQkZrZU1qcTZKRm9JS0dHdFpPWkEzejRuZWdxZUZBYUUxMHdRcksrenJOc0NGK3VIdHFtOU5scVEwY0E0ZkdBYnhqYmRJZ0xsakZnQk1kOWZnQTk2QlNjUURlNUdMYW4zdTlHUCt6K3crbGhlQXZJTFFUby9NUWlpQnp2WXpHZ3ZTeGllVmtJbjlRY00vSFpQYmhJZkdjOEVSbFB5Z3J6SkRQVUd4cVRxc08vTTNsRjdQV3RvTjVuQUYwM2xyOEIzV0ZINWNQeGNkdS9Oazg1UEwvKzJMc1gyMnZHNUN2U05Uak8zelVoTFV2REpiSXBMbGlLYmNSMFA4cFFlaVY1WDNBU3phSUc4TVhkMCtSN2pvQXRvUUFjQ3A2elJNL0JsRWg4Mi9rNThscElYdHNHcGkwazdlZTZQOHo4ZkF6aDBXd2FEVytraGtRdjZwYlVrTEIvT3JreXR0MldXSW84RmVxYmxKVW5laGtIcWE5ek1GeEZTNUd3aE0zWDZPT0RhZ1hrVDMrcy9FMStlVjhYcHZTbURRV0pEMHZYcDlVLzVJWEo2djRSaG9xUTFVN0hOYnRhWG83T0lFU1BDRkR6OU5ETjVqOXcySXFvVm9OSlMvZXJSOU4rRFE0R0NVUVRsdnlZK3VGdVB2Q01LUWdCSXpjZTkzM3Qyb1dYZ0JkZHJUOFBYVk1sc2NTaVBWVWdEOE0yMWFJOFBETHZkbERnUXVpeEFkTEMxOXNqRDFZSk0yM3R3Q0xRWmxmd2ZpUy9ZS3N0TUlvMFVaRjk1REIvdmY1OXJMRFR1QzBmTWx2M1JZa1ErTE1IUExtOXJFaUw5UkR1R2ZEZVdXeTRWSExWRTFrUHRGMEdjbnhIa0k0bHB4K2JwYlAvOHI0blBuNkZKMXF6UUZ2SUk0dlBlSDBTL2NiMWRLOTRZWlVVSmxmS1dYNnN0TGFDWmc2WUwyckJqcVJ5YnMram5nRjc0djZWTTlCS1ljYkV4ZmhIckVFT1EzME9ULzVUNG5rT1RPYUdPQ0dkT2pSSGs4LzMvK3hxVDlVaklCRGhDRm10bzZ1ZXJTc0dPSTFxa0xXRDZWb0Z2cDVsTnkyRWdPWElZRVJja0FCUHUxYm9VQTFvdHZHanphMmp5SHdvZlAwT1RKTGNKKzE2VzhYVEVqL2UvT1dRb2tUZ1dVTjJGWGRxMm1xUFhkMXNTb2dGM2JCanB6enUxakdTVjFHNlgxNGIwYjg1THEraU5aUGtNU0JxbTNvUW9SUHF2aGErZm9VbHUvRW5NSUUzdjQveGZLQUQ1Z2J3T0dmQWFuSklZN3ZBMUtUWVNTQy8yOWN4WnpUR0h1Q0N4VVZMbWpHc2ZMRzdMMXZ0WVNMMnRCc3FKOEE2Umc4ckxQeFErL3hpYVpHYVRCQUhuSmphemYvejh2VjVGZnhWS2xtMkxFaFNxNlhUZXlIdWxRNWUxbTczTVE2d0NZMkM5N3Rrd3lvVjJIalVkdzhKNFBPU0Q4MXc1V1FLMzNmOWo0ZnZYME9SOU1kb3dOaUxYdENIV2ovT2Y2em5xWkd3Nko1WU0rekZJSXNFOFNFNjJBaVpkQzhRMXovYVBOclk1eHlFV1NlMHhPeUtReVI3NDdsbDRRYy9YU3kyWGVmVi9iWHhvZngrYURHUWNEYUlpWGZEUDEvL2I2N2tJVmJrdVlXdXJaMkppZHpJMHJJMm0vWmlEd0dvdHVTQlJEcXJNd2dCUFpKWXQxZ1RXd1RwT2loUUpaRWVubDh1bFRkbitwZkhsK1BlaFNRbFcrRWM5czFmNGZ5RUJjamJwbTNmUlNEUHpzUmk3RnZ2U2NDTHhIZGZiaXhjTUFibWhncU1qWnpZcWVLVTVIL0N1aE85cmUwaVFyanhYa0tqMkNPM2NRaFpSMzQxUDU3OFBUVllFRWZtRmUwdG85WjllUE14R2Z4V0pWdzBkUE9TMVRNQ0d4LzA2ZHlSOHNHOVpnSnd0VVYwOEU4cXJ6ZG9oNFNIbG5ybjc4RWJQSG5GQUVIMHpacUZTK0NVZHU1aU5ieFhFdnc5TmpxUFFCbkt2UlBYeThmNFBLOHRPZk94WnpWbjhtWTQyL1dvYmwzSURNZEV4RldzMCtQcHBKMWpKR2Z4bWcxdzYzR1d1M3J6M0lOeCt1VkE1bXVYU01lM2ZqWSt6Q3ZZZmhpWTNqamhSb1dGd1pmWEg4ZStHNlBhSU5TQTViM09tVGRwNWx3bjFTd1F0MGR0MWlxUjFGam5tM0FkQ1pIZzNTSWRXbWI3VzJDYW1YdytvcjUwaFEvS2piQUVZWjB3T0lQOHdOSW14ZjdkNVUvY0NwWDE4L25IWnM5NXIwUERzQWRuNnpHS3Vjem9CWnJvbkw5RDhnc0FPSGVPOHMwQWgvbDBsdVlQY2VpUFhQY1JLcEhQSFlET1hmMWNnWlhvOGpWQkpSL0lQUTVPQ3J2c3dxRURvTk8zSCs3OExBOVhlSHZzMXVBSTFaN1dWZVA5amp1MVV2MGYwM1B0VkdmUWpyMUxVRzBORHhqOTBaSGpISFBTRytFeGdqTWFCT0tmMTYrbGtaM05VNGo4UFRUWjlMQXdDWDUyYWt5QWZsbHlDYTltc0JONzRubXgwem9Sc3IzT2dpenB0SWpMWDR6VzNZZ0ZsWEYwSVhQSU15NXZjNUh0NFlkOU1iN21MVWROL2JGQjNTemVON09rL0QwM3VwWWtBWG1FczFSOWYvbXhpS05UQU1ZYy84Yi9yZ3didDh3N1BNNU1kaE4yTVhqZWkyL1k2OEJDRnk5NkR3OE5ldW5WenJNK2FjVUs1T0NyQmplaG9nRWQ0akIrd1dmNFBRNU50TlFLRFRYN3RlMU1mWjhBNWJ1aVJVbGlXSFVOOVcvbXJpeGVmYUFkUHpuUkRtNWN4STFjejZBY3FtdnM2TzcwbVh4aUhSeFRiMjRLMEpweElmSW5kME9EQjZEV0NUSkdKL3p3MHlZUHY4bHhpQmFiN3gvdS9oaEdYUkQ5ZFprMTdWallxZ2xQa1BJZWIyZHRsbVkwd0xLQWhxOWdOUWJUTDJMNjg1L2FGNUtIMmpFdTRDSjl0cEp4dG5jSEczNDNEY291ZHZVLzNiME9UcmFTYS9Md3lpUW9JSC9kLzF1RWpnOE53SnlTMFJwREx2MEFoMG5zd25oZFdoQkdtV1ZlcDJNSnZaYTBzcVlvbnFvdElKN3EvOTJEbmN2MHh6dUxhNkJXREk1ck52dzlOVWxPV0d0MFFFMW02ajk5L2tscENIZEJveEh5V2VMSzNTUE5BRFRiYldYcHBWeDlzaEhkUkU4RU1FUnpoZllKNWNROFhjK0N0N0xNaFlLdXpIMzU1STZJdFR4amRDOVdScXZhM29VbWlXSlgza0czV3l4RVVmN3orQi9Hb3pIblA4WUhSOVo5ODcvd3FNRzlBb29FYlhkdVRpVjRvWUZBUEVjcHg3YXZDZzNhMnJXVm10d0hwejNidUo1cFBRVDFDZ1BzZWpJUGRnbkRrNzBPVFNpTUt2S2dRRE5hZW5vK24vM0dWNWpXeERWTFJ3KzRYdW9EcmdYZFdKdTJGS1F6VXFZUFpia0J3YisrTjU3SmQzY3g3TTZ4MnRqb0wrZzRZeC9xMWh0N0RXWkhveldZcVlWZnYwbCtISmljS1Ntc3dicVdKb3E5RXVIam9qL3QvQzVSY0wwaVQzTXpKUkF6aGRRUE9jUTlhbGx6YWpFY3I1WlcxV0F0LzdGcWxWRDU2SnhFMytWR0hnWEVSbTRTNWpyNjV5WXp0QWlOTDRsSXU4aTlEazdzSFZ0YmNaOGRSMThpc3FPWHA0L01mWEF2aUVPeGd1TGMvWk56YkZ6RjVzNVRsZFUzYk5zYTFPRnBZWFRqRCtGNXdoYXAzVWVzV1JiN25EU1lJNzR5SHJURVdabklUVXBvRHdVdHArL0huMENRUVI2UVd6aFBUOE5UZG5KMlAyOGNCMEpVWUhveXY4R2d6SjRIQXJzTDRsTGVUQnNkN3ZCd1VBYkdhSGg0N085WitScUQyUys0ek45QnJtaFNXekhVOENIRDJ0V1RLanVYb2lDdERxSDhabXFRSW1ReU5VdUVQa2ZkTmVybkdqK2UvTnhzcGJnRFNnQWlwNWdUMjFDQnNSUU1PUngwYmVjMXN2WWM2RXN5Ui8wbU4zdTJTYngreFF1dzhRVnlPakpwY05vOWs4T2o5UnFiZ2NSL2d6NkhKaFZHSlcrSzFNVHhycU83ZFRzTSszditYVXlWODY0TE8wSlh2Y3dGVWRjWnNaY0gxa21LYVFYMUJ1T3ZtN1JhZXpiVCtNZVA5R3pEQVFYc2Z5VXY1azhxWUd4VFR1cngwYXRFSDhzZlFaQlpNU1QxeW5na1JENkpRVW1meis4ZnpYMHhpdUZLem8ra054WjdyRUd3L3ErS1FsSjRwSWJEV1c2dUpSc0xtQ0cvVzV3dDNhU1lDYTE2VVExWW9kRUJ3L0ZjeTAvZXlEdk43YU5KNGdVaVhSMUp1c2dUTmlZeGxFUVJEWXZwNEJkU0pzSUdxNlRaSHdiT3A5eDJSckkxUmhkWmtNamRjek5pclpKeFRrUnZKUFZ5N1JnS25aaXE4TU9tUkhRUGJvd0RjRGs5UUE1RDZ4elVvY29SYTM1a1RlRkdSRUZvV1BnaWxma2VnUVdVZVRpMzE0L24vYWxuMDNEZVgwcjV1Ty9wdVA5TzVJbEMzcjNqU2ZSYUh0NVVhRmhBZEwrQk81UFlZQU41WE90MktKclNYMTc2RzJUcDRJZ3pxcmFYUmd4QTdoc1JTNXhUdGpwUzVGd3lCcm1Qa200WFJtZld4OGR3Vi9mejlGMFZzYlVmQ3AyRTlqd3NYYUFqeUZzS29Ra2RmNW5XRnM5ZFpibHJzcTYxR1dYTWc5RlhwdFNJVmVrMGJKc3M2eTkxSGJyZ0J6M1h0THZWRVdJa2FnOGsxV0c0VUhKckJvZllDbXp2ZWZiYlVxeVZZVHorOWZqSW0rZDNZSE82NEIwWnlhbXFpRVJpaUhZVTRpSnNMZVVIS3h1UVhLckZYRUFrUm9iTVRpWUNwMGhCSmtOSVJtUGNFa3prdnVhZDFnbUlwOVlGYXMyd1lPdXNNYytHOERya2dPTElJTmNEQVN2V2FQbjcvYWJTQm5JR1EwUE9ZU1R5UWE1M3REc0syRFlqWnBPTmVvbFBYZUpwYmkrZ0hzdFp6RG9DdFIwUVh1T0VXd09Nb2hnQXJpWmNpUmFPNXMwaHUxb1pCWDV2aFhFYXdDMXI1dmRrWkpkTE1HNHVTeE5JLzN2ODBZTFVFckt4M25kY2VYM3ZaTjZFY0hCSzVFQ0wwM1RDcldlMEc4YTVBazJaOW1LVzJ5Zi9ueFZCRmFxOXR5TnAyT3U5UnlCNGRpTDhFNzlMZWNrNityMXQzelBTZGV1QXE5ckdLTlJ3SWkyTS9vbW9mbi8vbEdKU3NsR2FkTjdXMWx6OUxYOUVhVUozUkp5d2djMW9vYjFRTmZKSHF3NU5jTFNYcTZKU1MrMmlFa3V4NWc4SDR4ZlBLWEFsalN5OFhDY3VuV1VmVXU5cVEvb2FORXRGNkptTWlEQ3JIS0N6ZjBYL2MvN2Q1N1VXZmNTaWFlUWVZVy9XOHNoeHhZT1Zob0RkWXhMemQ0SDRRLzhIK3BMNVNycVhRTCtiSmUyaVNhSVh4ekNLbVovakRHaEU5ZHdpWWp2ZmRvUHZWbDRpS2hELzYwK24vekxhUmRSSk9IV2g3M0djWEQvUDZQM1J4cXA2SWJlMHM1YUoxb2x2M1djTHoybTkwL3dhaEsvU0FGQ0dyYUdiYTV5NHlYZXpkdVQrSEpwV2NkMEhoVW9pMHZrYkR4TDdydHI0UlZXV3RncXNISmYyZFpNL0xiQUliczJuNGdZdmEvbkgrbDAxekp1YzJtVmliZHhZdEpzNGVGbG50dm9VektLV3RtVWM1a2F4N1k5ZUJ6TmFzeDc4UFRlYmRPNk9pcmVrY2R0N3crb0J1Z1NLWHpnZ0I3V0sxSGJrcEJMMDhnOWUremR6eGgyVmY4REcyRlIzOG5IRG82UGZuZmZlck1USDAzVVlqa2Q5WldJT0JjQldrY1JRYVhaZmNjNDUvSDVvc1c4SWxLaVljb1FheFFJTWRSTHhtODhQU3VVR0gyWmxtYzVRTXZjc3NxSVBlUHIvK00xblBITlNWRndnNzV6b2phRVZNck5lZFd3RlNUMlNMeWhGZVIrbWFRWTNMcVdiZmZsa2gvY3ZRNUVYbDZoanhDRzRYdHc3MC9EQ3Zmc1hnTDZ0QkR0M3lnUXFXUytWdDk0SUJzUkErWHYvZFYxbWljWVlpdFFFU0U2WGlQQmdJMFlaR2lyTE82eXBqQjdtOU9ocDQyM2VFZktUTm5uZXRseVg5WldoU1o3RGwyUG9CNXR6bVpMODU1N1Q4ekpXcXk4TjJualBBZGcxRVo1bU5hT2MrUGovLzhqUHBpV2lmV1VScmtHZEQ0eWdEeXJrUXdvT3ExSldOOU5kVHlRRzNocXpVbkh6b0RSRXlVY0g4T1RTcEtQRzlQMDlIRkpWUk16U0ZEV2JyWTJPenRsQnZjQU5VZ0ZsaGc1WlhLS00rSDhmL1FLMTA0MWcwaUdEd1RFZW0yWjV3bFFpTHlZVGpZZS9qbXNXd2JCNWNwRnM1Z21QN01qYno0bFVPZnd4Tk5tWXN1b3J5dk1zQUo1c1hwQkdGQnA1RDBOYnhOUGhwUEVUM2JnU3k3NkVqK0hqOGw5Q3pEVWg2TmVlK0QxdXFDckpmcWMvQnQrZ2J0RkYwbk1GdGlYWk95ME5melBGZ29JZDQ2Tkg4NG40TlRXSUlEWE1BRnRjVVVFVjR1NGJIMkljNzRzRDNZMWZCRjR3cWJsd0NtTlkvbWYrUDE3OTJnenBQQ1BXeE0wQm12aCtEd3RKU3p5YkdaZHZ5OWZNZEZlL0hiUVdXVzIzWm5FTUhoSWZxTldZWEtQd01UZGJrMXRsT2FRTy9qbGxZMEhqUXFCT2w1dFU5cHpRS2VjUklHRStSUE9TZU1IeWFqK2QvSEJNejlLWE1FQWpNVy8vMlFnazZmMlF4a1NKYTJVOGtLMHQ0OTJuTWtqM3ZjNWpsU3JqK2dOUm5wb2pJREFWKzMybGJVbm9uaGhpOG1nZkdSeFdlSTY5MmtaZDkyajZsUDFkK2NCK3ZjOCtnUDU3L2E3UGVRZmZYUzhOeXhiWEV4YzVyUUpaSjhIdytYbmp3YzdnLy9WelY4R0FzUkJ2bzVQWE1rZ0dwakxDTyt6V3ZCK21kVndNWGo5djh5VjZqRStqNDUzY0xnRVRUR2JWTkI0amhGdmhZWmw4NFBDVjhIZ0FUT0Yvc21ZbHdFbER6TVlhRjQrNkVWLzdBYkczZmc1aVRpbVkvTko3OXZMczZ2ZkxNZ1ErVFg2UFVsSFlnKzQ4ZCswM2dPMnVlT25ETjFuK3lIdzdpSEkxZjF2bmhjMnJZam5GM1hTUkdoNk45SFAraUZidDVxdzNYMS9zc1loZ24xZWl3VG9mTy9qM1ViN24yMXZUVU1Dd0s5YWpILzdxNzRuNld4azJMSG9QRSt3cFpsVkswaWFVMDRqWXJJWStVZlVCK2RZZHFzR04wblVQVSt1RDFVQzdGV1NqOWVQL1hqbytndmRkNnRUODNFakRHVjFoRzNLTytieHNEakJ1OXQ2K0xNM29PaTRHS2dEQUlmN0FXcmhEQll6aW9VcVBxUjdHaVp4K2JNT0QyRXd3Q3BsU1hWZXNhK1BLRXZic0VpNTEzclNJdk5MUGUxbytQOTcrKzdrTytVV0JiQlh0UHM1TUV1bVBJYnE5ZGxRTzJLNVY3MjN1dDU3emUxYzRMVGhFaGdUT1ZnVHl1M3NkVzdZTHNlWGpwTENGREN1YVpZckl1b09vSWJHYlcxK1hCK0NjT2hOTEJYQ0RYbjg3UDdlUHJaM1VzRU02OHQ3aWFkeTB2RnZUZk05dWwrYnJ4N1U2dzdlSllLSnRqRFlPTzArSnY5VTBSUlBDUmM4b1pvbUczSS93ak1IdGpEY0hJd1BBbHRYVkVWME5DQVJPbFdvQkI2YzFhTnJzczJJL24rM2o5Q3loYUpZZXh0ZGpuZDREUndPR0tTR0lHYUZSaU12bitQQ1QzeGlwandMem1DRzVyOTdPVVgvZlhrSlh3cTlEM3Z5TjdSQ3RDRUR5WkllTEgvRk12dkdmL0E4T1BZUGc1bEswdVhnZGRuNC9EbjVuR1ErM01LejZaN0RQdmd5dVZCZjAxeHV0ZHBBWnhuWWVFeEhDbWFpY0tjcTg1dGJ4R1JNaXNLWDQ2RE9Qb0U3cWZsemxIYmR6c2szZ3lrcVg1TFQ5ekJwWnlZVWNpZVhaVnM0RndZVHRTRHc4Q3ErZmorUGZFZzV3WElNeEJuMXdtRi9xNWt3ci9QNDBqeEFmc2JnbmI3VERhWldXTnZiU1RaSDV2a25IbHRxMnZJUUFoeDdKUVhrZ3BQcjV2dGV2SWtTNnV4THdJa2RTMlBVaDV1eGszdEZPMExVMEN2UXJoUDk3LzlEaDVvMk8yemhHWjM2ZHhFNFI4M0NNSTNqVWkrVExRa1F1SGJMVnRJNWY5VlluUnlnNjc3UDFsL002a3psYUd6c2hpRjAyUUZJT2t6WmdGOTJwQnpHTTNCcjVhSHdya1hUNExOTDFuWXZZS3hCWDk4ZlZ6Q1RKWFVuTVZTMmNEN1RiZUNPYm5EU2R6T0hFZkczcnhWRlJibEZLYlczZkVBTTBwU1l1WE9mZzFlS1dPM0ZkcS9kb05JNVFoYms0cmVsQ1N4TnFVRStJSndVc1FaK0t5d2Q1VVJZd3NCOElCd2ZuSDZ6K3pwWHZwWGxKL3FFVGRwVDIwQkZLbGRWNTZ3NjVqcjVLbnM4d0hwU1pFRHJ3RWlTZHBOelQ0VXhYTFNyMGMzNVNQN1NaSXBlWlZxUnRINExzY1d4SDdndUZqY2dqRHphYUJpano2a291aEh0ZS9maDcraVRSOTJvVVludTFvb3JET082Lzg4bXh3UVZyd3RDV1NXTlJhRmp0MHJsRS9oQk94OS9jZERwN3plWm52YXpFcnhyTjFOc0lkVzZ1cHpOYm9oZ3poUlBXWll6Uy94cHphODlEZEttU0VsVUlqSVgzZS8yVSt4M05oYldpaHVmL3FSek5qWHVjZTVwYzRkVG56dkxXVkcrSzRpTitDejFYcGVZZUhRanRtQ3lKWmtHazkxa1NuQ3ozSzRoeUN3VFNSN1lvbW9ZNlMzdGQ4dmtQOWs5SXp1OFQzbW1kZDJINzgvcHRYWjJvR2FGTkpXRlVPazVFaU1VRTFSaDUvY2pRRzF4SjcvT0hjNjBIa2wrbHNhcDkzdUZUd3p1R1czWFEyUEIzdkwwN0JvQ0NOWFB1azlmT3JVcVYweC9zT21HRjhETVpwcU16TlBvbFVMcHBYYno0Ky8zaU1sYyt2dkZtODVzaDc1N2UzQUcwc0IwcXllMmRuZmNsMmZpbnFYUThYMGVaeklUOTMrT2ozV0p1SmdlYm9tQjVIbDBhd3BXd2hONDZHVlp6V2ZFTnU0UlptNzdPRk9pNUFiWEVscnNIb2g1U3hmOXovMDFJR0YzVS9CeTZXanpxdjZHRkM2N3pXdXN6TUQwVWpSeHlEWnlkNVdLdEU1ZjkxaDFOWHV1U1p4NHBFS1l5WU1qSFgwYlVaaVZhMWlHRm5WNnpnVUk2enNuR052ZWVyejhpU3p3c0R6Ulp6bEI4L2Y4SzJsVURsWnlJcHF1MnE1Nmx6WE5aVTh1TDBlOTRCNnF0bU0yZjNpVzhDMGY3UEhWNFFkenBlNjd3aUFKWGRlN2tZcW1RanN4VVlJYytHZE9COXFTeHV4bmxYUmt0MkNJL0NoRmlVRWpTV2czdzgrNDFDS3dTZzZLN0NPSWhwUFk4dE83UUlzMWdKTlJ4c1BTOTRiT3J6am5lVmx1WDNIVzZ6WGV3Z0NobmdLMVBiMDd3c2U5V2VBSzh2MEpUaVZnQ2grN3NyUER3TjJNd0lwSzdBYnlBZW4rTGU1K2pVaDJWT2NQbGVULy8rRnJ6WitZNVBkZ3R4VXJZZ294TjNTQUZHTS92ZGdkODliLzJQTy94Z2ZtdVNVczhEZDBQZnorMnlsSFhDcHVNWmE2RnFSWmdUZlB1SmNjK3BqdFFVQklKTFZpelBDK0RQS2ovZS8vNTRhK0hjZlZHUWVNRlZ1ZWtUQnB3dlRkdjgzZ1BFd3VHQlBaMExwTld3Y1AyK3l1WTk1NHFRQ0I3T1huajZRaGJMai9jWDN0cExlS3VuMDBEd1c1RHl6a21adnRSWlFsMFdWS3FtNHA2UUI1bVA1Ly82MFV0eEJja3VBdUc5Z0ZEVzIzY2IvN3pEMDBGSFhQU2FWOExQaTRIWTRqbjU0dzdQTWxNZXM1ZmxRVnpvazFsY25OOTVQY2VvOEVkcTk3N002Y2YxMWFMQ1RlNUFHdUtNZE5TQ3RvUjJBMFIvdnZ5RERuck9LN0xaekVJT3hMcGN0NStzL0x6RDFheUY5OW5yTnN2YmE1azJUUDY0eXFiYVV0OWZjdjF1bld4OFZVSFByeEE4RVFxaXVjdDhwckloZ3JnN3VoTEJPSmxmTWR4bjZYUGVqZm5HUTUrSC83L2tJQXMrNmxaQ2lYN21MTGE1cmhtZ3k1aGYveVptbWVUVmFuRHhMMWZaMUkzS2QyRUErVThndkpxd1NBd1NNOG5iKy82K0FVbGdtTWp5ZGRqNUZidjF1REhxemFUSis3Y0l5TS8zLzMvbEsxLzV5bGUrOHBXdmZPVXJYL25LVjc3eWxhOTg1U3RmK2NwWHZ2S1ZyM3psSzEvNXlsZSs4cFd2Zk9VclgvbktWNzd5bGE5ODVTdGYrY3BYdnZLVnIzemxLMS81eWxlKzhwV3ZmT1VyWC9uS1Y3N3lsYTk4NVN0ZitjcFh2dktWcjN6bEsxLzV5bGUrOHBXdmZPVXJYL25LVjc3eWxhOTg1U3RmK2NwWHZ2S1ZyM3psSzEvNXlsZSs4cFd2Zk9VclgvbktWNzd5bGE5ODVTdGYrY3BYdnZLVnIzemxLMS81eWxlKzhoV0Evd2ZkbWhtWmR5bW05d0FBTWlGcFZGaDBXRTFNT21OdmJTNWhaRzlpWlM1NGJYQUFBQUFBQUR3L2VIQmhZMnRsZENCaVpXZHBiajBpNzd1L0lpQnBaRDBpVnpWTk1FMXdRMlZvYVVoNmNtVlRlazVVWTNwcll6bGtJajgrQ2p4NE9uaHRjRzFsZEdFZ2VHMXNibk02ZUQwaVlXUnZZbVU2Ym5NNmJXVjBZUzhpSUhnNmVHMXdkR3M5SWtGa2IySmxJRmhOVUNCRGIzSmxJRFV1TUMxak1EWXdJRFl4TGpFek5EYzNOeXdnTWpBeE1DOHdNaTh4TWkweE56b3pNam93TUNBZ0lDQWdJQ0FnSWo0S0lDQWdQSEprWmpwU1JFWWdlRzFzYm5NNmNtUm1QU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUx6QXlMekl5TFhKa1ppMXplVzUwWVhndGJuTWpJajRLSUNBZ0lDQWdQSEprWmpwRVpYTmpjbWx3ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlLSUNBZ0lDQWdJQ0FnSUNBZ2VHMXNibk02ZUcxd1BTSm9kSFJ3T2k4dmJuTXVZV1J2WW1VdVkyOXRMM2hoY0M4eExqQXZJajRLSUNBZ0lDQWdJQ0FnUEhodGNEcERjbVZoZEc5eVZHOXZiRDVCWkc5aVpTQkdhWEpsZDI5eWEzTWdRMU0xSURFeExqQXVNQzQwT0RRZ1YybHVaRzkzY3p3dmVHMXdPa055WldGMGIzSlViMjlzUGdvZ0lDQWdJQ0FnSUNBOGVHMXdPa055WldGMFpVUmhkR1UrTWpBeE5DMHdPQzB3TkZReE9EbzFORG8wTkZvOEwzaHRjRHBEY21WaGRHVkVZWFJsUGdvZ0lDQWdJQ0FnSUNBOGVHMXdPazF2WkdsbWVVUmhkR1UrTWpBeE5DMHdPQzB3TkZReE9Ub3dNVG93TWxvOEwzaHRjRHBOYjJScFpubEVZWFJsUGdvZ0lDQWdJQ0E4TDNKa1pqcEVaWE5qY21sd2RHbHZiajRLSUNBZ0lDQWdQSEprWmpwRVpYTmpjbWx3ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlLSUNBZ0lDQWdJQ0FnSUNBZ2VHMXNibk02WkdNOUltaDBkSEE2THk5d2RYSnNMbTl5Wnk5a1l5OWxiR1Z0Wlc1MGN5OHhMakV2SWo0S0lDQWdJQ0FnSUNBZ1BHUmpPbVp2Y20xaGRENXBiV0ZuWlM5d2JtYzhMMlJqT21admNtMWhkRDRLSUNBZ0lDQWdQQzl5WkdZNlJHVnpZM0pwY0hScGIyNCtDaUFnSUR3dmNtUm1PbEpFUmo0S1BDOTRPbmh0Y0cxbGRHRStDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0Nqdy9lSEJoWTJ0bGRDQmxibVE5SW5jaVB6N0JGZ0ZLQUFBQVZrbEVRVlFZbFkyUndRN0FJQWhESzFmKy8wL2hYRTh1akJVekVxSThDZ1lFU1NpUENIWm1FSmFack9leGo3Z0xhbXczWWVlTDVBUGNmZDJLckFzQm9ONWZURTFkTjFMejQ1b1VIeE9xZ2V3MHZmVHI1NDV2NmNuMUlTSXBCOW9BQUFBQVNVVk9SSzVDWUlJPQ",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleXY",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQlBTVVJCVkJpVmxZOUJFb0F3Q0FNM0hmLy81WGdRMndyMFlJNndKRUcyelNaSkFraGpSZ2QxR3FkRkN5cjAxc2l4QUNVcVlJWEJBcnRyd0xudlZTS2V2WFpud0FWTXRXYmN2NjhQK3BTL0FmNTJIUmZ1cmtCMkFBQUFBRWxGVGtTdVFtQ0M",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicDrawDebug",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQUU5SlJFRlVlTnEwa01zTkFDQUlRNnRic3FCcjF2Z25haFFQTnVrRlhna3BTS0phZUZhWVFWSGg1WWdWbEFiZjFJN1E1UVRnc0pmZTBlTkJYMkFwajR4V2RxWnV4QUwzUnRJZ0dLdERGR0FBNGg0Vk01NWl5QnNBQUFBQVNVVk9SSzVDWUlJPQ",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicArrowRight",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQUQ1SlJFRlVlTnBpK1AvLy96SWdqZ1JpQmtJWVJNQUFRVTNJaWdscXdxWVlweVo4aWpFME1mNEhheUVLTENmSlpJcmRURlJvRUJYT1JNY2dRSUFCQU1xdGZ6aUhGZ2JoQUFBQUFFbEZUa1N1UW1DQw",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicWatch",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFEY1NVUkJWSGphakpBaFM4TmhHTVIvZTFGWkdNSmd3U2FyVnNPS1dSSGJtcGo4Qkg0Q205L0JabDJ3R3NSZ0U5Um1GbHcwQ0NKWUxIZG44UDF2KzZ1SUIwOTU3cmk3NStrazRiOG9BTmdGZXhmN0d2c0ZlNHA5Z2oxb3FaTVFhVDlTSXQxSE9vNTBGdWs5MG1Xa2ZoS1N6TVRUU0xlUnVnMFI2VENTSXgwMHUxSUQxb0VIU3ZsWUNMMEJYb0ZodS9NWHNZYzlxamVzQWtkQXQzS3R6cHVSSGlPOVJicUtkRmR2T0krMDFOVG96RjVuYndEakd0c0hkb0JuWUp0U251Yk9peU90Uk9wRk9xM3VGeitkdjhOZUF5YkFNcVZzQVgrSWY4SG5BTlI0d3BRazlwRnhBQUFBQUVsRlRrU3VRbUND",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicInteractive",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQndTVVJCVkJpVmpaR3hEWUF3REFSZnpNSTYyU0JTT3RaZ0tBWmdBYW9NUVU5SmRSUUprUXVjOE5MTHNuVitGeGFnanFQdEovbUtrdVphaXpxSkFiaXJvNWNjSlYyU1ZqTXJGNXpFQXpockRXL3liOURDeXdpMDhFNlJDelk0NTR4WitBUWJuRkxDTEN6ZWt3UnNneTgyUDZENlFrZUFUREtHQUFBQUFFbEZUa1N1UW1DQw",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools_GraphicCursorCross",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJaMFJWaDBRM0psWVhScGIyNGdWR2x0WlFBd05TOHlPUzh4TnJ0VlFGa0FBQUFjZEVWWWRGTnZablIzWVhKbEFFRmtiMkpsSUVacGNtVjNiM0pyY3lCRFV6Ym92TEtNQUFBQUxrbEVRVlFZbFdQOC8vOC9BeGJ3bjRHQmdSRmRrQW1iU2x4Z2tDaG1ZWUI0Qmh2QUVHZGh3T0pyaG1FVUdnQjN1Z2NXZXB2bWtRQUFBQUJKUlU1RXJrSmdnZz09",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleY",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQkdTVVJCVkJpVmZaQkpEZ0F3Q0FLbDZmKy9iRTl0RVlPY3pFaHdRV2FHNkFJd1hNYWtkVEcyYUdhYklLUTVqcllhamNBUEhZMzhFZDVSanltN2NpS2k2ekVkRFZQSEFlQm5EaFZYand5eEFBQUFBRWxGVGtTdVFtQ0M",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_GraphicVirtualInput",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQVk4QUFBQzNDQVlBQUFEcXhOS1RBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBSmNFaFpjd0FBRHNNQUFBN0RBY2R2cUdRQUFJLzRTVVJCVkhoZTdWMEhlQlRWMm9aQVFocEo2RFVKRUZJZ0NUV0IwRU12Z3ZUUWV4VlJxaUJGQVJYcjlkcTc2RlV2WEFWQkZPV2lRRUxvSllRV0NFMUV4UUplRkZFUkNQRDkzM3QyWmptemV6YVp0TjBOZjg3enZNOU9kcy9NZWVma20vZWRjNzRwSllqSUZpV3RlT1MxYUVhY2t4Rmw0R0RQenhaRmw2OTd3TUFQeGZZN2hyVithbXBxOUpZdFcrS2NDVzR6ejMxODh1VEphRWFjay9IL0tpWWVlWXFpSDNtUzRweUtweWpQZlZ6VStMb0pEUHhFMmVBWEthQlZBRHhvMFN1ejZPR1hMOURDNTRubVA4ZjRwNVBBYlMxOGdVVGJpMTZaSkxob3ZDU2VPdXo1TG5tRkJCWTdDWHA3S3I3TmU1WUFlTm1lcndXbE5KUjJNdlIyZFI0V3Zsci9va3lkT2xWQS93MzFVbEpTWmlVbkoxOUlUdDVNeWNtYm5BeTBtWHlCT1JqNldPSnAxOGZIangrZnhiaVFtWG1NamgwNzZsU2dUYlROTVBCZHVuUnBDWUNYN2ZocWNLdVkwUHNYcFZiNEV3TDZiNmkzNkhHYTlmQlN1c0NmeEovMDhHTk9BcmVsdFltMkRYMnM4MndZWjRIK1Blcm9mQjk5aWdoZ1FYY0s5TFpVZkJuV3ZyWHRYdzF1RlJNNlQxRWs0N0FRZmZpbGoyZ0cvMmNTeHhIVjcwOFUxYys1UUp1ZEpoRE5RblF3bDlzN0lBU09QKzM1TG42WmFESkgxTkNIaUlZc2RDN1E1aFRtdW9RNTJQSzliUjYzK1ZyK01aNE1MdzFsbkF5OVhYRFFnOFRhdnlpU2NRak9MTm9mYmRyMEpYMzAwVWYwM252djBiLys5UytuQW0ydVdyV1NObTM2aXNBRm5EUnVRdUQ0MDhDWFJmdWpJMGNPMGJadHFiUng0MWYwMVZmT0JkcmN2bjBiWldRY2hva1krRXJtVVNSaVFqWVAvSzE5WDRxRjhLUDVTNGlTUmhGMXZwc1AyVjdPQmRvY01wWm93U05DbEExOURLNlNjVmo1TG4yR1pXVStTOFUwb2tuM094ZG9jemEzRFE0cXZyYjl5M0RibUxDYUIvN1F2aXhGaTE0ZVRiT2ZKR3FZcEJaMlp3SWN3QVdjSk9JYWJ2T0ZjWXg0bUdqd0F0Y0NITUFsTzc2V2Z3VCtNZDVkdW5TcEhSRVIwZHJaQ0FzTGE5V3paODhRY05DNGdKT1ZyMjFNc0ZpUDNyejVLL3JnZy9lVnd1NU1nQU80Z0JPNGFSd05mY3hpUFJxaXZXblRKcVd3T3hQZ29CbUlMVjk4Q3I2TUloY1RpNStnMFF0WnRIdmdQRThoN000RU9DeDhsQTg5NWdSdUdrZERUT0MzeDFpMDc1MUpOUEUrMXdJY1lDRFo4V1VVaVpoQVVPaUV2V2orODRlb3h6MUVrWDNkQTcybThLbkY4enNFTnd0SEdSYStVNTlRaTdrcmNEK2JuWm92bkJ2ZmVWZXJWcTFQNmRLbDk2RHJPMVlPb2I0MTZqb1Y3U3JWeElRbE1ZZHR3Y0hCWGNGSjR3YWVIcll4a1p5Y2ZHajE2bytWWXU0S3JGbXpHbE5ZRG1QaTJMRmpoM2J1M0s0VWMxZGcxNjRkeEp4a3ZySkEyTVZFZ3dZTktDRWh3YW1JaVluSlZVeXdjUndhTVpHb0k0dTNPMkEwUzlaRGo1RERtQURmT1F2Vll1NEtQTWpubVE3NEtuV2lXdlhXRkJMYXphbW9VaTBoeDVoQVVJZ09admhjZitEcExISEdyeEp5VnlCdUtQMDE2OG0vbVp0T0hBY2NPaGhPYU9FNzRpRVdiaDRQdWdQR0xITElsOCtXL2IyOXZkOUNsNy9icWlkZG5jMm5Id3VlSjVyM0hPT2ZUZ0szdGVBRjBmYUxjWjFGY1BqNStURUp3VmVjV2RqR3hJWU5HN0krK09BRHBaQzdBaXRXTEtjdnZ2akNZVXdjUG53NGEvTm0xNDg2ZEtTa0pGTjZlcnJPVitlS1QwTk1USnMyamY3NzMvOXErUjFWM3Fjd3NWbTBQWEhpUkZNeE1mZmg2MW5kKzdGdzkzUVA5R0xKZW1EQlh3NWpBbnp2bmM3Q1BkVTljTjhzeDN6bG1Halg4VVdhL2VEdjlOQ1NHN1J3eVUxYXVOaEo0TFllZXVTR2FMdEY2NlVPWXdKQmdUKzhmWHg4bnFMWi95Q0tnbkQzY1E4MFNxSkw5ejFHL3Y3K2p6RkhId2FDUVFTRWxTOUVlNUNiWVBoRDJmRjlFZDE5cUQrUHBxYTdPcWZFcDQwem5oQmN3RW5qS3dMRE5pWTJidHlvRkhGWEFVYTJkdTFhaHpGeDlPaFJwWWk3Q3BzM2I2YmR1M2ZiOGtWZlcyUGlsVmRlb1kwYmtWUDYwTVU1cFM4Rmw1eGlZaTZmT1dQS1NDWGtyZ0NtcnFiUHZlUXdKc0FYWi93VFdMamRBVlBZeUxMaEsySmk4UEFkTk8vaFc1UTAwb1U1cFRGOHZybm9sdUNpaWdrRWhWZEVSRVE4TDk2Z21VK3JSZHhWNEZIUW4xTWZCZkViVFpzMmpVWG5BdlhyMTI5bTVUdG9udnRnMkVMbSs1Z2QzOGpJeUJibzZpY2J0aVdhNlVZNXBWbFBDazRTWHk5ZU5zUUVCRkFsT0s0QzhoNmZmdnFwdzVqSXlNaFFpcmlyZ0x6SDNyMTdaYjQ0K0h4alltSmFsaXhaa2thT0hDbnlPTzZVVXdJbmlhOWRUTXpod1g2SHU5d0hHQVZObi9PSDRKeVFrTkFBOFFEb01RRytFKzUxSDl3ekRlWmh6emNxS2tyb1JGeXpCVFNmUmR0ZGNrcmdBazdnSzhjRWdvSkhTWlpoRWsxallWT0p1S3ZBQW5mMW5rZEFtbng5ZmQ5Z3JuNE1meDVDdlkwRFQvQlZpYmlyd09aeDlWNWhkZ2ErZkRheEVueC9HYnVBSTkyTmNrbzk3NlZ6SXg0UWZEa0dYbWV1WlhqWkVCTmZmdm1sVW1qeUFwelZBcXJmekFJQ3QyN2RPb2N4Y2VUSUVhV0k1d1ZmZlBHRmdPbzNzNEI1N04rL1grYnJ5eWlyeHdTdVlITzNuQkpHZCtEcktDWm1jeGlyUk54VmdIbE1lK0FLb1Q4NURxd3h3ZjM5dHM1M1BJdTJ1d0JYWGsyYlk4KzNUSmt5SzhGMzRwVHZhTVFFSGxXeGVMc0RSazhpR2pQaHBGMU1JQ2g4UER3OHpvckYrNWF5cVBUT0YwN1g2VVI3UTl0WmNhUldlMlU5VTJnNGtLNVBXaVJJTThkTTVob0FsQzVkK2l3Nlh2Qk5lakJmT04xak11M3ROTXFLSTEzSEtldVp3dEFGZEgzS0VoWGZuOEQzeGd3ZUtibFpUdW5hZlU4SXZxVktsVHFCV09CbFEweHMyTEJCS1RLNXhUUFBQRVB6NTgrbkJRc1c1TXRBWlBOUXhjVGh3NGVWSXA1YnJGbXpodDUvLzMyQi9CaUliQjRhMzdMZzYrbnBLV0lDL2V1R09hVnNZMkltbnllcFJOd1JFdHBsVWx5cnZWYTA2bmhPV2E5bGg3T202dG1pTzRmeWZiUC9GbUxNY1dDTkNabXZTc1FkWWNEUVRPbzljSzhWUTBhZlU5WWJQUEtzcVhxMmdIbmMvNENTNzAvZ08rdkJhOElRVlZOMHJnQnlTdE1mK05NdUpoQVV2dnh4UXl4T2VaUW9na1U3SC9qNjJiZnA0czc5VnB6NzZITzZFczRNRkhWelJBTTJqL0VQQ2RMYzBiOHgxMENBZCtBR09sN3dWWWw0THZEMXU2dm80b0dqVnB4YnY0V3U5Sit0ckpzallCNlRGaHY0Wm1Sa2xHZStOd1hmV2U2WFU3cCszK002MzB0NlVNZ3hnVVNxU21SeWc2VkxsOUtERHo0b0RBUll1SENoc3A0WndEdysrK3d6aHpGeDZOQWhwWWpuQmhnTm9DMFlDQUJ4VjlVekE1aEhXbHFhekRjZ016T3pnaDRUcUdPN2o2NEU5bFUzRDBjeE1YMHVVZnNlNXZIUjZyOXBYOXBGS3g1KzVDZ2xkczh5MUduWDlRbzkvYy9NMi9YMi8wcFAvdk9tb1k0amRPTlF2bmVtVll5dE1TSHpIVGZGUFA3NzFkOTA2UEJGSy83NXdsRWFNem5MVUdmMHhDdjArbHVadCtzZCtaWGVmdSttb1k0ajRMNlBxYk9NZktFVHpQVW0rRDR3NzZhWU1sSUp1U3ZRQTlPQ3M2L1l4WVFlRk9JSG1yUkVMZUltY1Q2c0cyWDkvZ2R2MGxqT3RSbXVySjhqWUI1akYrcWtzZUVnZ0E4ODBmR0M3MENPakR6aS9OMzNVZFlmZndxT2NqbkhiYXJxNTRnaDg5anNIamJ3WGJKa1NiQ1Y3M1QzeXlsZG55SnlOT0NIamtBc0dHSmkvZnIxU3BFeGk4Y2VlNHdlZnZoaE1kcDQ2YVdYNk9XWFg2YlhYMzlkV2RjTVlCNWF6a01aRXdjUEhyUVQ4TndBeHZIdmYvOWJDQ2hHT0o5Ly9ya3dVRlZkTTRCNTdOdTN6MkZNRk9TMFlFRUEvWXQ5MXZncVkrTCtCOVFpN2dneitOQ1F5K1hMV2RTcDV4bERuYnNIWkdpL1dzb2ZmOXlpWGdPTjIzR0VyaHpLOTB5M2lyRTFKbVMrS2hGM2hLZWZFeFNzNVk4L3MyajBoRE9HT2hQdk5mTDk2NjliNGlvcXVZNGpJSGsvWllhUjc2SkZpMEowdnJNZXZLa2NZYmtLR05uZFA4dHFIdGFZTUpvSEN4OUYzSjFuZkR2aElmU2pYVG16K0VWbC9Sd1JPNEN1ajVvbmt6YWFCL2dPbkpObmZMdjRKY0hQdHB4NTVRTmwvUnd4NUVHNlBrWWtscXg4V1NoQ3JYeHhINGhLeEYwRm1NZGtTMDVKRGdydFUzd1BFVldKakJub3hnSERnSEhBUU41ODgwMXhOcStxYndZUU4xeHRKWEUyeE1TQkF3ZVVJbTRHdW5GQVBHRWMySGRNSyszY3VWTlozd3lraExreUpncHFXaEFvNkp5U281aVl5aUxadm52dXNPcVRtN3lKMitXMU4wOVJ1eTVYeEcrdE8xMms1QzNudFY4czVhRkgxTnRSb1N1ZlowNjYzeXJHMXBpUStZNjlKM2Y0Y3BPUjd3ZkxUOUdvQ1ZmRWI4UEdYcVFkdTR4OFgzcGR2UjBWY01YVjVHbEd2b3NYTDY2bDg1MHh4LzNNWStxTW5NeGpESjl4cTBUY0JMTENlNGtwS2xXNW5IR1Nyb1F6QzhWNjJRTG1NWHl1VE5wb0h1QTdnRVU3RDhqcVA1dk9yVThSL0d6TDVaUGYwSlcrTTVYclpZdkJiQjRqaldZM2QrN2NPbGErOXo3T29zMlJuZzhVZUU1cGduV2F6Um9VMnFmNEhrS3FFcG1jb0J2SHE2KythZ1dNQTZPR0R6LzhVTG1PR1VEY1B2bmtFNGN4a1o2ZXJoVHhuQ0NQT0hSQTJIR1o3ZGF0VzVYcm1BSE1ZOCtlUFE1am9pQ21CWUdDekNsSjA0TEttSmd5Z3lpUlJUczM2RG5BTXBxUVN5OGViZUMzQ1ZPTVovRmJkOXl3V3o4N2RPRlFuampWc1htQTc5akp1Y05VWGdlakNibE11Q2REL0Radm9aSHYvdlFiZHV0bkIxeHhOZkUrSTk4NWMrYUU2WHluemM2ZGVSUjJUcWtibThlVWFUbVpCd3NmUmZUS0UzNXN4QzFJNWNiR25kcVNwWnh1UFVTNVhyYUk3VWZYaDh5V1NSdk5BM3dIOEpnMEQvZ3hpYzFCS2pkMkg5YVdMT1gwU0I1cks5YkxGb1Btc3RuTk1mQTFtTWRrTjh3cGpiWG1sS3hCb1gySzczRVdxaEtaN0lBY2g2MXh2UEhHRzJKYksxZXVGRWxvMVhwbUFISER5RVhpYklnSkpLZFZJcDRkVk1ZQlVjZUlZZHUyYlpTY25LeGN6d3hnSGpBZ21hOGNFL21kRmdRS09xY2tUUXNxWTJMU05MV0k1d1E4MGtRdW0zbTBFZC82Q0IwL2NWbjdCZ1p6a3dhUFZxL3ZDRENQY2ZjNk5nL3dIY09pblZ1ODlKcWdaQzBZYmZSSk9rS252NzdOOTgrL2J0SURDOVRyTzRJbGNlN1lQTzZiYVM3WG82T3djMHFZRnB4OFgwN21NWXdGazBjUWVjSFpXVStnTDI4WDNBUW5sWE52ZmFoY0wxdkVzSG13eUlPYlJ0cG9IdUNMNUhZZWNQYnB0d1F2YTdsbnFiWmdLZWRXclZldWx5MlM1dGlabmNFOEpyaFpUaW1XeldPME5hZGtEUXJ0VTN5UHMxQ1Z5RGdDaEd6Um9rVWlyd0hUZU8yMTEyalpzbVZpQktNYlIzNXVoTXZKUEpDY1ZvbTRJOEE0bGk5Zkxzd0NwZ0V4eC9leWNlQkdQOXYxekFMbXNXdlhMb2N4Z1RaVisya1doWkZUc3BrV3RJdUpDZmV4R0hYTEc5SVBHcWVEMXE0N3B5MVpDcVovVk90bEI5elFOdVlleCtZQnZyamNOQzg0ZHR6STk4dU5ScjRyVnFyWHl3N0llNHkxNFN1Yng3M1RjMmNlenNncFRidzNKL01ZekFLSXM5aGM0a3JkN25UK3Yxc0VLWlJyUjArTDcvLytjcnYyRGRHVjczNmt5eXgrdHV0bWk1aStkTDMvTkptMDBUekFWeVhpT2VCS24rbDBmdXNld1F2bDJ0ZmZpZS8vM25sUSs0YjUvblNCTHZlKzMyN2RiQUh6U0pwaDRHc3dqN0Z1bUZNYVlaaG1zeE1LQ0lsS1pGUjQ4c2tucmNZQjA4Q25iQnd3amZ5TU9nQ0kyOGNmZit3d0ppRDZLaEZYWWRXcVZWYmpnR25vaVhIZE9HQWFNQThZZ08yNlpvRjFkK3l3M0tHcmlvbThUZ3NDaFpWVHNwa1d0SXNKaUo5S3hNMWcwQ2dXTng1ZHFFcjZ3UnZLZFhJQ3pHUFVSTWZtQWI2akorWU5zK2RaUmhlcWNpenpobktkbkREdUh2NmM1Tmc4N3JtZnpZTkhWTGxCWWVlVUprekp5VHdHekZTTGVBNDQxMmFZSUtTWDY0KzlJYjYvT2NkNDJjSTMzY2ZiclpzdFlCNTk3cE5KRzgwRGZQdk55alhPalhwUThOSEw5YmZYaU85dnZyUkMrOFpTdnBtOHlHN2RiREh3QWJyZWI3cUJyOEU4UnJsaFRtbW9JYWRrSnhRUUVwWElxUERJSTQ4STA4QVVsUTZZRDg3dThidHVIUGtkZVVEMEpjNkdtRUIrUVNYaUt2em5QLyt4bW9ZT1RESEJPQ0Q2dW5Ia2QrU1JuWG5rWlZvUUtNeWNrczNJemk0bU1QV2lFbkd6ZVBjRDNwcWk1TldVWUI0anhqczJEL0FkeGFLZFYzenltYUJuVng1NlZGMC9KeUJwUG5LQ1kvT1lPUFdtM2RSY1RpanNuTkxZeVRtWlI5OXBMTm9zUXJuRW1jVXZDRkxXa2pqVzhsdlRKTzBMUzdGTVhkbXY3eERSZmVoNnIzdGwwa2J6QU45K01KRGM0Y3hMN3drKzFqTDVNY3R2SXhab1gxakt1WlZmMksyYkxRYk9wdXU5aldabk1JL2hicGhUR21TWVpyTVRpdHlleGNyR0FUejk5Tk9FMFFjTVE0WnFYVE9BdUdFVUkzRTJ4QVRFWHlYaUtrRFlaZU1BVnE5ZUxYNkRZY2l3WGRjczBNYjI3ZHNkeGtSdXB3VUJKK2VVN0dKaUpBdGcyNjU1UjhzT0Y4WFVpbHpXcnZ1Uno1Q3ZLT3ZuQk53VE1YU3NZL01BMzFFVDhvN0JJeStLeTNYbDh1WEdIMm40bUN2Sytqa0JTZk5oNHh5YngvZ3B1VGNQb0RCelNyaXZCZHprbURDYXg5MVRpZXF5YU9jQ1Y4SzY4Wmt2YmpxMGxHdEhUeGwrRjM5ckJWTlg1MnQzTnZ5ZUxlcXplZlNZTEpNMm1nZjQ0cXFvWE9ESzNmZlQ1Wk5uQkIrVWE2ZS9NL3d1L3RiS2xSL1AwM2x1WC80OVd3eGc4K2hwZWRpZ3p0ZGdIa1BjTUtmRW96ZUpyNTFRUUV4VklxTUNoQkRDaFROZ2lCaytIMy84Y1pIQWhZSG85ZDU5OTEzRGVya0J4QTBqR1lteklTYVFYMUNKdUFvWXBXQjBnYXVxWUJ6NGhQanFOd1ZDK0hYWXJtc1dXQmNqR1ptdkhCTVlLYWoyMHhHY2tWUEMvMXppYXhjVHc4ZXJSZHdNMm5USm9uR1REL0htakFWbWNsZmZROHAxY2tLbm5pendveDJiQi9pT1pOSE9DMGFNeTZJSDV0bnpoWm1NbVhoSXVVNU93RWhveUJqSDVqRjI4azNsQ01zTUNpdW5OSEo4VHVaeEY0OGJWU0tlRGM2MjRqTmVxV1F1K2lkdHFON01Ddnd0bDI4bjhObTlZanRLd0R5NldoNFRyWkUybWdmNDlwMlJLNXdkOFlEZ29aZk1GOTZoRFMzN1dZRy81Zkx0d3p5cVVteEhpZjR6N2N6T1lCNUpzMW0wYmFibVRLQlFjMHI5RERrbE82RkFma0VsTWlvZ2Y0QnBJSWpYVzIrOVpUVVE1RUllZXVnaGc0SGtGUkEzVE10SW5BMHhrWnQ3TXJaczJTSVM3QmhaNEdZOTNVQXdMWWFycjFDbklNd0RsL3JLZk9XWUtBSTVKYnVZR0RxV1JidEwzdENoMnhuNjRZY3J2RG43c2pmdElyVklQSzljTHp0MFpLbElHdW5ZUE1CM0pBd2tEeGcrNWd6OS9MT2E3OEZERnlscDJIbmxldGxoekNUa2ZoeWJ4K2dKZVRlUFFza3A4WGttUmxuZ0pzZUUwVHk2OFY3VjdaRXJuSDNXNXFxbEhNcVBtTGRYYkVlSityM3BlcWR4TW1tamVZQnZuK201d3RsM1Znb2Vac3VQWHlRcnQ2TkV2eGxzZGhNTWZBM213ZWFpRlBFY1VHZzVwV2cyRCtNMG01MVFRSlJVSXFQQ08rKzhReXRXckRBWUNNd0RlT0tKSjZ3amtQeU1QQ0NPYUVQaWJJZ0o1QmRVSXE0Q0hqZWZtcHBxTUJDWWgyNGc4Z2pFZGwyendMcG9RK1lyeDBRUnlDblp4UVFFcWcyTGRtN1Jzc05sZXVXTjJ6TVJLTGJ6OU5ObUg2TFduYk9VNnpzQzdrVVlNTXl4ZVlEdkNCNm81eGFEUjE2bTl6NHc4clc5OTJQUkk0ZFlXTE9VNnp2Q3FJbk1kN2hqOHhneEx1L21BUlI0VG9uTlk4aW9uTXlqTTR1UFNzUWQ0SEtkTHVLTU56Y2w2L2ZMZEw1MkorWDI3RkQvYnJyZVliUk0ybWdlNEtzU2NRZTQzSE9LbUlyS1RjSGpTODUzNS8rMlludDJnSGwwR212Z2F6Q1BQbTZZVStwcHlDblpDWVV1VEdZQVU0Q0I2RmN3UWN6ZWZ2dHRZU0lBRENTL0k1RDMzMzlQYkYvaWJJZ0o1QmRVSXE0Q2hCMEdvbzlBOVBzNVlDS0FQQUxKSzlBR3RpL3psV01pTjlPQ2dHd2NRR0hrbEd5bUJlMWlZdUFJdFlqbmhFRWpqSW5iSDMrNktiWWxGMHhmSlhZOXFWemZFV0FlL1lZNk5nKzBvUkx4bkRCMW1wSHZoVjl1MmwwVys4Y2ZXVFJrNUVubCtvNkF2RWQvRzc2eWVRd2JjMU01UFdjV0JaMVR3dk90Qm8zSXlUemFzeWpWN1c0YTMzVGorbmtvWDQ5L1VMazlPOVRyUmRmYmluY0w2S1NONWdHK0VHU1QrR2JpUXRGK2JzdlhELzFUdVQwNzlKdE8xeE9OWm1jd2oxNzM4WDV4cE9jQ2haNVQ2bjZQWFZCb24rTDczRnk1QS9QUW9Sc0l6dDUxQThFbmNpQ1l0MWV0YndZd0R3aTZ4TmtRRThndnFFUmNCUWk3RHBXQjRCTWpMNGlwdkY1dUFITktTVWx4R0JPNW1SWjBWazdKWmxyUUxpYjY4MEM0RFlkWmJ0Q3N6Vmt4TFNXWCsyZGJmbHYybm5HYTVmM2xaNmxGNGtXN2JUaENCejdQN0RQWXNYbUE3M0FXN2R5Zzc2Q3pZbHBLTGt1ZnR2eTJlcTJSNzhkcnpsTFM4SXQyMjNBRTVEMzZEbkZzSGtORzVkMDhDaU9uQlBOSUdwYVRlYlRsOFYwWWk3WkpmUGZtZndReGErR3pXRlU5YW9kM3ZkOHVtTC9QcXNQaklWVmRHVkZzSHEyR3k2U041Z0crdUJmREpMNzdjSjFvMzFxbVA2V3NSeE1XYXhVczVYenFic3BDY2w1VlYwYmZhWFM5amRIc0RPYlJ3dzF6U2wwTU9TVTdvY0RsckNxUlVRR2pEdmxUdjJ0Yk5oQWd2K2FCN1VtY0RUR0JLU0tWaUtzQVlkZEhIL2lFeU9NaGhyWWprUHlhQjZiRVpMNXlUR0IwbzlwUEZaeVZVOEwvWE9KckZ4TjlPU1JiczJpYlJjdU9WK2lwWjIrZkFLR2ticjloL1IyUHY3Q2RweDg3Q2ROWDl0dFNBVGV5M1ozazJEekFkemlmWjVvRnBtaGVmZDNJZDkvK0c5YmY4U3BaMjNzL1pzODlaTmhHZGtEZW8vY2d4K2FSTklMTmcwZFVlVUZoNVpUNkQ4M0pQRnJ4K0U0bDRncWNyOVZSVEVIcEpldjduNVQxZEZ5VnpwQlJmb3p0cGF4bkFNd2pZYWhNMm1nZTRLc1NjUVhPZDV0Z2VJSnUxcysvS092cHVIcjZXNjJtcGZ6WTM2UjUySmlkd1R5NnVtRk9xYU1ocDJRbkZNZ3ZxRVJHQlhua0FRT1JSeURZRGd3RXlFMGV4Ull3RDV4OVM1d05NWUVSaEVyRVZaQkhIcnFCNkNNUTJZUnlNNXF4aGI1ZG1hOGNFMFVncDJRWEU3MEhzV2gzTW84ZWZUSU0weWd3aWdFOEdwRHI0S3hlTHVkWUFPTmFuVGJVY1FUY3lOWnpnR1B6QU45aFk4eGp6UGdNTVIybGx6Ly92RW5USHpEV2VlTnQ3VWV0L1BUekZlbzk0TFNoamlOZzZxclhRTWZtTVdEWVRidXBPVE1vekp4UzM4RTVtVWNML28vaWloMFR1RFRSZUxmejllZmZWOWJUSVg2WHl1K3orYXhmVWMrQXFKNTB2ZGxnbWJUUlBNRDM3dnRNNGRLU1YwUzdlcm0rbkVWV1VVK0grRjBxdi8vakhXVTlBL3JjVDlkYkdNM09ZQjZkZUx5cUVuRUhjRXBPcWYwWXU2RFFQc1gzRUgrVnlLZ0FjZE9oR3dpQUVZaCtPU3hHSW5tNXQwRUh6QVBDS1hFMnhBUkdEeW9SVndIQ3JrTTNFQURid0RPeVlDSVlpZVRteGtOYjZOdVUrY294VVFSeVNuWXhnY2RhcUVSY2hWWWRzeWhsS3paenV5eDdUMTMzNUNuajJmd2J5eTRxNjlrQzV0R2puMlB6QUYrVmlLc3dkRlFXN2Q1ajVMdDZyYnJ1TjJlTmZQL3owVVZsUFZ2QVBPN3E3OWc4K2czSm0za1VaazZwZDFKTzVzRkNyUlJ4RlNZdklYcmhnOXRvaHlrdlJUMGQrRjJ1ai9WVjlXVEFQSm9PbEVrYnpRTjhWU0t1d3VOOEJyOWkvVzJNWDZTdXB3Ty95L1d4dnFxZURCNTlYRzgyeU1EWFlCN3VuMU95RXdvSXYwcGtWTkROQXRDRkRrS0dUd2crNXZlUklNYmZxdlhOQU9LR1Q0bXpJU2IwS1NjejBJVWQwTTFEL3g1VFRiaHlDOUMvend2MGRXVytja3dVZ1p5U1hVemMxVjh0NGlyZ1JVMHdDeG1xZWdBdVlUVmJWd2JNbzFzZngrWUJ2a05adE0wQUR5MzhtTTFDaHFvZU1JOGx3bXhkR2NoN2RPL3IyRHo2Sk4xUzVuYXlRMkhubEhxeDJZR2JIQk5HODhEVk95b1JkeFZnSG8zN3k2U041Z0crS2hGM0ZXQWVObVpuTUkrMm8zbS9PTkpOd2prNXBSRjJRYUY5aXU4aFRpcVJjUlVnYmhCUGliTWhKdkp6TjNoaEFPYUJ2SW5NVjQ2SklwQlRzb3NKdk4raEZZdTJ1MERjQlgyM1kvTUEzNkY4aUxnTGtQZm8ydHV4ZWZRYWNNdVEwOGtKenNncDlXQ3pBemM1Sm96bTBYZ0FpMHBYOTBIVVhYUzlZVitadE5FOHdCZUpiSGRCNzZsMlptY3dqMVlqZWI5c0JOd0JuSmRUR21ZWEZOcW4rQjVUSXlxUmNSVWdiaEJQaWJNaEpqQ0NVSW00cXdEendKU2R6RmVPaVNLUVU3S0xDVHdvcjFWSDkwRTdsb3JPUFIyYkIvaXFSTnhWZ0hsMDd1WFlQTzdxeCtiQnBtZ1d6c2dwZFdPekF6YzVKb3ptMGFBZlVUak9XRzFFM0ZXb3grWVIwMXNtYlRRUDhNVVpmeThXYm5kQW4vdm9lZ09qMlJuTXcvMXpTblpDZ2VrbVFDVTByZ0N1QnNySlBEWnVWQXU1SzdCcFUvYm1VUVJ5U25ZeGdjZFZ0R0ZSVVFtNUs1RElvZHp4THNmbUFiNFE3U0dqM0FNajJEdzYyWmlkYkI3ZCs1ZzNENmZrbExoL3U3RFpnWnNjRTRhZ3VGYVB6MVliY0UvWFllRjJCelRxUTFkNDlBRnVHbW1EVUZ5TDdVUFUvMzRXN252ZEE4emxTcXpSN0F6bTBXeUlXc1JWY0ZwT0tja3VLT1NZd0puczh1WG04eDZGalJVci9pMnVMcEk0RzJJQ0FwcWM3RDVUVnlrcHllTHhJVEpmT1NhS1FFN0pMaVlTdS84bG5pZWxFbkpYQUNPTGR0MStGLzJwTW8vMlBmNFNOK2FwaE53VkdETVJaL05HdnJKNWRPMXQzanlja1ZPQ09XTmtCMjV5VEJpQzR1ZGFIZGhpeGhCRjlGQ0x1VE1SY1JkSHhUajZOaVJSSm0wUWlwOWhkSU5taUROK3BaZzdFMzJadzVDWjlHMkRuZ2ErQnZOb09rZ3Q0cTZDeUNrTnNBc0tPU2FlZSs0NUZxU1AzV0wwQVE1cjFud3M3cXFXT0J0aUFsY3ZiZCsrTFY5SjdvSUNPSUNMVFFMYUVCTkZJS2RrRnhQTjI1MFF6NHZDbFRndFdieGRDZHpFTm13Y1VYenJnNkkvVmViUnV0TUptblRmTFJvKzloYUx0MnN4Z2psTW5uYUxXbll3OHBYTm8zT3ZXOHJjanF1QVI1UmdaQWR1Y2t3WWdtSnJZQXpkaUdUUjdzWTIzWXlGTG9iRnVUNlBScHdKdE5tYzIrNDJucm4wcEs4Q28yWFNCcUhZR3QrVGJtQzBOR29lMGZDNVJBUHdpQkRjNmUxRW9NM2hEd29PNFBKVmsrNEd2ck5temFwdE5ZL0dBMW0wT2RyZEJTS24xTTh1S09TWVlQN2k3SGJ0MmpYaXlpQUlJUVRQbVVDYk1BVThCd3BjcGsxei9JS3dmL3pqSDJMMHNXUEhkbkhQQmhMb21NcHlKdEJtYXVvV3dRRmNjQVdVekZlT2lTS1FVN0tMaWZENnI3Tm9YNk1SNDRsNjlyZGNqWU41Y1dmQ2NnV1E1YkxYZHQyeUtLemVTNkkvVmViUnVQbnJYT2NhM1RmckZwdklUUjZGM0tTUjQ1MEx0SW0ycHpJSDhHMFliK1E3WThhTU9qcmZUbmV4ZWJBeHVndVFVK3JRUFFmejJPQVhTZWtWbWxBV0x1UHNpWHZvcHhEZGZRLy9sNXdFdE5XSDI3eHJBbDJyMjQzMk01ZlZ2dUV5YVlOUWJHamVrOUtiOUtRc0dON1FXVVQzTENMQ0M1d21QZXdjb0szSi9EbDRKbDFqRHZ1WnkrcTRiZ2EraXhZdENyR2FSME9PZG5mTEtjWDJzUXNLT1NhbVRwMUtDeFlzRUZmeHdFRFdyZnVNUHZ2c1U4WmFKd0Z0ZmNadHJ4YlRWZUF5Y2FMakp5M2pTaU84VVE4MzB1M2N1WjEyNzk0bEh0UHVUS0JOdEkzOEE5N3loM3N2Wkw3ejU4OFA4ZkR3RUh3eG1uS0hVWjBPUlU3SkxpWnFoVDlCOVJwOXpDT1BxK0sxcXVQNWtOWGZ6KzBzb00xUjNIYnJ6bjlSdllZcktTUnNrZWhQbFhrMGpIdUM0bHAreklaM2xhWk12MFVQekw5SnN4bXo1amtIYUF1NGg5dHUyK1V2NXJLU1lob2IrUzVjdURCVTU5dWgreTIzeXlrbGRsV2Jodysrd09KSHZuV0ZnV3dKaUthdnE3YWdYME02ME8raEhaMktpeUh0UmR2Slplc0xMc3Q5dzNUU3Z6TFhBSUNGNGs5MC9FZE51Z2dEMmNJamtLOWo3NkpmbzNyUTcwN0d4WG85Uk52SnpBRmNsamZ1SlBNTlpERXB6M3l2Z2U5Vk44d3AvUlZsbldZRFh4OWVOc1RFdUhIamhJSHdtWkU0ZzM3eHhSZUZJRG9UYUJOdFQ1OCtYWEFaTThaNlk2TmRUTEF3Q3dQQjFCYW1YNUFId011Tm5BazhjZ1J0UC9YVVU0TEwzTG5XdHpYYXhRUk0yZDF5U25qc2ljVFhMaWFDNnl3VUJoSlc3MlZxMUh3SE5XLzNQU1VrL3VSVU5HLzNyV2k3VHRRTGdrdHc3WG5nQ3pHMnhvVE9ON3JSUW1FZ2padTlUTTNiN3FDV0hiOW5VZnpKcVdqWjRWdlJkcU5tTHdndTlSc1krQWJ1M0xtelBQOTlEWHpiZFA3RHZYSktMRm10TzEyeWl3a0VoVGZ2UUFZV0gvYXVJUVRibmZCQW1XcUN0S2VuSjE0NlhoYnc4dkxLUU1jL0hCRW5CTnVkOEVCWUl3UGZBd2NPQk9sOGo0VzJkYnVjMHY3Z1ZqSmZiMTQyeEVTUEhqMkVZTHNUT25mdTdEQW1oZzBiSmdUYm5UQmdnQ1d2eEJ6Qk55QXRMUzBRZlBFZFhpZnJiamtsdktWUTZsKzdtS2hjYmJnUWJIZEN4YXBKUW95OXZiMnRNY0Y4ajRKdnJiRGhRckRkQ1NHMWpYelQwOU9EZEw1TkV2YlJrTkh1azFOQ2ZxdGhNOHRyQmVTWVFGQ1U4ZlB6ZXgyTDFUMjg2QlBmY0tXSXV3S2YrVVZRVGVZRWJnRUJBZjlncm40QUw3OGgrSHI3MFNkeDNaUWk3Z3A4RnQrZGFucjdxL2lLL20zcEhVUlpmS1pQM2QwZ3A4UWNia1Qxb25iZTVRVGZzbVhMUG9WWTRHVkRUQVFHQnRLa1NaT1VJdTRLVEo0OG1jcVZzM0JXeFVTRkNoWEVDNU5VSXU0S0xGNjhtQ3BXckNqejlXZjRjbisvaHUvQ3dzTEVGVzN1bEZPS2pJek1OaVk4UFN0UVNOZ1NwWWk3QXFGMUh5RlByMHFDTThmR000Z0h3Ti9mWC9BdFU2WUN4VFpab2hSeFZ5QzJ5U05VeHRzeDM3SUJjZFM2NDFWeFA0aXJjMHJnMExyVGRRb0lhbUVYRXdnS3o5RFEwSzRlSGg3ZjQ4K0VVdjRpejZBU2MyY0NVMmpOU3ZrSnd1Qld0MjdkVHN6VkcrQURycHVWYjdrcUlzK2dFbk5uQWxOb3pZSXFxL2o2UkVSRUpQSjNGL0RiQXdHMTZIbzQvMmQ2VGlUcWU2OXJja3JjOXRYdzdqUWpJTVRLdDM3OStzMFFDL3kzWFV6VXJsMWI1QmxVWXU1TVlBcXRWcTFhT2NaRXZYcjFSSjVCSmViT0JLYlFJalVoQnJmdzhQRE9pQWZ3bFdPaWE5ZXVicEZUd25TVlBxb0QzK3hpd3Rldm5zZ3pxTVRjbWNBVW1vOWZsREltNnRTcFk0MkpnS0I2SXMrZ0VuTm5BbE5vQVlGS3ZqNGNIOWFZcUZaekNyWHM4TGQ0ZlB0NFBteHhtYTB6TVk3YkhEbmhGclZvL3dkVnJUbEpHUk1JaXRKOFFEYm5zNk5KUEl5NmhLOHFsQ3hObzd3cTByUGVJZlNTVDZoVDhZeDNzR2c3c0dRcFFaZzVYYTVjdWZJNFB0amltS3NYd0IyZVlPRHI1VTJqYWtiU3MvVmIwa3N4Ylp5S1orcTFFRzBIZWxwR1NDcStyVnExQ21PK1UvaTNLNmdUNCtsUG4xVnVST2RDRXVsOGFBZW40anR1RTIySGxmWXg4RzNkdW5VSVlvRy9VOFlFbjNWU1FrSUM5ZS9mbjVLU2tweUt2bjM3aXJaOWZJeWNzNHNKUHNzWFFnalRtekpsaWxNeGZ2eDQwVGI2VE1HM0RNTXpQajYramh3VDFhdFhGd2FKcThWd2ViUXpnZndRMnE1VXlYSTJyUFBOS1NaS2xRNmdjaFc2Q0hHcEhqTFZxYWhhYzZKb3U1UjJncWx6WnJPMnhnU2ZVQmhpd3RNcmdLclc2RUoxb3laUlJQMnBUa1ZZNUVUUmR1blNqdm0yYU5IQ29CTStmQklkR2JPY21yWThTWEd0djNVcW1yUTRMdHIyOWc1MUdCTUlDZzhPaWxvY3ZKMXIxS2lSNU9ucHVRTmZ1d05LbFNxVlVhVktsVkhneHVKUWs3bVdBb29ZMzlMcjE2OHZFeHdjM0FhZHozVk9xZFoxQlhTK0lTRWhyZFBTMGp3UkMveDljVXdVSUdTKzBkSFJ3WWdIb0RnbUNnNUZPU2FLc2s0Z0tFcnljTld6ZlBueUxiaENKeWJmaFplbjgxblRNaTh2cjFUc2hEUEJiYVp3MjIrQ0E3aUFFN2lscEtUZ29QTUFpaHBmUnFuRXhNUWcvcTBEeDNQWGN1WEt6WFlYdmxXclZrM3MzcjA3cms1QkFKY3Nqb244d3dUZmtvemltTWdIVFBSeHNVN2tBN1o4VlRFaGdnTGc0VlBab0tDZ3RoVXFWT2lFSFlNcllpWHNoQXgyeWdLRjdmYlJKdG9HQjNBQkp6NWpRNUpSOEN5cWZCa2U2SHl1MTl4ZCtISkF4QThjT0JCY2RVR3pDZ1ZRSEJQbVlMdjlIUGhhK3hyTHhURmhEcmJiejZHUHJTaldDWE93M2I3TTExRk1JQ2lzZ2NHa2NVVkZBMzkvL3c2QmdZRWRzWk02c0pIQ2hOd1cyZ1lIWDEvZnBseDhkWDRhMXlMTGx5SE9McUtpb2lxRWhvYldybG16WmdQZUZvS2tPUSt0RXdvVGVqdmNaaXpham8yTkxhZnhrY1dzT0NieUFibXQ0cGdvSE1odEZjZEV3VU52eDB4TTZLUU41SG00Rk1qT0dNbzdHc003R2g4UUVPQVVvQzF1TXhwdGc0UE9SK09tUXBIa3EwSC9oNGhBY1JMa05tVXVWbzdGTVpFLzVJR3YyNk00SnZLSHZQTFZJQit6cW1PNk1DQzNLWE94Y2l3dXhhVzRGSmZpVWx6eVZtUTMwV0IxbWh0SGwwUXo0cHlNS0prRFE4VlJScEhsNnlZdzhNc3BKbEpUVTZPM2JOa1M1MHh3bTNudTQ1TW5UMFl6NHB5TS93OHg0VXBnS2dYM0d3eGl6R0E4eG5pTzhhWUdMT003L0lZNkNReXNvOXFXUzNCSGxHOW5XOEE3cEFlT3g0Mk1oMmZkeUhqb3dvM2pDK2ptOFhsT3hZM01CU1Rhem5oNEVyam92Q1NlT3V6NW5saENOMDgrNGxTZ1RSWGZzeTkzTEFId3NoMWZEZm9RRVZkYk9CTzJRMVBCUys5ZmxLbFRwd3JvdjZGZVNrcktyT1RrNUF0NFYwWnk4aVluQTIwbVgyQU9oajZXZU5yMThmSGp4MmN4TG1SbUhxTmp4NDQ2RldnVGJUTU1mSmN1WFZvQzRHVTd2aHJjS2liMC9rWGh2L09GL0JSZUgvZEN6R1I4d3ZpV2tkZUNkYkVOYkN0TzI3eFRDcmRYWVAzaE5rVXlEaEc4TnpNZSt1alc2VmxFMy9SaEpETGFPUmxvc3orQkE3aUFrOFpOQ0J4LzJ2UDlkaW5SL3g0aSttMHVZNDZUd1czKzhoRGRPcnZVanE5a0hsYStEQnlzdUZaYTNCakV3RTFqem9UZUxqam93bUh0WHhUSk9BUm5GdTJQTm0zNlVqekN3aFhQWUVLYnExYXRwRTJiOEhLbEZFTWZTK1poNWN1aS9kR1JJNGRvMjdaVWw3eFZFRzNpUFI0WkdZZGhJZ2Era25rVWlaaHdsWG53T3YwWWVJbi9PWWFoWExwMGlmYnYzMDlyUC8yVTNucDdHVDN6ajJmcDBjZVcwcno1QytuQmVmTnA4WkpINk1tbm5xTFhYbnRkUEJoeno1NDk5TnR2djJsckd3cTJqVGI2YWMwV1d1RTI4dFVmYmxsNFIyNEw4ZEZGbzIrZG1zM2kzWkhvREF1NUs4RWNicDE2Z01BSjNEU080R3JrK3cyUFRuK2JSL1FyQzdrcndSekFKVHUrREJ5Y09GaTl1M1RwVWpzaUlxSzFzeEVXRnRhcVo4K2V1RXNVajBRQUYzQ3k4cldOQ1JicjBaczNmMFY0VkxkSzJKMEpjQUFYY0FJM2phT2hqMW1zUjBPMDhWNE5sYkE3RStDZ0dZZ3RYM3dLdm95aUVoUDVncG5DOVpveVhtVWNabGpMc1dPWjlPNi8zcU1ac3g2Z3Uvc09wR1l0MnVRYURadkVVOXZFRGpSbTdEaDY2YVdYNlBCaFF4TW8rQUp0RjhxSWhMZWI2LzV3KzhJN29nZXgxODJNK1lmbzYwRkVYN040dXdQT0RHRXhYckFEM0RTT01peDhmMzZZUngwUHVBZVlpd08rT0p2RGQ5N1ZxbFhyVTdwMDZUM28rbTVOSzFGU20ycE9SY2RHRlJDNWVCVDB0dURnNEs3Z3BIRURUK3ZkeE5yZlhzbkp5WWZ3MUZlVm1Mc0NhOWFzeGhTV3c1ZzRkdXpZSWJ4TFF5WG1yc0N1WFR0WS9JN0pmR1hUc0l1SkJnMGFpRWV4T0JNeE1URm1ZaUpmeUs3dzc0a01UQ2RaeTlHalIrbVpaNStqbnIzN0tjMGd2MmpZcEJrMVQyZ2hIcGQvNE1BQnJWVnJBWmRFalY2QkZONmU2ZjRvTW9WM1JCeDBESityQitkazBkYzg2ampkMWszUWpmNU1tLzAzYzlPREdRY2NoQmhuUnhhK0Z6QnR4TUx0RHJnd3p5RmZQbHYyOS9iMmZndGQvdEhDNW5SMTMweTZjWHcrM1R6K29GTnhJM08rYVB1dDZVMkVZUGo1K1QydjhSVm5tN1l4c1dIRGhpdzhlVlVsNUs3QWloWEw4WklsaHpIQlo1UlptemU3ZnRTaEErOHdUMDlQMS9ucVhQRnBpQW04SFZGLy83bzY3MU9ZMkN6YTFsK3k1U0FtOGdWVjRlK2JNOVl4UlBucnI3L29nMzh2cHlIRFJsSjhRbXVuSWJwQlkwcHMzMEU4NSt2UFAvR3VJMnNCdCtZYTNYd1YzazZPL1ZIa0N1OElBc1RieDhmbnFac1pjNGhPOFJuL0tSWnVkOERwVHZUcjdtbms3KytQS3lmd05GSUloQkFKSzk4THM5MEg1K2RreC9kRmRQZUo1WDNwNXVtWjVNcWMwcTB6L2VqbXFWbUNDemhwZklWWTJNWUUzc090RW5GWEFVYTJkdTFhaHpHQk0xYVZpTHNLZUNYdDd0MjdiZm1pcjYweGdUY2ZidHlJbk5LSExzNHBmU200T0lpSmZFRXUvRGRNZnhsRGxOOHZYNlkzMzFwR25idmRwUlIzWndHamtlaVlCdlRvbzQrS3ZJcFV3TlZMbzUrbnd1czc3SThpVzlBcEVSRVI4Yng0NDJZR0MrQkpGbTEzd2FsTzlNZmUrOURUTjVvMmJSckxYSEh3K2VDeHdGYSs1MmU1RDM1K2dQN1lKOTZ2YmVBYkdSblpBbDM5L09RWUlkcnVrbE82ZVdxMjRDVHhGUWNJUHZXWWdBQ3FCTWRWUU43ajAwOC9kUmdUR1JrWlNoRjNGWkQzMkx0M3I4d1hndXdiRXhQVHNtVEpralJ5NUVpUngzR25uQkk0U1h6MW1NZ1g5TUxMQXhuSEdIVDkrblg2MS9zZlVJZE8zWlJpN2lyRU5tcEtFUkZSNGduSDE2NWRBMVVVY0I2ZzdVYXVDNityN0k4aVhYaEhlT1JzR1RyZnpHQmhPOUhHZlhDeUkxM2RQeFU5VGI2K3ZtOHdWN3cweForSDFXL2p3Qk44ZjNZai9QUUFYVTBYNW1IZ3kyZVlLOEgzMHFZeDVGWTVwYStIMElYMXd3VmZqb0hYbWF2KzRoOXJUSHo1NVpkS29ja05jRFlMcUg3TExTQnc2OWF0Y3hnVFI0NGNVWXA0Ym9CM2p3T3EzM0lMbUFldURKTDQ0ckVVWmZXWXdCVnM3cFpUd3VnT2ZHMWlJbC9RdG1FZGJlemV2WWY2SncxUmlyZTdJQ3c4aWswa0FoZG9hS3hGV1NaMkpwZUYxN1ByanlKZmVFZDhQRHc4em1MeDVwRVpSTWRadEUzaTlGZnh0T0h0bUJ5eDR6OE5SZDJzbzYyVjIzR0lFeDNwK3Y0cElwQ1pZeVp6RmU4bUxsMjY5RmxoSHVENzAwelRPTDFyTEczNFQ3OGNzZU96d2FKdTF2ZlRsZHR4aUI5bjAvVUQ5NnY0L2dTK053NXdIVGZMS1YzZlorRmJxbFNwRTRnRlhqYkV4SVlORzVRaVl4WXdqUVVMRm9nWEl6M3p6RFBLT3JtQmJCNnFtTUJWTkNvUk53dVl4dnZ2dnkrQTk1R3I2dVFHc25sb2ZQR0sxQUJQVDA4UkUraGZOOHdwcVdJaVA4Qmp4Ly9MRUdmeS8vakhQNmtaQkxwNUs3ZEhYSHdMcWxxdHVzaEpYYjE2RmJ1QWduMnBpWDR4VzdpK0FYZEU0UjN4NVk4YldMeDVaSnBheEIzZzRtbmN6Smx6dWZ5L1REcTEveFhhczdwMTdneUV6U05yLzJRUnlIeWc0VUp0UEJjbWtJUDZoc1U4bU8rUEVHMXp1UGpkV3NFbnAzTDUxek4wNnZDSHRPZS9iQ0Rmc1lFb3RxWEVEN01wNjRCbHBLVHp6Y2pJS005OGJ3cStoMmFUVytXVVRuV2lySDFpV2hCOE1jbXJDNFUxSnBCSVZZbU1XU3hjdUZDWUJ2RGdndytLTit5cDZwa0Z6QU52dnRNNDI4WEVvVU9IbENKdUZoQnltQWFBOWpBeVVOVXpDNWhIV2xxYXpEY2dNek96Z2g0VHFHTzdqNjRFOWw4M0Q1dVl5Q3R3dC8xWkJuMzMzWGMwWXZRNGlvTW9GekhVREE2bHVMZzRPblBtREhZRkJUY2NScUZ2ekJTdWE4QWRVWGhISUJRaVdHNGVtVXFVeWFKdEVtYk5ReTh3a1dQL1pmRlViRXVKNHpBUHl4VWdITWgvOENhQ0FEN3c4TGVGN3c4OCtqQUpzK2FoRjVqSXNkVEp5bTJwTVl2TjR4NEQzeVZMbGdSYitSNWlnMUhsZGx3R21NZTlPbDljWm9KWU1NVEUrdlhybFNKakZxKy8vanE5L1BMTDR0cDZqRUllZnZoaGV1eXh4NVIxelFEbW9lVThsREZ4OE9CQk93SFBEV0NXbjMvK3VSamRRRVQxOTN1cjZwb0J6R1Bmdm4wT1k2SWdwZ1VMRXVoZjdML0dWNDZKdkFCWFUvM0ZvSlF0cWRTK1UxZWxNQmNWMUkyb1IwRkJRYUovdElKOU0zVTFGdGN6NEk0b3ZDT1NlVXdod3NqQUpDNmV3aFJ1N3NxUEoxbkFGZHRTNGxnSE5vL3hjaURibUFmenhkU1NTVno4Tm5mbWdmTGptV1RsdHRTWXllWmhlZCt2enBlRkl0VEs5eURYVWVWMlhBWTI1NzFXczFPYUJ3UlVKVEptZ1RQNE45OThVeGdIREFSR2toOERnYmpoYWl1SnN5RW1jTTIrU3NUTll1Zk9uV0lxQ2ZzTkE0RlE1TWRBcElTNU1pYnlPeTBJRkZaT3lTWW1jZ3MrZ0MzbGs3V2ZVdk9XYlpXQ1hOUVFGZDBBOThPSXZwSkthL1JSZG9YckdIQkhGTjRSeVR6NExEdUQvK2NtSVp2SDVmUDdsSFhvOUJpNjhlZEpyUlpSMXJYTDZub3FIRzNQNWpIV29WQUl2cGhXTWduWlBDNy83Nml5RHYzMEROMzQrM3V0RnZoeXM2cDZTc3hnODdDT2xBVGZ1WFBuMXJsdEh2ZmJUODFsZzBMUEtXRmt0OWM2TFNnTGhUVW1JSjYyQXBNYmZQamhoMktrQUFONTlkVlhyY2lyZ1VEY1B2bmtFNGN4a1o2ZXJoUnhzOWk2ZGF1NHRGWTNFQjE1TlJDWUJ4NlBJZk9WWXlLLzA0S0ZrVk9TcGdYbG1NZ05PQkF0NVYvdmZTQkV0Mm16bG5jTVlobzBvY3BWcW9tcnNhU1NyWUh3N3diY0VZVjM1TFo1SEo1SWRJVC83eVp4OGFTTmVTanFBTCtrczhqTFJWRkhpUXcyajdUUkRvVkM4UDEybW1sY1BIdjdKbFpoSG9vNndDK1pUMnUxdEtLb284WjB5a28zanBRTTVuRmdxa0xBSGFQUWMwb3dqejBHczdNekQ1eUZxa1RHTEpCNFhybHlwZGpPRzIrOFlXY2d1YzJCUU53d21wRTRHMklDeVdtVmlKdEZjbkl5YmR1MlRZd1dJT3o1TlJDWUI4eEk1aXZIUkg2bkJRc2pweVJOQzhveFlSYkljZnpPb0xlWHZhc1UzenNCc1EyYmlqNTY0b2tuc0tzbzJPZDY2Q3RWNGQ4TXVDTUs3NGhrSHVPSkRyVXlqWXNuYnB2SHBaLzIwY1d0emUxd2RrTWNIZDJ5UUt2RlovSlhmbEJ1UzRuRGlXd2U0cHB6cFZBSXZ0K3dhSnZFeFc5dW04ZWxDMGZwNG9GSmRqaTdmU3dkM2ZtU1ZvdjUvdjJMY2x0cXdEeU1JeVdEZWFSUFVlZDJIS0RRYzBxWkhTaHJ0OEhzN013RFo2RXFrVEdMOTk1N3oyb2dHTVVzVzdhTVhudnROV0VleUljc1dyUW9WNEtYazNrZ09hMFNjYlBBVFgyeWdlQTdDRHpNQTJheWZQbnlYQmtJekdQWHJsME9Zd0xiVmUybldSUkdUc2xtV2pBMzVoSE1FQTh5L0d6ZDUzZmNpTU1Xa2ZWaXhQOFFKeFZhd2I0SG83OXNDMzl2d0IxUmVFZXNRbkhyOEJpaWd5emFKaUdieCtWZk1tbnYydEYyeU56K0pHVmR2YXpWNHZMVE11VzJsRGlVU0RmU2hqa1VDc0gzelAybUladkg1WXRuYU8rR0JYYkkzUHUyWmFwS0w3K3VWMjVMaldsc0hxTWNDc1hOOUVuMmVaMXNVUGc1SlI3WjdSNmpFZ3ByVEVCSVZDS1RHOEE4WUNLeWdVRDBZQ0s2Z1R6NTVKUEtkVzBCY2NPVFVpWE9ocGpRQlQrdmdOakRQR0Fpc29IQU9HQWl1b0dzV3JYS2JsMFZzTDBkTzNZNGpJbjhUZ3NXUms3SlpsclFySG5nbVYyYkdiUnBjN0s0VDZKSmZJczdIa2lpNDMrSjBacFdraG5pZVdCeTRlOE11Q01LNzRoa0hxT0lEckJvbTRSc0htYkt6NW4vcHN2YkU1VGJVdUlnekdPSVE2RVFmTDltMFRZSjJUek1sSjlQZjBHWEQwOVdia3NObU1jSWgwSnhjLzhFKzd4T05uQktUbW1Yd2V6c3pBTkNvaElaczRCcDRCTUdnaytjdGNPUU1JV2xBeWJ5eUNPUEdOWnpCSWdiaEZ2aWJJZ0o1QmRVSW00V01BM2RRUEFKQThHMEUweERCMHprUC8vNWozSjlXK1JrSHZtZEZpeU1uSkxOeU02c2ViekxvTk5mZjAxdDIzZFdDdTJkaXBvaHRTZ3dNSkF5TTNFYmp5anZvcy9rd3Q4WmNFY1UzaEhKUEVZUXBiYzBqWXZIY1FPcStYTHgzRjdhczZvL1plMXJvZHllSFE2MFkvTVk3RkFvQk45VDk1bkd4VE5yQkErejVlSlBSMmpQdWhtVWRmeGU1ZmJzY1QrYmgzR2taRENQdEhIcTNJNERPQ1dudE5OZ2RuYm1BU0ZSaVl4WndEeGtZTlR4OU5OUEc4d0RVSzJyQXNRTkl4aUpzeUVtSVBRcUVUY0xtSWNNZkxkNjlXcURlUUF3QmR0MVZVQzk3ZHUzTzR5Si9FNExPaUduWk1ZOEJqUG83Ny8vcGdGSlE1VUNlNmNEQ2ZUNjlldlRsU3RYMEJVb1E5QnZldUcvRGJnakN1K0laQjVEaWZhemFKdUViQjQzY01aN09kMGVWMjZmRmFOZ0N1dTdMeE9WMjdORE9zeGpvRU9oRUh4UFRUVU4yVHh1WE9mTmdac3RydDYrMGdvRlUxamZiYjlIdVQxNzNNZm1ZVFE3bzNtTXRzL3JaQU9uNUpSMkRsVUpoVFVtSUp3cWtUR0xkOTk5MTdvTTQwQ0M5L0hISHhkbnloQTdmRUlBellvb3hBMmpGNG16SVNhUVgxQ0p1RmxBN0hYZ2I5dzBCM0hHMVZjd0RYeGlWR0oyaElQdFlQUWk4NVZqQXFNRzFYNmFCUXk1b0hOSytKOUxmTTJZeHlFR1BmSFVNOVE0THVIL0pSbzFiUzc2Yk1xVUtlZ0tsRVBvTjczdzN3YmNFWVYzNUxaNUhPSVRpRFFXYlpPNG1IbmJQQzcvekdmR2lqb0NlR0dUVkw3ZDk3UzZuaTMyczNuczYyODQ4QUNyZVlEdlNSWnRrN2o0OVczenVIemhxTEtPd004ZmFMVXM1ZHRELzFMWHN3T2J4LzVCQnI0Rzg5ZzMwajZ2a3cyY2tWUEsybUV3T3p2elFINUJKVEs1QlVUdG9ZY2VFcmtOM1RqZWV1c3RJWDZZQmtJZVFiV2VMU0J1bUtxUk9CdGlBdmRwcUVUY0xHVGpRQ0lVVTJTNmNlQ0dQb3hHa0pUZnNtV0wzYm9xWUZ1NC9GZm1LOGRFRWNncDVXUWU0cXFPZmR3bk9BTlhDZXYvRjRUV3JpditweGhwYXVWTjlCMEtMeHR3UnhUZUVjazhrb2oydGpDTmk4Y2s4L2hwcjdLT2prcy84dTlheWFtdUZmdmFzbmxZSGh1dUgzakFiZk5ndnBoU01vbUxwMWVMOWxFdVg4aFExdEZ4NlR6L3JwV2M2bHB4WWlxYmgzR2taRENQdmNQczh6clp3Qms1cGF3ZFNTcWhzTVlFQkVrbE1tYUJrWWMrNHNCbGpUQU9RRGFPRlN0VzBEdnZ2S05jM3hZUVN0U1hPQnRpQXZrRmxZaWJoVHppMEkwRGtJMGpOUld2dDkxb3Q2NEsyQjdxeTN6bG1DZ0NPYVhzekNPZVFWbFpXVFJveUFpbG9QNS9RNlhLVmFsaHc0YWlUN1FpM2t6SW53YmNFWVYzUkRLUC9rUjdXTFJOd3M0OEZIV0FjNTgzWlFHMkpwUG9MOHpmSytyWllXOGJObys3SFFxRjRKdUp5MS9Od2M0OEZIV0FjMXRHMGVYL2ZhM1ZaTDY0SjBSUnp3NXNJRm43K3prVWlwdDdodGpuZGJMQlJTZmtsTEsyRDFBSmhUVW1JRVlxa1RFTGZjUUI0NEJoQUcrLy9iWVFPNXpOWThRQjQ1Q250N0xEKysrL0o5YVJPQnRpQW1kOUtoSFBEZlFSQnd3RHdIZVlxdEpISERBTzNXUnlBdXBoSFptdkhCUDVuUmFFZWNoQWYrYzNwMlF6TFppZGVZam5kT0JHUUV6YkZLTTUxWXR1S1BvT0w1YlN5dWVxL3JzakN1K0laQjU5aVhhejhKaUViQjYvc25EdGZTZldEcW12UmRPUnIrWnJ0U3dsNjl4L2xOdXp3eDZZUjAvRGdRZmNOZy9tZTR4RjJ5Ums4L2oxcHlPMGQrVUFPNlMrMzRlT2JMSCs0MFhKT3I5SnVUMDdzSUZrN2U5ajRHczBEeDRwcVhJN0RpQ2JSK0hrbE5xeWVSaEdkbmJtZ1NraWxjaVlCZWJia2VPQVllakdnYk42M1RoZ0dqcFU2OXNDNWdGeGx6Z2JZZ0w1QlpXSW13V0VFNk10TEt1TUEyYWdRMTdQRVdBMGVLUzN6RmVPaWZ4T0M4cjlwby93OHB0VHNwa1dkR1FlUFJqMDIyKy9VZXQySFpWQyt2OFZWYXBXRjFkZlhieDRFVjJFZ3I0eTlOOGRVWGhISlBQb1RiUXJ3VFF1SG4yTlY3Y1VpTmJGNy9mWTRjcnY0cDRoWTBsbjBWZHN6dzU3V3JONTlIQW9GSUp2eGoybWNmSFViZk5BSXZ6aUQ0ZnRjT1h5ZWEyR1ZFNHNWRzdQRGtmdllmTXdqcFFNNXJGN2dEcTM0d0NGbjFOaTg5aldXeVVVMXBqQUpha3FrVEVMbUljODR0Q2YyZ29Ed08vNmRKWDVhYXYzeERZa3pvYVl3QlNSU3NUTkF1WmhPK0xBZ3cxaEFEQU1mZFJoZHRvSzlURGRKZk9WWXdJakhOVis1aGI2Q0s4Z2NrcjRuMHQ4SFptSGVIM3M4eSs4UkkyYU5DdUdCRHkrQkYwMmI5NDhkQkVLK3NyUWYzZEU0UjI1YlI0SGV4SHRaTkUyQ2RrOFRKZFRqeXEzcGNSdU5vKzkzUXdISG1BMUQvQTl3cUp0RWhkUDNqWVAwK1hjZThwdEtjRUdrcFZtSENrWnpHTlhQL3U4VGpZby9KeFNHOHJhMmt2bWEyY2V5QytvUk1Zc2NCWVAwd0N3TFhuRW9VOVg1WGJrZ1ROcGliTWhKc3dtc2gxQkhybkFpT1FSaDI0Y091VDFIRUZmUitZcngwUVJ5Q21wekFOUHk2VkxsMzRYb3c2OHZyVVlSaUQzZ1Nmd1NxK3pSWjlaKy9DT0tMd2prbm5jUmJTRFJkc2tycC9KeGVNemNDTmI1aHpsZGh4aUY4eWpxME9oRUh6eGNFU1R1UDZEOVM3UW5Bc2Vqdmd0bTZOaU93NlJNWm5Od3poU01wb0hqNVJVdVIwSGNFWk9LV3VyZ2ErZGVaZzlZM1VFVEpmb2ovWkE0aGtqRGdpWmJoejZzbmx4czh6dFM1d05NWUVSZ2tyRXpRS1g0R0trQWRQQWM3S3dQUmlBYmdMNk1xQmEzeFo2WFptdkhCTkZJS2VrTW8rM0dmVE91LzlTQ21jeG1sRmsvVmpSaDlMREU5Rm4xajY4SXdydmlHUWUzWWx3dFk1WjdPdkxvamtsWit6dXBGNC9KK3lFZVhRMkhIakFiZk5ndnJnRDNDeU9MeUQ2K3A4NTQrZ005Zm81Z1Ewa0s4MDRVaktZeDA0ZUthbHlPdzdnakp4U1ZxcUJyNTE1Nk5OTGVRV0VDMGxoek8xRDlQRTNCRThYTkh6cVVLMXZDNGdiUGlYT2hwakFOSk5LeE0wQ1FvOHJ0Z0JNTitrbWdjKzhtZ2MrWmI1eVRCU0JuSkt0ZWVBeEpIVHIxaTNxM1hjQU5Xd2NYd3dIOFBYenA4aklTTkZYV2tIZmlYNjhJd3J2aUZVbzZHQlhGbTBlWGJrTGRyWmk4K2pvVUNnRTMwT1QzQWVISjlHTk5PTkl5V0FlTzNpa3BNcnRPRUNoNTVSMnQ2YXNMUWErZHVZQklWS0pqS3NBY1lNUVNwd05NYUhmRmU0dWdIa2dmeUx6bFdPaUNPU1ViTTBqaVVGNzkrNmpCaXlReFhDTTZqVkRSRDlLOTMyZzcwUS8zaEdGZDBReWo4NUUyMWkwM1FVN1lCN3REUWNlY05zOG1POUJGbTEzQVJ2SWpUVGpTTWxnSHR1N0dYTTZPYURRYzBxNzJEeFNPc2w4N2N3RDB4OHFrWEVWSUc0UVFvbXpJU2JNNWlLY0JaZ0hwdXRrdm5KTUZJR2NrcTE1Zk1TZ3h4NS9naG8waWl0R05xZ1gzVUQwNDMzMzNZY3VRMEhmaVg2OEl3cnZpR1FlSFltMnNxaHNaZUYyQndqemFHYzQ4SURiNXNGOEQweG1zSEM3QXc1T1p2TXdqcFNNNXRIRm1OUEpBWVdlVTlvSjgrZ2c4N1V6RDB3MUFTcWhjUVZ3TlZCTzVyRnhvMXJJWFlGTm03STNqeUtRVTVMTnd6cGwxYUZ6ZDRwbGdTeEc5aWpqN1VQVnExZTNtN3E2SXdydmlGVW9idTV1emFMU2ppaVZoZHNkc0xNOVhkL1owcUZRM05qWFhnZzJwVTkwRHh5Nmg2N3ZNWTZVRE9heExaZTVuOExPS2UxZzgwaE9WQW1GTlNad1JydDhlZjd5SGdXSkZTditMYTRta2pnYllnSWltcHpzUGxOWEtTbko0cEVoTWw4NUpvcEFUa2syajJZTU9ucjBxRklvaTJHUGlwV3FpTDQ4ZlBnd3VnNEZmWWd1TGZxRmQ4UXFGSDk5RnNNQ09JRFArbHV3ZVBNK3VoSmJXektYZ2ZUYnFucUdBdy9RRDd5L05yV25XOGNtMHkwZWZkeGk4WFlwd09IWUZQcHR2VUdNYmN5akE0czJtNks3WUVkTE5vKzJNbDg3ODhDZHNxdFhXNFRKVm1pY0RYQllzK1pqY1FlMXhOa1FFN2g2YWZ2MmJhWVQyb1VKY0FBWG13UzBJU2FLUUU1Sk5vK1pESHJ6cmJmRm0vU0trVE5DUXV1SXZuejIyV2ZSZFNqb1EzUnAwUys4STFhaCtHR0pEOTNhMTRyRmNCRGQydEdOYm0xclI3ZTJ0bkV1MENiYVBzQWMwbHJUcVlVK2hnTVAwQSs4YzI5MzREcHQ2ZGJSbVhUekVPUEFWTVlVSjRQYlBEU0xqV01tM2RyZmxrNitZcHhtbXpWclZtMnJlV3hOVk9kMlhJWHRiQjZiVzh0ODdjeUQrWXN6MmJWcjE0Z3JneUNFRUR4bkFtM0NGUEFjS0hDWk5tMmF3NWpBcFpFWWZlellzVjNjbjRFRU9xYXluQW0wbVpxNlJYQUFGMXdOSmZPVlk2SUk1SlJrOHhCUEZwMTYvM1NLWVdFc1JzNklxQmNqK3JKLy8vN29PaFRjYklZdUxmcUZkOFFxRk4vT0xrRVhucTlBTi9lMm9GdEhodEN0UXlOWXhJY3poamtKM0JhM1NVY0cwODNkQ1hUaHVmS1VjWitGbTBvb3pyN2NrYzZ2YUU4MzA5aDBNbG5JTStlNUFBOXkyNVBweHQ0MmRINTVlenJ5ak5FOEZpMWFGR0kxajlTMlBLSkt1SjNUY1RXMnQ2S3NUWVpwUVR2em1EcDFLaTFZc0VCY3pRTURXYmZ1TS9yc3MwOFphNTBFdFBVWnQ3MWFURmVCeThTSmh2ZXVHMklDVngvaHJYcTRPVzduenUyMGUvY3U4WmgyWndKdG9tM2tJdkJtUDl5SElmT2RQMzkraUllSGgrQ0wwWlE3ak9wMEtISktzbmw4eTZET1hYdUl1NmlMWVE3NFg0ZUVoS0RyVU5DSDZOS2lYM2hIZkJBa1dFeWZZakdRY3c5NzBlOGZoTkxWcnhyUXRjMk5uSXFyWDhhS3RyOWY0Q200N0psc05ZOWZtV3NBd0VMeEp3Njg5Q2ZiQ0FQNS9zME9kR2xkTzdySzRueHRXeHVuNHU4dGJVWGIzNy9SUVhEWi9aajFUQjU4QTFsTXlqUGZhK0I3N1N2a0d0d29wN1NqUGYyOXdmSWVBbzJ2RHk4YlltTGN1SEhDUUdiTW1DSE9vRjk4OFVVaGlNNEUya1RiMDZkUEYxekdqTEcrT3RjdUpsaVloWUZnYWd2VEw4Z0Y0T1ZHemdRZU9ZSzJuM3JxS2NGbDd0eTVEbU1DcHV4dU9TVTgya1RpcThjRVRKcCsvLzEzaW1aQkxJWjUrUGo0aXY2VTdqWVBRcDhXK2NJNzRsMjZkT2tNTEw3WjIySWU3b1RuZWxqTXc5UFRjdzl6TFF0NGVYbGw0TUI3WTBJRElkanVoSCtPakRid1BYRGdRSkRPOTh5eUtMcTF0eCtmOWJ0SFR1bld2djUwOU5Wd21hODNMeHRpb2tlUEhrS3czUW1kTzFzdWgxYkZ4TEJodzRSZ3V4TUdETEE4dVpnNWdtOUFXbHBhSVBqaU83d3ExdDF5U25nRG9kUy9la3p3bVEvUnZuMXBGQjNidUJpNVFFQmdrT2hQUEwxQUs4M1FwMFcrOEk2VThmUHpleDJMdFlKSzBMRnBhaEYzQlU1TUwwRjF5bHZNSXlBZ0FQZjUrd0c4L0liZ1c4bUhqajZicUJSeFYrRDRjKzJwVGhYTFdZWU5YOUcvN2VwNVU5YW01bXdnU2E3UEtlMUxvaHViRTZoanJDV25WTFpzMmFjUUM3eHNpQWs4SFhUU3BFbEtFWGNGSmsrZVRPWEtsWE1ZRXhVcVZMQytQYzhkc0hqeFlxcFlzYUxNMTUvaHkvMzlHcjRMQ3dzVFY3UzVVMDRwTWpKU0ZSTkRHTFNhUjFiMVdSQ0xZUjdsSzFRUy9Zbi9yMVlHb1UrTGZPRWQ4UXdORGUzcTRlSHhQZjdzSEZaQzVCbFVZdTVNWUFxdFF4MkxjWUJiM2JwMU96RlhiNEFQdUc1V3ZyRVZSWjVCSmViT0JLYlFPc1JZUk1LR3IwOUVSRVFpZjNjQnZ6M1V2eHhsYll4bjhSNUV0L1lQcDF0cHd4aERuUVJ1YS84d3VzbkdjZTNMcGpTdmorV01DSHpyMTYvUHd4SHk1TC90WXFKMjdkb2l6NkFTYzJjQ1UyaTFhdFhLTVNicTFhc244Z3dxTVhjbU1JVVdxUWt4dUlXSGgzZEdQSUN2SEJOZHUzWjFpNXdTcHF2MFVSMzQyc1RFREFhOS9zYWJTb0VzaG1OVXFsSk45S24wam84WjZOTWlYM2hIU3ZNQjJaelBqaWJ4c1A4U3ZxcnFYNEptdHk1Qkh3OHBRWitQY0M0K0dtUnB1NEt2TmRkeHVYTGx5dVA0WUl0anJsNEFpMGFDZ1c5UUdacmRLNHhXeldoSzYrWTBjeW8rbXRaRXRGM2UzOHNoMzFhdFdvVXgzeW44MnhYVWFSVHFSUnNYMTZRTC82bFB2NjZLY1NwK1hsNVB0QjFSemRQQXQzWHIxc2pvbGVidmxESEJJeEZLU0VnUVY0MGtKU1U1RlgzNzloVnQrL2hZcjd6TE1TYjRMRjhJSVV3UDc1VjJKc2FQSHkvYVJwOHArSlpoZU1iSHg5ZVJZd0kza3NFZ2NiVVlSTWFaUUg0SWJWZXFaRGxEMXZuYXhJUjQ3ditUVHoxTjlXTWFGU01YcUZLdGh1aFhuTkJvNVZIMGFaRXZ2Q01lTEJTMU9IZzcxNmhSSThuVDAzTUh2bllIbENwVktxTktsU3Fqd0kzRm9TWnpMUVVVTWI2bDE2OWZYeVk0T0xnTkRraXVjMHExcml1Zzh3MEpDV21kbHBibWlWamc3NHRqb2dBaDg0Mk9qZzVHUEFCRk1DWmVaTkRDaHg2bWVpeUl4VENQcXRWcmlyN0ZKZVphZVFGOVd1UUw3MGhKSHE1NmxpOWZ2Z1VIVFNjTzZDNjhQSjNQbXBaNWVYbWxJckNkQ1c0emhkdCtFeHpBQlp6QUxTVWxCUWNkYnUzM0tHcDhHYVVTRXhPRCtMY09ySEZkeTVVck45dGQrRmF0V2pXeGUvZnV1R0lKSWx5eU9DYnlEeE44U3pLS1dreUlCNjNOZlhDZWVOVnFNY3lqcWpieXVPZWVlOUNGS01oM0ZmM0NPNEpBTGhrWkdWazJLQ2lvYllVS0ZUb2gySEdtaEVCQ1lNdmdzNzBDaGUzMjBTYmFCZ2R3QVNjK1kwT1NVZkFzcW53WkhqZ2d1VjV6ZCtITEloRS9jT0JBY05VRnpXb2VRSEZNbUlQdDluUGdhKzFyTEJlaG1CRG1NV2Z1Z3hURmdsZ004NmhjdGZvZGF4NVdzZUJBeGxVMkRmejkvVHNFQmdaMlJPRHJRR0FWSnVTMjBEWTQrUHI2TnVYaXEvUFR1Qlpadmd3Y2tLV2lvcUlxaElhRzFxNVpzMllEM2hhRW8zbU5HalVTQ2hONk85eG1MTnFPalkwdHAvR1J4YXc0SnZJQnVhMDdNQ2JFdE5XOCtRc29xbjZEWXVRQyt2T3Q3c1JwS3hraVlIZ0lIY2huUzZFYy9ERWMvUEVCQVFGT0FkcmlOcVBSTmpqb2ZEUnVLaFJKdmhyMGcxU0loNU1ndHlsenNYSXNqb244SVE5ODNSNWFUSWlFK2RLbGoxTWtDMkl4ektOY2VjdFZtSGRjd3J5NEZKZmlVbHh5S2l4NDRsTGRWMTU1bFNMcnhSWWpGeWdiRUNqTUExZTJhZVdPdVZUWEZ2cVpVc2xIemxFMEk4N0ppSkk1TUZRY1pSUlp2bTRDQTcrY1lpSTFOVFY2eTVZdGNjNEV0NW5uUGo1NThtUTBJODdKdUJOalF0d2tpSmRQcVFTeUdJN2g3VzI1eEJ4dmpkVEtFTkdwUmIzNHp0d293RHVrQjQ3SG91OXAxc1BmMDRWNVB4RE4rZEc1UUp0b216bE1BaGVkbDhSVGh4M2ZKVDhSTGZtWmFMR1RnTGJRcG9wdnc4VmZsUUI0Mlk2dkJuMHFTVnk2NlVUWVRtRUpYbnIvb2t5ZE9sVkEvdzMxVWxKU1ppVW5KMS9BdXpLU2t6YzVHV2d6K1FKek1QU3h4Tk91ajQ4ZlB6NkxjU0V6OHhnZE8zYlVxVUNiYUp0aDRMdDA2ZElTQUMvYjhkWGdWakdoOXk4Sy95MGVUN0o3OTI2S1lFRXNobmw0ZUhnSTg3ampIazhpR1ljSTNvZStwNC91WVZHcy93dFJBTVBmeVVDYkRTOFFUV0VPNEFKT0dqY2hjUHhweDNmeHIwU1RyaEVOdmNtVzdtU2d6WHV1c3Brd0IxdStrbmxZK1RKd3NPTDZlWEZ6R3dNM2pUa1RlcnZnb0F1SHRYOVJKT01RbkZtMFA5cTA2VXZ4Q0F0WFBJTUpiYTVhdFpJMmJjTExsVklNZlN5Wmg1VXZpL1pIUjQ0Y29tM2JVbDN5VmtHMGlmZDRaR1FjaG9rWStFcm1VU1JpUWpJUDhXQkVQTnl2ZGxnRVJVVEZGTU1FMEZmb1B1Qk9mRERpYlNFK1I2UHZaZEd1Q0NGbkFYY2x3R0VxRElRNWdadkdFVndOZkJmOWoyakVEYUxCTGdZNGdFdDJmQms0T0hHd2VuZnAwcVYyUkVSRWEyY2pMQ3lzVmMrZVBYSG5NQjdyQVM3Z1pPVnJHeE1zMXFNM2IvNks4S2h1bGJBN0UrQUFMdUFFYmhwSFF4K3pXSStHYU9POUdpcGhkeWJBUVRNUVc3NzRGSHdaUlNVbUFQRkk5cmhtQ1JUT3dsaU1uRkd0UnJBd2pqdjFrZXg2RUhzOStCMGRhbjZleGR0TjBKSXg3enZhQVc0YVJ4bUM3NzEvc1hoZmR3L2N4MXdjOE1YWkhMN3pybGF0V3AvU3BVdnZRZGRYanU5RU5STDdPaFdWR2x2ZWRNZ2N0Z1VIQjNjRko0MGJlRnJ2TU5mKzlrcE9UajZFcDc2cXhOd1ZXTE5tTmFhd0hNYkVzV1BIRHVGZEdpb3hkd1YyN2RwQnpFbm1LNXVHWFV3MGFOQkFQSXJGbVlpSnNieXdLSWVZQU1UTG9FYU1IRVhoa2RIRk1JR2djaFZFMzk2cEw0TVNCeDNEWithWjYxbVZJTng4eHU4T0NHWXUwMC8rOVRkejA0TVpCeHlFR0dkSGd1K0lxeXpjMTl3RG81bXBJNzU4dHV6djdlMzlGcnE4NVNQL29sa25ydExjSDRobS8raGNQTWh0b3UyNE9TK0pvUGJ6ODN0ZTR5dk9ObTFqWXNPR0RWbDQ4cXBLeUYyQkZTdVc0eVZMRG1QaThPSERXWnMzdTM3VW9RUHZNRTlQVDlmNTZsenhhWWdKM0FPZ3YzOWRuZmNwVEd3V2Jlc3YyWElRRTRCNERlM3p6ejlQZFZrWWk1RXp2TXFVRVgxNnA3NkdGZ0hpN2VQajg5UU1IbEQ1LzBUazV5YW93Z1l5SmVNUytmdjc0eHB6UEkwVUFpRkVRdWM3bU0xamtKdGdPRXRFTm54ZlJIZjNYM09ZSnZGKzFkUHlPNnE4VDJGQ3p5a2hyd1V1NEtUeEZXSmhHeE40RDdkS3hGMEZHTm5hdFdzZHhzVFJvMGVWSXU0cTRKVzBTRExiOEVWZlcyTUNiejdjdUJFNXBROWRuRlA2VW5CeEVCTUFuckpMQnc4ZXBGcDF3cWx1UlAxaVpBUDBFYm9PT0hUb0VMb09CWDJJTGkzNmhYZkVLeUlpSXA0WGI5elBZdXpIWjZmdWdzcU15Y2YrUkUvZmFOcTBhU3h6eGNIbmcwZEY2M3dIc1dDN0M0WmRZVkhPdE9jYkdSblpBbDNkNEw0bmFRcWJvcnZrbE1BRm5DUytYcnhzaUFrSW9FcHdYQVhrUFQ3OTlGT0hNWkdSa2FFVWNWY0JlWSs5ZS9mS2ZDSEl2akV4TVMxTGxpeEpJMGVPRkhrY2Q4b3BnWlBFVjQ4SkFGTnVkT3ZXTFlwdDBFZ3BtTVc0allxVnFxSWZ4Uk9UMFdkYVFSK2lTNHQrNFIzaGtiTmw2SHd2ek9PSC9NSDM2RVh5MlhuYUN0OUQ1OG52Mnl4bDNaeFFpYzFqd29tcjRoL2c2K3Y3Qm5QRmkzLzhlVmo5Tmc0ODhCM0VncDBmOVAzaEl0MlZjZHFLM3QrZXA2VExXY3E2T1dIWVgwU1RUdHJ6NVRQTWxlQTdldmYvcUptV3ozRUh0R0FNUy8xQjhPVVllSjI1NmkvK3NjYkVsMTkrcVJRYVZ3RUN0MjdkT29jeGNlVElFYVdJdXdvd2ovMzc5OHQ4OGFpU3NucE00QW8yZDhzcFlYUUh2all4b1FOWGo0bFhBb2V4UUJiRE1ieTExODlPblRvVlhZYUN2aFA5ZUVjVTNoRWZEdytQczFpY2ZKYVB4SE41ZysvdXMrVDk0U2Jxc21rdlBYcjRsQlVEVTlPcHlxcE41TFA1Q1BtZFpSTlJyT3NJbGRoQXhwNjRMdjRCekRHVHVZcjNWWmN1WGZvc0RqendUV0xCemd0NlpwNmxkbDlzb3Z0MzdLVjNqcCt5WXNHZWRPcXhmaE4xM1hlRUJ2NmVwVnpYRVliK1NUVCtwSkx2VCtCNy8ra2I1RTQ1cFpxTWU0OWZFM3hMbFNwMUFySEF5NGFZMkxCaGcxSmtYQVhaUEZReGNmandZYVdJdXdxeWVXaDg4ZHJjQUU5UFR4RVQ2RjgzekNtcFlrTEhZQVp0Mzc2ZGdrUHJVRmg0dldJb2dMNUJ0d0hidG0xRGw2RU1Zb2grdkNNSzc0Z3ZmOXpBNG5pWXgvZTVoOCttSXpRN0xaTXVYY3RDQnluTCsxK2ZveXFmN2lDL1UxZVUyMUNoRWh2SUtNMDgrRUQ3alRlRFp3VUZjbERmd0lFSHZra3MyTGxGMTcxSDZLVWptZlRIZGNkODEzOTdqbnB0M2tIOWY3bWkzSVlLUS84Z0dxT1poODQzSXlPalBQTzlDYjdUbUsrNzVaVHV1ZDIvdUFoZEZ3cHJUQ0NScWhJWlZ3SG1nVGZmYVp6dFlnSnp5eW9SZHhWZ0htbHBhVExmZ016TXpBcDZUS0NPYWo5ZEJSaVpiaDQyTWFIRE9uVVZGOStNNnJCUUZzTWVnVUhsUlI5R1JrYmFUVmtCZDBUaEhZRlFpQjBkL1EyTHluZTVnOCsyMC9UK2FWWjVFK1hzSDFjbzhzczA1WFpVcU1RR011eTRWZHhZbXNXTlNrRjg0T0Z2d1hjZ2Y1c2JkRDk4V2hpRG1mTFRYMWRvNlBZMDVYWlVHSHlaYU1SdE1lWnZLR2pKa2lYQk90K3A2Rjh0bitNT3dMVGd4TnY5eS9ZbllzRVFFK3ZYcjFlS2pLc0E4OUJ5SHNxWVFETFhWc0JkQ1pqSHZuMzdITWFFTzA0TGZ2NzU1NnFZa1BFMlE3ejFNTFIyT05XcEcxVU1DZWdUZEJtQVB0SUsrc3phaDNkRTRSMnhDc1VJaUJ0R0gyWngvQW85ZXZBVWI4SllQdUJEWkNtZlk3MzhPeHVHemNuOW9ZdVh5WGYzT2ZYMmJGQUpWMU1aeGMwZ0ZPQTdrTnN3aTM0L1g2RjNqdG56VGJsT3RQSXEwZWZYaUM3YzFMN1V5c2xMbDZsbjVqbmw5bXd4bU0vVGh0NDJEOEdYaFNKVTV6djVETytYVFY0bnR5am9uTkxZek96TkEyZWhLcEhKRFY1NDRRV2FPWE1tY1YvUSsrL25MekVNY2NQVlZoSm5RMHdjT0hCQUtlSzVBVVkyYjcvOXRuZ1dVWEp5c3JLT1dVZ0pjMlZNdVBPMG9FMU15R2pPb045Kys0MUNhOVZSQ3VqL1orajNkZ1FGQmNsM2xhUFBySDE0UnhUZUVhdFFESUc0d1VCTUltcjdhVjc5ZGpsNzdTYTFnRERaMUlPWnlHVmkraG03T2lwVVpBTVpZQlEzZzFDQTd3QTJLYk1ZZWNqSTkzeldUWnJOb3dYYmVpbHNJbko1K3RnWnV6b3FEUHFWS01uRzdPYk9uVnRINXp2aGE5NHZMWitUV3hSV1RtbjBzZXpOQTJlaEtwRXhDNXg1TFZxMGlGNSsrV1h4cnV5SEgzNDRYNWVqUXR3KytlUVRoekdSbnA2dUZIR3pXTE5tRFMxZnZsenM5K3JWcStuZi8vNjN1TnhXVmRjTVlCNTRwcEhNVjQ0Sk41OFdsR1BDRnVzWU5HL2VQQW9PRGFQYUxKckZpQko5Z2U0QzBEZGFRVjhaK3UrT0tMd2pWcUVZQ0hHRGdaakVTeWRZZ2FUU0RkTWhpbnJBMmI5dkQwRlNmN21zckdPTGltd2dmWTNpWmhBSzhCM0FnbTBXcTg0WStTNkNjU2pxQVQ5TCtadUR2MTVXMXJIRm9JdEUvVzNNVGhhS3NlaGZLYWRqRm9XWlV4cVJnM25nTEZRbE1tWUFzM2owMFVmcGpUZmVvRGZmZkZOODRnWXp2TmRBVmQ4TUlHNFFlSW16SVNhUW5GYUp1Qm5BTEQ3ODhFTWg2QmdSNEJOVFpEQVFtSUJxblp5QTlYQ2ZoOHhYamdrM254YVVZOElXUFJoMDhlSkZxbEV6aEdxSFJSYURFUkJZVHZSZFlHQ2c2QnV0b0s4TS9YZEhGTjRScTFEMGhianh5Ymtwbk1nU09ReTlwUDdHb3FXcXAySE9MMFJidWJvT1ZSMWJWR1ErdmJJeEQvRHQvejl6NlBkekZ2MzA1MjIraHk1ZlVkYlQ4UzYzbG5IOU5sUjFiSkhFKzlnN0cvTVlpZjFTNUhheVEySG5sSVljemQ0OGNCYXFFcG1jOE5SVFQxbU5RemVQMTE5L1hTeS8rT0tMZVRhUW5Nd0R5V21WaU9lRWp6LysyR29jc25rQTZJTzhHZ2pXMmJWcmw4T1lLSWhwd1lJRSt0ZG1XdENSZVFCZk1PakpKNStreWxXcUs4WDAveFBRQitncUFQR3ZsYzlWL1hkSEZONFJxMUQwZ3JpZE1vZHFCL2hVV3lxUC9jRG1vYWlYSDFSa1B0Mk40bVlRQ3ZEdHo0SnRCb05QRy9tdStCK2JoNkplZmpEd0F0RmRObVluQzhWUTdKZE5YaWRiRkhKT3FlSzN6Sm1kVWVKclp4NFFFcFhJWkFlTU9CNTc3REZoR0crOTlaYUFiaUQ2Q0VRM2tIZmZmVmU1RFVlQXVFSG9KYzZHbUVCK1FTWGkyUUVqRHR4dkFjTkFBaHZRRFVRM2tid2FDT3J2MkxIRFlVemtkMW9RS09pY2tzMjBZSGJtMFlwQlY2OWVwZkR3Y0twVkorTC9OZEJOQVBvQ2ZhS1ZscXIrdXlNSzc0aFZLTHJEUEU2YVE5ZmpsM25WMndWL3ErcmxCeFZZTnp0bll4N2cyNDhGMnd6bWZXL2tpNzlWOWZLREFlZTVIN0l4anlUc2wwMWVKenM0STZmVTkwajI1Z0VoVVltTUkrQ01DOGFobXdhQTd6RTlzMnJWS29PaHdFQ1FBN0hkUm5hQXVHRTdFbWREVENDL29CSnhSNEFSd1RoMDB3QWcrQmpCNEY0RzJWRHlZaUE1bVVkK3BnV0J3c2dwMll6c3NqTVA0QjJHdUxBQWw2ZXFSUFgvQS9UcEt2eFAwUmRhZVFkOWg4TExCdHdSaFhmRUtoU2RjV1o4M0J5Nlp0cVlCLyt0cXBjZlZEaEIxTjU0Wm13UUN2RHQ5N001elB2T3hqejRiMVc5L0dEQVQwU2RiTXhPRm9yK3ZEK3EzSTRqT0NPbjFEc0g4NENRcUVSR0JUM0hzV3paTW5HMUVvQ1JoWDdtams4SXYvNGI2dWtHWWxid0lHNTRtNTNFMlJBVHlDK29SRndGUGNjaGY2Y2JCMHhJTnhENWQ5MUF6Q2JSc1Qxc1ErWXJ4d1MycDlwUE0zQlNUaWtuODhDenVuRHpJMDJaTW9YS1Y2aWtGTmM3R2RobmRCR0FQdEFLK2tUY25ZL0N5d2JjRVlWM3hDb1U3V0Vldk10bTBQWEVYN3pxN2RMMTRDL0tldmxCQlRhUXR0bVlCL2oyWmNFMmcvbm5qSHpublBwRldTOC82TS9pbnBpTmVmU0dLV0owWndaT3lpbmRkVGg3ODREQXFrVEdGcGc2MFkwRG93cVlBNzdIaUFNSldDekRPSEFHcnh1SVh1K2xsMTZpUng1NXhMQTlSNEM0WWFRZ2NUYkVCUElMS2hHM0JVUmJOdzV3d3FkdUhMb0JRZlJ4OVpadUlIbzlqQlp3R1MrV2N3SzJpVHVNWmI1eVRPaDlrMXNVWms0Si8zT0piMDdtQVloWDFGNjVjb1hxMTY5UGxhdFdGL2M2L0g4QTloWGRBMkRmLy9yTHFqT0dWODN5M3diY0VZVjN4Q29VYlRDdGNzd2NXdkNacTF3bXBwOVQxdFBodStrcythemNhNFdxamkwcXNJRzBOSjRaRzRRQ2ZQdXlZSnZCVEJaWHVUeDk3Snl5bm82dWU4OVM0dnE5VnFqcTJLTC9EMFN0YmN4T0ZvcTdZQjR3YUJOd1JrNnBBaHRJMXh6TUE5TTZLcEdSQVJOQTBsUWZjZUFUMzJQS3gvYk1XamNRYkJmMWRNQjhYbnZ0TlVOZEZTQnVFSDJKc3lFbWR1N2NxUlJ4R2JxQnlkOUI1SEdsbHUyMGwyNGdtSHFTdjhkK3dSamw3MVRBZHJkdTNlb3dKb3BBVHNtTWVRRHZNdkRpSzNHbFVkVnFOWlZpZXljQis0aXVBYkRQbVprc1dKYnlML1NaWFBnN0ErNkl3anRpRllvV21GWTVhaDV5ZWYva2orUjNPRXRaRDVpOTl6U2wvbmpSZ2d0L0tPdllvandiU0xOc3pBTjgrN0JnbTRWY3Z2am1SK3I5YlpheUh2RGlvZE9VL3ZORmdRTVgvMURXc1VWZlJvSU5YMWtvdW1KRXBlVnpjb0t6Y2tvZEQyVnZIcGdpVW9tTURDUnBZUUR2dlBPT0FCNXhBZU53ZEZhdEd3ak9jUFYxeklvYzJscXhZb1hEbUxBVmVSWDBHLy93dUhrQWY4TTRIRTE1eVFhaXJ3TlRBRlQxWmFCT2FtcXF3NWdvQWprbHMrYUJSMjlzWm9qL2UrblNwYWxHY0cybDZONEp3TDZoV3dEOEw3SFBXa0hDUTd4QVN5NzhuUUYzUk9FZHNRcEZQTXdqd3p3KysrVnZYdDFTY0E5QzFiV0hsUFY4L251YXpsNitQUVdEOVZUMWJGR2VEYVJKTnVZQnZuM09tY2ZPMzI3ei9ZUDU5dHAwU0Ztdjg0N1Q5S04wV1MvV1U5V3pSVjlHWERibTBSRWpLaTJma3hPY2xWTktQSmk5ZVdDS1NDVXlNdlN6Y0l3SVVCL2ltdE1adFg3bWp5a2dtQTIyWVR0S1VlSDk5OThUTi9GSm5BMHhvVTh4WlFjOW40RVJBYWFVY0ZkNlRya1NiQmYxY0RVWHpBYmJNSk9jaDNsczJiTEZZVXlZblJZRW5KVlRzcGtXTkdzZVFEQ0Rqd0lTZWFHeUFVRlV2V1lvaGRTcWUwY0IrK1JmTmxEdkk3R3ZXc0crQjZPL2JBdC9iOEFkVVhoSHJFTFJtQVhGOTRoNVRCUmhjcnQ4K3MxNTh2NWdCL2xzUGtjKzJ5K1NUeXIvdlRLZEh0M0hwN2hTd1hxcTdkbWlIQnRJUStPMGlrRW93TGZQOStieG9uRW1pRksvTzA5dFA5bEIzZmFkb3g1SExsTDNBK2VwL1gvVDZlMURScjVZVDdVOVcvUmxOTGJoS3d0Rk80eW90SHhPVG5CV1RxbjFnZXpOQTRhZ0VobGI0TXdMSW9tejdOeWNUVU5nSWVBWXFhaCt0d1hNQXdlcnhOa1FFOWlXcllDckFMUEE0OXNCczNrU0FBYUNGMDZadlJrUlJwcVNrdUl3SnN4TUN3TE96Q25aVEF2bXhqeUFLTWJ2REhyaWlTZkVkakM5b3hMaG9naDVxZ3JBUG1vRisxeVB2MU1XL3MyQU82THdqbGlGSWhibWNTaDMyUHFIOVltUm9oejg1VEtOVHo1Q25UL2RTd00zcE5Pblo4NXJ2MWpLb2I5dUtyZWpRcm5EUk5IWm1BZjQ5djQyZHpoeXhjajM1TVhMOU5pT0kzVHZsM3RwYmtxNk1CUzVmSDMxcG5JN0t2Umh4R1pqSHEwd29wSnlPdG5CV1RtbGhQVHN6UU9KWVpYSXVBb3dELzE5RTZxWWdIbXBSTnhWZ0huZ3lpeVpyeHdURUhyVmZzcUFDVGd6cDRUL3VjUTN0K1lCdEdhSWd0RVM5ck5TNVdwS01TNUt3RDZnSzdTK29XZWVlVWJiUzFGYW81OGNGZjdkZ0R1aThJNVloYUllaTRudndkeWhHbzhRemw0ekNyS2pjdW5HTGFySG9xWGFqZ3JsMkVBaWpYUHlCcUVBMzk1bmM0ZWgzK0daVnViNC9ubnpGazNnVVpKcU95cjBZZFN6NFNzTFJYUHVLMVZ1eHhIa1VsZzVwYmo5MlpzSDhnc3FrWEVWWUI3SWUwaWNEVEdCMFk5S3hGMEZQVDhpODVWam9namtsUEppSG9EVlFOQTJjaUNCNVNxSVp6OFZSZWdQT3dTd0w5Z25xV1JySENoY3g0QTdvdkNPV0lVaVBBL21BY0JBdHRyY3FHWmI4SHR1akFNSVl2TUl5OFk4d1BmdWIzS1BJVHhDT0hJNy9hRXMrSDM4OStyMXMwTjROdWJSbEVkU3F0eU9JemdqcDlRNExYdnpRSDVCSlRLdUFzd0Q4L2NTWjBOTVlJcElKZUt1QXN3RGtQbktNVkVFY2twNU5RK2dCVU1FSnU2a0R3Z0lvTEpsQTZsbVNCMmxRTHNqd0JXYzBRVUE5Z0g3b2hYc1d3TDZKNmZDOVF5NEl3cnZpRlVvNmtEY0QrUWRDY2VKSHZ2SlloUTZYcnBBMVBXVXVuNU9DR0lEcVcxTTZCcUVBbnp2UHBOM1RPTlJ4WXBmTFVhaDQ5UGZpZWIvcUs1dkJtRTJmR1doYUlqcE9DMmZZd2JPeUNuRjdzdmVQSkJmVUltTXF3Qnh3NmZFMlJBVCtwVlU3Z0lJUFQ1bHZuSk1GSUdjVW43TUEwQU9oRS9YaU02Y09VTnhjWEZpMnhVcVZsR0t0VHNCSE1GVkI3aC8vZlhYMkJVVTdGTVVmMitxY0YwRDdvakNPMklWaWhDWVI3cjdJSWdOSkRnYjh3RGZ1L2wvNlRaZzh3ak54anhpdEZ4T2JsRFlPYVg2T1pnSHpscFZJdU1xUU53d1pTQnhOc1JFZmg2ZlhoaUFlV0FLU2VZcngwUVJ5Q25sMXp5QUVNWi9HZUtaVDNpbk4vWWRWeXhWclJGQ05WbW8zUW5ncEY5TnBmV0Q0Q3c5cjJvREl3VDlZclp3ZlFQdWlNSTdZaFdLR2tmNWovM3VneUEya09yR3E0RU1RZ0crZDU5Mkk3Q0IxTXpHUEtKc3B1WE1vREJ6U3BnV2pOaWJ2WGxnRGx3bE1xNEN4QTF6K0JKblEweVl1ZmZDbVlCNTRLeGY1aXZIUkJISUtSV0VlV0FUK0Z6R0VBVWpSRHhBRUYvamt0NXFNSkdRT2k0Rk9JQUxPT2tBUjB5RlNtVVpmNS9yd3V2WjlVZVJMN3dqVnFHb3ltTHNuOFpmdUFuS3NZRlV5Y1k4d1BmdVUwUzkzQVM5MlVDcVpXTWVkVEVkcHhEeG5GQ1lPYVU2ZTdJM0QrUVg4dk9ndllJR3JnYkt5VHcyYmxRTHVTdXdhVlAyNWxFRWNrb0ZaaDRvdkR5SWtjbWdhOWV1aWF1eGtFZkFULzVsQTZoSzFacEtZUzlNb0UxNXBBR0FFNjZtQWtldDhORkZnL2kzUEJWZVY5a2ZSYnJ3amxpRm91TCthMVFGVTBiNzNBUFZXR3dyN3YxYmNGTUpSWlgwYTlTWEJWc2w1SzRBdUZUWlorUXJDMFZ0OUsyV3o4a0xDaU9uVkd0Mzl1YUJTME9YTDNlZnZNZUtGZjhXZDFGTG5BMHhnUnZsa3BQZForb3FKU1ZaSkZobHZuSk1GSUdjVW9HYUJ3ci9qWWNwaXFmeG91QjF0cmlIcFVJRnl4Vk5ucDVlRkJoVW9WQkhJOWcyMmtCYmFGTUhPSUNMOVBwWUZIQzFQdVF3TDRYWGQ5Z2ZSYmJ3amxpRkl1aUw4OVNZendrQ2NPYXZFSE5uSXBBNU5HVXVnV3UrRTl4VVFsSHp5L1BVNjJ1aVBpZFp2RjJNdml6Z3ZURnQ5Wm1Scnl3VUlaaU8wL0k1N2dDUlU5cVZ2WGs4OTl4enRIcjF4MjR4K2dDSE5XcytGbWVyRW1kRFRPQnFwTzNidDFrVDFhNEVPSUNMN1UyTmNrd1VnWnhTZ1p1SFh2aDdYSTBsWGlpRjh1ZWZmNHFuQXNmR3hvcjJBWWc3UmdWSVhsZXRubmN6d2JyWUJyWmxheGdBMmtTc2c0TlV3TTNVMVZRNUZkNU9qdjFSNUFydmlGVW8vQmJ2WUVHNVFmRThRS3ZGd2xLSkJieUNrNEUyYTNQYjRCQjA2Q2I1TGpCZUl3L29CMTcwUDdaVHVZTTNhUEFab3VGODFqK0FCYndmQzdremdUYlJOamlVWTc1Ump4c3Z5NXcxYTFadG5XOE5LWi9qRGhBNXBSek1nL21MZXd6V3JsMGpyZ3lDRUVMd25BbTBDVlBBVlViZ01tM2FOSWN4Z2ZkYllQU3hZOGQyY1hVU0V1aVl5bkltMEdacTZoYkJBVndlZi94eGh6RlJCSEpLaFdZZWV1SGZFeGxyR2RhQ1o0bk5tREdEcWxXN2ZXTWVVTkxEZzd5OHlwQ1ByNStZNXNKN05QQWVFZHlIQVdBWjMrRTMxRUZkckNOdlF3ZTJqVGJRbGswQmwwU3VVMkNGdDJlNlA0cE00UjJ4Q29YdnpJM2s5L3hCQ2tqUG9vUVRSRzM0ekw4VmkzaExKd0Z0b1UxTXp3U2tYU08vNXc2UXo3MkdWMklhaEtMaDRxOG8vTTBEYkhoWjRxeC8zRGNXakhVUzlMWjZjdHZsOWwrajhEZlNLZVpCdzF2WWdoWXRXaFNpODYzS3h1aDJPYVdkMlpzSHJqSlpzR0NCdU1zWkJySnVIZTRYK0pTeDFrbEFXNTl4MjZ2RmRCVzRUSnc0MFdGTUxGMjZsRjU1NVJWeFg4VE9uZHRwOSs1ZDR2RWp6Z1RhUk50NHhTeGUwb1NuMjhwODU4K2ZIK0xCZ2dhK1JTQ25WT2ptb1JldTE1VHhLdU13UTVSYnQyNEpjWC8yMldlcGI5KytGQklTSXJqbEJWZ1gyOEFKQnJhSmJVc0ZiYUx0T0s1YjRJVzNtK3YrY1B2Q08rS0RJTUdpenowZkN3UHhYYmlWL1A1OWh2dzMvVWIrVzM1M0xqYitLdHIyblo4cXVQaE10RDRxQVUrbUNnQllLUDdFZ1JmOXdDcGhJTkZQcFZMd3FqTlVNZVUzcXJEMWQ2ZWlVdkt2b3UyWUo3WUlMdlZuV3UvT0JkOUFGcFB5elBjYStGYmNkcFdxNEt4Zk1VM25DbFRqRTY2S1c2N0lmSDE0MlJBVDQ4YU5Fd2FDTXpTY1FlTkJleEJFWndKdG91M3AwNmNMTG1QR2pIRVlFeXpNd2tBd3RZWHBGenltQXk4M2NpWndneDdheGhOd3dXWHUzTGtPWXdLbTdHNDVKVHpTWGVLcngwUytrTnZDNi9SanJHVFlGZVJJOEd3eWpJUXgxYlJ3NFVJeEdzVkpCWUJsZklmZlVBZDFzWTZEZ2piNmFjMFdXdUUyOHRVZmJsbDRSN3hMbHk2ZGdjVXlkeSsybUljYndhdWI1Y0R6OVBUY3cxekxBbDVlWGhrNDhHb05XaVFFMjUwUTBuZU9nZStCQXdlQ2RMNkJIMlJTNHlNWVZhbkYzSmtRT1NWd2VXdS96TmVibHcweDBhTkhEeUhZN29UT25UczdqSWxodzRZSndYWW5EQmd3UVBCbGp1QWJrSmFXRmdpKytBNlBWM2UzbkJLZXdpdjFyeDRUK1VKZUM2K0xSNzAzWTh4a2ZNSVFOeHptc1dCZGJHTTJvem5EN3RIcGhWVzRyUUxwRDdjcXZDTmwvUHo4WHNkaXlhRHE1SHZmWjBvUmR3bnUvNXc4eWdXTFFBNElDUGdIYy9VRGVQa05mRmVtZkhXS25mK3BVc1JkZ2RnRjY2aE1SY3RUTjIzNGl2NHRWYjhsQmUzTW9uZ1diWmZubEpoRDBLNGJWRG8yVWZBdFc3YnNVNGdGWGpiRUJGNXlNMm5TSktXSXV3S1RKMCttY3VVczc0dFd4UVN1bGxtMGFKRlN4RjJCeFlzWFU4V0tGV1crL2d4Zjd1L1g4RjFZV0ppNG9zMmRja3FSa1pHcW1IQW5sR01rTUhEWjd3ekdZNHdYR0c5cXdESyt3MitvZzdwWVI3VXRsK0NPS0x3am5xR2hvVjA5UER5K3g1K2x3bHFJUElOU3pKMElUS0dWcXROY0JERzQxYTFidHhOejlRYjRnT3VtOHcySWJDSHlEQ294ZHlZd2hSWVFvZVRyRXhFUmtjamZYY0J2WGtsektHRDdkVXJJSUdwemxNU1RkbHM2Q1dnTGJTWmd4TEgxS25uMW4ybmxXNzkrZlp6ZGVmTGZkakZSdTNadE1SMmdFbk5uQWxOb3RXclZ5akVtNnRXckovSU1LakYzSmpDRkZxa0pNYmlGaDRkM1JqeUFyeHdUWGJ0MmRZdWNFcWFyOUZFZCtNb3hVVnlLaTEzaDRDak5CMlJ6UGp1YXhNUCtTL2lxcEg5RjhtdzFocndIUFVmZXcxNTFMcEtlRlcyWDlMRytiT1Z5NWNxVngvSEJGc2RjdlFBV2pRU1pyMmRBUmFyYVlUVFZIZnRQaXBqNGlsTVJOdm9mb3UzU2ZvNzV0bXJWS296NVR1SGZycUNPUjYxWThsbTZqdnpXL0VCKzZ5NDRGNnUvRjIxN1ZBc3o4RzNkdWpVZUlWR2F2MVBHQkk5RUtDRWhnZnIzNzA5SlNVbE9CWktjYU52SHg4ZDBUUEJadmhCQ21ONlVLVk9jaXZIang0dTIwV2NLdnJqSHdUTStQcjZPSEJQVnExY1hCb2xrTHVicW5RbmtoOUIycFVxVkhNWkVBWmVTREV3WndaZ3dMWWFrZkZrYjREdjhoanFvaTNXS2l6c1ZEZzRQRm9wYUhMeWRhOVNva2VUcDZia0RYN3NEU3BVcWxWR2xTcFZSNE1iaVVKTzVsZ0tLR04vUzY5ZXZMeE1jSE53R0J5VFhPYVZhMXhYUStZYUVoTFJPUzB2elJDenc5OFV4VVlDUStVWkhSK05OZTZXQm9oWVRCVkFnL2pBaW1FSVFveFpqSUdNQjR4M0dLc2FYR3JDTTcvQWI2cUF1MXNHNjJFYXhrYmhENGVBb3ljTlZ6L0xseTdmZ29PbkVBZDJGbDZmeldkTXlMeSt2VkFTMk04RnRwbkRiYjRJRHVJQVR1S1drcE9DZ1EvTE1vNmp4WlpSS1RFd000dDg2c01aMUxWZXUzR3gzNFZ1MWF0WEU3dDI3NDRvbGlMQTRLUEZaSEJONWh3bStKUmxGS2lieVdMQXV6QWQ1RTRoL0U4YVRqQVBjNXEzSXlNaHJIVHAwK0h2dzRNRi9qeG8xK3U5Smt5WmQ0VkhiMzRNR0RmNnJWNjllZi9EbzdFODJzU3VsUzVlK2lYVzBkYkVOYkF2YkxCNlJ1TEpvZ1Z5Uy81RmxnNEtDMmxhb1VLRVRnaDFuU2dna0JMWU1QdHNyVU5odUgyMmliWEFBRjNEaU16WWtHUVhQb3NxWDRZRURrdXMxZHhlK0xCTHhBd2NPQkZkZDBLem1BUlRIaERuWWJqOEh2dGEreG5KUmlZazhGTjAweWpPR001TFpJRy8wN3QzbjZ0S2xqOTk4Ny8zM2J5MWI5ZzY5L3ZycjlOUlR6OURpeFV0b3laSWxOR2ZPWEhyZ2dibmlpcTk1OHhmUXdvVVBpL3pWMEtIRC9temNwTWtsWDEvZjY5aVd0azFzVzVoSXlaTEZIdUwwd3NGaEZRc09aRnhsMDhEZjM3OURZR0JnUndTK0RnUldZVUp1QzIyREF3ZEtVeTYrT2orTmE1SGx5OEFCV1NvcUtxcENhR2hvN1pvMWF6YmdiVUU0bXRlb1VTT2hNS0czdzIzR291M1kyRmhjZlFJK3NwZ1Z4MFErSUxkMXA4VkVMZ3BVSEhtS0FBWUVQaVU4UER4cjRjS0hycTFjdVVyY2dMajA4U2RvNnRUN2FHRFNJT3JZc1RPMWFkT1c0cHNsVUd5RHh0UzRjUk5HVTJyU05KN2F0azJrTGwyNlVzK2V2V0VlTkc3Y0JCb3pkdHl0RGgwNi9zNUdoUHVRdGpCR2FHMmh6V0lIY1daQmNFZ1FBY1AvbUVBK1d3cmw0SS9oNEk4UENBaHdDdEFXdHhtTnRzRkI1Nk54VTZGSTh0V2dINlJDUEp3RXVVMlppNVZqY1V6a0Qzbmc2L2JJUmNGb0EwbnVtb3ozS2xldWZJTkhFTmMvL25nMXZmVFN5elJqeGt6cTJldHVhdGl3Q2RXdVU1ZXFWUSttY3VVclU1V3FOUVRLVjZoS1ZhdlZGTUF5dnNOeTVTbzFLRHdpaXVMaW0xT0hEcDJwVDU5KzFMLy9RSXFQYi9hL01tWEs0SUtEOTdRMjBYWkI1V2lLUzNFcExzV2x1RGlobEdJZ29UMjBaTW1TTFBCOXJ1SWQ2cSsvL2dhUE11NFhONXZXQ1l1Z1NwV3JVVVJFQkZXb1dKVXFWcXBHOWV2WDUrK3FNMnBRVEV5TU1Bb0F5L2dPdjZFTzZnTDRIa2JTUEtFVjNYMzMzVHhxU2N5cVhLWEtUOXd1WEc2WXhnRmNpa3RoRjhXWmhuNm1WREkxTlRWNnk1WXRjYzRFdDRuWFZsbzVNRlFjWlZqcm5qeDVNcG9SNTJUa21hK2J3TUF2cDVoNGxQNFYvZ2k5RytkTW9FMlpBMFBGVVVhUjVlc21NUEF6VVNEV3VMeDJJWSs4Ymk1Y3VQRDZpaFgvb1lVUExhSzc3dXBGRVpIMTJSQ3FpMUZFOVJvaFZJbk5vV1p3YlFvT3FVMVZxZ1ZUU0dnZFJoai9IaUkramN0MVJCM1V4VHBZdDBiTlVQRjlSRVE5YXRhOEphTUZmeGY4RTV2V05YRFF1QlFiU0dHWHFWT25DbWhCQTNpa3BLVE1TazVPdm9EM0lpUW5iM0l5MEdieUJlWXdDVngwWGhKUEhWYSt4NDhmbjhXNGtKbDVqSTRkTytwVW9FMjB6VER3WGJwMGFRbUFsKzM0YXRDbmtzU2xtMDZFN1JTVzRLWDNMMHJRRkc4Qi9iZFhicTN4VzNScjJUOGZ2dlgycFFlelhxYloxNTUzS3RBbTJtWU9UNEtMemt2aWFlaGptZStpckRmb29XdXZPUlZvVThVMzR0NWFKUUNOcTVVdnd5MWpZdUxUaVNXQUhJcHVIRXZMbFN0Mzg0VVhYcnorOXR2TGFNcVVlNmxwMDNnVy9GQXhQWVVSUkkyYXRZUUo2TVlRV2d0VFY2SGlFNmhlSTVScTFRNFh3TEwrdlY1SE54VnNBOXZDUzV4cTF3bW4yQWFOZUhRU1MxV3JWci9FQnZJWGMzbGM0MVJzSUlWWkpPTVF3Y3VpL2RHbVRWK0t4eFc0NG5rN2FIUFZxcFcwYVJOZXBKUHlFVGhwM0lUQThhZUJMNHYyUjBlT0hLSnQyMUpkOGdZNXRJbDNObVJrSElhSkdQaEs1bUhseThEQml1dm54YzF0RE53MDVrem83WUtETGh6Vy9rV1JqRU53WG5qenpRMGpmMTlBRmI1cFJ5VlBOYUVTcHhvN0ZXaXpJcmM5NnZKQ1lpNWZiTDZWQnY2Q3MyUWVCcjRQL1A0czlUNXpMM1U4T1pZNk9CbG9FMjNQWVE2MmZDWHpLQkl4a1lONUlML2d4M2lvZlBueU4xNSsrWlVzM0tVK1pNZ3dpcW9YUTFGUlVjSTBJUElOR2pRUUpsQzlSaTFxMHFTSkVQOGFOV3V6d1RRVm4rYVdMZXRpRzlnV3RsbVZSeVg0UGo0K1hoaUp2My9nYnlWS0NBTjVTT05XbkFNcHJJSUEwUUlGeGpGNjgrYXZDSTlsVmdtN013RU80QUpPNEtaeEJGY3JYeGJyMFJCdHZFTkJKZXpPQkRob0JtTExGNStDTHdNSEp3NVc3eTVkdXRTT2lJaG83V3lFaFlXMTZ0bXpKKzRjeG1NOXdBV2NySHh0WStLaEcyL2VNK0h5SWlwektwNUtuR1F4ZHlIQUFWekFDZHcwam9hWXdHOXpMejlIWFU1T29QWW54cm9VNFBBZ2M4bU9MNk5JeElTaTRIc2txTWY0K1BqY2ZPYVpmMlR4cUlNR0RCaEVFVkgxcVhyTkVLck1waEVjV3B0SERXSDhkMjJxeGVKZU95eUNhZ1RYRVovNVdjYTJzRTFzTzZSV0hmNitGb1ZIUnJHUmhKQ2ZYOWxmbUJlbXNNWm9ISXV2d2lxTW9nVUlBc1VyT1RuNUVKN3dxUkp6VjJETm10V1l3dG9CYmhwSEdWN0hqaDA3aFBjbXFNVGNGZGkxYXdjeEo1bXZMQkQ0enJ0YXRXcDlTcGN1dlFkZGp6TW5QSGJEbVVEQ0VXMHpoMjNCd2NGZHdVbmpKdmhLTVlFelVLKzUxMTg1VXUrNzNsVGlCQXU0RzZEaDl3UG93ZXV2N2dZM2hoNExnSlh2a085bVUvdmpZOXdDdzcrZmt5MWZoaUVtYWphdFNSSGRJcDBLdEpsVFRDZ0tMbzBOUlhKOHpweTVmNy80NGt0aXhGRTNuQVVjcjQ5bE1jZm9BRk5RdGV0RThOOTFxRTVZcEVETjRMQUNXbVlqNFcxYnBybHE4V2NZMWEwYlNlVXJWQ0ZmUDMveDNEQUc3azRIMStKUzBFVUxFQVNLejRZTkc3THdsRTJWa0xzQ0sxWXN4d3QxL21adWVqQkRoSEhRNGV6STUvRGh3MW1iTjd0KzFLRUQ3NnRPVDAvWCtlcGN4WmtsajZEOHZiMjkzMEtYNDMwRCtydTIxWG1md3NSbTBiYitRaVUvUDcvbkpiNWlqaGlmREM5d252SFg4emU5VC9LbzQzZ2p0MEM1MDYxcDJxVm5sVEdoOCsxeVlqeTF6MlR4ZGdQY2RlcWViUGtpSnJ3RHlsRFN5aEYwMzIrUDA3MS9QazZUL25qRXFVQ2JhSHZBOHFFRUxxcVlzQ2t3bEVERys5MjZkYnVDRy8zR2pwMUE5ZW8zRUZOVnlFdEF6QnMxYWlURVBqaWtycGg2d21kaExLTU50RldqWmgzK3V3NUZSMGV6Z1ZTbVVxVktmd3VPR3RmaTZhdUNMbHFBZVBQUTh5bThjMWtsNHE0Q2pHenQyclhrNysrUHh5dmphYVF3RFdFYzRIdjA2RkdsaUxzS2VQMG9Yanhqd3hjSElmaStpTzdHVys0MmJrUk82VU1YNTVTK0ZGekFTZU1yeE1JbUpsNmMvdmR6VkNLVGhkdE40SCt5QmQxei9nbEhNU0g0Smg0YjdUYm9lbUppdG56UjNXUFRwbEhTeFJsVTRadTJWUEowRXlweG1rZFpUZ1Rhck1odEQ3bzRrOGJzdVo4OFBFdlp4WVJVTUFXRXU3cEhWYXBVNmZvTEw3eDRhK2JNMmVJbVB5U3lxMVVQNFJGQVhURWlDQTRKbzdDNlVRSWhvWFVMZFJsdG9VM2tQWkJZeDFWZDVTdFV5bUtldjRPcnhybDQrcW9nQ3dlSFYwUkVSRHd2M29BQXFnVEhWVURlNDlOUFA0WEEzZUN6akZnY2NBQWVGWTN2TWpJeWxDTHVLaUR2c1hmdlhwa3ZEajdmbUppWWxoamVqeHc1VXVSeDNDbW5CRTRTWHk5ZUZqRlJ0MjVkdlBpZjdydnlEeXB4aklYYlRlQjNJb0VtWFhqTUxpWWlJeU5iNkh3VGo3Snd1d202SEIvUGZKYzY1TnZ4MFM0MC9OY0hxTXhwSHQwcExoWndKc0JoK0s5ekJDZUpyNGdKcVdBa2dzZUNiSjA4ZWZMZmp6enlHSFh1MG8xQ2EyT0VnZHhEYmFxTmFTV0llNjF3Q2d1dkorQ01aYlNKdG1zeUQweGxWYWxXZzgrQWZNK0JxOGE1ZVBSUmtJV0RnMGZPbHVtVUw3LzhVaWswcmdJRWJ0MjZkUWhrOHZYMWZZTzU0ckpIZng1V3Z3MHhQbkxraUZMRVhRV1l4Lzc5bGpmemFYenhXSXF5ZklhNUVueHhCWnU3NVpRd3VnTmZqb0hYbVN2T3prUk1lSGw1ZllURmUvNThpa29jWmVGMkUvZ2RUNkR4RjViWXhZVGV4K0NibU1IQzdTYm9ram1lSnZ6eWlFTys0MC9QcFlodmV5b3ZFSEFGb3IvdlEyT1BXdDd6SXNlRVZNU29JelEwOU5vVFR6eUp4NFdJNlNPTU9HQWNtRDZDa0lmV2poRGY0OU9aeTJqYndxR3V1QklyT0RnWWo1ai9IM1BHWTB4czk2VzQ1S2R3Y1BoNGVIaWN4ZUtHRFJ1VUl1TXF5T2JCSERPWnEzaGZkZW5TcGMvaXdEdDgrTEJTeEYwRjJUdzB2bmhGYW9DbnB5ZHVZQkw5NjRZNUpjRzNWS2xTSnhBTHZDeGlndm4rZ01VSmx4K25FaGtzM0dieFZYMHE4ZDk2dDdHbmdib2VJTmNERGpWVTE1UGdsNWxBb3k4c3Nvc0o1djhEK2hoODJ4MFpaUnJOdit4UHpkYjNzNkwxN3FIS2VvQmNEMmg3Y0tTeW5vek94OGJSbUF1TFZURXNZbUxDYjRzdFY3S2Q0UDF6QXdTZGJrVVR6ajlrRnhOYXdiUVBubWk3WmZpSWtYL09uNytBMnJmdnlHZjZ0YWtXaXpXUzJCRHc4SWo2QXJYcVJMcGtHUnd3bFFWT2xhcFVKeDlmdi9QTU9VWGpYangxVlZDRmd3TzM4OS9BSWhLcEtwRnhGV0FlZU1zWnVQR0JoamZZNDFsQmdSelVOM0RnSFRwMFNDbmlyZ0xNSXkwdFRlWWJrSm1aV1lINTNnUmYxRkh0cDZzQUk5UE5nL2xkMG9WaSsvYnR1TUZLeE1UWVMzeldmSVJGM1NTbW4zeVNGdTE3M29wR0crNVcxaXV4UGNaUWI5R1JGeW5vV0d0MVhRbSt4NXJUaUo4WEdHSWlJeU9qdkI0VDROdnVNQXUzU1R4MzRsLzA2cjczclJqeTMvdVU5VnB0RzJ5bzkvcmg1WFRYMFh1VWRXVjBQanFPUnY2OFVNVlh4TVRZUzJ3c2lnc0RYQVcva3drMDlvS1ZyelVtdElKM2FUUXJXN2JzOWZrTEZ0NGFQWHFzdURrUEl3NFlSOTN3ZWtMRUl5S2pCV3FIUmJsa0dSekFCYWpPSTZLS2xhcmNZdDY0OTZPeHRnL0ZwU0FLQndmTVF3VEwrdlhybFNMaktzQTh0SndIQXZrUDVob0U4SUdIdituZ3dZTjJBdTVLd0R6MjdkdG40THRreVpKZ25hODdUZ3QrL3Zubk90OC90VmdvTVhyMDZLcjREaGo1SzUvbEgyYmhOb25SM3ovRW03bGRVbjdZVFNXMnhkalZTOXcwWEt0aEtTbS83N1dybzRMdjBlWTA1TWNISGZZeCtMWTd4Q01DazNqaXU3Y3NCTFN5OTRlRDFHcnJJTHQ2RXpiTjFXcFlTdnJ2UiszcXFOQTVZeXdOKzNHZVE3NmpmdVd6Zk1XRkFhNkM3NG5tTk9wbksxOXJUR2dGeTg4MGI5Nzgwb01QUGtpZE9uVVZ5V2xjL2wwTHlXb1djRXdmMWFsYlQ4Q1Z5K0NDL0FldXZNTHp0SGlrOXgxemYxcmJoK0pTRUVVTERoRXNPQXRWaVl3dDhLcE12RzRUbDV6Kzg1Ly9WTlpSQWMvbHh5V2lDeGN1VlA1dUM0Z2JycllDTnkyUURlWng0TUFCcFlqYllzMmFOZlRxcTYvU20yKytLYmFucXFQQ3YvLzliM3I1NVpmRkdicnFkMXRJQ1hNclh4YUtVSjJ2TzA4THlrTEIvNk5xK0E0WThqOCt5ei9Jd3AwTGZQUDNEN3lwMnlVeGViaXh6cDVZWVNweWFYUWl5VmpIQVh5UE5LT0I1MlliK25qcDBxVWhlaCtEYjlzREkzT0ZILysrWUNHaGxRbWI1eGwrYjcxN0dPMDlkMUQ3MVZMR0hsOW9xT01JSFErUHBhUnpjeHpHeFBDTDg1VVhCcmdLdnNlYjAvQ2ZESHgxc2RXbnJOS1RCZzM2YS9JOVU4UlRibkZsbFppcWlxeFBrZldpS1N3Y256RUNybDJPRnB6QURZOUlLVnMyQUhtUGRHMGZpcWV1Q3FKb3dTR0NCV2VoS3BHUmdmY2R6NW8xaXg1NTVCSHh3aFlZQ0w1VDFaVXhkKzVjbWoxN05qMzIyR1Awd0FNUGlFOVZQUmtRdDA4KytjUnc0QUg2Z1plZW5xNFVjUmw0c3VleVpjdm9QLy81anpBREdBaStVOVdWZ2ZheEhwTGNlQWNCUGxYMVpNQTg5dXpaWStETCsxMUg1K3ZtMDRKV29SZzNibHgxZkFjTXZEQ1hTaHhnNGM0RkVrK040MDNkTHArYytZcEs3STYxL2w1cmZRZnRGMHQ1OXdLZklFanJad2ZmdzgybzczZlREWDBzaXpINHRrMGZrU3ZjZi9KeEN4R3RiRDZ6blZydkdtcjl2ZGNYeHYxWmZ5SFZzSDUyNkhob05QWDd6cEtBVnNYRTRGOTRGR1Z6VVVDMjJGaWZTbXlvZHh0N0c2anJBWEk5QUtNM1ZUMEp2cG5OYWZBUEJuUFd6UU5YS3RYaU0vaWJiQnkzQmc0YVF2VllxTVhkM3BneWlvSnd4MUpZUkxUNGRJZGxjS3JOSTVHUVdtRlVzVkpsVE1QaTBsM2NORmg4MVZWQkZDMDRSTERnTEZRbE1qSndKdjdNTTg4SXczanFxYWVJei9wbyt2VHAyUnJJbkRsemFQNzgrYUtPanBkZWVrbFpWd2JFRGFNR2NOTVBQRUEvOEpDY1ZvbTREQmdpdGdIRCtQampqNFVKdlBYV1c5a2F5THZ2dmt2dnYvKytxS01EZmFPcUt3UG1nZnM4Wkw2eVVMajV0S0JWS0lZT0hScU03NEMrUDdPUXBMTkE1UklwbC9ieTVtNlhXbCswdC95Mkw1YmV6VnlsZldzcHRUSzYyYTN2Q0Q0SDQ2blgyZnNkOWpINHR0M1B3cDFMcEY4NmFpR2pGUmdHdm0remR6aXR6ZHlnZldzcFNVZG0ySzN2Q0IwUGpxYTd6MDV6eUhmZytRZW9SQWFMdWtsTVAvVWtMVXA3M2dxUlUxTFVLN0VqeGxCUDVKUXlXNnZyU3ZBOTFveVN2amVZblc0ZXVOOGpxV3JWcXBmSFQ1aEV2WHIxSWp3aXBGYnRTSEYxVTFoNE5OV05pQkZUUnZoMGgyVndhdHk0c2JnZnBHS2xxcmhnNFRmZWgwSGF2aFNYL0JZdE9FU3c0Q3hVSlRJeUlLeTQwUXdHZ3VrcmZEN3h4QlBDUUdBbXR2VXgybGl3WUlHb3A2L3oybXV2MmRWVElTZnpRSEphSmVJeUlPaTRlUS9iMGJGcTFTcGhJREFUMi9vWWJjQTQ1UG9RZld6SHRxNHRVR2ZYcmwwT2hjTHN0S0N6Z1A2MW1SYTBNNDllUC9KWi9uNFc3bHlpMGJHQnZMbmJCWVpSWW1jTUJhMlAxNzZ4bEhkLzRmWVY2enVDejRGNDZuNW1pc00rQnQ4MmFjTnpqYkhIRmxnSWFXWHRzUTNVYXNjUTZ2REZVTzBiUzFuL1M2cHlmVWZva0Q2SzdqcHpyME8rZlg5aW9WWmNHT0FJbzg4cGNrcmJZK3pxSlc1VzVKUnM2cWpnYzdRWjlmdldZSGE2ZWVBWlVZc2pJNk4rR3pWcURMVnNuU2h1eXNQVlRYVlpwT3ZWYnlnUUhobnJWc3ZnaGl1djhEaDRIalY5ei91d1JOdVg0cExmb2dXSENCWUlpVXBrYkxGaXhRcGF2bnc1UGZ2c3N3SXdCSXdtWnN5WVFVOCsrYVMxSHFhbmtPZlE2eUEvZ3R3RFJGdmVuaU5BM0ZBWDNQUUREOUFQUE9RWFZDSnVpOVRVVk5xeVpZdVlBZ05nQ0JoTndFQmdKSG85VEU5aGFrdXZnLzZBNE8vWXNjT3dQVWVBZWFDdXpGY1dDalBUZ29BemMwbzIwNEoyNXRIdDNGUXFrY2JDblFlOGUzNHRiL0oycWJVMmtSYnR4Wk12TE9XMzY1Y3A2RUFyNWJxTzRKTWVSNTFQV3g2dG91cGo4RzJ6ajRVN0QvamlmS3FGbUZidSttUU12YnIzUGUwdm9zdlgvNlR1NlJPVjZ6cEMrLzJqcU12WGt4enl2ZnNISGtYaEV1VmN3QzZubERMY1dHZXZJcWQwTXNsWXh3RjhqalNqM3Q4WXpFNDNEenloOWwrTkdqVytPR2p3VUlwcjFvTHExSTFrb1VadWdjVTZtc1dhRVJIVndLMld3UTAzRWVLT2N5K3ZNakNQZjJuN1VsenlXN1RnRU1FQ0lWR0pqQW9yVjY0VUJ2TGNjODlaQVFOQlB1VHh4eDhYT1E3a1JKNS8vbmtoZ1BqRU0zQWd5aEJwMVRadEFYR0R1SU9iZnVBQitvR0gvSUpLeEZYWXRtMmJNQkFZZ2c0WUNFWWEyQmUwQitQQU5BNSt3eWR5RkR0MzdpUTh0a1cxVFZ2a1pCNW1wZ1gxUG5SV1Rnbi9ENG12blhsMCtuWXlsZGpId3AwSDFEcmNUUmlFWGo3NStrdjY3ZXJ2Mmw5RWk3NS9WYmxlZHZEWkgwZnRUNDUxMk1mZzIyYnZzRHhoNEtIcHdpRDBzdm5yN1hUNUtpNlFzcFJsMzMrc1hDODd0RThiU1IxT2puZkl0OGM1Rm1ycGdnQXpTRHl0eUNudGliWCticGRUd3VoT1dqODcrQnlPNTVFUy84OXRZb0lMTHQvK21NM2pmSjkrQTZoRml4YmlpaVpNRCtFeDZaSDFHZ3BneXNpZGxzRU5DZlJxTlVMSno4OGY3ejFmcmUxTGNjbHYwWUpEQkF1RVJDVXlqZ0R4UlNJYStRc2RPR3ZHQ0dUUm9rV0c3M0dXRDBFMmF4d0F4QTNDRG03NmdRZm9CeDd5Q3lvUmR3UUlPMFloRUhFZDJHZHdneEhLMytPeVdtemZySEVBTUkvdDI3YzdGQW96MDRJdXppblptVWU3YjFqNElFeDV4S0x2WHVITjJwZmZydjlPUVdrdGxldGtCKzk5VGFuMThWRU8reGg4Y2FOZlhySHN1NDh0QkcwS1RLWGJ2dHh2TzNFdmowQ09qM2JJdDh0M0xOUUgyUmh6Q2J1YzB2cjJsdC8ySzNKS3g3clpyZThJUG9manFOdnBDWFl4d1FXQ3U2RlJveVlYNzc2N0R6VnNIQ2VtcktMcU5SQWlIUjNUV0NDcWZpTzNXZ2EzaU1nWXdsTitmWHo4Y09QckJtMWZpa3QraXhZY0lsaGdCaXFSeVE0UUg0d084SkE5VEVucG44aHI0Qk9BWVVDUWMyTWNBTVFOQ1c1dzB3ODhRRC93a0Y5UWlYaDJ3RWdDQW8vcEtCbklhK2pMTUF4TWllWEdPQUNZQjBZNE1sOVpLR0NlcXYyVTRleWNFdjduRWw4NzgyajFOUXNmcnBUS0k0TDJ0VFNNUHZRaVJoMksram5CZTI5VFNqZzJ6R0VmZ3krdWxNb3JZQkR5NkVNdkdIV282dWVFeEQzRHFlV3g0UTc1ZGpqTFFxMjRNQ0FuTk1wVTVKUjJ4VkRRZnhVNUpjWDZqdUJ6TUk0Nm5SeG5GeE5jaEhuRXhqYjRwWHVQWGhUYktJNGlvcUxGMUZCVWRHT0thZEJFb0Y2TTVkTmRsc0VOVjE0Rmg4QThmSC9FUG1qN1VsenlXN1RnRU1GaU5oZGhDeGdJZ0xlSVlXcEtCbjdIWEg5dWpRT0F1SDM0NFllR0F3L1FEendZZ1VyRWN3TFdBekF0WlFzWVFGNk1BOEM2VzdkdWRTZ1VtQTVUN2FjdFhKaFRzak9QWnFkWStCUWluaHVNL25vaGIvcDIrZWF2YzhwNlpnRHppTXNZNUxDUHdiZjFUaGJ1ZkdEcEtUelM2WGI1OGMvenlucG0wRzczY0lyUEdPeVFiOXN6WSt3dUNqQUxYT0lzbDFxZkpvcTc5ZlVpY2tvSFd5blhkUVR2QTNHVWVNSXdzcFBOWTNWNGVPU1BuYnAwRTIvdUMrY3orcWpvUm1KcXFINXNVd0ZNR2JuVE1yaEZzSG5nVFlSKy92NjR5N3g0MnFxZ2loWWNJbGowdWYrOEFPYUJuQWtNUkFmT29QTnFIQUN1ZW9LUWdwdCs0QUg2Z1djMmthMEN6QU1qRjlrNGNGVldYbzBEZ0hsZ1drem1Ld3RGRWNncDJabEhreE1zZkR0ajhnMjVMRHI2b3JLT0dYanZia3lORHZkMzJNZmdpNnVrOGd1NXZKR3hRbG5IRE5ydUdrYU5EdzkweUxmVjZaSEtDd1BNSU1lYzBqa2UzU25XeXc3ZTZYSFVKdE13VXRMTlF5VE1nNE5EZms1czM0a2FOb2tYWi9TWUdvSkl4emFNRTRodVlQbDBsMlZ3dzlSYWpacWg1RlhHRzAvWUxVNllGMVRSZ2tNRUM2YUlWQ0pqRmppTHhidytwbDR3WXNpUGNRRHZ2LytlRUZCdzB3ODhRRC93TVAya0VuR3pnUGtnNmE2UEdQSmpIQUMyZzZTOHpGY1dpdHhPQ3pvanAyUXpMV2huSGcweUI0aDdCdklMdVN6S1lQTlExREdETXJzYVU4ekJQZzc3R0h4YmJXZmh6aWZrSXN4RFVjY00ydTRjUnJFSCt6cmsyL3prVUhGMVZGNng2UHRzY2tyN1d5clh5UTdlYVUyb3hWSERTRWszRDF6ZXVxUmN1WEkvdG1qWmhwbzBUYUNvK213ZXNZMkZXRGRvWkVGTXczaTNXZ1kzM0hWZXZVWXdMdFhGdEZYeHBib0ZWYlRnRU1FQ3dWZUpURzRBTVVwSlNSSEc4ZmJiYnl2cm1BWE1BMWRBZ1p0KzRBSDZnWWY4Z2tyRWN3TnNBMC9uTlh2WmIzYUE4V0RmWmI2eVVPUmxXckN3YzBvMjA0SjI1bEV2ZzRVYTl4SGtFM0lSNXFHb1l3WmxkamFteVAwOUhmWXgrT0loaHZtRlhONDRzbHhaeHd6YTh1aWozdjVlRHZrMlBUNUllV0dBV2VDaUEyVk9DYU1PUmYyYzRMMnZDVFU3WWhncDZlWWhiaEwwOHZLNjBJaEhIWmkyUWpKYW54cUtiZFJNQUZORzdyUU1iblVqWTZoeTFScTRTUkF2aGlxK1NiQ2dpaFljSWxod2xxc1NHVmNCNXFHL2IwSS84QUQ5d01NVWtVckVYUVdZQjZhK1pMNnlVTUFFVlB1WkV3b3pwNFQvdWNUWHpqekNEN05RNDhHRytZUmNjTGV6cW80WmxOblJtT3FtZFhQWXgrRGJjdXVnZkVNdXI3TjVxT3FZUVp2dGd5azhyYnREdmcyUDhjaE9JZUs1Z1RLbnBLaG5CbVhZUEpvY01rd0w2dVloSGsvQzMyVkZSTmE3RWN0bjlGSDFHNGlrZEd6RFp0U3dzUVVOR2pWM3ErV1lCdkVVVmplU0tsV3FjcFA1RnorZXBDQ0xGaHdpV0pCZlVJbU1xd0R6UU40RDNQUUREOUFQUEV3UnFVVGNWWUI1WU9wSzVpc0xSUkhJS2RtWlIrMkRMSHhiV2JqekNia0k4MURVTVlNeTJ4dFRyYjJkSGZZeCtMWk1aZUhPSitRaXpFTlJ4d3hhOCtpajlsN3haajRsMytpTXZ1SXFxZnhDTGlLbnBLaGpCbVgyTktZR0J3elRncnA1V0IrTVdMNThwZk9SdUVTWHpTTWE1c0ZuK0EyYnNHQXpHalJPY0t2bCtyRk54TE90L01zR1hBSjNiUitLSDR4WUVFVUxEaEVzeUMrb1JNWlZnSGxBSU1GTlAvQUEvY0RERkpGS3hGMEZtQWNnODVXRm9namtsT3pNSXppZGhUbzFPdCtReTZKakxHNktPbWJndGEwaDFkemQzbUVmZzIvTExTemMrWVJjM2ppNlFsbkhERnB2SFV6QnV6czY1QnQ1dUpmeXdvRGNRaTc1dVNDaHpPN0dWTjg0TGFpYkJ3cVcvMUdtalBmWFlXRmg0bjRLVEZ2aCtWRU5tN1FRd0pTUk95M2prZXg0eTJIcDBwNC9NL2ZpUjdJWFpOR0NRd1FMOGdzcWtYRVZJRzc0QkRmOXdBUDBBeTg1T1ZrcDRxNENqQU9mTWw5WktJcEFUc25PUEtydDcwQWx0ckJ3NXhNcHYrMjFZdlR4QmNvNlp1QzF0U0ZWM2RYT1lSK0RiOHVVcEh3ai9iZWpWanlXK2FxeWpobTA1dEZIOVYySkR2bldQZGhEZVdGQWJpR1gvRjZRRUxYUE1NMG1pNjE0R1JUamo1QmE0YmR3bndjUzVwZ21hc1JuK1kyYkpsQ2pwaTNGcHpzc04yZ1VUM1hDNjFPbHlsWHhNcWkvR2NVdmd5cklvZ1dIQ0JaM2VrVXFBSEhEV1RhNDZRY2VvQjk0eUMvWUNyZ3JBZlBBbmVreVgxa29pa0JPeWM0OEt1OXJxeFJ4VndIbVVYbEhLNGQ5REw0dGtwUGNCcTIySkZHVkhhMGQ4cTJWM2xWNVlVQnVJWmY4WFpEUWlPb2FwOWxrODlDbnJyWUVCVlU0aXpmMTFZOXVTTEZzSG8yYk5xY21jUzJvY1Z3cjhla095ekZzYkRWRDZwQ3ZueCtlcGx2OEd0cUNMbHB3aUdEQkhMaEtaRndGaUJ1bVpjQk5QL0FBL2NCRGZrRWw0cTRDekFNdmZKTDV5a0pSQkhKS2R1WlJmZzhMZFFvTHQ1dkFLN1VobGQrVzRMQ1B3VmNsNHE1Q1N6YVBDdHRhT09RYnZMK1Q4c0tBM0VJdStia2d3V3RISTZxOWh6blp4SVJVeWpCR01mK0xlSHRnWlAyRzFLQkJBOHZaUG9zMnBveWF4TGNXY09WeXd5WUo0aWJHeXBVcll6K1E3eGloY1M4dUJWVzA0QkRCZ3Z3Q29CSWFWd0JYQStWa0hoczNxb1hjRmRpMEtYdnpLQUk1SlR2ekNOeVZRQjRwTEN6SkxONXVnREpiR2xGZ2FyekRQZ2JmVmhEdXpRUGRBcTFTa2lnb3RabER2dFgydGFjU1czbmY4Z201aUp5U29vNFpJS2NVdk11UVU3STFqMUtNOG95dDVjcFYrQW1qRDl4TDBhaHhNM0cyMzdSWkcyb2EzOUlDRnkzRFFEQ2RKcDVuNWV1SE53aHUxVGdYWDJWVmtFVUxEaEVzbUVOZnZ0eDk4aDRyVmxqZS9BZHUrb0VINkFjZTdncFBUbmFmcWF1VWxHU1JpNUQ1eWtKUkJISktkdWJobjl5RUFsTGpxTVJtRmhjM1FMbXR6Y2gvVTJPSGZSeVFFa2Z0dGd5aEZwdFl2TjBBN2JjT3BjQk5UUjN5cmJ5bnJmTENnTnpDTHFla3FHTUdtQmFzdm9NNTJjU0VWRER0STBZZi9QdWxrRnAxYm1EMGdXZGROWTVMb0NZUThXWThBZ0dhdDNYSmNnTWVkZFNwRzBFVktsYkc1Ymw0a3U0b2pYUHhsRlZCRmkwNFJMRGdFUmlyVjMvc0ZxTVBjRml6NW1QeFNBNXcwdzg4UUQvd2tEemV2bjJiTlZIdFNvQUR1TmplMUNnTFJSSElLZG1aaDk5L3dxbHhXaC95M055QVNteXE3MUtVU1c1RVRkUDZrdDk3WVE3N3VQeUhzZFJsM3hocXZXa3dKV3djNkZLMDNUeUV1dThiU3hYZVkyRjJ3TGZDN2xaS0VYY1Z4QVVKMncwNUpWdnpRTUVaZkNEamZhOHlaYzdVcWxXTDZzVTJvWVpJV0RkdVRIRUpiUVV3ZmVUczVjYnhyU2c4UEp5cVZLdUJPOHAvQVVlTmEvR29vNkNMRmh3aVdQRGNKTHpmWXUzYU5lTEtJQWdoQk0rWlFKc3dCZHpUQUM1NG53VzQ2UWNlb0I5NGVGUUhSaDg3ZG13WDkzd2dnWTZwTEdjQ2JhYW1iaEVjd0FYUG5aTDVjcC9XMXZrV2daeVNFSW9CQXdiVXhIZEE0TndBOGtwcFFLMzJENkd3SFYycDNKWUVDdGpTektrb245cUM2dTdzU3EzU2g1TFhsb1lVTUN2QVlSL1hubHVIdkZNYVVsTGEvZFIvKzczVWVjc282cGd5d3Fub3NtVTBEZGd4bFpMMjMwOWxtRy9vck5vTytRYnRiS0c4TU1CVlFFNnAwbFpEamtabEhpaTRTMXVjWkFTVksvOGRYcmdVelFiU1dFd2h0YUs0NXEwcHZrVTc4ZW1zNVNieExjUlRmcXZYRENWZlh6L2NUWTc5QU1maU84b0xvMmpCSVlKbDZ0U3A0dkhlZUU0U0RHVGR1cy9vczg4K1pheDFFdERXWjl6MmFqRmRCUzU0TXg2NDZRY2VvQjk0ZU5jRkh0ZUJ4Nm52M0xtZGR1L2VKUjUyNkV5Z1RiU05SN25qWFJ4NHlxM01kLzc4K1NFZUhoNkNieEhJS1FtaEdEVnFWRFY4QndSTjhTYi9wUlY1NUJGRExkT1RxT3ZCc2RUNXdCaW5vc3ZCTWRSaWZ4SjVib3dtLzhjcVVPQjRiME1mTDFxMEtFU1BpWWg3YTFITngrdVMxK1pZdW12L2VCcDdZQzZOTy9BZ2Z6b0hhR3ZNZ1RuVWJmOVlLck14bG1vdXJVdDFKNFE0NUZ0MlJ6UHkyQktqdkRqQUZTaURDeEtNT1JwSDVvRXBJRHdqYWpqamF1VXExWDZyRzFHZllodkZVK09tTFNpdVdXdHF4b0llMzd5TlFMTVdpWVc2REFPcEg5T0lhZ1RYSXYreWdYOHdwK3NNSk1uQnNYaTZxakFLQjRjUGdnU0w0OGFORXdhQ0IrL2hEUHJGRjE4VWd1aE1vRTIwamZkWGdNdVlNV1AwUVA2VnVRWUFmT0Q5aVFNUEwwQ0NnV0JxQzlNdnVJbE9mNVNIczRCSGpxQnQvY1ZOYytmT2xma0dzc0dVWjc3WHdOZnkwaW4zeWluaFRuV0pydzh2bC9qMDAwL0w4dC9YOEgzZ21ETENRQUpuK1pQUGF6WEljM1ZkOGx3YjdseDhIQ2JhRHB6aEo3Z0VqQ3Jqc0kvRHhnWUxBNmt6dXpaVmVEMkNmRmZYSTUrMTlaMEt2NC9yaWJiRFp0YTJjQmtkN0pCdnVjM3hGTEExVG5seGdDdFFibHN6cXJEUmVrR0NOU1ljRkV3RjRRbTFEekgrcUZLdHhxKzRlVEMyY1hPUis4QnpwWnExVEdTMEY5TksrQ3o0NVVScXlzWVJGUlVsTHNzTkNBekNZOWV2YXB6QXJYaTZxckFLQjRkMzZkS2xNN0RZbzBjUElkanVoTTZkTFkraThQVDAzTU5jeXdKZVhsNFpPUENHRFJzbUJOdWRNR0RBQU1HWE9ZSnZRRnBhV2lENDRqdThHdGJkY2twNHJMdlV2K0pwb3l0WHJ2VFhZOEt2bTZjUWJIZUNiMGRQUTB4czI3YXRuQjRUMWJ0WEZvTHRUcWphcWFLQjc0RURCNEowdmpYZmIwU045dlVteitRR1ZHSnpmWmVpVElvbHB4VDhWa083bU1pbTRPb3J2QjlqS2VPdlNsV3EvaElXSGlXZWVZVXJvT0lUTUVKb1M4MWJkUkNmQmJrTUEya2MxNElpNjhkUzlab1ljUVRveHZHNHhnbmNpa3RoRlE2T01uNStmcTlqTVRBd2tDWk5tcVFVY1ZkZzh1VEpWSzVjT1JISUFRRUIvMkN1ZmdBdnY0SHZLbFNvSUI1TnJoSnhWMkR4NHNWVXNhSkZLRFMrL2d6ZnNtWEx2b2J2Y0ZhR0s5cmNLYWNVR1JrcCtETEhweEFMdkZ4aTNicDF2bnBNZUFTV3BNQUphaEYzQlFJbmVwTkhVRWxEVE96WnM0Y1hMVEhoR2VoSmRTZUdLRVhjRlFpZkZFcGVRUmF6MC9rQ3ZDejZ0MnhNSVBra043YmtsSFoycFhLcENSU1Eyc3lwS0wrMUJkWGQxWlU1RENWdk5wQ0Foa0YyTVpGRDBRMWtJZU5xWUZDNTg3VnFoMVA5bU1iVXVHa3ppbXZXaXBxejBEZUgrRE1TMkFEeXU0eHROdVFSRGg1NldLVnFkZkx4OGNHTmdKaXFBb2RpNDNCRzRlRHdEQTBON2VyaDRmRTkvcXhkdTdiSU02akUzSm5BRkJxdTRnQW5jS3RidDI0bjV1b05zQWgzMC9uV3ExZFA1QmxVWXU1TVlBb3RVaE5pY0FzUEQrL01YSDNBTnlJaUlwRy91NERmdW5idDZoWTVKVXhYNmFNNjhLMWZ2MzR6eEFML2paandDZzRPN3FsejlxemxJZklNS2pGM0pqQ0Y1aG5xb1lvSkg0NlZYanBmLzlxK0lzK2dFbk5uQWxOb2ZxRStTcjV5VEZRZVhKTzhOeldrbHZ1VHFNc0I1K2VVZ0lTMEpQTGQySkFxRDZ5aGpBa1RCV0tOL0FoeUlEenlMdk5kdFdyVnFXNWtOTVUwaWhjM0VtS0tDU01IVERjbHRPNG9rTHZsRHVKcXJrWnhMU2tLaWZIcTFhbDh4Y28zU3BVdWZSRnRNcERqQUlkaTQzQkc0ZUFvelFkZWN6NWpuc1REYU55SlNYeldTUWtKQ2RTL2YzOUtTa3B5S3ZyMjdTdmE1ak1KRWNUTTZYTGx5cFhIOGNFV3gxeTlBRDRJRTJTK2ZCWW5oQkNtTjJYS0ZLZGkvUGp4b20zMG1ZSnZHUng4OGZIeGRaanZGUDd0Q3VvZzZHR1F1RnBNZmxPZ000RDhFTnF1VkttU2dXL3IxcTFERUF2OG5Sd1RWczRlZmlYSnUzbHA4dS9yUldVSE9oZitmYnhFMnlWOUxDTU9tejZXWThMS3Q3UmZLYXJZdkJ3Rjk2dEtJVW5WbllyZ3ZsVkYyNlY4U2puazI2cFZxekNacjI4ZFA2cStOSklxcklxbGNwODRGeFZYeG9xMnkxUzNYb2hnRnhNbUMvSUxtT2JDMVhydmxTaFI4bytBd01CZmdrTnFDeE5CUXJ0UjArWVV6eU1IVEdjMWI5bU9XclRwS0Q2elcyN2VxcjI0K1E4dmQ4S1RmSU5EYTFQRlNsWDAwUWFlV2NWdGlUYlJkbkdPdzFtRmc4T0RoYUlXQzFybkdqVnFKSGw2ZXU3QTErNkFVcVZLWlZTcFVtVVV1TEU0MUdTdXBZQ2l3RGM2T2pvWUJ4NndmdjM2TW53bTN3WUhKTmM1cFZyWEZkRDVob1NFdEU1TFMvTkVMUEQzaUlsU1VWRlJvby9kbGJOTlRKUXVhbnlMV2t6a291REtKb3hXQWhnWUNXeGhNL3JOUHlEZzUrbzFRMjdoOGVnUlViRlVqNDNFY21NaEhtdlNncHF3T2VBK0RYeml1eWJOV212djQyZ3EzcE5lcTA0NFZhc1J6S1pSOVphM2o4OWwzaVl1OHRtaXRZRzIwR2J4VlZYT0xCd2NKZDk0NHczUDh1WEx0K0NnNmNRQjNZV1hwL09aOURJdkw2OVVCTFl6d1cybWNOdHZnZ080Z0JPNHBhU2tRSWc5Z0NMR3R5U2pWR0ppWWhELzFvRjlyMnU1Y3VWbXV3dmZxbFdySm5idjNoMVhzVUhVeE1HSFQvUXg4MnlGL1hFM3pvNWlvaWp4WlJTcG1NaERnZWtnWDRMSGdtQXFLNWx4eGRQVDZ5Y2VqVnl2VXEzbVRWeFd5NmJLeGhCQmRlcldvOURRVU1MOUlyWHJSaEtmR0ZLTjROckU5WWg1a2E5ZjJkOUxXNmFuY0JVZ3RvVnRZdHRvbzNpMDRZcUM0QUFpSXlQTEJnVUZ0YTFRb1VJbkJEdk9sQkJJQ0d3WmZQWlVvTERkUHRwRTIrQUFMdURFWi9GSVBBdWVSWXl2Ymg1aUdRY2sxMnZ1TG54WkpPSUhEaHdJcmxhZWNrencrZ0c4UDRsRkpTWjQzU0xGbDFGa1lpS1BCZXZxSm9JbjJqWmhQTWs0d01qeThQRDRyVlRwMHVmTGVIdi96OXZIOTZLdnIvLy9HTCtWOGZiNTFhdE1tVi80dDE4eGhjWjFiMmpyWUYxc0E5dlNUU00vL0lwTGZnb0hoMVVzT0pCeDVWVURmMy8vRG9HQmdSMFIrRG9RV0lVSnVTMjBEUTYrdnI1TnVmanEvRFN1UlpZdlE1eHhSa1ZGVmVDenJObzFhOVpzd051Q2NEVG5NNjJFd29UZURyY1ppN1pqWTJQTGFYeGtnN09MQ1loZVFFQkFmRkhwNDZMR2wxRWtZcUlBQ2tRZStSTWt0Q0grZUIzc1FBYXVqbnFYOFRIakt3MVl4bmY0RFhWUUYrdGdYV3lqMkREY29TQTRKSWlBNFNGMElKOHRoWEx3eDNEd3grTmdkQWJRRnJjWmpiYkJRZWVqY1ZPaHFQRjFlemlLQ1JiRGNrVXBKb29hWHcyNmNBdERjUkxrTm1VdVZvNkZVUFFSQ2ZJVVNITERGSEI1clF4OGg5OVFwM2lFNFhhbFJJbi9BelRGVHVNU1FjMzJBQUFBQUVsRlRrU3VRbUND",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicArrowLeft",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQm1KTFIwUUFBQUFBQUFENVE3dC9BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUIzUkpUVVVIM2dRWkVqQTAzU0hjY2dBQUFFQkpSRUZVR05Oai9QLy9Qd01SSUpLQmdjR1g0Zi8vLy9odzVQLy8vNWY5aHdLaUZPRlNqRlVSdW1LOGlwQVZFMVJFdHNra3U1bXMwTUNyaVpHVUdBUUFzOU5wbXo4SWloRUFBQUFBU1VWT1JLNUNZSUk9",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_GraphicLog",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFBa1NVUkJWSGphWXZ6Ly96OERzWUFGaVkxUEZ5TzZZc1pSa3dlSHlRQUFBQUQvL3dNQStmWUlMQWhqbnhZQUFBQUFTVVZPUks1Q1lJST0",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug__Window_GraphicWindowHandle",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQUZCSlJFRlVlTnFNandFS0FDQUlBeFgyeWg3b055MmpRa3lwUWJUMGRFU3FTblllRXZoWE5zRE1ZblhlelZHNHdBME5OVlJaSGpLUEgyaDYvNWwxVzBPaXgzTlRFbDFDSjdxS0MvNExraTdBQUQ1WWZydllMZlJQQUFBQUFFbEZUa1N1UW1DQw",
        },
        {
          name: "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoCorners",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUVBQUFBQkFDQVlBQUFDcWFYSGVBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQlkxSlJFRlVlTnJrV3d1eW16Z1FsR1Q4d1g1Sk52ZS9UUTYwdFhrdi9tRkFDNjRaMG01TEFwejFPaENxcHJEQnh1NmVuaGtKUnRZWTg2MnhkV1A3eG40MDloM3NIem4yMGRpeHNaTlkwZGlsc2JLeENxd0c4MkQ4M3NDZVg3ZWJoWDFyRHZacVdXTUwyUzhiV3dtT1RXTnZZbDhhKzlyWVg3TC9MTWZiejJ3Yk8yZHljQ2tBQ3JtZ0FTQkZ3QzZ5Ui9BZVNJZ0Jad0lZT0pPQVJDandSZUQ2K1BrTS9sc054OVlDZWlmN055VmdMeGQ5QjYrMzlyZnN2NHNLV2dXY3lmczFlVDRGT3VUOVBnSVFXRWdKQzFCQklZNjhpT20xVVNVWlhIZWhCSnprd0VHQUtoSHZRc0M3a0hRU0FpNEF1b29BcjhuTEtlQkRWR0FEUkRnaTRnSktacy9uNHZWYzNxL1VrVXFBRjVBZllrakNoNUNqM2k4SFNOMzBBQjlDZ0Uwb0FVbXdRa0JKdVVpUHJ5RG1jM205RkNJNkFpcngvZzhnUU1Hci9BdncvcEQ0N2dPYzh2eFFFcFNJQ3ZhbFhKc1Y4Q2J4bndNcFZTYmVMWUVBQkw2WDh5ZUsrMGRCRHdYK0tCRTFPQWdKVUd4YklzQm5VTmEwREI3azlSRkszeGtraGpFK3hMc2h3SDRrZUQrQUNFM0VXc1cwVkI0QW0xWUFMWmMyZzlwK0lQQUhxdmxWSk5iTlNFOC9vZ0QrYm93SXZMWVR4eDBCMTE0STJJZ3RNZ0NxSHp4Q3lWUFpsMVRxbmdteTcxcVdsR1poYjZqOEZZUnRUOGt3eXdUb2lZQVhFZkQxTDRKOGxCZzdrSFF2d0d2NDc1Y0F4b09RMEJHQTRNODB6T1doN2JNOVBsUUZzWE0xNUlRU0JrWWhFbFlaZ01haGJxeld2d0o4MzIvYWdBbzhPSzZDb1R1VFVDTUJPTkJoNzc4YThKakU2R2wwV29FS0NzQjYwaktJRTV3TGxic3hZL2ZmZ1FoV0ErYXVNa0NDeVFMU0x3Zkd2Zm5OeVdBVmxLU0VRc2NCUlVUNmZpS2VUeW1ocGx6QUpGd0pLQlAxZnFvSzRMQ3RZYUtFSkRoSDRLc1pTRDgwTnFnREpGd3R3emNrbWFtSGdROGt3NHBJV0RqeS90UVZFQ01pUmtMbElqYzFwK2oxUGdKOElDRldMbkZuMTgvTSsxWGdIdWFOQXVvQk56dW1Gdis5WWVBQ1NXL29sSGVxT2VER2hpcGc2dU9BS0JFdVVmYm1zREVKRlpQZ1RQcWh4bHhJQ0QybTZ3Z1krOGhxVHZuQXU1bDZQVFl6dkZPRCt3T2tINW9YZE9kY1l2dzg1ZEdnSHhvT3pveDdiaitYSE5BZGMyYittMDlNazQyYmFlSWJzbGtsd1A0cFlFUHZYZVFEcVMvUGFsTUZoR3lPS3Jqck8zSXpCODBLdm51czdoTGVueklwc2NmbmQ2cDNpVENZaStkakpEZ2t3TTI4SW9SYTdib2NNR2NWaE1CamE1M3JYZ1NJbUVNSkRMWGNJdVlGZGxzdUlpVE1EZnhObDZrTGdIZG1Yb21RUTBCYlp6c0N0SWRXRDA1OVlHUURCSEJ2c2JiUVpZN0FZM3hNT1JuYW52aS9VVUJHS3BoVFNXVHBZM2Q1aTNuWm5sanBtNTU4WUNlWStFS0xMQlRyQ2dsWXc0bU13c0JNWkdnY0d2bTVsUGVOdE1sZDI4YUZpQlVSNEdES1hKdGhEWXV2bnV2SEZJREFPd1VnQVdzS0IrNFB0aWJjbWhxN0RXVk11TkY1N08yc01mY2wrbGFWNE5xaXE3VUhOd0owQXlmTzhnVnNqMC9kWDdPSlAydi9ZKzhPbWVveStDVTRkdzFxdjRaQUxuOCtGK05HNlJBQi9oYzkrOHg1UG51ZFBhOXJCWElOQVNWZ0srQnpjN3MyQ0lIR1dtZTVXenNXTGo0U0Zxd2VQd0kwMzlwRHI3UGtOMkJyVkVDN3RZc0plRjBncnI3Z0xqSm53azlmWGxYdWVLaTdCTkNxN3EzNTJTNi9WUVZzNVlzS0h0dmxhMkFZMXduZVBXSXkvOCtUSkp1WTZOaEF0a2ZRT3lLZ2E1ZlBoVFgwUGk0OHhEc29xV2JLWnl1aER6eU84VlgyQ253WEljRXBBVXZ5UEpaQWpDdGRXZnFLbmlMYjQza3VkUnNCck10b1B4RUpMVzZMWlhCbjd0Y0xlQ0lnSXhYRXdpRkZRbXdNMFZmelkwdHBPZXVyOTNQQjlFbE1sYUR5YnovVExTc3pKdDR5YitCSGxrUlFUQWtwRXZ6STBoa2I0ckxzMmZ0YklPQU5iQXRWNExwZVlHZCtManIwZ2RLSGlhVnZQZEV6OGtIb2xyYUwxSHYydmtxL1hVWGVyaUQvVEdxb2NQSDB5ZHl2dXViWXFzejlpbTFWZ251Z01neXArVFl5ekkxTmNIQm1pM01aWFIxL3hLVCtyd0FEQUFKQmFpQW1tNXh3QUFBQUFFbEZUa1N1UW1DQw",
        },
        {
          name: "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileCircle",
          data: "",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Mover_GraphicMoverTool",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROWEcxNHpZQUFBSnZjSEpXVjNpYzdackxqdE13RklZanNiUDZFRlpZc0NGeG5LYTNxTWtJdFJyTnBtakVWQXhpbHladUoyb1RSMGxHU2ZzMnZBTUxKQ1RZSXg2QXQ1Z1ZXOERwalU0MVlzR2lxZVR6OVdyWHgxLytFeS83N2RlWEJ5VlJrdDhWM3llTkhFL1lMSXdkOWVIelZ4V0hnYVBldGtiR0tCbXd1L0JxbGJLYjFldXh2NXI3dlVDOWNGRy90TXNvaVZqdTRUSmF4SmxkT3FvWDhBbXp4ZmRxbXFoNHZTU2ZPK3FyNmdmOGJuU05CenhsdUtVYm1tKzBEZHltT20xYW5VN25KVFlOYWhEREpOVFVhTWR1bXJaaDRDMnFpOFI3UHcybTlwdmg1VlluUm81NmwrZUpUVWhSRkhyUjFIazZJN1RYNjFYYm1LWW1WbWpaTXM2OVVvdXo1NXROZHZzTVdlYW5ZWktIUE1iVjJKdncrOXhSVllRUDJPYUtrcjBvenZSMVJ0M25FU205aEZEZElQdWRxODNGYW51UU1pL242Wmp6aGJ0SmZobW1yT0RwUE1PRG14YW1va284cks2RmI4TTQ0RVhXSjhkMVQyM0podUxsaWtaWm10SFZER3RNdTdiVnRXbnovVUg5WnRGUitZZ0g0WFQ1UkhtcmFWdnRiZm5Cb2wycnlGR3YvcmVIZ2I5dllYS2ZMdFozS3ZBSlc3Q0l4WGttMmtnZnR6SHc3U2xQSXk5M3c4aWJNWkxFc3o3NU8vblA2OXZNaXBNaURpblpuMUwzMFdVZG9wd1k4TzlCa3VlWDFvOGt6dzkrOElNZi9QWDZrZVQ1cGZVanlmT0RIL3pnQjMrOWZpUjVmbW45U1BMODRBZi8yZmhSelg0TS9ucjhTUEw4MHZxUjVQbkJELzZ6OGFPYS9YWG5sOWFQSk04dnJmLzRqeGluOXRlZEgvemdQeHMva2p5L3RINGtlWDd3Z3gvODRLL1hqeVRQTDYwZjFaNGY5Uy9LeFBQbjdOUitBQUFBQUFBQUFBQUFvQjQraU9lem4wdmwwOXVQalI4di9FYmQxd01BcCtSYThaU1p3aFNzVURIYWZRS3k4QWVWbzZ2ekVKZzhjUUFBQUVodGEwSkcrdDdLL2dBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLYVF6b1FBQU9TaHRhMVJUZUp6dGZkdHoyOGFTUGpZbmppUDVubXhsSC9aRlZidS8rajNGaDdpUUJCOUZVcFFVVXhJUFFkbHlYbHdnU01UYTJGYU9KQ3ZIeThML3Z0UGRnOXRnY0NVcFVRN0NXRU5pY0JsODNmTk5kMDhQY1BTcWU3TjRQYmJPRjdiM2VueDB2bEM5d2JnWEtjYi9PRDVmTkJ0NlIydWJEZTlzMkhNWERlOHRGVzhPKys1Q1ZiMkR3d21XNHozTFhiUTFiMnlkbnJQcTdqNDdnNHYvZWFQaDhHYlJIYkUvdmQzSjFVTDVYcGtxanZKTzZTcTJjcVdjSzQ1M2VIekV0ajltMnoreDdRZHMrNlV5VTNhVUlhdjlwTXk5Y2Y5a0NpZmRQY1p6NzdJbTYzUFQ2L1lQenhlRzF6MWliWit6QXUra2ErM2hUdFlBYnFGckhlQ3Y3cENLVjFqMGp2a0o5Z2I0ZXp6QmZRZGQvRFVZWTNGTUc2MFIyOWZ4dWhPcW5ORFpKeFpkNUlqT1I4WGhMclR5R0ZyVjhQb25LalNuZjZMQmFmb25PaFlEdGxGamhVYUZEb1ZYQUp0bkNXekd5b1h5bVcyYktYTmx0aXhDNnYxSHlOY2VpK0hpS3RmTGFJL3FHcFgxUjEwU0hYVzkraE9pczZUK2lCaVYwYUE3eHVneHgyaVg0WFBKa09peXY1OFpXdTg1VnQ5enJFSU1zOUNCZGtmZ2FSbUVEOWJuNG1NYU1Yd2FNWHgwTFk3UWJNaytwaEZDR2lGa0VFSUdJV1I0MXVoWGtxcGxzUy9PbEcwNG9kdXdyQlBjVUFiRFJ4ekRDZE91ZnpGOSs4enE4L1JNMTJTS2xnMmsydUZRYWxPbkJKU09TVkRpOXJXQnFYV0tnZm1VZzlsakN2ZUJmYzZWM3hoY3R2S0g4bDc1d2dIZGlpamxSL2I5UXJuSUJGUGx2VmJWQzlPKzJqRGszYmFSMFcyYkRVSVMrUUNRZE8zQ1BWY3pDMk9wbXhwaHFhdXowdGhsZCtqMmpLQXpIVUp1dmlLRG9wRTFYR29WeWE0WVpGVUIrZ2ZycCtld1Z3d2dvMGtBcVZOQnQxd09VWU13Y3JJNktxaEZ2bTRoSVVad0FqWUZuRkNwMWdCVVVyZUNqbHExZzQ1WjdSUTc2S2RNTlZNN3E5V3oxUTZxNjlHejd6aEdiOWhZY0MxRnB5Mm9tR0IwWk5sbGNHZ01IKzNPOGJGR1hXSi9xNXNnL1VjQlh1L1JwbmVZeGpEa0JHM3E0YmdKbFArbEVOMXp2RlROa1NJbUVIN2JLYTlTUm9zZ3N6bG0rc3dvUEhaVzc1VHNnbHJUSmlCaHFDbVA1QWpKLzVxaCthRVVrcTVSWU9SMC9aRVQ3SW1DUUFiY3hvRkVtMlQxT0FKOGxtK05BTG1SV2VKL0FXVEpMdkcvakV0RC9ERHVYSlNCRjhlTVhIY0MxYmswdm5OdW1jREJBSENudFdxQXh3eFhiVDRuek1SQkl4dXpLZ2F5bkJTMVpxYUI3R2psKzNoZ0hqYzFnbzR3TElhZE9pOU1qWUhpYVc0TXVxMEFPaGhCdnVCWVdzVTNpN3RtNkNKVWpIMFU2Y2lheWEwVWRFb0tvcVZyTXJSYWhGYUwwR3BSVnlZQ2hDOVRWK2pLTU1hTUQwcmcrREN3Vm16bDk1d1lpVWtvZGdoRk5ORWlLRGFXUmRFZ0ZFbkZwREEyYmNKUnk4Q3gyZUJoZ0E2UEEzUTRrbHp4V2x6eldrWWFtTFFsQWlZek9zc3A1WVQxZEthU3l1OWxlbkVoclN4bVBjdlZFanN6RE5UVGxmTWZEakRZaDMwZ3g5R1Joc2FlZlBYc1kyZCtqL3dYRDFkRmFncDNlbWtVWVFQQ1ZXckZjRlU2U3MrbEtQVXhzRGRsSm5oMnQ5NVVuTFJid21uQyt2RTVjMC91SzA3NnluSGFDbkM2WUJiSjlTMEdock40ck9NWUZaMDBQaVEwQ0pvR1FkTWdhQm9FVGFNZ05FK2xLc1JuWThxclQ1enJHN2MvKzVKRlJrMUNxRWtJTlplaTdBUDBYbTl5dk5kTm5XSGdLTEVSRzJGcUVreE5nc2ttbUd5Q3laYmEvZ053TjNHNlpRSmNJMUdtUzJaKzdTaEgvTnRjdVN4aWlwVXhIZFRtdk1oa1EwUHE1SmZ1Y25MRGdadXpKa0Zsa3ZGUGN3M3BnWkZzN0E0d3dQU2VCNXJlSTF2RnNRT3JFY09XNEFHaE5Cc3hRNWI4cG9RaEsrMk1xSXRGSStMMldyRXJEcFhmSTRjQlJPbUtKc2JmSEZtUGhLaDFLbTJGUG5xRllOTGE5Q3hxMTRlUkpMQlVNWkpremt2ZytUQm01bjlhN1p4N3dZa3NZV2k4aFc0YWdBVTRSc0g2am9OMUFsTUdIS0x0d0QwSDJ3ckNiWG5XbFYwMU9RRzhtVHlZZE1HMTlGMGhQOVNHQ3Axd0xOVUM0UXpZaWhZV0Iwc3p5ZmRCVDJjWEhUWlV2bGFMUEI4RFNnd241bUw0SW9JaFJJd2cyY05DTzlYbVZsbjJHR0ZMQTJ3RklJVklWc2JVakdNVHFCb0gxZEdFK05xTXg0aG80TTd4TUpucUVxd214OVVrWUIyVGdIVTRzSTRwK3V2d1pleC9pWFZ3cWdxKytBR20wWmo3cE9PeEgrSzBrdUU2bVNqOElOMnR3Sy9QQ3NFdmhPZ0M5RFBuWFZOaUpRYTMrd3pDbmhsSWlEMldPcGFJTktFb1JSb0hjUUFZRlgxTWlsOFUzdTBBM211TXFVQXl5bFVSKzhlZjFQYVRMVlI3WGdEZkl2WlBVMkNNT0xNQzMxcVlLSmNPYnNzb0I2NFBuT29HTVJJRVVNdG5paC9sTVdTZWpsR01mOXNWK2JmUU1NVkRlNjR0NUFod09JMXBqSDROR2YzNmNJbzgwZVIrWEpNN2NxeU1KMTFRRkdwTWdGcGpUczM4TndDdHVsSks5ajJjRVlQeUUvdVdWRmRWK1puVm5qUEljK2VTNHZQa2xhUFBXYjVmQ1JzZ3JxaG0xY0JCRXBuL2tDSEQxSENYYmIxbXYzOW0zOEJRQjg4d2Q1Smp0Wml0MW01YUlXYitNTjlqZy93SDlzL3Z1dEU5WmU0TXVpMnBKcVpkUHJCUXdzQXNQc1FVQWdyN0tmQmZjbXdCeXhOcUxDcUxRZW9QMS90QjRzRTVETmpyU1I5MmlwdnBwYkxOQk91VDA1OU5RTm9FcEprdzFMbnBHYzAyaXdFYUJmQUpCL0FOV2pSelBqV0pPaWhNYUJTTDNnaDVlNEZmWFN5QUExT01KYlV4c0huUVpGcHFXbEtLWkRCbkhrNjBZYXpDL3pJK2lRemJEUnBOQkNVdGpuR3hTU1BObE9rcEJZQldpTEEvWjZUNzg3N040Z0RMZlVwZE5tZUVQVHV0NzVlRHNZeFQ3bkxyMFkxYmo2NWRBTVFpN3VheUFTQzVpbW95Qk1rcmozcEJ3V1NibUNIcDgrV1lXOWdYeWtlQkwyRUkrcVM0a0pRRnc3VU1RN1ZwRUlhdE9JWjJDUWhiVWoyVUdqVTA5VnZGcXZHMU1FNllHbGRETEhVc3FmZTJlUGN0RHBxdmNEUkprdTJ1NkxKT0s2Ukp5a2VYUm5Ickd2azJpZFhVeUo4MEQzd1ZZZEljQ0JieG9pODZmU0g3MnB4eit4cStqSHdNTGQvMUcvc2NTVUdQWXBqNmVZRURjR0ZraUU2Tm1IUHRhMThaN3pwenZFWU1aY2tJY3YrUFk2ckxNSFZNdWNQUzRkRzFEay9xNkxRb1VvUnVpVDlIM2czZEZIL09YSWlPcDRNWWV0UC9aRERhYUZCbXEyZXpxdTFUWWtRaG55OFNleXVSaGNYOFE2bDZ3dllCM3o2ZzdRR1VPRnEzK1dEZEpnMzFJVVVGUFNEWHNGeG5mNHQ0Wm84dThSRzZVTjVnR1Z1U2ErWlVPaGtxZU5MUzBTVXRNSkdXSVJQUHdPU3FpQjV6eWxxUVV3YlZKeHlvUDZNQjdwdmxEemlJdXRLdmtON1dMcktPcG9oTG84ZE5uRGlBVEZVa29ZaGlZVFBObE1TQ0QyaU1Mb1BUZG9nVDh3UDMwY3o1TXhzeDZRQlRiT21SRDVtYXIzT09kSUJSNXpJeVZHOFZzc2VCQmZNZWs2UWg3REJQcE42THNMV3F6am1veFdjQkExOUZiNVZQQ3ZRTndUeXY3OEEzblErU3BuTWVkQytDTWZjRHJ2b29PODBnbnlGY1h2VXduend5ejJCTHJXbGYrWXBFWXNXUldLcDh2a1V6RGlZTGtnWk0wUTU4d3JaZlk4QXJiL25wS2pwd3MzZ0FWc0N3a3o5bytPbXBnam05b3U3cjZ5RGs1cDlqckhEdE9waklwTlNsU3RneDQ1TmRyblRVa004ZkNnbStqcHdDWmZhZ0dNWUpwN200RlJPTlk1TzZzaHRzTjJsWWJwWFQxaWVCNTN5QnJzeDdCanhmSXBHdHM2dExpTXNhcDAzcEVqbUlnMFFRMThyTXdLUnBMZGszVnRJSnpFUHdhUVRCZjJFUVp3Y2pGYVV4eE1CZ2ljV3VBWTVHdml0ZGVYNEFmT1VDZ3hBR0laeTJKQ0VkazN4d2cvL0ZuMzRaY1dNU2JwRW1aQ1BXcFRoem1DZUZuN2dVWHVPTWw0UFpyMWM0K1FBTURESGluWkJneXRNSkxhVXFxdGhTTm9rcnRtQk5ZYWd0eVNXbExGQ2R4NGgwSGxwbkpYSUpGMDkwZkJ0eDRjU0NtU2l0eUZTWkdaOHBBM3ZmR3d6N040dEI5RWtETG9yRndvRGNlU1NKMUVWeEhPT2N4a2NVMUdscURSZkhnQUFaRURjTUNJZkJIbXJ4WU56SFhjWmpxanVnNGd3S2J4RDE0cWhCL0xFUDRMRUpUWXJXbktiV1ZHdVNSazFpeFg3UW9oZXNQVTR3SHpIajJuZ2RtZks1Q3JqWTRUa2ZNUFE1eXUrTVIvelppOEgrYXdiOGNZOU9mc2krNzQvZ0NTd0Rlc1JLQS8veklsV3FYOFdmdndKMWI2R3VzZng1MUlxbjhLdlliNFRPaTRudUVSZGRENThtNExBTy9FRWl2akVITWFsUjBacHE0dE5KZkhvdHZncmllOHJGTjJZQU9leW1JWXJ5bXlERXA0R29aUHVjRnRpbm1tQnRFcXhkQzdhQ1lMZURmZ2tUQkdEZ1JKMGROeko1NE5lZFp0UlZFNkJCQWpScUFTN1JNMGtRMTJnYlhmcXdDVDFUdnM5cGdYMldvbHhWclNWYlFiS2grV1ZqaWsyNEZ0SGxzd0QrOXRPVTdkV2sxaVNwTld1aExTRzBFWnFiVHVTSlV5NlBnL2piVDFPMlZ4TmFtNFRXcm9XMmhOQUdDTXdzZ01VWFRyajlOR1Y3TmFHWkpEU3pGbG9Gb1QzaFF0dmp6Nkw1QTBrdmFyODg0V0tTN1hHYXUwYzFrWFpJcEoxYXBCVkUrcENMdEl0enNWZkJESzBiUEJEaU11aUQ0dFpxNG5KSVhFNHRyZ3JpMmdxY1F1ZzV0TXhhOU9mREd0R2ZEMnVxaVc1R29wdlZvbHRpeEh1RHlaL3p4SWdYYmo5TjJWNU5hSE1TMnJ3VzJoSysraWljT3d1Y2d1M0Fqb3pXbldiVVZST2dTd0owWXcxN0hHalRYSmtxZlpUSWU1emE4K2Z3ZmUwUjYwOXo2cXMxVXVYUll5ajdhZ1RZUVYrTC9kSmp2NHpZcndrSllCK0Q0bFcwOVNuWFZxaVpna21CazU5ZG5JeVA2bXRMcmlTNkNjb1VxWHFwbVdHdDFySGI4VnFqR2RaT1crS3hyYXhEMnhtSHFtS0x4RzV5LzVxL3V0NVpzOWdhY1hyR2NScmpzcGw5ekhhRWZaTTlTSmMxa05vUjE1U0lvc0MvMU5iTGdGelhSVFlFWlpoYnZjRGNxbXZsaEsvVi9DMWZJN1ZPdzI1MlVqU3A3ZkFHNW10a3NmTnNTTThOK212WWgvTnc4cnRWZHVQeWNTcDJuanZHNlhtRTRWaFA1VDM0TGVidVVjcGpUdDl0ZEJpVGF5bmRLdG5ub3VRbFZibDFYZVNPY1g0aDRCeEJPSThsWDRadG1UWTAyMDZEWWVheTZuaGxSend5RSswVlgyaEROSHNQTTFFeFJ3WFRLb1BSeWN1eDY3U0c3b2dEUm1nWXFkTk9XNTJtR1VicTNIRFpyMWh0WUJpMTdMblRVTk1NbytTSlZiRkZvaFR2WC9QdldEY2VjZDJBOUVhYTNZWVhKbnpNMHdpWkNhRkZLMFZiMkFqYnJka1pockpvZkRSZW11RnBVeTBUdnptRjFHRnoyMzdIdXJETmRTSHlTR3BXbDZzSnJSWmtlTW83bDlrd2szQUdQYVRWRXUyQ0NKNXdZTnRONjF4MDRUVFRpLzFmV0JrMnVQbDNyQTlia1ZqQUg4Z1BseEZ0TUdTTjZyU05saW9NbDNwd1o5T1o2UWhjYWdhMUxVZWJxM0pJNXU1czZzeVNFcjJiSm15SVZDeDhKY2FOSUJXcGtuZjBEck1iMDVUYzBPQ1RwdVRUNWxTZnFpbEszbW9sZTArbzVMTTVmS1JZUU1jeWl4TDJSamQvUXppYnZKV2svWnppajZVM2kvc1hvbUNXT004SzQ4cDdnLzdOWW04UW1VNmRJMDZIbUlNTnRtMlgvYjNCQitENDgzRHpZRG1SclZ4N2V5UHJadEh2N2NHZlY0aWZ4ZnhpOEQxT2xLbnlQMlFEZWYzZWExd2c2S0t0Zk1VUTlTTEhiUG1MNEpoUERRdVVycFgzL0loL1V4cXhQYmZEOWlUMi9VWlJoYjIzV0ZzK0lOZk9sWW55QmNxVTh6N0NWdHU0SnZUUFVDdjQzZytWLzFJYTRVYzRjby9kbGN0dHZTTjhrdHVoMHVkSC9qOWxvYlN4dHNWYXg5cW5hTXJQN0x2RHRzQTMyRGJEeCttWWJGdWIxZEExbXJobm0vMVZXUTM4OGdRY3dvYzk3bUtNNWtOd2IzOWp4K2hLVTJqbEFiSWJ4U3RrOStlR0grSElMcTV5dXNhTU1BdXpOYTlUY2R5S3lDY2I4U2VSUGYxc3MwdXlrd0o1dG9XN2VNS3dua0U4Q3A4Q2dldWVVZGVZOTVWNmxSQ25QbjlTbG8wcE5sRzBSSmsraStqTkVlYWxYdk1uU0ovajZPQmZTeFd1RlVnaWVQM2VKMnpqVlhDRUhqdmlNVDZtODByNVBYVi9zVjIwNGl6V0w2WFNuTEd6eWJUMUtUN080RThlUDRXZVBFc2N2eFhYZHFaTHJ0Q0txTVlmc3ZiU2lveHovaXh5T3N1MzNQT1pDeGdkb0E1bVh6MmlpOUtyMDN2UkdFNk1oV3pzUzNuM0lPTHdJbUFjMHVqTFZQMFFaZkQvMmRWL1o5Y2ZZSCthWXh6d2t2ZXJFM2JrQjZiMTlLUzJqMHhqTGxDbkw5bTJLR2FuYlA5aldzZktyL0lvd3JnN0VjNUZpcTdBem1OTUpQdnQzckt6eUY0MU85ZnNYTE56emM3M201MS80T3hzc1hQN2EzRnBmL1E2RlhvVHczM2xiSzNtN0pxemE4NnVPZnVyNHV5dEpHZmZXNFpXYTRhdUdicG02SnFodnlxRzN1WU0vU3RxL2Evc0dyOHhXL1MrY3JSUmMzVE4wVFZIMXh6OVZYRzBiMFZIT1ByZU1yUmVNM1ROMERWRDF3ejlWVEwwbUNFUDF3TjUzRmVHYnRVTVhUTjB6ZEExUTk5RGhwWm9RWjE1VjdQelV1d3NjbG5OempVNzErenNzM01vMlZXd2M1MTVWN056emM0MU85ZnN2RW5zWEdmZTFaeGRjM2JOMlRWbjN4L09yalB2YW9hdUdicG02SnFoTjVXaDY4eTdtcU5yanE0NXV1Ym96ZVhvT3ZPdVp1aWFvV3VHcmhsNjB4bTZ6cnlyR2JwbTZKcWhhNGErRzRidXM3MUFPeU9jSmVSMmNIMUtzSE0yejRtb3RSSXNtY2QxTnV1ekhjVmdueG5EeUZ3SjF5MmpiMDlqOXl1WE1Jd2Jtc0N1MGFPeXN3TGorOUpUR0VPR01ETkdtU1J2NjZ3bHpWdlJObCtEZG1JNlZGYmJubkZ0Qzk4TThpNjIxM0xhWnlkbWk3OUc3ZnMzcGIwbTNjdUtFbTY2N2ozbHVoZmxldEVhL1o1ckgrUkdNSXR5by9LTXhVeUhPc3Q0a3l4UlhiQkpha3MwM3hMVmhIYlZsbWcxUzFRVjJyRnBsdWpqa0U4WlEwZnVjQW1HSHJNcm5DUFQxZ3hkTTNRUmh0WnFocTRadW80VlNCbjZTY2lueWl5VG81L0ZtR29IVzB0dmYvb1E4ZUlleDFiOXJkSi9FM2tsai8yYW5OTmNaRFBndkRiN0dHeC9uLzEwOWczZVRRcHQ4SzlqSWwrNjZQVUJCOWIrMi9ydEE1bTJWTkc5WjhobUgzQnNqcDFOZVFrZmlRYm02ZEJVNlRBdGNOaGZHQW5uT0lJYXlIRytEa0ZjQURUSVpScm1heXJzYmJMZm9Ia3p0bjljaC82VFhhbkxzSElSU2VMVWR3eXpTK1JWNFBrLzJlL3JBR2ZRcnY4TkVIdUFWOTZCdjdHemZxL01Dc2FqMWlQSlBPeWpMWGlnMklMR2ZjTlFhZ3I3T0RuOGpNeGFRVXUyWXpybjE0bTZrV1VYaW4wcFQ0czBaQm1UYVFPVEJiSU9hQWZvUzNVbUttTEZ0QVJNODBkOW8rS29uemJhTGNPWG16WlN5dlVtcm9HUEdaZk9tT2Z4R1Z1NUU4SEtmMHZlTGlKNndlcUdBYUpYRlpnSmRNSmc5UzdhN3lxT2JpcTdaeU5oMjV1Y21Xd2NCV0g4bTdGL1lGMTFib1dabnJMOUxtQXNRbnZwSFpmcE8vYjdOMldhSXNGbndqSHZ1UzBkUCtwdjdINmFnbzV2czNxUTJrZjI5eDFxMmVmVVdjT3QyTDV3bDdPVVBSL0Y5dnhOOGQ5M1dleTgwZnVNNy9rODlUN2pMWmZkNll2VVk4WDJ5WTRXcit4TEpYbHZ0ek5qSmU4WGNjYWJJVnRkQy9vUVNrMTJuOCtrUnhWQktFc0g4NjRweDFiVVJ0RkRTdXNuOHd3dlU0NUpkaDk1SERtcVNHOThJdGsvNzE2U1IrUnBscnhWNmZmK1ZIcnZLZjJtRkV0dnNTMGdoeHM4ZjFYYlVXZGNDeHc3eGJGOGp1elk0ZU4vT09wRFBkeEhBKzFMWU9nT3hnVm1hRU9LMFpmMU1QVGpVRFo0dGd2bEhPMkpLMjkveEVEYkgwMXVGbWZESHJ4dDdTMFZYcmhOYXpacEszenhCTmJrMGxqcFdiZEpWMWQrVHZCL1Yzbk85VENsVERmTGFuZUVZU3RyZDl6KzBBTDdvMW5iSDdYOWNlL3NEMW1mcUcyUDJ2YTRmZHZqdStqVEdTcnhNbHpWd0VoRGgvdUZZRTIwSkx6Y3VGTmVYazlQanVOWER2c1h5Z0ZhSzM5WExKeHIrb3pYaFB1QytNcHE3TUJaWUFkcUcyZ0h2a2YrZXhmRzNvVGo1SE9vMit3NHN2SnNYTFArR2V5bmxKNERvMFlTMnlKSFBzZm9JczJvOGJoVm9lUFdvMmRGZEtXYzl2M0VKSHFadU1PL2k5RzlGZW1oRStpaHVuRjYrQXoxTDNyUHhUUnJLc0h2N2pTa25Eekw2Y3AydUlYVlVycy9TR0xZNFd3bllEREx5RUxJSDFkbU9LN1lmSlNBV1E4Tk15VGpNV3pRS0R1V1M0QXpxWmhET1YvaGJOcERKcGsvY0E0VzVQUWxHSE9UYytvUFVyTU9aQkhyZGNXT1pmS0t5L3dCT3o4OG4ya2VrZklBZlZHYWw2WDhneXF4WWhjelBCcE1OaUFKNk84dXpsR0ZNNkVOdEFsQVFuZnJxNjBMZlJtT2VlZy81ejNWZjFMV0RvOVA3ckpXL0FIelRCVWtvYUVNTk94TE5sb0FEaXNObkVXTVdtZE5uUHNwbHBGem55U1JqMmxjS3Q4Rzg5Z2trL0IzbFY2Z3Nqb1hQUndqbURIeEkzT2JGTEZZRC9ZaGR0a1liL20vV2N1TzhPekpUTHV5YUd0L09iUmxLR2JqL2hRemNXQVdIMnpzbmVENDZoRTZrSUNPdVJ3a0FRM1BEMXhqb04zWHhGRWNjQVk1TlZsZEI2MUVrSW1MTW5CdVJRSS9JS2IrbmZ0KzlLWFVkdnVHdFRBK1l2K1lldlEvV1drckgySVd3amVnYmJjZy8yeHBabXZDYzJXZkhmVVo3Y1Z6bk92TzA0Wi94NGhmOUlnb0RqNCtuNE9aL2grWWxGK2lSWkQrS2J0YUt4NFJiZ1FSWWYwdjB1UHpwWll0OWNmS3J3bzg3KzNqQ3ZwK2g2OWFncmhQSy9Eck5HUmZXTkUweFF3bThPZGFhTk5QV1RsSEszMkcxb21PRnNkdHlPSTUyNGZ1dW15L2Z5RTk4aTc3ZkxvRTg1Z2ZaT2pIRHZMNytzZkkzdEY3VDg4QUsrdnROUm5hSmxxY0xkU05uM0YvaWlJYU9JNjdPSGFvT0VZME1VdHVqam8wWjNXd2g1M3c5dGFqUHk5UzBVam1tSFZ1aWZtenBCblhoSWM4WSswU003NC9CZXR1NDF2TDkzOEhHUlo4UE1nOUk0K1BzdnlUSGwvN0srUmlFY0VpcUQ5ajUvbUVlZjFVc3hOa3k4bjc0VS9JVCtIKzczQys3UXJYclY0WFhDVlExbzQyTnRpTy9qRURqMVZZSUZubmw0MFh6VnZwN1hsYVUwVHpIc2UzTHVWM1FjYW9odithZlA2bmc1WkFPNkV2ZnE3cDE5WHowN0VVNHozSG1Pa0JjeG0rRkhiUi90a0pheXJiWDNQRXM0SFp1MU9Nc3ptSXRJN2pwOE90WXZqYnhEVlRmajR3V0YxenROM0FKN3NkKzh2R3UzN0hzUEx2dWxoLytsRjY1R2RlaXRuYmFYTkg2OUtDTkZtSy9aSFdIY1l6eFAzblhoeGdpeS9XdnM0d25uVmR2M0hLeCtIK3JUU01TN0pZanI2WTc1Qy8wbEJjL2JkSkt3M0IxeXE3NmtETVlLblhHdDcrV2tQekZsajUyNVJWRTNJVzlwOFBkNHpuQjFzdk9jTzVhaVlXYy9scUp2NHJNWEg1TmQ5ZkZ4TW4xd3JXWFB5MXJ2dE80K0x2MkoxOVFOdC94dlRDejBtTWJxc3lGK2hpVkpEOFRZZkhvRHVSdFdxMGlyYkJPT2h1VjlHdUt5Y3hpbCtjd2FBM2ZwSDRTOUNuT3VnRlFxNUdSMkJKSnpoZitwRWRuTTNUQzhqM0JXb2kzY0VsOWhMUThKMGxwVDdEK1lZMmpqTWRsSG9MWnhjN01hbFBNWExjaVVrZC9ybTQ3KzNFa05lVklaaVA2dDNxd2crWUQvT0Z0NHBXUzM5aDN3MHVEVmlMdDhkMUpEcUNRa3liMkxENjNMU0pJK0VjZXpqRnAwMmNhNGpHcDF1WUI2UGpmQUw4cGQ4RzZ0UDkxbzBzTkt2TDZKa3c4ekRCMWtDNzcwcE9sRE40ZitXVWgyaDFXVzJoTFhaSkZzd2R5Z2UyM1YvNXlGQ015K1JIekMwN1Z5Z1diTEUyblBOdllHR0RkeEdWeXZkaGZ1Q2FaZEpta21oalprNGJNM1RnYnd2SHlpWmFSL2RYSmtrTTR4SjVoTmpQTVhNWC9ITS9HOWJQZ2graGwzV05uUGhlb1dkN2dsOTFnLzBxZXUwcVZnbk1uTTNSOTNiUjA0WDVrVGtlNFV2SFJsdTBqZjJqd1ZmSmFOeHk3YkFheUtpb2tzZWNGby80RnUwRUorS0ppcEdGZGVXbmwwRWEvanV5bUJDOVgvSHZhSGR5cytqMmh1Y0wxM1VOK0hnRCt0WEEvN3p1S0pENDl6Z0hBay8ydFJFVko1aHhtUVp4OWt1TTFnK3hkODY5Y2Y5a3VtRG4yRDAreDhJNlgraHowK3YyRDg4WHF0YzlPanBmekZuQk50dGUxOXJEbmF3QjFsa0grS3M3cE9JVkZyMWpmb0s5QWY0ZVQzRGZRUmQvRGNaWUhOTkdhOFQyZGJ6dWhDb25kUGFKUlJjNW92TlJjYmdMclR5R1ZqVzgvb2tLemVtZmFIQ2Evb21PeFlCdDFGaWhVYUZENFEyaTJMaUlUZkQwbkdCOGNCUFJyOVBVR283WGdObzhvTHNjUUdNMTlndnZhekR1NHk3ak1kVWRVSEVHaFRjNTY5NHM2TUlQbUdOSWc5d25KdkJYTjRzM0k3YVAyZkFPZURteGZtWG5ZeEtlSExLN21CejJ6eGR0ZDJhNCtEU2V5ZGxnTlNmeTlzNUdONHZCMFFSdW9UY2NRekVhNHAyTWRsRUJoNmdiSTZpQ2s0d20vRGREUXZWMlIwTXFMTGpwM2QwZS90cnRZMkZOUUgxR3d6NGNzQThuYlhpL2pQNXh2bWhDYWRIUEV5cEdjUHorNEJDS1h5ell4MmJsSHYyY3dPbCtzYm9JN0hDRWlCNUQ0L2F0SVd3YldxZFE5S2tZV2lpQm5uVUVoKzMxTExpWjQ3Y1cvQnBhK090Z2dvcDFNQ0dpN0NQQlE2ZjlFMHRNbS9iT0JyanYyUkcyZnpMRzA3RWpvVGpyNytMSkIyZnNCSXAzZkdUY0xOaWY4MFhMdzhLbFFxV2lJUlNzSE1EK1RIMmFIaFpzd0RpMkduUXVTK1dseGtzZHk3M2pIdXczMmNVZU54bTlnZUlNYmtUMWV0MVQzS2ZYUmEzcmRYZHhhMzhYZi9XUGJoYkR3Y1JkTkY0MnZjbkppTDZNRC9tVzdnbi80dlhPRUdMdjZKZzE3K2k0aitmMFJ2dkg2TkNPRkJ1SG14MDJ2QjBlb2NCR2gwTXFZTmYvNWxQZEhUUjNpT3BibVA1cTgrbFkyRXFwc0JxZktJZGdCRXlIcXpoMWJ1T3lsaG1URW11eGR6Z2s0YjVsa2g3dXZtVTArR29mTnB5T1VlZUd2SmUrWVJlYUlxZlphQk5lZXNNaFFuUms0WDVIUFR4Ti94QVZvRGNFU3RpRFUvWmV3ZmE5SVZ6TDgxNGZzbnQrVFR0NVh1SjZEWDY5YldSWGVHbzZySFdsdWR0WjdJcU5RbGM4UE5vUE5weWREUENwQjFURW40R0FuWGxLZlhsS1hkbU05K1NwYWtNUWRyS0x0MUg0Umg2R2dLRkVKYmVnbGdUTjJ4LzNieGI3SjJmUThQMlR0MWhZN0pmZVl1VmJLdjNCaXcxbkxqdWl6d3lML1Q1ZWM3Ly9LbEsxM3orQUR0NS9EUmM2c1pCd1R5eFVhRy9VNzdITGpuRlllajArSXRydFJZcnhQNDZCWmZTTzFqWVRpQjcyM1lYS2VqTG9QeXZIZTVhN2FHdmUyRHJGd1dhL2gyTXR0R0VFOTcyMkFkYTQvd05zQVd5ZUpiQVorOTFHZ1lYZlN5S2szbitFZk8zeEp3dVcwQjZWbVlkVjlVZGRFaDExdmZvVG9yT2svb2dZbGRHZ084Ym9NY2RvbCtGRHI1eTV4RVNnOTRGYlRWaUZHR2FoQSsyT3dOTXlDQitzejhYSE5HTDROR0w0NkZvY29kbVNmVXdqaERSQ3lDQ0VERUxJOEt6UnJ5UlZDMFpIWjhvMm5OQnRXTllKYmlpRDRTT09JYmg1LzFKb3dYbWVudW1hVE5HeWdWUTdIRXB0NnBTQTBqRUpTdHkrTmpDMVRqRXduM0l3ZStoeDAzTUR3QmVCTllaZkFnOHJWRXFhMzd2STlqdDVyMVgxd3JTdk5neDV0MjFrZE50bWc1QkVQZ0FrWGJ0d3o5WE13bGpxcGtaWTZ1cXNOSGJaSGJvOUkraE1oNUNicjhpZ2FHUU5sMXBGc2lzR1dWV0Evc0g2S1lXM29nQVpUUUpJblFxNjVYS0lHb1NSazlWUlFTM3lkUXNKTVlJVHNDbmdoRXExQnFDU3VoVjAxS29kZEl5Qk5PaWduekxWVE8yc1ZzOVdPNml1UjgrKzR4aUJzM2t0UmFjdHFKaGdkR1RaWlhCb0RCL3R6dkd4UmwxaWY2dWJJUDFIQVY2VUFPNWcrUGVEb0UyOUlLYnlwUkRkYzd4VXpaRWlKaEIrMnltdlVrYUxJTE01WnZyTUtEeDJWdStVN0lKYTB5WWdZYWdwaitTSUVxaGdFck1Va3E1UllPUjAvWkVUN0ltQ1FBYmN4b0ZFbTJUMU9BSjhsbStOQUxtUldlSi9BV1RKTHZHL2pFdEQvRER1WEpTQkY4ZU1YSGNDMWJrMHZuTnVtY0RCQUhDbnRXcUF4d3hYYlQ0bnpNUkJJeHV6S2dheW5CUzFacWFCN0dqbCszaGdIamMxZ280d0xJYWRPaTlNallIaWFXNE11cTBBdWt1TXJsMEVpNC9LK1daeDF3eGRoSXF4anlJZFdUTzVsWUpPU1VHMGRFMkdWb3ZRYWhGYUxlcktSSUR3WmVvS1hSbkdtUEZCQ1J3ZkJ0YUtyZnllRXlNeENjVU9vWWdtV2dURnhySW9Hb1FpcVpnVXhxWk5PR29aT0RZYlBBelE0WEdBRGtlU0sxNkxhMTdMU0FPVHRrVEFaRVpuT2FXYzROTVZIZVgzTXIyNGtGWVdzNTdsYW9tZEdRYnE2Y3I1RHdjWTdNTStrT1BvU0VOalQ3NTY5ckV6djBmK2k0ZXJJaldGTzcwMGlyQUI0U3ExWXJncUhhWG5VcFQ2R05panVmejdpSk4yU3poTk1DdmhqM3VMazc1eW5MWUNuQzV3VmNQdEJZYXplS3pqR0JXZE5ENGtOQWlhQmtIVElHZ2FCRTJqSURSUHBTckVaMlBLcTArYzZ4dTNQL3VTUlVaTlFxaEpDRFdYb3V3RG5nbVE3YjF1Nmd3RFI0bU4yQWhUazJCcUVrdzJ3V1FUVExiVTloOWd6dXcxNW1JeXJwRW8weVV6djNaNFh1RHZPTzlld0JRcll6cW96WG1SeVlhRzFNa3YzZVhraGdNM1owMkN5aVRqbitZYTBnTWoyZGdkOExWTDRWTjJSZXpBYXNTd0pYaEFLTTFHekpBbHZ5bGh5RW83SStwaTBZaTR2VmJzaWtQbDk4aHdtVmU2b29ueE4wZldJeUZxblVwYm9ZOWVJWmkwTmoyTDJ2VmhKQWtzVll3a21mTVNlRDZNbWZtZlZqdm5YbkFpU3hnYWI2R2JCbUFCamxHd3Z1TmduY0NVUWZBTVdOODl2K1NyeGZLc0s3dHFjZ0o0TTNrdzZZSnI2YnRDZnFnTkZUcmhXS29Gd2htd0ZTMHNEcFpta3UrRG5zNHVPbXlvZkswV2VUNEdsQmhPek1Yd1JRVERDMHdHaStaL0oza3VHMUhITEF3cFJMSXlwbVljbTBEVk9LaU9Kc1RYWmp4R1JBTjNqb2ZKVkpkZ05UbXVKZ0hybUFTc3c0RjFUTkZmaHk5ai8wdXNnMU5WOE1VUE1JM0czQ2VGWkZJS2NWckpjSjFNRkg2UTdsYmcxMmVGNEJkQ2RBSDZtZk91S2JFU2c5dDlCbUhQRENURUhrc2RTMFNhVUpRaWpZTTRBSXlLUGliRkx3cnZkZ0F2clcvK2hLdk1DdGcvL3FTMm4yeWgydk1DK0JheGY1b0NZOFNaRmZqV3drUzVkSEJiUmpsd2ZlQlVONGlSSUlCYVBsUDhLSThoODNTTVl2emJyc2kvaFlZcEh0cHpiU0ZIZ01OcFRHUDBhOGpvMTRkVDVJa205K09hM0pGalpUenBncUpRWXdMVUduTnE1cjhCYU5XVlVyTHY0WXo0SXNpa3VzSWltUkhiL3EvOHVhVDRQSG5sNkhPVzcxZkNCb2dycWxrMWNKQkU1ajlreU9DRHNqL2hNcCtmK2JJbUd4OXRsRFBKc1ZyTVZtczNyUkF6ZjVnUEg3VlBYVGU2cDh5ZFFiY2wxY1MweXdjV1NoaVl4WWVZUWtCaFB3WCtTNDR0WUhsQ2pVVmxNVWo5NFhvL1NEekFWVWZyU1I5MmlwdnBwYkxOQk91VDA1OU5RTm9FcEprdzFMbnBHYzAyaXdFYUJmQUpCL0FOUGE2RVQwMUdYOWp4ZmVCa0Y0bmVDSGw3Z1Y5ZExJQURVNHdsdFRHd2VkQmtXbXBhVW9wa01HY2VUclJock1ML01qNkpETnNOR2swRUpTMk9jYkZKSTgyVTZTa0ZnRmFJc0Q5bnBQdnp2czNpQU10OVNsMDJaNFE5TzYzdmw0T3hqRlB1Y3V2UmpWdVBybDBBeENMdTVySUJJTG1LYWpJRXlTdVBla0hCWkp1WUllbno1WmhiMkJmS1I0RXY2UmxEc05RSUhKeHpHWVpxMHlBTVczRU03UklRdHFSNktEVnFhT3EzaWxYamEyR2NNRFd1aGxqcVdGTHZiZkh1V3h3MFgrRm9raVRiWGRGbG5WWklrNVNQTG8zaTFqWHliUktycVpFL2FSNzRLc0trT1JBczRrVmZkUHBDOXJVNTUvWTFmQm41R0ZxKzZ6ZjJPWktDSHNVdzlmTUNCL2lZY1FtaVV5UG1YUHZhVjhhN3poeXZFVU5aTW9MYy8rT1k2akpNSFZQdXNIUjRkSzNEa3pvNkxZb1VvVnZpejVGM1F6ZkZuek1Yb3VQcElJYmVORDFWSHA4QmxxbWV6YXEyVDRrUmhYeStTT3l0UkJZVzh3K2w2Z25iQjN6N2dMWUhVT0pvM2VhRGRaczAxSWNVRmZTQVhNTnluZjB0NHBrOXVzUkg2RUo1ZzJWc1NhNlpVK2xrcU9CSlMwZVh0TUJFV29aTVBBT1RxeUo2ekNsclFlRFIwcCtVOFBXQ3ZsbitnSU9vSy8wSzZXM3RJdXRvaXJnMGV0ekVpUVBJVkVVU2lpZ1dOdE5NU1N6NGdNYm9Namh0aHpneFA5Qi80RmttWXRJQnB0alNJeDh5TlYvbkhPa0FvODVsWktqZUttU1BBd3ZtUFQwdEFwODRJYWJlaTdDMXFzNDVxTVZuQVFOZlJXK1ZUd3IwRGNFOHIrL0FONTBQa3FaekhuUXZnakgzQTY3NktEdk5JSjhoWEY3MU1KODhNczlnUzYxcFgvbUtSR0xGa1ZpcWZMNUZNdzRtQzVJR1RORU9URStoL0ZEazZTQXI2TURONGdGWUFjTk8vcURocDZjSzV2U0t1cSt2Z3lONjhBYk91SzVaQnhPWmxMcFVDVHRtZkxMTGxZNGE4dmxESWNIWGtWT2d6QjRVd3pqaE5CZTNZcUp4YkZKWGRvUHRKZzNMclhMYStpVHduQy9RbFhtUGJ5aTl5bzJZcWF0TGlNc2FwMDNwRWptSWcwUVExOHJNd0tScExkazNWdElKekVQd2FRVEJmMkVRWndjakZhVXh4TUJnaWNXdUFZNUd2aXRkZVg0QWZPVUNneEFHSVp5MkpDRWRrM3h3Zy8vRm4zNFpjV01TYnBFbVpDUFdwVGh6bUNlRm43Z1U2Q2xXRG1hL1h2RzNkUHBQVWdzSXBqeWQwRktxb29vdFpaTzRZZ3ZXRkliYWtseFN5Z0xWZVl4STU2RjFWaUtYY1BGRXg3Y1JGMDRzbUluU2lreVZtZkdaTXJEM3ZjR3dmN1BZdUVkQkRhSmVIRFdJUC9ZQlBEYWhTZEdhMDlTYWFrM1NxRW1zMkE5YTlJSzF4d25tSTJaY0c2OGpVejVYQVJjN1BPZmpBMzh1enB0ZzltS3cvNW9CRDQ4dGdwTWZzdS83OE93aDlyMFhlWUJacEVyMXEvanpWNkR1TGRRMWxqK1BXdkVVZmhYN2pkQjVNZEU5NHFMcjRkTUVISHlzZUZKOGtWZFVDdUtMMWxRVG4wN2kwMnZ4VlJEZlV5NitNWC8rSHIzTExpN0VwNEdvWlB1Y0Z0aW5tbUJ0RXF4ZEM3YUNZTGVEZmdrVEJHRGdSSjBkTnpKNTROZWRadFJWRTZCQkFqUnFBUzdSTS8yM1NGeWc3Y1JoRTNxbWZKL1RBdnNzUmJtcVdrdTJnbVJEODh2R0ZKdHdMYUxMWndIODdhY3AyNnRKclVsU2E5WkNXMEpvSXpRM25jZ1RwMXdlQi9HM242WnNyeWEwTmdtdFhRdHRDYUVONkcwNkFTeStjTUx0cHluYnF3bk5KS0dadGRBcUNPMEpGOW9lZnhiTkgwaDZVZnZsQ1JlVGJJL1QzRDJxaWJSREl1M1VJcTBnMG9kY3BGMmNpNzBLWm1qZDRJRVFsMEVmRkxkV0U1ZEQ0bkpxY1ZVUTExYmdGRUxQb1dYV29qOGYxb2orZkZoVFRYUXpFdDJzRnQwU0k5NGJoUjdpTFk1NDRmYlRsTzNWaERZbm9jMXJvUzNocTQvQ3ViUEFLZGdPN01obzNXbEdYVFVCdWlSQU45YXd4NEUyd1JQRyt5aVI5emkxNTgvaCs5b2oxcC9tMUZkcnBNcWp4MUQyMVFpd2c3NFcrNlhIZmhteFh4TVN3RDRHeGF0bzYxT3VyVkF6QlpNQ0p6KzdPQmtmMWRlV1hFbDBFNVFwVXZWU004TmFyV08zNDdWR002eWR0c1JqVzFtSHRqTU9WY1VXaWQzay9qVi9kYjJ6WnJFMTR2U000elRHWlRQN21PMEkreVo3a0M1cklMVWpyaWtSUllGL3FhMlhBYm11aTJ3SXlqQzNlb0c1VmRmS0NWK3IrVnUrUm1xZGh0M3NwR2hTMitFTnpOZklZdWZaa0o0YjlOZXdEK2ZoNUhlcjdNYmw0MVRzUEhlTTAvTUl3N0dleW52d1c4emRvNVRIbkw3YjZEQW0xMUs2VmJMUFJjbExxbkxydXNnZDQveEN3RG1DY0I1THZnemJNbTFvdHAwR3c4eGwxZkhLam5oa0p0b3J2dENHYVBZZVpxSmlqZ3FtVlFhams1ZGoxMmtOM1JFSGpOQXdVcWVkdGpwTk00elV1ZUd5WDdIYXdEQnEyWE9ub2FZWlJza1RxMktMUkNuZXYrYmZzVzQ4NHJyaHYwMlEzdjc5TVU4alpDYUVGcTBVYldFamJMZG1aeGpLb3ZIUmVHbUdwMDIxVFB6bUZGS0h6VzM3SGV2Q050ZUZ5Q09wV1YydUpyUmFrT0VwNzF4bXcwekNHZlNRVmt1MEN5SjR3b0Z0TjYxejBZWFRUQy8yZjJGbDJPRG0zN0UrYkVWaUFYOGdQMXhHdE1HUU5hclRObHFxTUZ6cXdaMU5aNllqY0trWjFMWWNiYTdLSVptN3M2a3pTMHIwYnBxd0lWS3g4SlVZTjRKVXBFcmUwVHZNYmt4VGNrT0RUNXFTVDV0VGZhcW1LSG1ybGV3OW9aTFA1dkNSWWdFZHl5eEsyQnZkL0EzaGJQSldrdlp6aWorVzNpenVYNGlDV2VJOEs0d3I3dzM2TjR2SVc1Q2ZvTTN5VGpuRUhHeXdiWU0zd2dmemNQTmdPWkd0WENmZWRiek4rdEY3OUQxT2xLbnlQMlFENWJ4cmVNdGZCTWQ4YWxpZ2RLMjg1MGY4bS9ETzRlM0lHK3JGZlpOdktONWliZm1BWER0WEpzb1hLRlBPK3doYmJlT2EwRDlEcmVCN1AxVCtpNzhySFQvQ2tYbnZkbTVqYlF2ZjR3enZiSWJYZkRwc2l4YTgyeGtlcDJPeWJXMTh0ek44bXJobm0vMVZXUTM4OGdRY3dvYzk3bUtNSm55ajg5L3dmZXBOb1pVSHlHNFVyNURkbnh0K2hDTzd1TXJwR2pQQ0xNeld2RTdGY1NzaW4yekVuMFQyOUxQTkxzbE9DdVRaRnU3aVNmQU9iM2dLQks1N1JsMWozbGZxVlVLYyt2eEpXVGFtMkVUUkVtWDZMS0kzUjVpWGVzMmZJSDJPbzROL0xWVzRWaUNKNFBWN243Q05WOEVSZXV5SXgvaVl6aXZsOTlUOXhYYlJpck5ZdjVSS0U5NGpMdFBXcC9nNGd6OTUvQlI2OGl4eC9GWmMyNWt1dVJYZUsvNHQ5M3ptQWtZSHFJUFpWNC9vb3ZUcTlGNDBoaE5qSVJ2N1V0NDlpRGk4Q0JpSE5Qb3lWVDlFR2F6bnJlZVBJb3k3RStGY0wvYU8rbngyM3VMcy9DdHEvYS9zR3IvZFc0YldhNGF1R2JwbTZKcWh2eXFHM2s0eXRLTGRXNDQyYW82dU9icm02SnFqdnlxTzltTWNZMXlPY1g4dGFKRzlhbmF1MmJsbTU1cWQ3emM3K3pHT01VTWVyZ2Z5dUs4TTNhb1p1bWJvbXFGcmh2NnFHUG9IenRBV083Zi96REhhSDJmWEZYcmo1SDNsYkszbTdKcXphODZ1T2Z1cjRtemZxbzV3OXIxbGFMVm02SnFoYTRhdUdmb2VNclJFQytyTXU1cWRsMkpua2N0cWRxN1p1V1pubjUxRHlTN0R6blhtWGMzUU5VUFhERjB6OUtZeWRKMTVWM04wemRFMVI5Y2N2YmtjWFdmZTFleGNzM1BOempVN2J5STcxNWwzTlVQWERGMHpkTTNRbThyUWRlWmR6ZGsxWjllY1hYUDIvZUhzT3ZPdVp1aWFvV3VHcmhuNmJobTZ6L1lDN1l4d1Z2QjBmR0xvOEYwTjcySjdpV3lkelhzaWluYkNyczNqUHB2MTRZNWlzTStNWVdhdWhQdVcwYituc2Z0TmszaGI0TnJvTWRrNWd2Rjk2Wm1NSVY5a3pZUW1XVnhuOTkrOEZkM3o5V2tucGl0bGRjK2ZFZUZjdHFTdXRSSnhyNjlSMThCbTBkYWtiZVk5MXJhblhOdWlYQzlhbzk5emZZT1lBYk1vTnlyUFdJd0ExRm5HbTJTSjZvSk5VbHVpK1phb0pyU3J0a1NyV2FLcTBJNU5zMFFmaDN6S0dEcHloMHN3OUpoZDRSeVp0bWJvbXFHTE1MUldNM1ROMEhXc1FNclFUMEkrVldhWkhQMHN4bFE3MkZwNis5T0hpTisySFZ2MTU5ZUpUSjNGdXFKZm04ZHlHcjVmMUdSOWxuay9UR3JBYUJyN05BS1dnMjJ3RDdUZGw0cUp2T2lpZndkYzU1WG1pSmJBRWZsOXlxallwOUowYVpuK3NHbDZLTmViS2hyNE9IYW1WY2FyeEpFdFR6T2JmRlIxY1R5RlViZk5QZ2JidjdwbTF2R3FkVmlvTW0ycG9udlBzTzkvUUU2TG5VMTVDUitKQnVicDBGVHBNQzF3MkYrd3hlWm93eGs0eXZvNkJMRXAwQ0FYT1k4MEZmWUdGZ1RObTdIOTR6cjBuK3hLWFlhVmkwZ1NBNzFqbUYwaUM0R2w4U2Y3ZlIzZ0ROcjF2d0ZpRC9ES08vQTNkdGJ2bFZuQnFOUjZKSm1IZmJRRkR4UmIwTGh2R0VwTllSOG54MEpBUG81cHlXT215VFBtZVh4R0hIWWluT0svSlc4WE9mK0MxUTBEenIrcW9CZkFEUWFyZDlGK1Y1RmJWSWFwa2JEdFRhNFhObklRc00rTS9RUHJxbk1yZXZHVTdYY0JUSUQyMGpzKzZyeGp2MzlUcGlsTThrdzQ1ajIzcGVOSC9ZM2RUMU9RMmphckI2MzR5UDYrUTA3OG5EcHJ1QlhiRis1eWxyTG5vOWlldnluKyt5NkxuVGQ2bi9FOW42ZmVaN3psc2p0OWtYcXMyRDdaMGVLVmZha2s3KzEyWnF6ay9TSnVrODNRbnJvVzlDR1VtdXcrbjBtUEtvSlFsZzdtWFZPT3JhaU5vb2VVMWsvbUdWNm1ISlBzUHZJNGNsU1IzdmhFc24vZXZTU1B5Tk1zZWF2UzcvMnA5TjVUK2swcGx2NkpzZUJsNEwxeksxNzV1K2dKVkI3VGRjYkN3TDVUdFBiSUd1eXdscW94dXhEcTRRNGJPTzREZDNjd1lqRERzVjJNeTZ5SHU1L2hHQmk5NTNmWWIwRlBQd1cra0NpWkY2emxTZnlLSExrZWRpa256M0s2c2gxNWw5NE9iL2NIaWI4YnhoMEFnMWxHUERCLzVBY05NTkM2Y2RETHRURmkxeEc4Q3RBb094YlZ3NWdHem1mT1YraFZQR1NTK1FPaklTQ25MeG5SclFlcDhUK1pkN3N1UDFNbXIzSXkzMkpiZ0tkdlVKTld3d0x6Z0FYMGpXT0J4eUYzNDlrdWxIUHNOMWZlL29pQnRqK2EzQ3pPaGoxNEcrTmJLcnh3bTlaczBsYjQ0Z202enRsNnBXZmRwckZzNWVlRStOZ3F6N2tlL1picFpqbnRmcUVjb0V6K3pud29pTGgveGl1RHpnQmJya2JiWjRHMmF4dW83ZTl4bnVoZDZQOEp4OGxua3JiWmNhVExSVWJJS3dtMlJZNThqaDd1cG95c1JYU2xuUFo5RjEyMVVja3YxbkIwVkxudS9JeXh0NW5Ta3ZqRmZyVGtidnppOVVna2psL1pjUzNpZTFYdTZmSEloQlpFSnBwMVpLS09UTnk3eUlTc1Q5UlJpVG9xc2Zxb3hBT21wYkJ1Y1I3dzhYUHVvZnByR0hkNGhHeVhuZTBQaUc5WFlHY1lGWFgyRnl3cUc5blpZYVdCc3doUmRtN2lMRlN4bkpEN05EN21ZNW9ubFcxczBTYytXMDVaSVZVaStDN20zVFJRSGk2aTd1SzhUVGc3MkVCSmdMZCt0K1BrdWp4eEdZNXg5TDhOWmhFSisvQjNGYnhWVnVjaWp4bkJqSW52ZVcrU1hiSWV2RVBzc2pIZThuK3psaDNoMlpPWmRtWFIxdjV5YU10UXpNYjl1YkxQenZBWlBicHpuSi9jQ2M0aHQ4WC9IYTI1NkJIK1NIT0pvNVNOTTdLZmd3eVVIeGk2TDVGeDBqOWwxMG5FcmYxR1lPM3JmeEU1NTBzdFcrcFBFVlhmWTg2WCtNZkkzbEZwcDgrOWw0MHZONWxFVEJ6clcrejhMUnlYWE81Qkc5aUhYWXc1cTVpWDBNVDhCTWd5QlN2S3hEMXNSWXd2cjBlaUwxTFJTTTd1ZDI3Rlc4aVdacDRtakhtUGhlaFNuaVlVNlpuQXdEcG0waEFEYTNoK0UrVUlzMDFObENQMFB4Y2xPVU5ieE1DKzZtTGZkRzVGamo4RVhBVjNIcGVqR05mNmhyVXdMc2tmVTQvK0p5dHQ1VU5zWHVJYllLRmIwWVFzYVdacndtUGxWd1ZXeEg5Y2dSWjArQW8yNkwrdElNYXE0VGdNcTl1bTJKdWh2N2R3VG1tS1BkbkZXU1lObzdKZytkK0dGanhuKzlCZGw5V0FGOUlqNzFMNjZSS01TLzRoejFPNnhJenZUOEhheC9qVzhsSjNjS3dGYndLeVk4bTNvQ3ovcEcvUi9ncEhaUkhCSXFnL2ptOWR5dnBWTVJ2UFJUK2ZvdEFkN0lYdGhGWGtaMzUrWGZpblkxbEVFcy9ZR1QvaENndXEyUWt5cStVcytCUHlRN2ovTzR4dlh1RjY5ZXVDNnpYS2VqVEdCbnMwUDJiZ3NRcXZJT3Y4TXI1dTNncm41bW1OR05jNXhwbGNtTVh6Ky84dWpubzdZVTNsVVhlT1VvZk1ieGhoSFl5eU5kRFcraGxycGp4SFEyZllxR2h2MDRvRkdHdm5PR0tEVFhZN282Nk5kLzJPWWVmZmRURXAvaWc5OGpNdnhkelp0Rm5UZGZGUG1pempXdkNkMHNOV2ZtYjdYZ1V6a05GdFZTSWZMdnBCeE9zT3Q3TTZrY3hjeXRodU1GbmZiY2IydW1ZZ28vakZaNStnTjM2UmFBZmtBWFZRNXlFRzJoR1kyUW5PbDM1a0IzMFh2WUI4WCtES0I3cURTeHlkZ05GM2xwVDZERzNxTnRwWUhaUjZDMzJwVGt6cVUvU1ZPekdwd3o4WDk3MGRyM2xkbVFENXFONnRMdnlBY2VZdnZGVzBmdU1MKzI1d2FVRG04UjdYa2VqNkw3RGdhYzFmZFUvY3hHakpISHM0V2VNbVJsZWkxbmdMNTF4MGpLREFYL3B0b0Q3ZGI5M0lRck82akxad2ZMK2tETVU3azgwTXQ5MWYyY2hRckM2VFowTDhhNEt0Z1BiZW5YeWE5M28welVNMExxc2ZjUjd6blB0Y0ZtdlBPZjhHYThodG5POE1wZlY5T08rMlp2bTBtVlRhR0lkc1l6d1Mvclp3ckd5aWRYUi81WlBFTUM2UlI0ajlITE9qd2Y3MU00NzlsUVlqOUV1dmtSUGgyeDhvb1hOa3k1M1l0YXRZSmVDZHp0Rk9kM0hlSHVJUWN6ekNsNDZOdG1nYiswcUQ1OFJwM0hMdHNCcUlHbGJKRlUrejk3OUZPOEdKK0JYaURNVzYxZ0NVUVZxTVV0RFRTZUpyUGYzbmx4NWpHOEFEVHViOXIvcUpKR0pHV2YxdVdzTGgvajJUSkw0YXVzcnpCb284azBSOFRzZ21QWk1FWXZIbG5xQ1FYRWxjUDVma2EzMHV5YmNwejRDUWM3SC90TWdEWk5TTHRmT3dVZlB3WDVpSHhUelV2eG9QaTNaSXpjSjN3Y0xtYmJPd045cWQzQ3k2dmVINXduVmRBejdlZ0g0MThEK3ZPd3A0K251Yzk0Qm5SOXNvQXllWVpaa0dUSDJKRWZvaCtxaHpiOXcvbVM3WU9YYVB6N0d3emhmNjNQUzYvY1B6aGVwMWo0N09GM05Xc00yMjE3WDJjQ2RyZ0hYV0FmN3FEcWw0aFVYdm1KOWdiNEMveHhQY2Q5REZYNE14RnNlMDBScXhmUjJ2TzZIS0NaMTlZdEZGanVoOFZCenVRaXVQb1ZVTnIzK2lRblA2SnhxY3BuK2lZekZnR3pWV2FGVG9VSGlES0RZdVloTThyeVR3S055RVIzR2FXc1B4R2xDYkIzU1hBMmlzeG43aGZRM0dmZHhsUEthNkF5ck9vUEFtWjkyYkJWMzRBUk16aFJVK2VVZldxNXZGbXhIYngyeDRCN3ljV0wreTh6RUpUdzdaWFV3TysrZUx0anN6WEh6K3llUnNzSm9UZVh0bm81dkY0R2dDdDlBYmpxRVlEZkZPUnJ0c2QvWURkV01FVlhDUzBZVC9aa2lvM3U1b1NJVUZONzI3MjhOZnUzMHNyQW1vejJqWWh3UDI0YVFONzVmUlA4NFhUU2d0K25sQ3hRaU8zeDhjUXZHTEJmdllyTnlqbnhNNDNTOVdGNEVkamhEUlkyamN2aldFYlVQckZJbytGVU1MSmRDemp1Q3d2WjRGTjNQODFvSmZRd3QvSFV4UXNRNG1GQzdvNHhBQ25mQlBMREZSM1RzYjRMNW5SOWoreVJoUHg0NkU0cXkvaXljZm5MRVRLTjd4a1hHellIL09GeTBQQzVjS2xZcUdVTEJ5QVBzejlXbDZXTEFCNU5ocTBMa3NsWmNhTDNVczk0NTdzTjlrRjN2Y1pQUUdpak80RWRYcmRVOXhuMTRYdGE3WDNjV3QvVjM4MVQrNldRd0hFM2ZSZU5uMEppY2orakkrNUZ1NkoveUwxenREaUwyalk5YThvK00rbnRNYjdSOWZ3YlRPU0xGeHlOMWh3OTNoRVFwc2REaWtBbmI5YjBiUU5vWUVHeGh3Z2pCSEU0MmVCazdJelRFSUJhRVBNUDQwckhYWWRoZU5IUXFHUU9nUXBNUmE3QTNmTWhFUGQ5OHkvbnUxRDVjNUhaTzArWktBcmtJUHlJZmxKRFJ4T3ZPR1EwVG5pUFRpcUlkRi94QmwzeHNDRyt6QlNYdXZZUHZla0YzbThHZy8ySEIyTXNBbHhWVEVGeGhqcjVwU3A1cFNuekxqWFdxcTJtRFpUSFpaMitHLzE0Y014ZGQwYmM5THZaR0hqSTF0alBWZUlyU1NXMUN6YnlIL1dpcS8xaFlib2Vac05OZ0pyeG03bmxvSXNzVDF2UDArcy8zMyt3ZlFKZnV2WVk4VEN5bnl4RUlWOVA0UG41dUJOVm8vYlQ0QUFBQytiV3RDVTNpY1hVN0xEb0l3RU96TjMvQVRBSVBnRWNyRGhxMGFxQkc4Z2JFSlYwMmFtTTMrdXkwZ0IrY3lrNW1kemNncU5WalVmRVNmV3VBYVBlcG11b2xNWXhEdTZTaVVSajhLcU00YmpZNmI2MmdQMHRLMjlBS0NEZ3hDMGhsTXEzS3c4YlVHUjNDU2IyUWJCcXhuSC9aa0w3WmxQc2xtQ2puWUVzOWRrMWZPeUVFYUZMSmNqZlpjVEp0bStsdDRhZTFzejZPakUvMkRWSE1mTWZaSUNmdFJpV3pFU0IrQzJLZEZoOUhRLzNRZjdQYXJEdU9RS0ZPSlFWcndCYWVtWDFrZzdRUllBQUFLdFcxclFsVDZ6c3IrQUg5WHVnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZUp6dG5ZMlIyemdNUmxOSUdra2hLU1NOcEpBVWtrWlNTRzZRbTNmejdndEl5Vm12SGR0NE01N1Y2b2VrQ0JLaUFKRDYrWE1ZaG1FWWhtRVlobUVZaG1GNFNiNS8vLzdiNzhlUEgvOGR1eWRWam51WDRkbjU4T0hEYjcrdlg3LytxdmZhdm1mOVZ6bXFETVA3Z2J6UDR2YndsdjY1dTdhTzFXOG5mNjVIVncxN1BuNzgyTmJWU3Y3dS8yeC8rdlRwMTk5djM3NzkvUExseTMvNm92WVh0YS95S1Nvdnp1VVk1NUZPL1Z5dTJzK3gybS81azNhZFcybGFYOVd4WWM5S3pwMytMenI1Zi83OCtkYzI5VS8vTGJtVURKQTVNbUkvNTFUK3lCU1oxLzVzRi9ScnppVS90eFBhQXVVYjl1emtYekx5K0svbzVNOHg1RUovdFF5UmM3VVY5MW5reHpYZ1ByNDZoajRBeW1NOU1lelp5ZitzL2svNWQrOE02SG5rWG4rckxTRFgycllzL2N4WXlkOTZBT2o3bFo1MXc5QnpUZmtqMTVKVlhlcytTRi8zbU1CNStGbVN4M2E2SWR1SjlZemxYMjNFYVF6L1VuWGkvbk8wSDEzTldKeHRINmRmWi9zcFdWbmVLUS82YmVaZDEza3NsN0tzYmRvZ2VvWXh5ZXFhWVJpR1lSaUdZWGhGR01mZmswZXcxNmYvODI4djcxbnkzZm9lWE9wcnVqYjFybmlFeStqdGFnZlA1bWRJbmZDVzlyNjdsdmZ6bmZ6UDJQR1BmSVo1bnZkMXZzUXV2Wlg4LzRiKzh4WmMvdlN6WWMvRHBvNU5KdjEzNmR2REYrUnI2U09kejVENkpEL09YZmtEVGVkdnBJeGNqLzNJdml6YkwrM2YycVdYOHJjZjRsSGJRTXJmZmpZZmN6OHBmWW5PTExrZ0cyeSs3T2VjOUF2WVoxZ2dJK3gyQmVkUjU3UVBrL1pudHgzYURQZENucGtXOHU3czJabGV5dDkxOUtqamdhNy9BM1ZvdmVDK2JUK09mWHRkak5BdWZzaDkwSFpmOS85S08rdDQ1Mi9NWjByMjYvUlpYWkxlcyt0L1FMYnBBeTdzcXltWjRXOXhmME9XL0wrVFAzM2ZQa0RIKzFpZndNN2ZtUEluTGZ3QTVOUEoveWk5VjVFL3ovYjZtN0t4dkl2MHhkc1g1L3JlNlFiMGlkc0p1c1c2R0hiK3hwUy96K3ZrVDV6S21mUlMvcHpYK2NQK2R1eGJTejliUVgybFB5MzlkL2J0NWJYVWJkSFZrZjE5UEVmSVkrVkxoSlcvTVgySXZLZDE1ZkY0NWt4NjNxWWVIbFgrd3pBTXd6QU13MUJqVyt5Yi9Edyt2MmRjUGZhQUdXTy9IN1o5OGJOTnZvc0x2UlYvdy96RFoyZG4wK3I4NE5ZSjZBN0hoT2Zjd1BRdFFsN3I4MnRmWnovTThxQ3ZSaitjbzdPcklQK1YzZGQyTUh4ODJJN1FHOWgvUGNlblNMOVF4dTdiWitkejdMZmpMOGRvSDlpUjhVa054M1Q5M0g0WDEzdVI4dWY2Ymw2bmZZRzI3MXJtK0ErNmVVU2U2NWZ6eit5Mzh6WG9pT24vNTFqSmY2WC9WM2J3OUtXblR4MGJLZTBpKzdGak1NNGN5M1paNEpQWXhRc00vK2RhOHU5OGZ1QzVYeVV2endVc3p2Ui9jRnlBeThtNWVjNnc1MXJ5TDlESjZUc3ZlSVlYMXVIT2MvWDhYK2tHdHprLy94MnJVTXpjcnpYZHUxenRXNzNqZVh6ZTJRSVl3K2YxeEkwNG5kVFAzZmlmWndEays3L0x5ckZNZStRL0RNTXdETU13RE9jWVgrQnJNNzdBNTRZK3RKTGorQUtmRzl2Y3hoZjRldVFhcThuNEFsK0RuZnpIRi9qOFhGUCs0d3Q4UEs0cC8ySjhnWS9GeXVjM3ZzQmhHSVpoR0laaGVHNHV0WlYwNjRZY1lYOFNQMnpFOTE1RDQ1WGZFWFpycmF6WXZTT3U0UDNjZm1YN2tPNHAvN1F6UEROZTF3ZmJHN2E1d212d3JHUnMrV04vd1NhM2Frc3JtNXpsYjM4aVpmTDZQQzdqeXA1Z204SHFYaWd6ZXN6eXovYm9kUXFmd2FaczJ5czJ1L3JmZHJUdW16eVpodGNRdzYrSERiNXJOMTMvTDJ6VFl4dGJZUDFQMnZiNTBHNTl2ZGZuOHBxRXErOExrVWZLMyt1T3NRYWExOFI2ZEpBUnVGNTIzK1F5S1g4L08xZHR4bkwxTlozOEhXL2tZL1lmczUvK1NYcnNQL3ErbUkrUlQrNzNlbmozakh1NUp0akhJZnVGWmJsNkx2NnAvTHY5bmZ6VEY5VEZJdEd2MGUya2YvUU51ZDB4L0JUVzgrVEI4VWRuMS8vdGV5dlNqd08za24vWEhtejdkendCL1QxOVI5Mjk3TnBHeHFpUVh2b3BIL1dkZ2Jic2Vra2RjT1JIdjVYOEM2L2pTK3dBck5hY3pudk5lOW5KMzJYSTd3djdta2VWZjVFeE11bkgyNjJ2ejNHdnA1bHBkVzFtRjVlVFByOHV2OVgrM1gyc3JzM3I4cHl1ZnA1aDdEOE13ekFNd3pBTXNKcGJkYlMvbXl2d04vaFRkbkdzdysvczV0YXQ5bm5PaGVjS0hiMC8zb0tSZjQ5OUdMYWg1WndhV1BubmQrM0Z0cEhhZHN3LzMrV3czNm53OTBUdy80R1ArVnJiay9BdGNTK1dQOSt6OFQyLzZqd1J5OHgrdG95Ymh5UDkzOW5tcmYvWjVycyt0dFBaUm12L2pOc2ljZjc0ZXJBQmNxMi9VZWh2Q1RuR3hIS21MUGlJN3EybmJzMVpXenNjN2FkdjVqb0JLWDlBRDdndFlOZW5MZGczaS93b2U4NGJzZCt2bTFQUzdhZmQrcnRBcjhLMTVkLzFuMHZrN3prZjZPNzgxcUMveWJpVGZ6NFBPcDl1d1RQcEZlY0tYMXYvWHlwLzYyMTBzR050N01ORFB1UnhwUDlUL3JTTlRKUDRFTWNJUExJLzV4SThicUtQMGE5dUlmL0NQajMzNTkwODhydzJ4Mzg3K2VQSHEvUnovUGZvL3R4aEdJWmhHSVpoR0laNzRIakxqSmxjeFgvZWl0Mzc2bkFkZU9lMlB6RFhpN3dYSS84MW50L2crSHJteDlHUG1ZTmp2MTJtczdLaGVBNWUrdXBzaC9LOG9KVVAwTWNvRTlkbStiSC9PbjRmbjZiTDA5bWpYZ0Zzb0drUHhXN25OUm81cjdPcEY1NVh4ODkrdDF3N0ZOcy9kdjV1anBmdHUvYm5ralpsekhLbDM5SDl2L05WWWxOK2R2bW4vcU5ldWZkVkRFODNUeWpwZkRzcitWUFA2VWYwL0RSOFA5aG03UiswLzlEM3Rpby94M0tPbC9kWGZzOHl6Mi9GVHY2VzJaL0tmNlgvVS80NS85ZCtaSTVocStlWTUvTHUxb2ZjeWQ5dEZFaUxOdmJzYmNCWS8xdi8zVXIraGYyUWZzNXpMdU1TMmdONW5OSC9rRzJETk5tMlQ5enQ3eFY4UWg3L3JXVDhudkwzK0MvbitOa0htUDdCWWpYKzI4bS95SG4rM2ZqdlZlUS9ETU13RE1Nd0RNTXdETU13RE1Nd0RNTXdETU13dkM3RVVCYVhmZzhFSC80cTFzNHhRRWRjNHArLzVOeEx5dkRlRU45eVMxai9tTFZ6TW4vaXNTamZwZkxudW81SzYreTNGcm80bEk2TUp6N2lrbGhBNHBhOERzNVJyUHRSL1JwaW8rRGFjZlNPbmZKM2VJa0w3R0wzS1pPLzYrNjRYOHBMZkpXUGtYYk9GeURlM0RIbmp0Vk52RFlRYXdobG4yVXRNc2ViNy9vMStaODVsL01kUDB0ZWprVzZwSDZKT2ZMUHNWSHZzYTVacnRkR3VUaVc2MzhSRDA0LzVYNDdPajFLUEpmdjI5LytvUzNzZEFEeHVzU1NlVTVCM2h2SDZXZTcva1AramdsYzRmdE8vZUpZeWt2cWwzTXBKK2xlUy85blhIN2k1eko5bXpidGZkU3p2N2ZoN3ltNUh0eHVYVSs3KzNMZUhWNGJ6UGV6YW9kK2hpSzM3bnNmY09hNTR2a3lPWGVBTnBRYzFTL1FMaHlmZWkxMjdUcjdLLzNILzZQenNrMTczbGVYSHYyUCswcFp1YTlhOTYzSzZyV2lZQ1czakEzdDBxUnNPWStGdkJMbmxlMmV0cGtjMWEvUEkwL1BWWG9yNk1GVi96ODc3djBUK1hPTzU5eGttbjRlZHZIZ1RyZWJoMFNkNXpjcUxsbm5xeHNyZGpyVGVXVTc5UGc0eTMybWZ1bi8zWHlGdDdJcnc1SGVoVTcrT1grajROM0FmWlY3UXNhZUkzUUdyK21ZMTNqdWtPUFZyWE9QV01tL2E2K01VNndmVnUyYi9DL1Y1N3QxU2oxdjZneEgvYi93UEl2VnUwd24vNk95ODB5czhqb1A1RVJkc2piY2FxeG1uWm55WjB5WTZ3UjZuUyt2SzlpOVczdU9tZDhkdW5MdzNVUDBUYTVaMTNHbWZ1SG9XN3NjZTQ5NWk3eWpydkxOZVJvSll3WElla0cvcDk3MHUvU1IzanZUN25mdmhLdXhnTWM1bDZ3VGVzbHplbGUvbFB0SXJweno3UE5XaDJGNE0vOEFvSUw2SU9DL0phTUFBQTdYYld0Q1ZQck95djRBZjVLQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUI0bk8yZGpaRWNLUXlGSFlnVGNTQU94SWs0RUFmaVJCeklYdW5xUHRlN1owbEF6OC8rV0s5cWFtZTdhUkFTQ05DRG5wZVh3V0F3R0F3R2c4RmdNQmdNQm9QQjRELzgrdlhyNWVmUG4zOTg0anIzcXVmaWM2V3NBR1g0OThIL1VlbjVpdjR6ZlAvKy9lWFRwMDkvZk9JNjl6SjgrZkxsMzg4dXZuMzc5anZ2c0RkbEJQVDdSMGJVKzdTZWxaNVA5YjhDTnRIK3J2WmY5Vkg2ZHBXbWs5ZnQzL21kWFZUeXJPUUVYUnE5WHFYTHJtZnR2SHMrY0dybnEzcnI3Qi9sYTk5MXViUnZleDZhRDNrRnF2NnZlV1gxanZ1ZlAzLys5M3ZvTGRMOStQSGo5NzE0aHJxb0x3dEVPcjBlNlRORS9wNG04b2k4dVJkbHExNUlGOWYxZWVxZ2FTTXZUMGNkOUhyOGpjK3EvOGZmcjErLy9uN3VDanI3YzAxbDBmSWpUWlRQTTFtZkl6MzNNdnU3REZHZTJ3aWJ4OS9RbWFhSjc0eGJYSE05UlJxZDh6aTBmVVUrcEVjWHlLbnBWTzc0b0F2YXNzb2QxMVFmcW1jdG4vRjkxLzc2ekJXcy9IOVdadGIvNlgrZHZJSE0vdXB2cUZOV2Qrd2NlbFo5MFM3aWd5L1FQcWgrZ1R4V2NuYTZRRDdLSVQvM0ZWV2QvZm1Rejh2ZkdmL3ZNUmU0eGY3b1BQb2o5ZTdrcGY2Vi9YMGQ0c0MyMkQzK1Jsc2dmLzczZm9hczlGSGFpMEx6b1U2Wkx2QzNMaXZ0a2JsZVpYOWsxT2U5L0V4dksxdGN4UzMycHgxcnUrL2tEV1QyVjMrSDc4MzZLSDNkL1kvcU51NXgzZjBrdmlPelAzclFOcGJwUXRPcHpXa1h5Ty8yeHoveVRQemxHYzAzcmlIak0reFBYMUY5MEo4QmRmWHY2bThaM3h5YUhwbnBXL285bnFVUGRHdWx5SXY3K0UzQS81SEc3eUVuZlM4RDljYUhaTHJRY2pMNXlWL0hRL3FILysreXFQdzZsNm4wNmJvZERBYUR3V0F3R0F3Nk9QZVgzWC9OOG0vQlBiaUVLemd0OHpSOXhkdWV3bVBseEtWWXoyUnhnWHRpVmY3cTJSV2YxbkdZajhLcHpxN291T0p0N3lHcnhyYXJaeXJPcXZJZlZWeDZ0L3hiK2JSSFFlWFdQUk5lcHl0eWRmSDhlN1hyVEZibDFmeitDZWRWcFQ4cC8xWStyZEtUODRiT0tmb2VCZWQ0a0lWOG5BTlo2YXpTZ2NZVnUyY2VhWC8wNDV4Y3hYbHAzRjVqNWxYNjAvSnY0ZE1xUFJHakM4Q3p3dk1oODhyK3hPMVVGcFd6MDFtbEE3VS9jbWJ5Wi83L3loNmFFL3RYbkpkejFzcTlWaHpaYnZuVTlTcWZWdGtmN2xqNUkrVVVQZi9NUnNqYy9YK3FBOCtya24rWEsxdWhHcXZnUnZSK3hYa0ZTS3RjVEpkK3QveGIrYlRPVDlLSG80eG9EL1ExbnQyMXY0NFpudlpVQjZmMnZ4WHFiK0FhbEhldmZGTm1GNjc3M01IVG41Ui9LNS9XNlNtenQ4NDdHUmUwN014R0FlVVdzN1E3T25nTisrdll5Y2YzNGlrdmlFOVR6Z3Q1c3V0VitwUHliK0hUTXQ3T1pRUEtLVlpsTXlkM3JwVG5rV2RIWjVtT1BlOUsvcTVlZzhGZ01CZ01Cb1BCQ3NTK2lQbWNnblVnYTVoVkxLcExFM1BiSGY3bkh0aVJOWUJ1SGxubXJpejNCdWRpV0hkN0RIOEY0aCtzdjNmV0p0MzY5Wm43R1RPdVVkZVVnZmhPclBCUlpYYlhId21QWFFlb3I4YTN1dmF2WjJOSXIvckxudWNaN21tOW5mZUtlKzZYOU14QnBqT2U2ZlJKZi9NNGhzZG9zL0ozOHNwa3pOSjExM2ZMeVBTNGcxVWNTZmZrVitkeGxJUHdPSzN1MWRmblNhTStCNTBybDZQeFFPWHNsQTl3bWZRY1VjV2Y0ZlBJUjJQK1dwZXEvSjN5WE1hcXpPcjZqcnpFRzFYR0U2enMzNTIzQkYzTTB2a3YrRHJ0LytqS3p6Tms1enZKcXpwblFqbklVcDJOeVBUdmZFZFhmcFdYN3RkM0dhc3lxK3M3OG1aNlBFSEhqNUhmaW1mczdGL3BmK2RzRWZuNnA4c1hlZEQ5anMvUy9wN0Y0clB5UGErZHM0UlZtZFgxSFhrelBaNGdHLytWVy9RMlgrMzd1ZHIvTTExVi9WL0w3dXp2SFBTcS8ydmVYZit2NW45ZC85ZXlxektyNnp2eTNtci9nSTR0UG9iaG4zUjg2ZmdybDJrMS9xdmNiditBbnVHcnpwOW51bHJOV1h3ODlURk9lY1dzZkVVMy9tdjZxc3pxK282ODk3QS85YTdXLzNvdmE1dmMxejdrUEpyUC96Mk56cEY5VHAvTjVic1lnYzZGK1o0Qkdmdys1WFhsVjNtdFpLektySzZ2MG1SNkhBd0dnOEZnTUJnTUt1amNYRDlYT01CSG81TEwxeDhmQWMvaUFsbTcreDdNMVRxQy9kTFBSQlZucS9aanZtYzhpd3ZNOWpJcnNyaUE3dG5WL2Y4bjYxZTFGYkUydlo1eGJ0aWZlNTRIY3VoMTV5SjN1RHpTVkd2MHppNlpIdlJjb0hLa2xiNXU1UnRQNFB2djFUNVY3SStZRTM1amh5TlVQNlB4SzY3cm5ubjI3M3U4VWZuQ0xJOHNYcDF4UmgwdldNWDdkamk2THRhcFp4UGgxek45N2NpNDRnSlBVUGwvN0k4TWZtNGw0MmhWQjk1SE5BNm41L2dvWC91RmMyNThWMzFVWnlaNFhtUHI5Sk1zUnUzOWhiYkgrUld3dzlHdHVBN3lxL1MxSytPS0N6ekJ5djhqSzMwdjQxVjNPRUxPVW1oZno4cnY1TkY4dXpNeklROXRsbkpjTjFVNWpHM3EzeWg3eGRHZGNKMlp2blpsM09VQ2Q5RHBXL3VzK25pdjZ3NUhxTysxelBxL2p0OWQvOSt4UDJjNzlTem5idC9TdlFQYWIzYzR1bDJ1czlMWGxmNnZ6OTlpZi9mL3lPN2pQL3JIVDFicHZEMzV1RnJaWC9QT3h2OGQrNk1qdjNabC9EL2g2SGE1ems1ZlY4Yi9uYk9PRmFyMXYzTGVXVXlBNjlwdk80NFErYkNmempHelo3STVjRlplbFVlMWZqNlpXMS9oNkhhNFRrKzNVL2NkR1o4Vk14Z01Cb1BCWURBWXZIL0E1K2phNzFHNGtyZStXK01lNzc3WDJNQUpkbVYvVDF3VWExNDRBTmFVajZnRGRqd0I2MXBpZXJxdnN0c0hYQUdPNFJRYVQreHdwWTZ2QldJV3ZtNGtmaGJ3ZmF5K0RzZHY2SHFWTXhqeDBaZ05iVXZqQytpcjQzWlZ4czcrWFY2N2FiUk91Zy9lNWJoWEhVSDJ1eU8wOTNpTzY1U3I2UUtSNW1yZnluVEU5ZXdjQzNFTGpiTTZCNk8vejBVOTBBMTZKZGFGMzNINUtVTmo4ZFZaQWJWRnhkSHRwSEdadEs3S2VWSkgvUzJoSzNVTUtBOUxYQS83YUt4UTB4RW5wZHdxWHRpaHNyOWVyK3l2OFhIYVBXMFNQWGw4Uy9QeStIYkZxMlg4aWR0Yy9aaHl5SXFkTkFHMW44Y2ZQWTZiOFh0WDZyajYzVEhTKy9zRW5UczkzYmZsOG5nYzJ1c1RjUHM3YjBBKytwdVV5SmpwQmxSYzFJNzlLeDVEc1pNR1BTcnZtY21yZkppL1IvQktIVSs0UThybEExZGQrWllWZUk0eExyT1o3N1dnRHpsZlJaL1FzYW5pRGIzOVZ2MXh4LzRCOVgvSzR5bDIwaWpucU9PZ3lwRjl6K3kvVzBmbEJQSDVIWGVvbkovdXg3b0NIZHYwNDNzdDRvTnY5TDBjM0ZNZFpOZVZYOHVlNzg3WGc4cisrRExsMUIwN2FWUW1uM2NxMzg1MytvZTNtWk02QnRRR3VxZkh4MmZYcmJhVFUvNVBvZU1IYzh6czNtcVAzZXE2N3lWYWpWdCtYOHV2Wk9uV3JyZWs4Yklyblp6VzhmUzV6SGRkMmY4M0dBd0dnOEZnTVBpN29Pc1lYYy9jYXg3WjdVbU1kWkMrSzJXblRGMnJFdS9PMW9MdkFXOUJYby9uc080N1BVZFNvYk0vbkFEcGR1eXZzUmJXT3p6M0Z2UjVncmNnYnhhUEpFN3VNUnZudElnOU90K2xVTzVXNHhVQm5uV2ZvenkweHlBOEpxdjh2K296UzZ0NUUwT3B1Qmd2Ri9rMGxxTWNjc2NwYVQyMS9pb3ZmTTZPWHBCZHkxRzVUdENkTVhHT1I3a0lqYVYzUHNPNWUrV1Y0UXM4UnFyMTgvT056c0ZXL3A5eXNqSzlidG5lYkcvLzJJM1lwOGQ4c1cyMmI1dTJBaWZpY1dMc3JlMmkwNHZMN25LZFlHVi83T3BsWnJIL0ZZL29OZ293QjZoc2VwS2ZjMEhlWDdLOHF4aXc3Zy9TZURleDF1eTNveXJ1VlgyTjdxMVNyaVh6R1N1OXVMOURyaE9zL0wvYlgrY0p0OXFmZmtsYy9WSDIxMzZ4YTMvOEJubXB6eU5mdC85cWJ3ZCtSSGxWNVEvQXJsNnErcDVnTmYram5uQ011Z2ZsRnZ0cnVlNkhiN1UvT3FRYzFjdXUvY2xEeHc2MXVlNTMyY2tIZjY3OG44dnJQai9UUzNiUDVUcEJ0djd6ZlVVNnQ4ak9YNnR1SEN0NzBmNTEvOE05N0svenYrcmNjcUN6bS9keHpaTyt6TE5kUGo3L3kyVFJmUmdydmZqOHorVWFmRXk4aGZYaTRQVXc5dis3TWZ6K1lEQVlETzZGYlAyM2ltV0F0L1N1K1k1bk9vV3UxN3J4dG9xZG5tQlgxL2NzTTh0UDR6K3J2WkVCWFplK0JWdzUrMUNCK05mdWZzMWJzS05yVC84SSsxZjVhZXhIWXhWK3hpbmpDQjNFTFR5ZURuZW12Qzc5anpOeHpIMlZEK09lZnlkMnFuWHdkeVJXc1pLc2JocVQwWGJoOGlpeWNySzZ3dis0cmpXTzd6S3B2WWhUTzFlNGk4ci9hNHhmejB2Uno1VHpyVGhDTHdmZHdaMW8rZWhGejlXZ0g1Y25pem5xZHo5L1N6dlNlRHJ5ZUJ2d3VnVThsdXg4UUxZUDIyT3p4TSs5cmhXSHAvbFcrdUI1NHNZVkI3dGpmL2YvUU51V2psTWVkODA0UWdjY2xmSnhyc1B1LzEzN294YzlqK2t5Qi9Sc2owTFRaVFpXZldYMjk3bUlucTJyOGxMOUtMZlk2Y1BMNGQ0SlZ2N2ZaY3IyV2xRY29ldUVOTjM3SCs5aGYyU2lyV1V5Qjk2Uy9TdHU4Vm4yeitaLytFTDFsN3FQQXA5VWNZU3VVL3gvMS84RHUvNE8zNVRwUEp2RDcvaC9yVnNtenozOGYyYi9qbHQ4aHYvM0QvWDNjN0I2N2xEbktSbEg2T1hvMmNHcWZYdGExNFhPTTZ1em1XNDN4V3IrRjNEN1YvTy96bmRtNVhUMjc3aEZ2M2ZQK2Q5Yng3M1hPNFAzaGJIL1lHdy9HQXdHZzhGZ01CZ01Cb1BCWURBWURBYUR3V0R3OStFUmU5SForL1NSd1g0VC82ejJ2YlBIMHQ5cEVXQnZUUFo1aEQ1MWI2bkQzMmxjY1luc1MvTjhmZjhJN3dEU0QvczNuc2xUZG5VNXpVZjM3ZkdwN0srL1k4SytJL2JaNlQ2M0xNOXFiL0N0OG5kNzlkV0craDRRaDlZYjNiS0hUUHNFK1QycmJWZm82dkxJTW5WZnBQYU5yUDg0MksrVzVlbWZhbStlUDd2YUc3SnJmOTdMUlByNDM5K3hvZlovYmJ5Ry9mMTNCOVErOU1NTzdDT3VvSDJwMjhzVzEvVzNSVHFzN0UvYm9VODdQUCtzLzNPZC9IbVhtKzZoMUgyYkFkcWJ2bXVKZlg3NmpPNngxWHkxVFpLRzd5YzRHVU5VRi82dW9heHZLNmhiVjU3NmdzejJqTDM0aGxXWjVLbnY3MUdaOWYxeUovYjN2ZTVjNTMrdEorZVNkSnhVV2JqUGQvU0t6SG91UlBPbFBhamNWM3pUeVg1eFBWK2h2Z0I1cXI1TnU5eng1OW5aQWMzSDk1YXY1TWVQYS80QmRLZnZZbE05TXViN2ZLWFNzYzk1dEU3YVgzMVByKzVsMS9tVTVwRzkyNC8yNFAzd2RFemduRk0ybjNGZ1EvL3R6R29jWnYyME01WWp5K25jc0xNL2V0VXhDLy9wN1VqdHIvNWQ5NXFUNTRuOTlWd2k3VmZMek41ZDVmT3N5djc4VHp1K01pZEF2dXpqUUg1MFJ4dk8vRHE2cS95cTUzdmwzWFdCeXY3cU53RnRNWXNWNkpsUlhkOVFWNTBmVnVjYk12dFRybzdsZWwzUHBYcWYwbk1mbmYyUnlkdlhNOURGWFhibkZwSHVxdHpkZUhmU252VGRPdHFYUHRwNWlzRmc4S0h4RDRna2FxTHJkNzBXQUFBRWVXMXJRbFQ2enNyK0FIK2lOZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWVKenRtb2x0NnpBUUJWMUlHa2toS1NTTnBKQVVra1pTaUQ4MitHTThiRWpac1dUNG1nY01kSkRpc2N0RElyWGZLNldVVWtvcHBaUlNTdjNYOS9mMy91dnJhMHFGMzRPeUhwZE0reExwWDFOVm45MXVOK1h6ODNQLyt2cjZjMzdMZGFjZVZkWXRWYjUvZVhrNTJHUHI5Syt0OVAvNysvc3ZTbldzZWorai8ybjd6K0QvbVQ0K1BuN2FBSE1CYmFPdUs0eDJ3WFdGMVpINEZjNjlXWnAxekRpenRQcXpkVTRaMGora1YxQSt5akZLYzZTS1YybFcvK2Y4a2YxZmRVdndSUi8vaWMrNGlDOXluTXo1bzhLSVgrS2FaMHVWVjEzWHNaNlp6VVZaSHZKamJNcnpMRnVtbjFTY1dSdEl1MVMreitEL0RyYWIrZi90N2Uzd2pvaDllS2IzeDB3amZVR2JJTHpTNHB6MlIveWVWaDNMTjd5WGtWNzNmVDZUYWRLZXVySXQ1eHo0NlA2ZmFlYi83RHQ5bmt4SytMRHNXTzBteDFUS1VQY3ovVlRlSTYvMDM2Z2RaLyt1OEVvZkg5YjViQTRnSG1Yay9TZnZQWXJXK0QrRnpaaHY2ZWY1Ym9EdHNXSDI2K3liOUwxOE54aU5GZmsrbXYwL3g1RDBWWllseXp1cjd4S1BvcTM4ankveGJmYTFuazUvTCtqalNZNjEyZmRtODFIV2cveDZlOGp4UE5Oa3pPazI2V1NaYnZrNzZLL2F5ditsc2xHK0E1WnQrM3Q3OXpYdEpQM0Erd1JwMGFaNDVoVC9aenpHSlBJaXpWNitKVDNxL0srVVVrb3BwWjVUbDlybnpYVHZaUy81MXBUcklKZXdZWDBiemI1cit2ZlVYN1gyZWJVL3JEblVtc2xzelhxTjB2OTliU08vODBmZi9FdHJJYXliOVBOcktNczU2a2Y4NHpHN3Y1VGU2SHFXMXl5dFViOG03bXpOYVZibXY0cjlzdHo3STEvV1BQS2M5c0l6dWM2ZWJTVDNYamxuRFpkN09TYXdkN01tdk5zNnk1bnJpWFdQOVdiV212cTZVb1gzT3RhOVRDdHRWOGYwR1pCWFhxTWVwOFI2SmZkSmw3M3VwVEtmbys2WGJHK2ovczlhRzdabVA3NXJOUFpYdk56SExlZ2pyUE90Q1Q5V0wreVhZMTcvdHlIM0lSQjdHWFhNdGNxMFZhYlo4eHJadC84VFFaelIvWkgvUjJVK1IzMytQOFgvR1gvMi9wQjI0cHk5R1k3NE0vL0pXQk4rYXIzNm5KZDdBdmg2VktmMFFiZFBYcy95eXJEUlBoUDNzejl6blhtUHlueXV0dkIvMzBjcG4xQ21QQzh4MWpGK01wYlJudGVHbjFJdndoZzMrSThBRzlPK0VITnQ5MzhmYzNLUDhwai8rWDhpOHlqMSs5My9zektmcTJQK3o3a2RPL1Ira25VdDlmRXBmWU8vaU1zOHRsWDRNYnRuR0xiay9Ucm5ZY1p3NG1MbnREVjduZmd6OXlpUGxZTi9hL0VoYlNkdHlwN1p5UCtqTXAvekxzaCtXOVlwZlVmZnpycGlqOUZZUmR4TXIrZlgvZG43d1pwd3dwYnFsV0hVZzdtayt6Zm44dEUzR00vMzUwWjU5VERhUU4rTFRCc1RQL09lbGJuM3RVdG9hYjFBUGI3MHYxSktLYVdVVWtvcHBaUlNTbDFOT3hFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJHUk8rUWZoNWVPYXRrN2pwd0FBQUZUYld0Q1ZQck95djRBZjZXRkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUI0bk8zVzRXbURZQlNHVVFkeEVRZHhFQmR4RUFkeEVRZXh2SUVMdDZZaC80b0o1NEZEbTAvNzYwMXN6bE9TSkVtU0pFbVNKRW1TSkVtU0pFbVNKRWtmMFhFYzU3N3ZUK2M1eTdWMzk3KzZUL2R2WGRkekhNZHptcWJIeit3WS9TejMxTDExRnN1eVBGN0hNQXgvdm9kMDc3SmpsWDJ6WVhhdHpmczl0WC9WTjcvK2plNWZ0dXQ3Vmpucm4rVjZuWDM3eHRtL3VsN1QvY3R6dnU5Zi85Zm5lWDdhUDlmcy8zMWwyM3J1MSsvYnR2MzZ6UGZudi8yL3Ivb2UxL2VyOTBDdTFYZjduRVhWbngzWGE1SWtTWklrU1pJa1NmcjNCZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQStFQS9Ddm1zdUZMYUttWUFBQUVGYld0Q1ZQck95djRBZjdHa0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUI0bk8zWDBRcUNRQkFGVU11Uy92OXZJMkpxUVVrR1g0SnNsam9YRGpqcnk0V2RCeDBpWWtoaTQ0ei9zRTUxRitwMm9Mb0QzM05JYzh4bll3ZmQyTjh0elMzcm5iaDIwSkY5dkpQcXJuemVtTzcyUE0vVDB5VmVPM0xxb0N2N09LYm41YjZuamZmOHZ1aWdBelhhdDJETHZZTXUxR2pKLzRRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEwRHdBbldob051d1pVQm9BQUNvWGJXdENWUHJPeXY0QWY5VHdBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCNG5PMTlLN2pzS05iMmtrZ3NFb25FSXBGSUpCWVppY1FpSTVGWUpCSVppWTJNakl5TkxKbC9VZnVjN3A2ZTZmblUvOVNJV25QcFBsVjcxd213THUrN0xsVG01MzAybmdEYXM1RXR4dGRHWUlland3SndYY1VGYXdEZmhYN0Q4MklkNElFS0VBRzJDaHZRbmlUQmQ5MlQyYkdFd2ZITmZIUDg4VU52QUpXYjNVRXIxWEV6dHI1c1R4VVU0SGlkUU9FbzZURHdZYm12S3ovM0NSS2czRlFzcEYrTkE2ODNnYmh6WEozYjNzK1lYa0pzTVNuOFF4SHpsZElQRHl2VWE5c283a1o1VGlJNDlaWmtVRVBNWHprV3lOSStUd1l3Sm15ck5MaVBTVzByL3U3cmJwQjM3dHRIRjQ5eXhiRDRqWm5nQVR4UnFvTnhDUS9SRkFrcnI1ZXloVWlUZlF6Nm9hN0JaYUczSFg5eGo3bXVmbjZDV3lrdW96VmpnNGsyTE5iNnVNWEF3WUp0RHA0ZEJIVlBvUGp2cURsd1hQalQvVHd2R3c4dlA3ejh0N2hPeERvU25wTk53cHNGY0NtMkZTQVY5c1NjTFJ6VkhqSnd3Q2NQaDNWTGNXQUN2clROWDdmZzJ1YkFIOVV2dUpuN052dzBIVHgrQUlVTHRCNDNOMVBxRzRISDRVN2QxVUpSMStIVzdmUHJwNmlVZFUzZzkzdVBqdnMxeUNVdVFxWk95WW9MR0dzNkdBbHJtMDdBdkcyQk9kZ1AvT2NDS3FkMWdWWEZmREtvaHRrbE85SHZFWUdicXgyNFhVYmhZZGVTS2M4THFsSkZKVWhYWXpCTlp3UEdQcnY0S1M5MGFXaVRacGoxMVFuUnVGaUdQc3JLSEtnU3kwWEx4ZkxqS1JXVzFEd1BMT2syOW5NMHhlSEFmOVkxbTNyZ1l2QS9wS0pLSC9EZzlsd2JQQmxQSEUwbFR5TW9OK1EyNERxbkZqMEpuYXJxL2RPTEIxbEJvL2ZDZzBnTnRxc0lrRXlnY3phYnpnTk5nMWpxeVBsQ1kxaWRKc2VZU3IwVGRBUmx1eTdLOWhMOHFNOEpNeTRZYW1Vb2xNOC8xRHcvblMweDZTUnduVThCUFFEOWYzZ1VHaEtNQy8vYS9Ra2ZYVHhLZE1LaHQxWm5tNXBnZkVrc1BPUzRsWDNnUnZNT1VXcGQwRzhsVzFCaDBmMEJpRGI5R0ZnU1diL05QT0VYcWo4UXFGbHZhQUNBUnA0WC9EQTJOK0dCclI4MlNrYnhsMGRiOElVRmQzWXBtczgzUHl3YzVFQjNqZ3FOQm01TjRNZW0zUk50ekFYS2F6NC85ZWpKVE5wcTd3K3pGVDJBM1EvYUpYZURXb2hwZWtaVWVBYUJFUFNFSkJHQnIydFE5amliUmJlUWJmTDRDV3BCVDVueDFOZjYzb0Nybmh3K2Z2NlNodVhjNE5pR2tib0c2VUk1K3JYaUNZWUwxcVFDT0ZXdHEwc2NEa1BEZHJScVl1c1BUQXZvNWVkRHZBTHZnSG12QmFFTDV4Nk5PNlJ0RjJvTFVDN1VCU0NYK09QdlJHdnhGY0xxZC82aFZmOUZ3c0tBTS9UY3FNR1VrWldTT0hqclZjQ0ZTc3I4dVhNU2o2TVNpWjVjaExNSUR1akpuNDRyT3daOUJ3UnpyUmhHRU9NZFVTZ2VTMG10N3ZlbVdOMmJoTWFvQ3JreEM4djYvaXRMai9xbzZHUllqQjlkTzByRW80N3ZZd2lJZUNTZHAwVFIxN2ZlRHhDZW9oTllZR25YSGlEc3FPdlJFRUJzekkvN2NtNndiU1NCcU1aZTF6bk9oTzk2UWtmUG5xQlJQUlhHYm1ZUTVHdUVST3IyckdVN0NqeW8vZmdXWWRQOFBpeTE0cUtlbTJyRzcydUhNRUtmVzNBbzllSWt2eDBBdW9mSG9KSGI5c3h3L1RRTWJzc1p5M0ZnbEZqR2sva0orbmJQdGZib0dOa3VlUFZJYm96N2pXOXluMHErZ004MXJQSEI0UDlJNEJ4MXFZbng2dXVIbDQ4TFp1Q25GZ3p0MTlkaDdCaVZob2xiV2hjWk9qNDh4MDFBU3FNNTh3TDlBcXppSk5OeFhSVUJvUUI5UFVpRkZneHJCTkQrTThiS0dMcmpyL25wc3JwMHYxR1RQWCtDQVN3Sk44YkhCclhmdS8zczZ1ZHpEY1Era09PaU0vaTI3OTdjTmx1bTBXZVZxSmNNVWt5TjJJMnFxUGtSclQ4WHR5Z01qU1ozM1M0M1F5TitRbnNJZ2wydjB3clg0cGRWMUZjQ3NndzNtZEl4ZjJwcmZvSmxsR05IdTc5eUZzdkgrUi9RNDBUWUxoc1NQZlRMUzdUYzd1c0l4VURkVjkzSHNVMFNBL3N3NVlDUUErUDc3ZWprdkRET1hBYmE4bmgva1BPdWRzOXgzMDVhb2dzK0l3VEdEWU9Fak9CQ1JaY0ptYVVwbFlLNkpubllRWDEwNVQ5Qysrb0xXZXh0S01KWFNYRGhnY214OG9EeEM3aDh2VEtYSytqOTRGd3l0L1lnN2Q0cGtHemNPTGZXZEd3WUJSekJRRm91UXIyQW8rOFlCSlZsOFlXTGpZTlNVOS8wZ2NhRGJUNWttRW1CNmY1cy92VHlKMDROWVlaa3hLSkhNN2tsallhOEk2c3BQK2k4enlRRkFYTWZITjhKQTE4MVBST3k3VmtjeDBKU0l5MXJJbkZIVUMzUVpSTCtJdWRtcmNFSXd1RWwxcWt0ejVNekhqZnEwT1RNeURqVVRUbVpHWUhQaWhtS0xCdXM2T1JmS200N1NJTEIrc1pGRmtMR3NZWWQxbU5zdjM3NHp1Nng1dzNMblZ1RGppOXpZWjludUVrVkYwVUlNdVVzZWdQU01kb1hkSUViT3BKclRNYlQ1ODdCQnFITjdSekltUWdQNWFPTFJ5bm1ITlI3RWpmS2IvREx4VzVrcVBpazZMZnc0WlY3UUhMMVVKZytFTVpyd25lTWE5ZTl2cUVMSTdnUGExZ1habm1SRXRaRngvZWF5RUdwelVMQ09jSjFUUkN3Mjk0MFVEMjVYd1RUYkpLUXhtZFhqNjdZaDkxT2xSVFZJNVpmYnBtSFIrK2tjQU53Q3l4YWhSNFMvMVYxbXpiSWsvZkRWcWFiMDdDNDVUQkZTNUUzS255My9SaGRyM3VkL0RjMVJsenAxTGE3K25wUjJCV2dlaUhoZ3NjSENYVVZTSUErN3YvenBuVndtckxhOXZWVTJhTzdiek5RS1lqNHRGdmdYdFUyNDliYTgrTmdJQzJhWkNZUzRTbzl0aVhFd01wbVdaSTh2MTZTZzlpM1lGODJuYWpmeUh4b0hiak02d1V6MktFK2dJUXlJQmxRdWhENmNmL1hOd2NWejQ2ekMvM1ZEdndzVG5PK2FydEdtVDFDdFlyOFlBdW83WUd6bFVPbjh2WUVhWTVWa2lrQlV1bVFqMEJNeGQ4RzBxNkVpLytKSFFLM3g2ZHRZand5RTBaSWsxSnhzTEljdzdsR3ZSN2w0L2ozV0J5NmFZM2tqckwxVDIyc1IwSDkzUkMzOU5KOU9yWXFHcjdMRTNVTXhHWUYyRG9kUU1xclVraVpMZ1B5MmUrS3NEYkM4Ynl4d3phT2FwRGxBYWRqNWtkUGNFOHREUkQ2clRZZFNCZlMvZnJjeW45TG5jbEs1dHRWd003c0ZqcTZTc2VEdnAySy9jbDJQR2Q2anVPTTZBVHhJUEgvQ0RGR0tuRnRtUzA3a3cxSjhvMFVBRGNOUHdQZUh1SlA3Q2haY2czWlpHWEhDcy9KUmdiS0Z3M2xtUW5TK3RHbC81Wnl4ZGhJbGhBZnk4Rmg3TWZIMjZIb3BUNFl4aEFBTEtHVnVLOHovNHNiUk94YUNJdTVSZkhLeHE0QjBuRng4T3pZTjNBYmdUKzRnOGlNM2t1c0JwRDN4U1VPeUtja2dUc1A0cncvSHYxUnJISVlqVGF6Y0ZBRE4yQzhZWm1HdU9sZVBZUUhoUDNKVXVlMlh4ZUc5Wm16S1cyamhNYyt3RVF6SXg3Q293eThYeWNONTBuK3doM0pyWFVQell0RHdjb3RVbzF1RUdYanI0U3pzcy96SDNOemxjRHVUTS9NUE1pdEx4TzE0QnRTS1h4TWRGOHh1K255d1R4MTlYMUZDa1RJZW16QzhTUVVTTk1SRGl2dlRnZ2RYeFV5N0w5ekIyTUIyNjh0OG5KSWtWWXVvQm16cFlqMEd2L08xTmFQSjRDUjc0eVpoU2g5QytCdkNiTHRPbDNvcktmYk5xZEdhR3gzc1lhOFFJelNlc1o3TnJwUVg1ay9EQUcyRFVYckc5TGRHTkJvczZMMjM3bWpnOE4yb3VaTHF3d3YrMExwSWszUy9ySm9POERYOGZINkYrY0UwTEdoYjcvcktXZFNBbTBnd3lTc05iOHNJSlJGZzNqOEtEK3FPaE8yWjhCVjY3V0ZGMGE4Tko2WjZzQWdDZWpnRmdqenRkKzV3MFUwaklFR0laYXpjVDhRYk9TWUI1RDFRYTcxRG9pZkZsbDJ0TzV6T20xU0hxb29Sd2Yvc0ZyZmVkcEhjWVFyZHpBUktVNTYrL2JuNFhXSVdmUXR4U2FWcDQvb3dDS2lXUkFKUFNkSmh2M09IWU00OExmb0dIdTdtVzJJRzB3dmZvUzVqeG1Ed2lIK2o4ZjcveTdqUXUrdTROalJ6RUU5cUo3NDU3eXhXWm5MREh4NkJQVHdPbWFKR3lQQ3JIOXZhTGt5V0dxQitNZThTWHd4MXRocE14TkJLSHo1cDNZUVpqSEZBeE9sMWcxT1M0Q0lta3pBemFzYTJpNmY2OVByUDlKeTJWM0RjVUpUb0Y0amJ4YnkvaTVzZ0NVRWVnTGk0b0dMRGEvRTkxblM0MzVwaU9TVWcxQ3VBSWh4RUI3cmRTWTNLSVFGSFBsVk8wSUNvWkpzSUhwRzYzalhqZ2F6Z2FLTFRadjN5L0lMTEh4UVpneFc5ZGFnOW11Q2tTZWJUcnIwWXN5VUw2RWtSVTZWdWFvS1NBTkIxMm5lKzFFTFBZSjFMUjh2Vk9aUlFVUTVrNk9vMG1mVjdGZnQ4T0FsV1ZydnJseUFuOXBoMUtXazR6V1FUNjFxY3FnUHk5SHhxZmgxSWpuajFrTFllbkNEekt6V2RteWxyV3c5QzRNUWp4NFZ5YmhaN09qSGVaOFYzTDQxZEFQOWhhYlNFUXZYYlVXRGdYcWVLL3lxSGU5Tkc3RytpejZvVEw5cnh6MkxjbklNTkkwRCtlenFwL3dVTDJmOUQ1cEZ3SElTL3NCK1VJWVlwbTVDMzF1Z3JseG5XeFY3b2F1SGttY2FvK05aMndOMlVwOVhKeHVHaHdwN1JtV3diVEh2M2dHTWV3c0MzWGUrQndOTS85VTdrQjAzcUNZa2tlZitlUHBqMnZqRDBEQ2ZDNEdPbm03ZDlvbno3U1lSK3RwMXhVQTFjMFBvRkVQVnNXMmM4Ujg0U0JpRDQyVm04ZSs1eG5RTWtzNDhVRXBhLy9TT3NFQ0RqKytRK2NqYy8rZ2RvYnNXTkoxTGZLNlBJMkFPRjMwWFlaOXJFVkpPNHYrZ0o1ZCtTVlVod212eVZ3R0FnVXlNbTFyWDlVU1lCRTVMbGNHbEJmZk1vVlhqQmd5am5NL0U5LzNkTzdTYVo4d1M3MHgrWVNoZDVhL2VJVUpxZHVnbzBXYnl4L1VmbzcrNTlGeTM4MExsQlgyU1FYVkk5MUtocEtBUkJzNENBTlZuNi9lWTdocE5IKzRMcUR3M2h3eFBpN2M2eU8zS1cvZHROblh0ZHZhTzNjYzdNNDdtdFQzSS9PNTNIZW1uZDR4dUh1ajdyLy80K28rWEJLU2tNM0JML3M1Tm9xUzJwWU9vcTN2ekxnQjBDNjRpb1FQemJuU2FHajhUNE91TlpHbnhzR0xNUXphejh6Mnd5a1VKc3htZ0hxMGUxUTZGTElDbEc5R3VUOGdLc3B6MU1MbG8vbmFIeTBjWGo1STdIajI2Ny9WTlZpV2xFL2IzbThxcWlITDhwd0RBNU1JMG5VZ1lEUjA0Y3VUWjFBWkw3STJBeVhpNjdVRWM5RHJLTWczYUVXWEFMcW1zQWRmZG56Qk9QR2VkNitTRCtKa25pS2JLN3MwMm8rbUhKY0hEUjh3eDF0YTNiWDN1b1Y1cXJtN3QwcjNUVS8wd0RFTjZBWXZIN1V4WWhqUDluTWhWZy9hRVRUdGVCZUwrWGhWK1dHT3d2WTZBQVdFQkd1aDJBMGRJQlhVaTRlY05NWXJ6YTA3WFMvMVVnajhzaU5ubmNvTTk3dHlPaGxoOU5rTkNFRmMyMjdzQWtFYmZGNmhjN2pPV2JYczBJVjA1LytHN3JkZmNTalJ1NlJUWUV6VkswM09FZDRMY1hneXFSSi8zYUtnUGdvMzBqSHIyZ3J1Mm85LzlPUCtWNEJ4UTY1UmRsM3FkRi9EenVqRzJHM2lsNG40WEFQeTFTamdqWTc0bGdjKytFNjYzWTBaN1pQT1hHOTNmQXgyNnZXOGQ5NGhBZDhVd2lWRnpVSy9qdVJLYVh4WE1nYzRnUHdnemVVSXl4SkI3Zkw3L0JUV3pwN2lIZmNzK2VIdHhLR0cvc3R2UmdtR2hQd1dBanREK1VaTWw4cWZNYk1HczlqVDBncVRQZ25odFYwblhob0JIN2ErbVErZ2EwdlRzTVJMcUVwSUkyeEpyMTFIVy9Zd3phVXBvRzl3c3gvK0ErdVA2aVJwTHVwcFNpUGZGeFBDaUZjVEN5UGJJVHdGZytzam5oY3F5dTRhUFBDSHpqVnNRbnJoT2Q5bjB0bUhFM1BpMm9scUFqc0I0aVZ4U2RIYWFBZEplV2tydDNXRmNLQUhLSHNoYW1WQkZsby9yLys0Z01ZcWEzcU1Gb1dpTzRQZWQ3SGtHTVBkVEFKQk1JY2g1RHMxUkExQVB6SjRRN1NOU1FOT3hKalN2WVo4NUVBSW5Nc2tCbnNTTDRMWkpGYXhGeHpoWXlmaEpjdFhFQ2pTb0U1WXFlWjc5WWgvUGY0dkx2Tk1hTHlPSkRYaXczZEhjTzhZeVVuNFhBS3FMQWZYaUdkYmhUemZQN2FKbzc1UFZtRldPODE0SXAyc0U5QTI3bXFYanB5amt2cUFzcFlpZk1oaUgvTmNwejBNSDl6b28yWkE3bHh4Uk16NjkvalRoS2ZvbGlQblVZamJ1RjBJNEFmMWNvQlFmc3dCd3RmV2F5ZXlyWlR6cXV1MVQ2YmtRa0lMWTdOb3IwMnB6OE1Sd2pJUzRDTjhsUENZWmRIc3pQNHlqQ0t4OFRnWXBjRGNSWXBuVUFuL3U0K2svMUdHa2FlUkVFN1ZYYkFoL2toWUJvYjN3aUZpWG53TEFXdG8rTzNYNG5TbWthMjhES1NOWDRjak5VNXB1cm1OU3ZYajBsSHRid0hOWWRqR2tyRGsxaVJGZnJCcXNNRXZwR1BYQkdJb1J0dFdaTjlvK25nQlVjS0UxaDR1NDJiU2tiQm96cFZQOEl0aWQ2a3p1dlloWWtPcUY1NTJyVytFMWJmYWgrQTRNdXI5UkFEMGlkWDMya2Nad3o1Z3FlSTFpOXRXSnV1N2psK01qYVUwcnMvbEF1MW9oa0FuK3Q4K3VmbXJnMGxtVTNhd1ZHSkdodE5Ja0hqODFpcFdnYlFaMDZuV0lYU0NISlk1QWp2ZmRoVG9PTkdnNDI0TzRtS0c3ZEhYc0Z6UEFPL29LenBGUHBERkJMM0tMdndTK21RVUtHOFlSejFJcU5jREgrLy9MN0duY0ptb2pCRmtlTWpxNkpGb0lLR0d0Wk9aQTN6NG5lZ3FlRkFhRTEwd1FySyt6ck5zQ0YrdUh0cW05TmxxUTBjQTRmR0FieGpiZElnTGxqRmdCTWQ5ZmdBOTZCU2NRRGU1R0xhbjN1OUdQK3ordytsaGVBdklMUVRvL01RaWlCenZZekdndlN4aWVWa0luOVFjTS9IWlBiaElmR2M4RVJsUHlncnpKRFBVR3hxVHFzTy9NM2xGN1BXdG9ONW5BRjAzbHI4QjNXRkg1Y1B4Y2R1L05rODVQTC8rMkxzWDIydkc1Q3ZTTlRqTzN6VWhMVXZESmJJcExsaUtiY1IwUDhwUWVpVjVYM0FTemFJRzhNWGQwK1I3am9BdG9RQWNDcDZ6Uk0vQmxFaDgyL2s1OGxwSVh0c0dwaTBrN2VlNlA4ejhmQXpoMFd3YURXK2toa1F2NnBiVWtMQi9Pcmt5dHQyV1dJbzhGZXFibEpVbmVoa0hxYTl6TUZ4RlM1R3doTTNYNk9PRGFnWGtUMytzL0UxK2VWOFhwdlNtRFFXSkQwdlhwOVUvNUlYSjZ2NFJob3FRMVU3SE5idGFYbzdPSUVTUENGRHo5TkRONWo5dzJJcW9Wb05KUy9lclI5TitEUTRHQ1VRVGx2eVkrdUZ1UHZDTUtRZ0JJemNlOTMzdDJvV1hnQmRkclQ4UFhWTWxzY1NpUFZVZ0Q4TTIxYUk4UERMdmRsRGdRdWl4QWRMQzE5c2pEMVlKTTIzdHdDTFFabGZ3ZmlTL1lLc3RNSW8wVVpGOTVEQi92ZjU5ckxEVHVDMGZNbHYzUllrUStMTUhQTG05ckVpTDlSRHVHZkRlV1d5NFZITFZFMWtQdEYwR2NueEhrSTRscHgrYnBiUC84cjRuUG42RkoxcXpRRnZJSTR2UGVIMFMvY2IxZEs5NFlaVVVKbGZLV1g2c3RMYUNaZzZZTDJyQmpxUnlicytqbmdGNzR2NlZNOUJLWWNiRXhmaEhyRUVPUTMwT1QvNVQ0bmtPVE9hR09DR2RPalJIazgvMy8reHFUOVVqSUJEaENGbXRvNnVlclNzR09JMXFrTFdENlZvRnZwNWxOeTJFZ09YSVlFUmNrQUJQdTFib1VBMW90dkdqemEyanlId29mUDBPVEpMY0orMTZXOFhURWovZS9PV1Fva1RnV1VOMkZYZHEybXFQWGQxc1NvZ0YzYkJqcHp6dTFqR1NWMUc2WDE0YjBiODVMcStpTlpQa01TQnFtM29Rb1JQcXZoYStmb1VsdS9Fbk1JRTN2NC94ZktBRDVnYndPR2ZBYW5KSVk3dkExS1RZU1NDLzI5Y3haelRHSHVDQ3hVVkxtakdzZkxHN0wxdnRZU0wydEJzcUo4QTZSZzhyTFB4USsveGlhWkdhVEJBSG5KamF6Zi96OHZWNUZmeFZLbG0yTEVoU3E2WFRleUh1bFE1ZTFtNzNNUTZ3Q1kyQzk3dGt3eW9WMkhqVWR3OEo0UE9TRDgxdzVXUUszM2Y5ajRmdlgwT1I5TWRvd05pTFh0Q0hXai9PZjZ6bnFaR3c2SjVZTSt6RklJc0U4U0U2MkFpWmRDOFExei9hUE5yWTV4eUVXU2UweE95S1F5Ujc0N2xsNFFjL1hTeTJYZWZWL2JYeG9meCthREdRY0RhSWlYZkRQMS8vYjY3a0lWYmt1WVd1cloySmlkekkwckkybS9aaUR3R290dVNCUkRxck13Z0JQWkpZdDFnVFd3VHBPaWhRSlpFZW5sOHVsVGRuK3BmSGwrUGVoU1FsVytFYzlzMWY0ZnlFQmNqYnBtM2ZSU0RQenNSaTdGdnZTY0NMeEhkZmJpeGNNQWJtaGdxTWpaellxZUtVNUgvQ3VoTzlyZTBpUXJqeFhrS2oyQ08zY1FoWlIzNDFQNTc4UFRWWUVFZm1GZTB0bzlaOWVQTXhHZnhXSlZ3MGRQT1MxVE1DR3gvMDZkeVI4c0c5WmdKd3RVVjA4RThxcnpkb2g0U0hsbnJuNzhFYlBIbkZBRUgwelpxRlMrQ1VkdTVpTmJ4WEV2dzlOanFQUUJuS3ZSUFh5OGY0UEs4dE9mT3haelZuOG1ZNDIvV29ibDNJRE1kRXhGV3MwK1BwcEoxakpHZnhtZzF3NjNHV3UzcnozSU54K3VWQTVtdVhTTWUzZmpZK3pDdllmaGlZM2pqaFJvV0Z3WmZYSDhlK0c2UGFJTlNBNWIzT21UZHA1bHduMVN3UXQwZHQxaXFSMUZqbm0zQWRDWkhnM1NJZFdtYjdXMkNhbVh3K29yNTBoUS9LamJBRVlaMHdPSVA4d05JbXhmN2Q1VS9jQ3BYMTgvbkhaczk1cjBQRHNBZG42ekdLdWN6b0Jacm9uTDlEOGdzQU9IZU84czBBaC9sMGx1WVBjZWlQWFBjUktwSFBIWURPWGYxY2daWG84alZCSlIvSVBRNU9DcnZzd3FFRG9OTzNIKzc4TEE5WGVIdnMxdUFJMVo3V1ZlUDlqanUxVXYwZjAzUHRWR2ZRanIxTFVHME5EeGo5MFpIakhIUFNHK0V4Z2pNYUJPS2YxNitsa1ozTlU0ajhQVFRaOUxBd0NYNTJha3lBZmxseUNhOW1zQk43NG5teDB6b1JzcjNPZ2l6cHRJakxYNHpXM1lnRmxYRjBJWFBJTXk1dmM1SHQ0WWQ5TWI3bUxVZE4vYkZCM1N6ZU43T2svRDAzdXBZa0FYbUVzMVI5Zi9teGlLTlRBTVljLzhiL3Jnd2J0OHc3UE01TWRoTjJNWGplaTIvWTY4QkNGeTk2RHc4TmV1blZ6ck0rYWNVSzVPQ3JCamVob2dFZDRqQit3V2Y0UFE1TnROUUtEVFg3dGUxTWZaOEE1YnVpUlVsaVdIVU45Vy9tcml4ZWZhQWRQem5SRG01Y3hJMWN6NkFjcW12czZPNzBtWHhpSFJ4VGIyNEswSnB4SWZJbmQwT0RCNkRXQ1RKR0ovencweVlQdjhseGlCYWI3eC91L2hoR1hSRDlkWmsxN1ZqWXFnbFBrUEllYjJkdGxtWTB3TEtBaHE5Z05RYlRMMkw2ODUvYUY1S0gyakV1NENKOXRwSnh0bmNIRzM0M0Rjb3VkdlUvM2IwT1RyYVNhL0x3eWlRb0lIL2QvMXVFamc4TndKeVMwUnBETHYwQWgwbnN3bmhkV2hCR21XVmVwMk1KdlphMHNxWW9ucW90SUo3cS85MkRuY3YweHp1TGE2QldESTVyTnZ3OU5VbE9XR3QwUUUxbTZqOTkva2xwQ0hkQm94SHlXZUxLM1NQTkFEVGJiV1hwcFZ4OXNoSGRSRThFTUVSemhmWUo1Y1E4WGMrQ3Q3TE1oWUt1ekgzNTVJNkl0VHhqZEM5V1JxdmEzb1VtaVdKWDNrRzNXeXhFVWY3eitCL0dvekhuUDhZSFI5Wjk4Ny93cU1HOUFvb0ViWGR1VGlWNG9ZRkFQRWNweDdhdkNnM2EycldWbXR3SHB6M2J1SjVwUFFUMUNnUHNlaklQZGduRGs3ME9UU2lNS3ZLZ1FETmFlbm8rbi8zR1Y1ald4RFZMUncrNFh1b0RyZ1hkV0p1MkZLUXpVcVlQWmJrQndiKytONTdKZDNjeDdNNngydGpvTCtnNFl4L3ExaHQ3RFdaSG96V1lxWVZmdjBsK0hKaWNLU21zd2JxV0pvcTlFdUhqb2ovdC9DNVJjTDBpVDNNekpSQXpoZFFQT2NROWFsbHphakVjcjVaVzFXQXQvN0ZxbFZENTZKeEUzK1ZHSGdYRVJtNFM1anI2NXlZenRBaU5MNGxJdThpOURrN3NIVnRiY1o4ZFIxOGlzcU9YcDQvTWZYQXZpRU94Z3VMYy9aTnpiRnpGNXM1VGxkVTNiTnNhMU9GcFlYVGpEK0Y1d2hhcDNVZXNXUmI3bkRTWUk3NHlIclRFV1puSVRVcG9Ed1V0cCsvSG4wQ1FRUjZRV3poUFQ4TlRkbkoyUDI4Y0IwSlVZSG95djhHZ3pKNEhBcnNMNGxMZVRCc2Q3dkJ3VUFiR2FIaDQ3TzlaK1JxRDJTKzR6TjlCcm1oU1d6SFU4Q0hEMnRXVEtqdVhvaUN0RHFIOFptcVFJbVF5TlV1RVBrZmROZXJuR2orZS9OeHNwYmdEU2dBaXA1Z1QyMUNCc1JRTU9SeDBiZWMxc3ZZYzZFc3lSLzBtTjN1MlNieCt4UXV3OFFWeU9qSnBjTm85azhPajlScWJnY1IvZ3o2SEpoVkdKVytLMU1UeHJxTzdkVHNNKzN2K1hVeVY4NjRMTzBKWHZjd0ZVZGNac1pjSDFrbUthUVgxQnVPdm03UmFlemJUK01lUDlHekRBUVhzZnlVdjVrOHFZR3hUVHVyeDBhdEVIOHNmUVpCWk1TVDF5bmdrUkQ2SlFVbWZ6KzhmelgweGl1Rkt6bytrTnhaN3JFR3cvcStLUWxKNHBJYkRXVzZ1SlJzTG1DRy9XNXd0M2FTWUNhMTZVUTFZb2RFQncvRmN5MC9leUR2TjdhTko0Z1VpWFIxSnVzZ1ROaVl4bEVRUkRZdnA0QmRTSnNJR3E2VFpId2JPcDl4MlJySTFSaGRaa01qZGN6TmlyWkp4VGtSdkpQVnk3UmdLblppcThNT21SSFFQYm93RGNEazlRQTVENnh6VW9jb1JhMzVrVGVGR1JFRm9XUGdpbGZrZWdRV1VlVGkzMTQvbi9hbG4wM0RlWDByNXVPL3B1UDlPNUlsQzNyM2pTZlJhSHQ1VWFGaEFkTCtCTzVQWVlBTjVYT3QyS0pyU1gxNzZHMlRwNElnenFyYVhSZ3hBN2hzUlM1eFR0anBTNUZ3eUJybVBrbTRYUm1mV3g4ZHdWL2Z6OUYwVnNiVWZDcDJFOWp3c1hhQWp5RnNLb1FrZGY1bldGczlkWmJscnNxNjFHV1hNZzlGWHB0U0lWZWswYkpzczZ5OTFIYnJnQnozWHRMdlZFV0lrYWc4azFXRzRVSEpyQm9mWUNtenZlZmJiVXF5VllUeis5ZmpJbStkM1lITzY0QjBaeWFtcWlFUmlpSFlVNGlKc0xlVUhLeHVRWEtyRlhFQWtSb2JNVGlZQ3AwaEJKa05JUm1QY0Vremt2dWFkMWdtSXA5WUZhczJ3WU91c01jK0c4RHJrZ09MSUlOY0RBU3ZXYVBuNy9hYlNCbklHUTBQT1lTVHlRYTUzdERzSzJEWWpacE9OZW9sUFhlSnBiaStnSHN0WnpEb0N0UjBRWHVPRVd3T01vaGdBcmlaY2lSYU81czBodTFvWkJYNXZoWEVhd0MxcjV2ZGtaSmRMTUc0dVN4TkkvM3Y4MFlMVUVyS3gzbmRjZVgzdlpONkVjSEJLNUVDTDAzVENyV2UwRzhhNUFrMlo5bUtXMnlmL254VkJGYXE5dHlOcDJPdTlSeUI0ZGlMOEU3OUxlY2s2K3IxdDN6UFNkZXVBcTlyR0tOUndJaTJNL29tb2ZuLy9sR0pTc2xHYWRON1cxbHo5TFg5RWFVSjNSSnl3Z2Mxb29iMVFOZkpIcXc1TmNMU1hxNkpTUysyaUVrdXg1ZzhINHhmUEtYQWxqU3k4WENjdW5XVWZVdTlxUS9vYU5FdEY2Sm1NaURDckhLQ3pmMFgvYy83ZDU3VVdmY1NpYWVRZVlXL1c4c2h4eFlPVmhvRGRZeEx6ZDRINFEvOEgrcEw1U3JxWFFMK2JKZTJpU2FJWHh6Q0ttWi9qREdoRTlkd2lZanZmZG9QdlZsNGlLaEQvNjArbi96TGFSZFJKT0hXaDczR2NYRC9QNlAzUnhxcDZJYmUwczVhSjFvbHYzV2NMejJtOTAvd2FoSy9TQUZDR3JhR2JhNXk0eVhlemR1VCtISnBXY2QwSGhVb2kwdmtiRHhMN3J0cjRSVldXdGdxc0hKZjJkWk0vTGJBSWJzMm40Z1l2YS9uSCtsMDF6SnVjMm1WaWJkeFl0SnM0ZUZsbnR2b1V6S0tXdG1VYzVrYXg3WTllQnpOYXN4NzhQVGViZE82T2lyZWtjZHQ3dytvQnVnU0tYemdnQjdXSzFIYmtwQkwwOGc5ZSt6ZHp4aDJWZjhERzJGUjM4bkhEbzZQZm5mZmVyTVRIMDNVWWprZDlaV0lPQmNCV2tjUlFhWFpmY2M0NS9INW9zVzhJbEtpWWNvUWF4UUlNZFJMeG04OFBTdVVHSDJabG1jNVFNdmNzc3FJUGVQci8rTTFuUEhOU1ZGd2c3NXpvamFFVk1yTmVkV3dGU1QyU0x5aEZlUittYVFZM0xxV2JmZmxraC9jdlE1RVhsNmhqeENHNFh0dzcwL0RDdmZzWGdMNnRCRHQzeWdRcVdTK1Z0OTRJQnNSQStYdi9kVjFtaWNZWWl0UUVTRTZYaVBCZ0kwWVpHaXJMTzZ5cGpCN205T2hwNDIzZUVmS1RObm5ldGx5WDlaV2hTWjdEbDJQb0I1dHptWkw4NTU3VDh6SldxeThOMm5qUEFkZzFFWjVtTmFPYytQai8vOGpQcGlXaWZXVVJya0dkRDR5Z0R5cmtRd29PcTFKV045TmRUeVFHM2hxelVuSHpvRFJFeVVjSDhPVFNwS1BHOVAwOUhGSlZSTXpTRkRXYnJZMk96dGxCdmNBTlVnRmxoZzVaWEtLTStIOGYvUUsxMDQxZzBpR0R3VEVlbTJaNXdsUWlMeVlUalllL2ptc1d3YkI1Y3BGczVnbVA3TWpiejRsVU9md3hOTm1Zc3Vvcnl2TXNBSjVzWHBCR0ZCcDVEME5ieE5QaHBQRVQzYmdTeTc2RWorSGo4bDlDekRVaDZOZWUrRDF1cUNySmZxYy9CdCtnYnRGRjBuTUZ0aVhaT3kwTmZ6UEZnb0lkNDZOSDg0bjROVFdJSURYTUFGdGNVVUVWNHU0YkgySWM3NHNEM1kxZkJGNHdxYmx3Q21OWS9tZitQMTc5Mmd6cFBDUFd4TTBCbXZoK0R3dEpTenliR1pkdnk5Zk1kRmUvSGJRV1dXMjNabkVNSGhJZnFOV1lYS1B3TVRkYmsxdGxPYVFPL2psbFkwSGpRcUJPbDV0VTlwelFLZWNSSUdFK1JQT1NlTUh5YWorZC9IQk16OUtYTUVBak1XLy8yUWdrNmYyUXhrU0phMlU4a0swdDQ5Mm5Na2ozdmM1amxTcmorZ05SbnBvaklEQVYrMzJsYlVub25oaGk4bWdmR1J4V2VJNjkya1pkOTJqNmxQMWQrY0IrdmM4K2dQNTcvYTdQZVFmZlhTOE55eGJYRXhjNXJRSlpKOEh3K1huandjN2cvL1Z6VjhHQXNSQnZvNVBYTWtnR3BqTENPK3pXdkIrbWRWd01Yajl2OHlWNmpFK2o0NTNjTGdFVFRHYlZOQjRqaEZ2aFlabDg0UENWOEhnQVRPRi9zbVlsd0VsRHpNWWFGNCs2RVYvN0FiRzNmZzVpVGltWS9OSjc5dkxzNnZmTE1nUStUWDZQVWxIWWcrNDhkKzAzZ08ydWVPbkROMW4reUh3N2lISTFmMXZuaGMycllqbkYzWFNSR2g2TjlIUCtpRmJ0NXF3M1gxL3NzWWhnbjFlaXdUb2ZPL2ozVWI3bjIxdlRVTUN3SzlhakgvN3E3NG42V3hrMkxIb1BFK3dwWmxWSzBpYVUwNGpZcklZK1VmVUIrZFlkcXNHTjBuVVBVK3VEMVVDN0ZXU2o5ZVAvWGpvK2d2ZGQ2dFQ4M0VqREdWMWhHM0tPK2J4c0RqQnU5dDYrTE0zb09pNEdLZ0RBSWY3QVdyaERCWXppb1VxUHFSN0dpWngrYk1PRDJFd3dDcGxTWFZlc2ErUEtFdmJzRWk1MTNyU0l2TkxQZTFvK1A5NysrN2tPK1VXQmJCWHRQczVNRXVtUElicTlkbFFPMks1VjcyM3V0NTd6ZTFjNExUaEVoZ1RPVmdUeXUzc2RXN1lMc2VYanBMQ0ZEQ3VhWllySXVvT29JYkdiVzErWEIrQ2NPaE5MQlhDRFhuODdQN2VQclozVXNFTTY4dDdpYWR5MHZGdlRmTTl1bCticng3VTZ3N2VKWUtKdGpEWU9PMCtKdjlVMFJSUENSYzhvWm9tRzNJL3dqTUh0akRjSEl3UEFsdFhWRVYwTkNBUk9sV29CQjZjMWFOcnNzMkkvbiszajlDeWhhSllleHRkam5kNERSd09HS1NHSUdhRlJpTXZuK1BDVDN4aXBqd0x6bUNHNXI5N09VWC9mWGtKWHdxOUQzdnlON1JDdENFRHlaSWVMSC9GTXZ2R2YvQThPUFlQZzVsSzB1WGdkZG40L0RuNW5HUSszTUt6Nlo3RFB2Z3l1VkJmMDF4dXRkcEFaeG5ZZUV4SENtYWljS2NxODV0YnhHUk1pc0tYNDZET1BvRTdxZmx6bEhiZHpzazNneWtxWDVMVDl6QnBaeVlVY2llWFpWczRGd1lUdFNEdzhDcStmaitQZkVnNXdYSU14Qm4xd21GL3E1a3dyL1A0MGp4QWZzYmduYjdURGFaV1dOdmJTVFpINXZrbkhsdHEydklRQWh4N0pRWGtncFByNXZ0ZXZJa1M2dXhMd0lrZFMyUFVoNXV4azN0Rk8wTFUwQ3ZRcmhQOTcvOURoNW8yTzJ6aEdaMzZkeEU0UjgzQ01JM2pVaStUTFFrUXVIYkxWdEk1ZjlWWW5SeWc2NzdQMWwvTTZremxhR3pzaGlGMDJRRklPa3paZ0Y5MnBCekdNM0JyNWFId3JrWFQ0TE5MMW5ZdllLeEJYOThmVnpDVEpYVW5NVlMyY0Q3VGJlQ09ibkRTZHpPSEVmRzNyeFZGUmJsRktiVzNmRUFNMHBTWXVYT2ZnMWVLV08zRmRxL2RvTkk1UWhiazRyZWxDU3hOcVVFK0lKd1VzUVorS3l3ZDVVUll3c0I4SUJ3Zm5INnorenBYdnBYbEovcUVUZHBUMjBCRktsZFY1Nnc2NWpyNUtuczh3SHBTWkVEcndFaVNkcE56VDRVeFhMU3IwYzM1U1A3U1pJcGVaVnFSdEg0THNjV3hIN2d1RmpjZ2pEemFhQmlqejZrb3VoSHRlL2ZoNytpVFI5Mm9VWW51MW9vckRPTzYvODhteHdRVnJ3dENXU1dOUmFGanQwcmxFL2hCT3g5L2NkRHA3emVabnZhekVyeHJOMU5zSWRXNnVwek5ib2hnemhSUFdaWXpTL3hwemE4OURkS21TRWxVSWpJWDNlLzJVK3gzTmhiV2lodWYvcVJ6TmpYdWNlNXBjNGRUbnp2TFdWRytLNGlOK0N6MVhwZVllSFFqdG1DeUpaa0drOTFrU25DejNLNGh5Q3dUU1I3WW9tb1k2UzN0ZDh2a1A5azlJenU4VDNtbWRkMkg3OC9wdFhaMm9HYUZOSldGVU9rNUVpTVVFMVJoNS9jalFHMXhKNy9PSGM2MEhrbCtsc2FwOTN1RlR3enVHVzNYUTJQQjN2TDA3Qm9DQ05YUHVrOWZPclVxVjB4L3NPbUdGOERNWnBxTXpOUG9sVUxwcFhiejQrLzNpTWxjK3Z2Rm04NXNoNzU3ZTNBRzBzQjBxeWUyZG5mY2wyZmlucVhROFgwZVp6SVQ5MytPajNXSnVKZ2Vib21CNUhsMGF3cFd3aE40NkdWWnpXZkVOdTRSWm03N09GT2k1QWJYRWxyc0hvaDVTeGY5ei8wMUlHRjNVL0J5NldqenF2NkdGQzY3eld1c3pNRDBValJ4eURaeWQ1V0t0RTVmOTFoMU5YdXVTWng0cEVLWXlZTWpIWDBiVVppVmExaUdGblY2emdVSTZ6c25HTnZlZXJ6OGlTendzRHpSWnpsQjgvZjhLMmxVRGxaeUlwcXUycTU2bHpYTlpVOHVMMGU5NEI2cXRtTTJmM2lXOEMwZjdQSFY0UWR6cGU2N3dpQUpYZGU3a1lxbVFqc3hVWUljK0dkT0I5cVN4dXhubFhSa3QyQ0kvQ2hGaVVFalNXZzN3OCs0MUNLd1NnNks3Q09JaHBQWTh0TzdRSXMxZ0pOUnhzUFM5NGJPcnpqbmVWbHVYM0hXNnpYZXdnQ2huZ0sxUGIwN3dzZTlXZUFLOHYwSlRpVmdDaCs3c3JQRHdOMk13SXBLN0FieUFlbitMZTUralVoMlZPY1BsZVQvLytGcnpaK1k1UGRndHhVcllnb3hOM1NBRkdNL3ZkZ2Q4OWIvMlBPL3hnZm11U1VzOERkMFBmeisyeWxIWENwdU1aYTZGcVJaZ1RmUHVKY2MrcGp0UVVCSUpMVml6UEMrRFBLai9lLy81NGErSGNmVkdRZU1GVnVla1RCcHd2VGR2ODNnUEV3dUdCUFowTHBOV3djUDIreXVZOTU0cVFDQjdPWG5qNlFoYkxqL2NYM3RwTGVLdW4wMER3VzVEeXprbVp2dFJaUWwwV1ZLcW00cDZRQjVtUDUvLzYwVXR4QmNrdUF1RzlnRkRXMjNjYi83ekQwMEZIWFBTYVY4TFBpNEhZNGpuNTR3N1BNbE1lczVmbFFWem9rMWxjbk45NVBjZW84RWRxOTc3TTZjZjExYUxDVGU1QUd1S01kTlNDdG9SMkEwUi92dnlERG5yT0s3TFp6RUlPeExwY3Q1K3MvTHpEMWF5Rjk5bnJOc3ZiYTVrMlRQNjR5cWJhVXQ5ZmN2MXVuV3g4VlVIUHJ4QThFUXFpdWN0OHBySWhncmc3dWhMQk9KbGZNZHhuNlhQZWpmbkdRNStILzcva0lBcys2bFpDaVg3bUxMYTVyaG1neTVoZi95Wm1tZVRWYW5EeEwxZloxSTNLZDJFQStVOGd2SnF3U0F3U004bmIrLzYrQVVsZ21NanlkZGo1RmJ2MXVESHF6YVRKKzdjSXlNLzMvMy9sSzEvNXlsZSs4cFd2Zk9VclgvbktWNzd5bGE5ODVTdGYrY3BYdnZLVnIzemxLMS81eWxlKzhwV3ZmT1VyWC9uS1Y3N3lsYTk4NVN0ZitjcFh2dktWcjN6bEsxLzV5bGUrOHBXdmZPVXJYL25LVjc3eWxhOTg1U3RmK2NwWHZ2S1ZyM3psSzEvNXlsZSs4cFd2Zk9VclgvbktWNzd5bGE5ODVTdGYrY3BYdnZLVnIzemxLMS81eWxlKzhwV3ZmT1VyWC9uS1Y3N3lsYTk4NVN0ZitjcFh2dktWcjN6bEsxLzV5bGUrOGhXQS93ZmRtaG1aZHltbTl3QUFNaUZwVkZoMFdFMU1PbU52YlM1aFpHOWlaUzU0YlhBQUFBQUFBRHcvZUhCaFkydGxkQ0JpWldkcGJqMGk3N3UvSWlCcFpEMGlWelZOTUUxd1EyVm9hVWg2Y21WVGVrNVVZM3ByWXpsa0lqOCtDang0T25odGNHMWxkR0VnZUcxc2JuTTZlRDBpWVdSdlltVTZibk02YldWMFlTOGlJSGc2ZUcxd2RHczlJa0ZrYjJKbElGaE5VQ0JEYjNKbElEVXVNQzFqTURZd0lEWXhMakV6TkRjM055d2dNakF4TUM4d01pOHhNaTB4Tnpvek1qb3dNQ0FnSUNBZ0lDQWdJajRLSUNBZ1BISmtaanBTUkVZZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklqNEtJQ0FnSUNBZ1BISmtaanBFWlhOamNtbHdkR2x2YmlCeVpHWTZZV0p2ZFhROUlpSUtJQ0FnSUNBZ0lDQWdJQ0FnZUcxc2JuTTZlRzF3UFNKb2RIUndPaTh2Ym5NdVlXUnZZbVV1WTI5dEwzaGhjQzh4TGpBdklqNEtJQ0FnSUNBZ0lDQWdQSGh0Y0RwRGNtVmhkRzl5Vkc5dmJENUJaRzlpWlNCR2FYSmxkMjl5YTNNZ1ExTTFJREV4TGpBdU1DNDBPRFFnVjJsdVpHOTNjend2ZUcxd09rTnlaV0YwYjNKVWIyOXNQZ29nSUNBZ0lDQWdJQ0E4ZUcxd09rTnlaV0YwWlVSaGRHVStNakF4TkMwd09DMHdORlF4T0RvME9Eb3hNMW84TDNodGNEcERjbVZoZEdWRVlYUmxQZ29nSUNBZ0lDQWdJQ0E4ZUcxd09rMXZaR2xtZVVSaGRHVStNakF4TkMwd09DMHdORlF4T0RvMU16bzFNMW84TDNodGNEcE5iMlJwWm5sRVlYUmxQZ29nSUNBZ0lDQThMM0prWmpwRVpYTmpjbWx3ZEdsdmJqNEtJQ0FnSUNBZ1BISmtaanBFWlhOamNtbHdkR2x2YmlCeVpHWTZZV0p2ZFhROUlpSUtJQ0FnSUNBZ0lDQWdJQ0FnZUcxc2JuTTZaR005SW1oMGRIQTZMeTl3ZFhKc0xtOXlaeTlrWXk5bGJHVnRaVzUwY3k4eExqRXZJajRLSUNBZ0lDQWdJQ0FnUEdSak9tWnZjbTFoZEQ1cGJXRm5aUzl3Ym1jOEwyUmpPbVp2Y20xaGRENEtJQ0FnSUNBZ1BDOXlaR1k2UkdWelkzSnBjSFJwYjI0K0NpQWdJRHd2Y21SbU9sSkVSajRLUEM5NE9uaHRjRzFsZEdFK0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2p3L2VIQmhZMnRsZENCbGJtUTlJbmNpUHo1Nm1pbURBQUFBWTBsRVFWUVlsYVdSUVE2QUlBd0VwNEFhLy85YU5WSXZhSnBTdUxpWERjdUVMU0NxU2lBRnhJZHBBRnFmd3VLOGc3dU5sdVVJUGdNWTRHNStBSWdPYmhncEFjWFVDckMyOVFic1pzU2x0Q283MjF0ZFRaYUJLbi9mK1hJTm4yWW5KOXpIUEN3UkhCUDc5aUh6QUFBQUFFbEZUa1N1UW1DQw",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformTool",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQThTVVJCVkJpVlkvei8vejhEQVFCWHdJSXVnQSt3SUxFWkNabk1SSVNCTUVNWWlWRU1CNE5JTWN5M3VJSVBMcytDUXdJclFGZU1MYXpoQmdBQTR2NE1GcEVTdzlBQUFBQUFTVVZPUks1Q1lJST0",
        },
        {
          name: "__ASSET__:bitmap_flixel_addons_transition__TransitionFade_GraphicDiagonalGradient",
          data: "",
        },
        {
          name: "__ASSET__:sound_flixel_addons_text_TypeSound",
          data: "T2dnUwACAAAAAAAAAACBPwAAAAAAAD99658BHgF2b3JiaXMAAAAAAUSsAAAAAAAAgLsAAAAAAAC4AU9nZ1MAAAAAAAAAAAAAgT8AAAEAAAA8HKMNDy3/////////////////MgN2b3JiaXMdAAAAWGlwaC5PcmcgbGliVm9yYmlzIEkgMjAwNzA2MjIAAAAAAQV2b3JiaXMfQkNWAQAAAQAYY1QpRplS0kqJGXOUMUaZYpJKiaWEFkJInXMUU6k515xrrLm1IIQQGlNQKQWZUo5SaRljkCkFmVIQS0kldBI6J51jEFtJwdaYa4tBthyEDZpSTCnElFKKQggZU4wpxZRSSkIHJXQOOuYcU45KKEG4nHOrtZaWY4updJJK5yRkTEJIKYWSSgelU05CSDWW1lIpHXNSUmpB6CCEEEK2IIQNgtCQVQAAAQDAQBAasgoAUAAAEIqhGIoChIasAgAyAAAEoCiO4iiOIzmSY0kWEBqyCgAAAgAQAADAcBRJkRTJsSRL0ixL00RRVX3VNlVV9nVd13Vd13UgNGQVAAABAEBIp5mlGiDCDGQYCA1ZBQAgAAAARijCEANCQ1YBAAABAABiKDmIJrTmfHOOg2Y5aCrF5nRwItXmSW4q5uacc845J5tzxjjnnHOKcmYxaCa05pxzEoNmKWgmtOacc57E5kFrqrTmnHPGOaeDcUYY55xzmrTmQWo21uaccxa0pjlqLsXmnHMi5eZJbS7V5pxzzjnnnHPOOeecc6oXp3NwTjjnnHOi9uZabkIX55xzPhmne3NCOOecc84555xzzjnnnHOC0JBVAAAQAABBGDaGcacgSJ+jgRhFiGnIpAfdo8MkaAxyCqlHo6ORUuoglFTGSSmdIDRkFQAACAAAIYQUUkghhRRSSCGFFFKIIYYYYsgpp5yCCiqppKKKMsoss8wyyyyzzDLrsLPOOuwwxBBDDK20EktNtdVYY62555xrDtJaaa211koppZRSSikIDVkFAIAAABAIGWSQQUYhhRRSiCGmnHLKKaigAkJDVgEAgAAAAgAAADzJc0RHdERHdERHdERHdETHczxHlERJlERJtEzL1ExPFVXVlV1b1mXd9m1hF3bd93Xf93Xj14VhWZZlWZZlWZZlWZZlWZZlWYLQkFUAAAgAAIAQQgghhRRSSCGlGGPMMeegk1BCIDRkFQAACAAgAAAAwFEcxXEkR3IkyZIsSZM0S7M8zdM8TfREURRN01RFV3RF3bRF2ZRN13RN2XRVWbVdWbZt2dZtX5Zt3/d93/d93/d93/d93/d1HQgNWQUASAAA6EiOpEiKpEiO4ziSJAGhIasAABkAAAEAKIqjOI7jSJIkSZakSZ7lWaJmaqZneqqoAqEhqwAAQAAAAQAAAAAAKJriKabiKaLiOaIjSqJlWqKmaq4om7Lruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7rui4QGrIKAJAAANCRHMmRHEmRFEmRHMkBQkNWAQAyAAACAHAMx5AUybEsS9M8zdM8TfRET/RMTxVd0QVCQ1YBAIAAAAIAAAAAADAkw1IsR3M0SZRUS7VUTbVUSxVVT1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTVN0zRNIDRkJQAABADAYo3B5SAhJSXl3hDCEJOeMSYhtV4hBJGS3jEGFYOeMqIMct5C4xCDHggNWREARAEAAMYgxxBzyDlHqZMSOeeodJQa5xyljlJnKcWYYs0oldhSrI1zjlJHraOUYiwtdpRSjanGAgAAAhwAAAIshEJDVgQAUQAAhDFIKaQUYow5p5xDjCnnmHOGMeYcc44556B0UirnnHROSsQYc445p5xzUjonlXNOSiehAACAAAcAgAALodCQFQFAnACAQZI8T/I0UZQ0TxRFU3RdUTRd1/I81fRMU1U90VRVU1Vt2VRVWZY8zzQ901RVzzRV1VRVWTZVVZZFVdVt03V123RV3ZZt2/ddWxZ2UVVt3VRd2zdV1/Zd2fZ9WdZ1Y/I8VfVM03U903Rl1XVtW3VdXfdMU5ZN15Vl03Vt25VlXXdl2fc103Rd01Vl2XRd2XZlV7ddWfZ903WF35VlX1dlWRh2XfeFW9eV5XRd3VdlVzdWWfZ9W9eF4dZ1YZk8T1U903RdzzRdV3VdX1dd19Y105Rl03Vt2VRdWXZl2fddV9Z1zzRl2XRd2zZdV5ZdWfZ9V5Z13XRdX1dlWfhVV/Z1WdeV4dZt4Tdd1/dVWfaFV5Z14dZ1Ybl1XRg+VfV9U3aF4XRl39eF31luXTiW0XV9YZVt4VhlWTl+4ViW3feVZXRdX1ht2RhWWRaGX/id5fZ943h1XRlu3efMuu8Mx++k+8rT1W1jmX3dWWZfd47hGDq/8OOpqq+brisMpywLv+3rxrP7vrKMruv7qiwLvyrbwrHrvvP8vrAso+z6wmrLwrDatjHcvm4sv3Acy2vryjHrvlG2dXxfeArD83R1XXlmXcf2dXTjRzh+ygAAgAEHAIAAE8pAoSErAoA4AQCPJImiZFmiKFmWKIqm6LqiaLqupGmmqWmeaVqaZ5qmaaqyKZquLGmaaVqeZpqap5mmaJqua5qmrIqmKcumasqyaZqy7LqybbuubNuiacqyaZqybJqmLLuyq9uu7Oq6pFmmqXmeaWqeZ5qmasqyaZquq3meanqeaKqeKKqqaqqqraqqLFueZ5qa6KmmJ4qqaqqmrZqqKsumqtqyaaq2bKqqbbuq7Pqybeu6aaqybaqmLZuqatuu7OqyLNu6L2maaWqeZ5qa55mmaZqybJqqK1uep5qeKKqq5ommaqqqLJumqsqW55mqJ4qq6omea5qqKsumatqqaZq2bKqqLZumKsuubfu+68qybqqqbJuqauumasqybMu+78qq7oqmKcumqtqyaaqyLduy78uyrPuiacqyaaqybaqqLsuybRuzbPu6aJqybaqmLZuqKtuyLfu6LNu678qub6uqrOuyLfu67vqucOu6MLyybPuqrPq6K9u6b+sy2/Z9RNOUZVM1bdtUVVl2Zdn2Zdv2fdE0bVtVVVs2TdW2ZVn2fVm2bWE0Tdk2VVXWTdW0bVmWbWG2ZeF2Zdm3ZVv2ddeVdV/XfePXZd3murLty7Kt+6qr+rbu+8Jw667wCgAAGHAAAAgwoQwUGrISAIgCAACMYYwxCI1SzjkHoVHKOecgZM5BCCGVzDkIIZSSOQehlJQy5yCUklIIoZSUWgshlJRSawUAABQ4AAAE2KApsThAoSErAYBUAACD41iW55miatqyY0meJ4qqqaq27UiW54miaaqqbVueJ4qmqaqu6+ua54miaaqq6+q6aJqmqaqu67q6Lpqiqaqq67qyrpumqqquK7uy7Oumqqqq68quLPvCqrquK8uybevCsKqu68qybNu2b9y6ruu+7/vCka3rui78wjEMRwEA4AkOAEAFNqyOcFI0FlhoyEoAIAMAgDAGIYMQQgYhhJBSSiGllBIAADDgAAAQYEIZKDRkRQAQJwAAGEMppJRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkgppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkqppJRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoplVJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSCgCQinAAkHowoQwUGrISAEgFAACMUUopxpyDEDHmGGPQSSgpYsw5xhyUklLlHIQQUmktt8o5CCGk1FJtmXNSWosx5hgz56SkFFvNOYdSUoux5ppr7qS0VmuuNedaWqs115xzzbm0FmuuOdecc8sx15xzzjnnGHPOOeecc84FAOA0OACAHtiwOsJJ0VhgoSErAYBUAAACGaUYc8456BBSjDnnHIQQIoUYc845CCFUjDnnHHQQQqgYc8w5CCGEkDnnHIQQQgghcw466CCEEEIHHYQQQgihlM5BCCGEEEooIYQQQgghhBA6CCGEEEIIIYQQQgghhFJKCCGEEEIJoZRQAABggQMAQIANqyOcFI0FFhqyEgAAAgCAHJagUs6EQY5Bjw1BylEzDUJMOdGZYk5qMxVTkDkQnXQSGWpB2V4yCwAAgCAAIMAEEBggKPhCCIgxAABBiMwQCYVVsMCgDBoc5gHAA0SERACQmKBIu7iALgNc0MVdB0IIQhCCWBxAAQk4OOGGJ97whBucoFNU6iAAAAAAAAwA4AEA4KAAIiKaq7C4wMjQ2ODo8AgAAAAAABYA+AAAOD6AiIjmKiwuMDI0Njg6PAIAAAAAAAAAAICAgAAAAAAAQAAAAICAT2dnUwAEywgAAAAAAACBPwAAAgAAAEvHOpMSHx4YHR4fHR0fHR8dHxscHyCMdGFB0n7LSWA/69mku4y/xyqb05UXpt9j4++xyjbkLYRlwfH9tQ5gNdXp0r2yOT3+Hhuv2pwef4+NVzZ7BlxfQeauLwBrNQ6jQerWBOSFukypael0B1RXWpH+8AY4MtNmXxdxxfojRWo/MlQvVb95OkwIhGnh8QfMV4DF/odWOzoduyueL3qxkqwGml49YQ2UfGMZgg9WPQesn1oDETuuJMVjd+XsFyvJxdhdObYzBGTlxpVd5ZcghPF+Wv3Xxz749GzkUySZA4Q8B8IPZF0RzP31GogaX1XN3v9W//0XrkgwE2tmaoaaCgCM546U++2zINrM7am6db35KeybTAFV/2hp5m2rFgkAfGO4wb5sMoGFbznG6Ourf5RO4l9nT3l7k0uPLgBMX+DhC1ETwOcXW0kSAx6bO2zKvgEzo2LmH9Tn25oBhGFR0D48ElhUc9MJlc3p99j45nRlc/x9pnqvsyR0Y8Hh/rsD2Jvq69L9PTbP98J0ZXO6sjk9/h4bfzcKTGFO0IM1HcDo4Ot04lTsa9F9zV1ktyPsSKsJRFee6KY6BbCOf1ZEQyWtq5fvw+f9pdGZkKKbD2Rh4dGDVSUQr857TZzOl1wUjd1drIzuisZSL9IjRQdUXZnAB6ucA+E+luXEabI29uJKysVKcrGS7FcSU+ulATqaPc9SVDGqU4QyxPz0GGOMdM7BnnMAYCmSxLAe/4bHSrd/y1CHsst+arXm+xkV6h2Rqd5VO8Drm/CkrBUf1tdZGlz1d9cRGajrI7y9yfr66jqvKcC6vr1x3lLW1tfX120AeHvrdRuAt7c3AdZs4Ly9vb3Fwt/hoABw8Ly9vb15AOftDQA4A+D2DgMA",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicFlixel",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUF3QUFBQU1DQVlBQUFCV2RWem5BQUFBQkdkQlRVRUFBTEdPZlB0Umt3QUFBQ0JqU0ZKTkFBQ0hEd0FBakE4QUFQMVNBQUNCUUFBQWZYa0FBT21MQUFBODVRQUFHY3h6UElWM0FBQUtPV2xEUTFCUWFHOTBiM05vYjNBZ1NVTkRJSEJ5YjJacGJHVUFBRWpIblpaM1ZGVFhGb2ZQdlhkNm9jMHdBbEtHM3J2QUFOSjdrMTVGWVpnWllDZ0REak0wc1NHaUFoRkZSSm9pU0ZERWdORlFKRlpFc1JBVVZMQUhKQWdvTVJoRlZDeHZSdGFMcnF5ODkvTHkrK09zYisyejk3bjc3TDNQV2hjQWtxY3ZsNWNHU3dHUXloUHdnenljNlJHUlVYVHNBSUFCSG1DQUtRQk1Wa2E2WDdCN0NCREp5ODJGbmlGeUFsOEVBZkI2V0x3Q2NOUFFNNEJPQi8rZnBGbnBmSUhvbUFBUm03TTVHU3dSRjRnNEpVdVFMcmJQaXBnYWx5eG1HQ1ZtdmloQkVjdUpPV0dSRFQ3N0xMS2ptTm1wUExhSXhUbW5zMVBaWXU0VjhiWk1JVWZFaUsrSUN6TzVuQ3dSM3hLeFJvb3dsU3ZpTitMWVZBNHpBd0FVU1d3WGNGaUpJallSTVlrZkV1UWk0dVVBNEVnSlgzSGNWeXpnWkF2RWwzSkpTOC9oY3hNU0JYUWRsaTdkMU5xYVFmZmtaS1Z3QkFMREFDWXJtY2xuMDEzU1V0T1p2QndBRnUvOFdUTGkydEpGUmJZMHRiYTBORFF6TXYycVVQOTE4MjlLM050RmVobjR1V2NRcmYrTDdhLzgwaG9BWU15SmFyUHppeTJ1Q29ET0xRREkzZnRpMHpnQWdLU29ieDNYdjdvUFRUd3ZpUUpCdW8yeGNWWldsaEdYd3pJU0YvUVAvVStIdjZHdnZtY2tQdTZQOHRCZE9mRk1ZWXFBTHE0Ykt5MGxUY2luWjZReldSeTY0WitIK0I4SC9uVWVCa0djZUE2Znd4TkZoSW1tak10TEVMV2J4K1lLdUdrOE9wZjNuNXI0RDhQK3BNVzVGb25TK0JGUVk0eUExSFVxUUg3dEJ5Z0tFU0RSKzhWZC82TnZ2dmd3SUg1NTRTcVRpM1AvN3pmOVo4R2w0aVdEbS9BNXppVW9oTTRTOGpNWDk4VFBFcUFCQVVnQ0twQUh5a0FkNkFCRFlBYXNnQzF3Qkc3QUcvaURFQkFKVmdNV1NBU3BnQSt5UUI3WUJBcEJNZGdKOW9CcVVBY2FRVE5vQmNkQkp6Z0Z6b05MNEJxNEFXNkQrMkFVVElCbllCYThCZ3NRQkdFaE1rU0I1Q0VWU0JQU2g4d2dCbVFQdVVHK1VCQVVDY1ZDQ1JBUEVrSjUwR2FvR0NxRHFxRjZxQm42SGpvSm5ZZXVRSVBRWFdnTW1vWitoOTdCQ0V5Q3FiQVNyQVVid3d6WUNmYUJRK0JWY0FLOEJzNkZDK0FkY0NYY0FCK0ZPK0R6OERYNE5qd0tQNFBuRUlBUUVScWlpaGdpRE1RRjhVZWlrSGlFajZ4SGlwQUtwQUZwUmJxUlB1UW1Nb3JNSUc5UkdCUUZSVWNab214Um5xaFFGQXUxQnJVZVZZS3FSaDFHZGFCNlVUZFJZNmhaMUVjMEdhMkkxa2Zib0wzUUVlZ0VkQmE2RUYyQmJrSzNveStpYjZNbjBLOHhHQXdObzQyeHduaGlJakZKbUxXWUVzdytUQnZtSEdZUU00Nlp3Mkt4OGxoOXJCM1dIOHZFQ3JDRjJDcnNVZXhaN0JCMkF2c0dSOFNwNE14dzdyZ29IQStYajZ2QUhjR2R3UTNoSm5FTGVDbThKdDRHNzQ5bjQzUHdwZmhHZkRmK09uNEN2MENRSm1nVDdBZ2hoQ1RDSmtJbG9aVndrZkNBOEpKSUpLb1JyWW1CUkM1eEk3R1NlSXg0bVRoR2ZFdVNJZW1SWEVqUkpDRnBCK2tRNlJ6cEx1a2xtVXpXSWp1U284Z0M4ZzV5TS9rQytSSDVqUVJGd2tqQ1M0SXRzVUdpUnFKRFlraml1U1JlVWxQU1NYSzFaSzVraGVRSnlldVNNMUo0S1MwcEZ5bW0xSHFwR3FtVFVpTlNjOUlVYVZOcGYrbFU2UkxwSTlKWHBLZGtzREphTW00eWJKa0NtWU15RjJUR0tRaEZuZUpDWVZFMlV4b3BGeWtUVkF4Vm0rcEZUYUlXVTcrakRsQm5aV1ZrbDhtR3lXYkwxc2llbGgybElUUXRtaGN0aFZaS08wNGJwcjFib3JURWFRbG55ZllsclV1R2xzekxMWlZ6bE9QSUZjbTF5ZDJXZXlkUGwzZVRUNWJmSmQ4cC8xQUJwYUNuRUtpUXBiQmY0YUxDekZMcVV0dWxyS1ZGUzQ4dnZhY0lLK29wQmltdVZUeW8ySzg0cDZTczVLR1VybFNsZEVGcFJwbW03S2ljcEZ5dWZFWjVXb1dpWXEvQ1ZTbFhPYXZ5bEM1TGQ2S24wQ3ZwdmZSWlZVVlZUMVdoYXIzcWdPcUNtclphcUZxK1dwdmFRM1dDT2tNOVhyMWN2VWQ5VmtORncwOGpUNk5GNDU0bVhwT2htYWk1VjdOUGMxNUxXeXRjYTZ0V3A5YVV0cHkybDNhdWRvdjJBeDJ5am9QT0dwMEduVnU2R0YyR2JyTHVQdDBiZXJDZWhWNmlYbzNlZFgxWTMxS2ZxNzlQZjlBQWJXQnR3RE5vTUJneEpCazZHV1lhdGhpT0dkR01mSTN5alRxTm5odHJHRWNaN3pMdU0vNW9ZbUdTWXRKb2N0OVV4dFRiTk4rMDIvUjNNejB6bGxtTjJTMXpzcm03K1Fiekx2TVh5L1NYY1pidFgzYkhnbUxoWjdIVm9zZmlnNldWSmQreTFYTGFTc01xMXFyV2FvUkJaUVF3U2hpWHJkSFd6dFlickU5WnY3V3h0QkhZSExmNXpkYlFOdG4yaU8zVWN1M2xuT1dOeThmdDFPeVlkdlYyby9aMCsxajdBL2FqRHFvT1RJY0doOGVPNm81c3h5YkhTU2RkcHlTbm8wN1BuVTJjK2M3dHp2TXVOaTdyWE02NUlxNGVya1d1QTI0eWJxRnUxVzZQM05YY0U5eGIzR2M5TER6V2VwenpSSHY2ZU83eUhQRlM4bUo1Tlh2TmVsdDVyL1B1OVNINUJQdFUrenoyMWZQbCszYjd3WDdlZnJ2OUhxelFYTUZiMGVrUC9MMzhkL3MvRE5BT1dCUHdZeUFtTUNDd0p2QkprR2xRWGxCZk1DVTRKdmhJOE9zUTU1RFNrUHVoT3FIQzBKNHd5YkRvc09hdytYRFg4TEx3MFFqamlIVVIxeUlWSXJtUlhWSFlxTENvcHFpNWxXNHI5NnljaUxhSUxvd2VYcVc5S252VmxkVUtxMU5XbjQ2UmpHSEduSWhGeDRiSEhvbDl6L1JuTmpEbjRyemlhdU5tV1M2c3ZheG5iRWQyT1h1YVk4Y3A0MHpHMjhXWHhVOGwyQ1hzVHBoT2RFaXNTSnpodW5DcnVTK1NQSlBxa3VhVC9aTVBKWDlLQ1U5cFM4V2x4cWFlNU1ud2tubTlhY3BwMldtRDZmcnBoZW1qYTJ6VzdGa3p5L2ZoTjJWQUdhc3l1Z1JVMGM5VXYxQkh1RVU0bG1tZldaUDVKaXNzNjBTMmREWXZ1ejlITDJkN3ptU3VlKzYzYTFGcldXdDc4bFR6TnVXTnJYTmFWNzhlV2grM3ZtZUQrb2FDRFJNYlBUWWUza1RZbEx6cHAzeVQvTEw4VjV2RE4zY1hLQlZzTEJqZjRyR2xwVkNpa0Y4NHN0VjJhOTAyMURidXRvSHQ1dHVydG44c1loZGRMVFlwcmloK1g4SXF1ZnFONlRlVjMzemFFYjlqb05TeWRQOU96RTdlenVGZERyc09sMG1YNVphTjcvYmIzVkZPTHk4cWY3VW5acytWaW1VVmRYc0plNFY3Unl0OUs3dXFOS3AyVnIydlRxeStYZU5jMDFhcldMdTlkbjRmZTkvUWZzZjlyWFZLZGNWMTd3NXdEOXlwOTZqdmFOQnFxRGlJT1poNThFbGpXR1BmdDR4dm01c1Vtb3FiUGh6aUhSbzlISFM0dDltcXVmbUk0cEhTRnJoRjJESjlOUHJvamU5Y3YrdHFOV3l0YjZPMUZSOER4NFRIbm40ZisvM3djWi9qUFNjWUoxcC8wUHlodHAzU1h0UUJkZVIwekhZbWRvNTJSWFlObnZRKzJkTnQyOTMrbzlHUGgwNnBucW81TFh1NjlBemhUTUdaVDJkeno4NmRTejgzY3o3aC9IaFBUTS85Q3hFWGJ2VUc5ZzVjOUxsNCtaTDdwUXQ5VG4xbkw5dGRQblhGNXNySnE0eXJuZGNzcjNYMFcvUzMvMlR4VS91QTVVREhkYXZyWFRlc2IzUVBMaDg4TStRd2RQNm02ODFMdDd4dVhidTk0dmJnY09qd25aSG9rZEU3N0R0VGQxUHV2cmlYZVcvaC9zWUg2QWRGRDZVZVZqeFNmTlR3cys3UGJhT1dvNmZIWE1mNkh3Yy92ai9PR24vMlM4WXY3eWNLbnBDZlZFeXFURFpQbVUyZG1uYWZ2dkYwNWRPSlorblBGbVlLZjVYK3RmYTV6dk1mZm5QOHJYODJZbmJpQmYvRnA5OUxYc3EvUFBScTJhdWV1WUM1UjY5VFh5L01GNzJSZjNQNExlTnQzN3Z3ZDVNTFdlK3g3eXMvNkg3by91ano4Y0duMUUrZi9nVURtUFA4dXNUbzB3QUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJwMFJWaDBVMjltZEhkaGNtVUFVR0ZwYm5RdVRrVlVJSFl6TGpVdU1UQXc5SEtoQUFBQkxFbEVRVlFvVTJQNGY5RG9QeEkrRG1RNy9qOWt4QUFDWDlYOVZJRjRHUkQvQStML0lNeUFwZ0drK2QvSEE0WTdqcnE1emdJcStBbFRpRlBENTRPRy94MTNxLzJYWHFuKy80S3RPOWhVWkF5eTRTck1sbzlBeFhaQXhRdzdsY0JZY3BYYS96TU9LSnErZ1RTNGdaenhBYWpZRWtreFRKUFlHclgvSjV6Y1lMYjBNL3cvWXNUdzdJREJPclBkcW5DVFlZcGh0TWhhdGYrSFhGMi9BSjBtQVE0TjQ0REhDN21XZXVEVXdMQlQ5VC9yNGFYUFdNNys1bVN3ZHZ5dkJzUy9USDFlLytkYzdveEZrOXAvNW1NYi93TVZnM0FPU01NQ0lQNFB3aVorei85enJIUkEwZ1JTdkFtbUdFUS9BbW40RGRNQTFoVHcrRC83S3R2L0RMczBnSXEzSUNzR3MwRWF3S1lqWTZPUXUyK1lqMnk0QlhVR2lpWjBEVitBR3R1QVdCQ29tQldJazRINEFiSkdBSlFUU2ZzMmF1VnlBQUFBQUVsRlRrU3VRbUND",
        },
        {
          name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorDefault",
          data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJaMFJWaDBRM0psWVhScGIyNGdWR2x0WlFBd05TOHlPUzh4TnJ0VlFGa0FBQUFjZEVWWWRGTnZablIzWVhKbEFFRmtiMkpsSUVacGNtVjNiM0pyY3lCRFV6Ym92TEtNQUFBQUxrbEVRVlFZbFdQOC8vOC9BeGJ3bjRHQmdSRmRrQW1iU2x4Z2tDaG1ZWUI0Qmh2QUVHZGh3T0pyaG1FVUdnQjN1Z2NXZXB2bWtRQUFBQUJKUlU1RXJrSmdnZz09",
        },
      ];
      var hn = new Uint32Array(256);
      R.__alpha16 = hn;
      for (var mh = 0; 256 > mh; ) {
        var mi = mh++;
        R.__alpha16[mi] = Math.ceil(257.00392156862745 * mi);
      }
      hn = new Uint8Array(511);
      R.__clamp = hn;
      for (mh = 0; 255 > mh; ) (mi = mh++), (R.__clamp[mi] = mi);
      for (mh = 255; 511 > mh; ) (mi = mh++), (R.__clamp[mi] = 255);
      Pa.level = 3;
      "undefined" == typeof console && (console = {});
      null == console.log && (console.log = function () {});
      w.hitTestCanvas =
        "undefined" != typeof window
          ? window.document.createElement("canvas")
          : null;
      w.hitTestContext =
        "undefined" != typeof window ? w.hitTestCanvas.getContext("2d") : null;
      Tg.maxTouchPoints = 2;
      Tg.supportedGestures = null;
      Tg.supportsGestureEvents = !1;
      Tg.inputMode = 2;
      ya._pool = new Rb(ya);
      L.defaultPixelPerfectPosition = !1;
      qb.alphabet = "abcdefghijklmnopqrstuvwxyz";
      qb.numbers = "1234567890";
      qb.symbols = "|~#$%()*+-:;<=>@[]^_.,'!?";
      ta.__meta__ = {
        fields: {
          __cairo: { SuppressWarnings: ["checkstyle:Dynamic"] },
          addEventListener: { SuppressWarnings: ["checkstyle:Dynamic"] },
          removeEventListener: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      ta.__broadcastEvents = new ea();
      ta.__instanceCount = 0;
      ta.__tempStack = new Kb(
        function () {
          return rb.toObjectVector(null);
        },
        function (a) {
          a.set_length(0);
        }
      );
      V.bpm = 100;
      V.crochet = (60 / V.bpm) * 1e3;
      V.stepCrochet = V.crochet / 4;
      V.safeFrames = 10;
      V.safeZoneOffset = (V.safeFrames / 60) * 1e3;
      V.bpmChangeMap = [];
      v.difficultyArray = ["EASY", "NORMAL", "HARD"];
      Lc.a1 = 0.254829592;
      Lc.a2 = -0.284496736;
      Lc.a3 = 1.421413741;
      Lc.a4 = -1.453152027;
      Lc.a5 = 1.061405429;
      Lc.p = 0.3275911;
      ib.skipNextTransIn = !1;
      ib.skipNextTransOut = !1;
      db.songScores = new ea();
      Tb.MIN_TIME = 1;
      Sd.kadeEngineVer = "1.3.1";
      Sd.gameVer = "SK - 0.1 X-Event";
      bb.__fontByName = new ea();
      bb.__registeredFonts = [];
      uh.isLoggedIn = !1;
      Gc.swagWidth = 112;
      G.curStage = "";
      G.isStoryMode = !1;
      G.storyWeek = 0;
      G.storyPlaylist = [];
      G.storyDifficulty = 1;
      G.weekSong = 0;
      G.shits = 0;
      G.bads = 0;
      G.goods = 0;
      G.sicks = 0;
      G.loadRep = !1;
      G.misses = 0;
      G.campaignScore = 0;
      G.daPixelZoom = 6;
      G.theFunne = !0;
      G.repPresses = 0;
      G.repReleases = 0;
      G.timeCurrently = 0;
      G.timeCurrentlyR = 0;
      G.songRate = 1.5;
      Ga.numPlayers = 0;
      Td.version = "1.0";
      Nc.weekUnlocked = [!0, !0, !0, !0, !0, !0, !0];
      af.initialized = !1;
      Vd.__meta__ = {
        fields: { glProgram: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      D.Element = 0;
      D.PCData = 1;
      D.CData = 2;
      D.Comment = 3;
      D.DocType = 4;
      D.ProcessingInstruction = 5;
      D.Document = 6;
      U._pool = new Ri(U);
      Ea.__meta__ = {
        fields: {
          equals: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        },
      };
      Ea.__pool = new Kb(
        function () {
          return new Ea();
        },
        function (a) {
          a.identity();
        }
      );
      Bb.__pool = new Kb(
        function () {
          return new Bb();
        },
        function (a) {
          a.__identity();
        }
      );
      zh.sha = "";
      p.autoPause = !0;
      p.fixedTimestep = !0;
      p.timeScale = 1;
      p.worldDivisions = 6;
      p.VERSION = new zh(4, 8, 1);
      p.elapsed = 0;
      p.maxElapsed = 0.1;
      p.scaleMode = new Ui();
      p.worldBounds = (function (a) {
        a = ya._pool.get();
        var b = 0,
          c = 0,
          d = 0,
          e = 0;
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a.width = d;
        a.height = e;
        a._inPool = !1;
        return a;
      })(this);
      p.save = new Ti();
      p.random = new ig();
      p.swipes = [];
      p.inputs = new gl();
      p.debugger = new fl();
      p.bitmap = new dl();
      p.cameras = new el();
      p.initialWidth = 0;
      p.initialHeight = 0;
      p.initialZoom = 0;
      p.signals = new jl();
      we.helperString = "";
      J.__meta__ = {
        fields: {
          image: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __framebufferContext: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __indexBufferContext: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __surface: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __textureContext: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __vertexBufferContext: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __fromImage: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      J.__tempVector = new Lg();
      ye.resourceType = "image/png";
      ye.resourceName =
        "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileCircle";
      Id.resourceType = "image/png";
      Id.resourceName =
        "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileDiamond";
      ze.resourceType = "image/png";
      ze.resourceName =
        "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileSquare";
      Zd.resourceType = "image/png";
      Zd.resourceName =
        "__ASSET__:bitmap_flixel_addons_transition__TransitionFade_GraphicDiagonalGradient";
      Ra.__pool = new Kb(
        function () {
          return new Ra();
        },
        function (a) {
          a.setTo(0, 0);
        }
      );
      ma.__pool = new Kb(
        function () {
          return new ma();
        },
        function (a) {
          a.setTo(0, 0, 0, 0);
        }
      );
      P.bitmapsCreated = 0;
      P.useSectionCache = !0;
      P._staticPoint = new Ra();
      P._staticRect = new ma();
      P._staticRect2 = new ma();
      P._staticPointZero = new Ra(0, 0);
      P._staticMatrix = new Ea();
      P._staticFlxRect = (function (a) {
        a = ya._pool.get();
        var b = 0,
          c = 0,
          d = 0,
          e = 0;
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a.width = d;
        a.height = e;
        a._inPool = !1;
        return a;
      })(this);
      P._staticFlxRect2 = (function (a) {
        a = ya._pool.get();
        var b = 0,
          c = 0,
          d = 0,
          e = 0;
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a.width = d;
        a.height = e;
        a._inPool = !1;
        return a;
      })(this);
      rc._cachedPoint = new U();
      Ac.EXTENSIONS = [".ttf", ".otf"];
      xc._pool = new ij(xc);
      xc._boundObjects = new uc();
      Eb.defaultPersist = !1;
      Xc.drawCalls = 0;
      Wa.__meta__ = {
        fields: {
          addEventListener: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      Wa.numDevices = 0;
      Wa.__deviceList = [];
      Wa.__instances = [];
      Wa.__devices = new uc();
      sf._gameInput = new Wa();
      de.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 24,
        down: 25,
        left: 26,
        right: 27,
      });
      de.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 28,
        down: 29,
        left: 30,
        right: 31,
      });
      ee.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 21,
        down: 22,
        left: 23,
        right: 24,
      });
      ee.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 25,
        down: 26,
        left: 27,
        right: 28,
      });
      Rc.REMOTE_DPAD = new bc(0, 1, {
        up: 22,
        down: 23,
        left: 24,
        right: 25,
        threshold: 0.5,
        mode: pj.ONLY_DIGITAL,
      });
      Rc.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 26,
        down: 27,
        left: 28,
        right: 29,
      });
      Rc.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 26,
        down: 27,
        left: 28,
        right: 29,
      });
      fe.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 23,
        down: 24,
        left: 25,
        right: 26,
      });
      fe.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 27,
        down: 28,
        left: 29,
        right: 30,
      });
      ge.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 22,
        down: 23,
        left: 24,
        right: 25,
      });
      ge.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 26,
        down: 27,
        left: 28,
        right: 29,
      });
      Ad.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 21,
        down: 22,
        left: 23,
        right: 24,
      });
      Ad.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 25,
        down: 26,
        left: 27,
        right: 28,
      });
      Rg.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 22,
        down: 23,
        left: 24,
        right: 25,
      });
      Sg.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 22,
        down: 23,
        left: 24,
        right: 25,
      });
      he.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 22,
        down: 23,
        left: 24,
        right: 25,
      });
      he.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 26,
        down: 27,
        left: 28,
        right: 29,
      });
      Sc.REMOTE_DPAD = new bc(0, 1, {
        up: 22,
        down: 23,
        left: 24,
        right: 25,
        threshold: 0.5,
        mode: pj.ONLY_DIGITAL,
      });
      Sc.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 28,
        down: 29,
        left: 30,
        right: 31,
      });
      Sc.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 32,
        down: 33,
        left: 34,
        right: 35,
      });
      ie.LEFT_ANALOG_STICK = new bc(0, 1, {
        up: 21,
        down: 22,
        left: 23,
        right: 24,
      });
      ie.RIGHT_ANALOG_STICK = new bc(2, 3, {
        up: 25,
        down: 26,
        left: 27,
        right: 28,
      });
      on.fromStringMap = (function (a) {
        a = new ea();
        a.h.ANY = -2;
        a.h.A = 65;
        a.h.B = 66;
        a.h.C = 67;
        a.h.D = 68;
        a.h.E = 69;
        a.h.F = 70;
        a.h.G = 71;
        a.h.H = 72;
        a.h.I = 73;
        a.h.J = 74;
        a.h.K = 75;
        a.h.L = 76;
        a.h.M = 77;
        a.h.N = 78;
        a.h.O = 79;
        a.h.P = 80;
        a.h.Q = 81;
        a.h.R = 82;
        a.h.S = 83;
        a.h.T = 84;
        a.h.U = 85;
        a.h.V = 86;
        a.h.W = 87;
        a.h.X = 88;
        a.h.Y = 89;
        a.h.Z = 90;
        a.h.ZERO = 48;
        a.h.ONE = 49;
        a.h.TWO = 50;
        a.h.THREE = 51;
        a.h.FOUR = 52;
        a.h.FIVE = 53;
        a.h.SIX = 54;
        a.h.SEVEN = 55;
        a.h.EIGHT = 56;
        a.h.NINE = 57;
        a.h.PAGEUP = 33;
        a.h.PAGEDOWN = 34;
        a.h.HOME = 36;
        a.h.END = 35;
        a.h.INSERT = 45;
        a.h.ESCAPE = 27;
        a.h.MINUS = 189;
        a.h.PLUS = 187;
        a.h.DELETE = 46;
        a.h.BACKSPACE = 8;
        a.h.LBRACKET = 219;
        a.h.RBRACKET = 221;
        a.h.BACKSLASH = 220;
        a.h.CAPSLOCK = 20;
        a.h.SEMICOLON = 186;
        a.h.QUOTE = 222;
        a.h.ENTER = 13;
        a.h.SHIFT = 16;
        a.h.COMMA = 188;
        a.h.PERIOD = 190;
        a.h.SLASH = 191;
        a.h.GRAVEACCENT = 192;
        a.h.CONTROL = 17;
        a.h.ALT = 18;
        a.h.SPACE = 32;
        a.h.UP = 38;
        a.h.DOWN = 40;
        a.h.LEFT = 37;
        a.h.RIGHT = 39;
        a.h.TAB = 9;
        a.h.PRINTSCREEN = 301;
        a.h.F1 = 112;
        a.h.F2 = 113;
        a.h.F3 = 114;
        a.h.F4 = 115;
        a.h.F5 = 116;
        a.h.F6 = 117;
        a.h.F7 = 118;
        a.h.F8 = 119;
        a.h.F9 = 120;
        a.h.F10 = 121;
        a.h.F11 = 122;
        a.h.F12 = 123;
        a.h.NUMPADZERO = 96;
        a.h.NUMPADONE = 97;
        a.h.NUMPADTWO = 98;
        a.h.NUMPADTHREE = 99;
        a.h.NUMPADFOUR = 100;
        a.h.NUMPADFIVE = 101;
        a.h.NUMPADSIX = 102;
        a.h.NUMPADSEVEN = 103;
        a.h.NUMPADEIGHT = 104;
        a.h.NUMPADNINE = 105;
        a.h.NUMPADMINUS = 109;
        a.h.NUMPADPLUS = 107;
        a.h.NUMPADPERIOD = 110;
        a.h.NUMPADMULTIPLY = 106;
        return a;
      })(this);
      Kd.resourceType = "image/png";
      Kd.resourceName =
        "__ASSET__:bitmap_flixel_input_mouse__FlxMouse_GraphicCursor";
      Kg.maxTouchPoints = 0;
      Ge.resourceType = "image/png";
      Ge.resourceName = "__ASSET__:bitmap_flixel_system_GraphicLogo";
      He.resourceType = "image/png";
      He.resourceName = "__ASSET__:bitmap_flixel_system_GraphicVirtualInput";
      id.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      id.defaultObjectEncoding = 10;
      Xd.FONT_DEFAULT = "Nokia Cellphone FC Small";
      Xd.FONT_DEBUGGER = "Monsterrat";
      Tc._NUM_CACHED_FLX_LIST = 0;
      je.resourceType = "image/png";
      je.resourceName =
        "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoLight";
      ke.resourceType = "image/png";
      ke.resourceName =
        "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoCorners";
      Bd._NUM_CACHED_QUAD_TREES = 0;
      xd.muted = !0;
      Ie.resourceType = "image/png";
      Ie.resourceName =
        "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicFlixel";
      Je.resourceType = "image/png";
      Je.resourceName =
        "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicDrawDebug";
      Ke.resourceType = "image/png";
      Ke.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicLog";
      Le.resourceType = "image/png";
      Le.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicStats";
      Me.resourceType = "image/png";
      Me.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicWatch";
      Ne.resourceType = "image/png";
      Ne.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicBitmapLog";
      Oe.resourceType = "image/png";
      Oe.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicConsole";
      Pe.resourceType = "image/png";
      Pe.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicArrowLeft";
      Qe.resourceType = "image/png";
      Qe.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_GraphicArrowRight";
      le.resourceType = "image/png";
      le.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_GraphicCloseButton";
      me.resourceType = "image/png";
      me.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_GraphicInteractive";
      Vg._tooltips = [];
      ne.resourceType = "image/png";
      ne.resourceName =
        "__ASSET__:bitmap_flixel_system_debug__Window_GraphicWindowHandle";
      Nd.WINDOW_AMOUNT = 0;
      Se.resourceType = "image/png";
      Se.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Eraser_GraphicEraserTool";
      Od.resourceType = "image/png";
      Od.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Mover_GraphicMoverTool";
      Pd.resourceType = "image/png";
      Pd.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools_GraphicCursorCross";
      oe.resourceType = "image/png";
      oe.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformTool";
      pe.resourceType = "image/png";
      pe.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorDefault";
      qe.resourceType = "image/png";
      qe.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleY";
      re.resourceType = "image/png";
      re.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleX";
      se.resourceType = "image/png";
      se.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleXY";
      te.resourceType = "image/png";
      te.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorRotate";
      Te.resourceType = "image/png";
      Te.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMinimizeButton";
      Ue.resourceType = "image/png";
      Ue.resourceName =
        "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMaximizeButton";
      ac.ELASTIC_PERIOD = 0.4;
      Xb.colorLookup = (function (a) {
        a = new ea();
        a.h.TRANSPARENT = 0;
        a.h.WHITE = -1;
        a.h.GRAY = -8355712;
        a.h.BLACK = -16777216;
        a.h.GREEN = -16744448;
        a.h.LIME = -16711936;
        a.h.YELLOW = -256;
        a.h.ORANGE = -23296;
        a.h.RED = -65536;
        a.h.PURPLE = -8388480;
        a.h.BLUE = -16776961;
        a.h.BROWN = -7650029;
        a.h.PINK = -16181;
        a.h.MAGENTA = -65281;
        a.h.CYAN = -16711681;
        return a;
      })(this);
      Xb.COLOR_REGEX = new Ua("^(0x|#)(([A-F0-9]{2}){3,4})$", "i");
      Cc._point = (function (a) {
        a = U._pool.get().set(0, 0);
        a._inPool = !1;
        return a;
      })(this);
      Qf.flashGfxSprite = new fa();
      Qf.flashGfx = Qf.flashGfxSprite.get_graphics();
      Sb._pool = new Oj(Sb);
      ud.USE_CACHE = !1;
      ud.USE_ENUM_INDEX = !1;
      ud.BASE64 =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
      jd.DEFAULT_RESOLVER = new Qj();
      jd.BASE64 =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
      Xg.CHARS =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      Xg.BYTES = gb.ofString(Xg.CHARS);
      Ff.escapes = (function (a) {
        a = new ea();
        a.h.lt = "<";
        a.h.gt = ">";
        a.h.amp = "&";
        a.h.quot = '"';
        a.h.apos = "'";
        return a;
      })(this);
      Uc.LEN_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, -1, -1,
      ];
      Uc.LEN_BASE_VAL_TBL = [
        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
        67, 83, 99, 115, 131, 163, 195, 227, 258,
      ];
      Uc.DIST_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, -1, -1,
      ];
      Uc.DIST_BASE_VAL_TBL = [
        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
        513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577,
      ];
      Uc.CODE_LENGTHS_POS = [
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ];
      dd.urlParser = new Ua(
        "^(?:http[s]?://)?([^:/\\s]+)(:[0-9]+)?((?:/\\w+)*/)([\\w\\-\\.]+[^#?\\s]+)([^#\\s]*)?(#[\\w\\-]+)?$",
        "i"
      );
      Aa.activeRequests = 0;
      Aa.requestLimit = 17;
      Aa.requestQueue = new A();
      Ka.dummyCharacter = "\u007f";
      Ka.windowID = 0;
      jf.DICTIONARY =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(
          ""
        );
      jf.EXTENDED_DICTIONARY = (function (a) {
        a = [];
        for (var b = 0, c = jf.DICTIONARY; b < c.length; ) {
          var d = c[b];
          ++b;
          for (var e = 0, f = jf.DICTIONARY; e < f.length; ) {
            var h = f[e];
            ++e;
            a.push(d + h);
          }
        }
        return a;
      })(this);
      fb.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      Dc.onUpdate = new kc();
      Gd.sensorByID = new lc();
      Gd.sensors = [];
      mc.devices = new lc();
      mc.onConnect = new hm();
      cc.devices = new lc();
      cc.onConnect = new im();
      Fc.onCancel = new ch();
      Fc.onEnd = new ch();
      Fc.onMove = new ch();
      Fc.onStart = new ch();
      W.cache = new lm();
      W.onChange = new kc();
      W.bundlePaths = new ea();
      W.libraries = new ea();
      W.libraryPaths = new ea();
      Pa.throwErrors = !0;
      pg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      nk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: { toJSON: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      Ze.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: {
          toJSON: { SuppressWarnings: ["checkstyle:Dynamic"] },
          _: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      ok.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: { toJSON: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      Cg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: { toJSON: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      Dg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: {
          toJSON: { SuppressWarnings: ["checkstyle:Dynamic"] },
          _: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      ad.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Qa.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Qa.__regexAlign = new Ua("align\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Qa.__regexBreakTag = new Ua("<br\\s*/?>", "gi");
      Qa.__regexBlockIndent = new Ua(
        "blockindent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
        "i"
      );
      Qa.__regexColor = new Ua("color\\s?=\\s?(\"#([^\"]+)\"|'#([^']+)')", "i");
      Qa.__regexEntities = [
        new Ua("&quot;", "g"),
        new Ua("&apos;", "g"),
        new Ua("&amp;", "g"),
        new Ua("&lt;", "g"),
        new Ua("&gt;", "g"),
        new Ua("&nbsp;", "g"),
      ];
      Qa.__regexFace = new Ua("face\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Qa.__regexHTMLTag = new Ua("<.*?>", "g");
      Qa.__regexHref = new Ua("href\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Qa.__regexIndent = new Ua(
        " indent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
        "i"
      );
      Qa.__regexLeading = new Ua(
        "leading\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
        "i"
      );
      Qa.__regexLeftMargin = new Ua(
        "leftmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
        "i"
      );
      Qa.__regexRightMargin = new Ua(
        "rightmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
        "i"
      );
      Qa.__regexSize = new Ua("size\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Qa.__regexTabStops = new Ua(
        "tabstops\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
        "i"
      );
      qg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: { touch: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      qg.__pool = new Kb(
        function () {
          return new qg();
        },
        function (a) {
          a.reset();
        }
      );
      nh.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      ld.__meta__ = {
        fields: {
          __context: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __type: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      pk.__meta__ = {
        fields: {
          cairo: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __matrix3: { SuppressWarnings: ["checkstyle:Dynamic"] },
          applyMatrix: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __setBlendModeCairo: { SuppressWarnings: ["checkstyle:Dynamic"] },
          _: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      $e.__meta__ = {
        fields: {
          context: { SuppressWarnings: ["checkstyle:Dynamic"] },
          applySmoothing: { SuppressWarnings: ["checkstyle:Dynamic"] },
          setTransform: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __setBlendModeContext: { SuppressWarnings: ["checkstyle:Dynamic"] },
          _: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      dh.__meta__ = {
        fields: {
          element: { SuppressWarnings: ["checkstyle:Dynamic"] },
          _: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      pd.__meta__ = {
        fields: {
          overrideBlendMode: {
            SuppressWarnings: ["checkstyle:FieldDocComment"],
          },
        },
      };
      kf.__meta__ = {
        statics: {
          create: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        },
        fields: { parameters: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      kf.__rootURL = "undefined" != typeof window ? window.document.URL : "";
      Ta.__meta__ = {
        fields: {
          gl: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __gl: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __matrix: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __projection: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __projectionFlipped: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      Ta.__alphaValue = [1];
      Ta.__colorMultipliersValue = [0, 0, 0, 0];
      Ta.__colorOffsetsValue = [0, 0, 0, 0];
      Ta.__emptyColorValue = [0, 0, 0, 0];
      Ta.__hasColorTransformValue = [!1];
      Ta.__scissorRectangle = new ma();
      Ta.__textureSizeValue = [0, 0];
      pi.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: { onComplete: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      tk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Pi.__meta__ = {
        fields: {
          index: { SuppressWarnings: ["checkstyle:Dynamic"] },
          name: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        },
      };
      Jg.__meta__ = {
        fields: {
          index: { SuppressWarnings: ["checkstyle:Dynamic"] },
          name: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        },
      };
      hh.__meta__ = {
        fields: {
          __broadcastEvent: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __dispatchEvent: {
            SuppressWarnings: [["checkstyle:Dynamic", "checkstyle:LeftCurly"]],
          },
          __dispatchStack: {
            SuppressWarnings: [["checkstyle:Dynamic", "checkstyle:LeftCurly"]],
          },
          __dispatchTarget: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __handleError: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      Bg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: { _: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      md.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: { o: { SuppressWarnings: ["checkstyle:Dynamic"] } },
      };
      md.empty = new md();
      w.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        statics: {
          windingRule: { SuppressWarnings: ["checkstyle:Dynamic"] },
          createBitmapFill: { SuppressWarnings: ["checkstyle:Dynamic"] },
          createGradientPattern: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      w.fillCommands = new md();
      w.strokeCommands = new md();
      S.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Cf.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      xk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Fb.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Fb.blankBitmapData = new J(1, 1, !1, 0);
      Fb.tempColorTransform = new Bb(1, 1, 1, 1, 0, 0, 0, 0);
      gh.opaqueBitmapData = new J(1, 1, !1, 0);
      Df.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      fi.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Kc.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Yk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      dg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      fc.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      fc.__regexColor = new Ua("color=(\"#([^\"]+)\"|'#([^']+)')", "i");
      fc.__regexFace = new Ua("face=(\"([^\"]+)\"|'([^']+)')", "i");
      fc.__regexFont = new Ua("<font ([^>]+)>", "gi");
      fc.__regexCloseFont = new Ua("</font>", "gi");
      fc.__regexSize = new Ua("size=(\"([^\"]+)\"|'([^']+)')", "i");
      mf.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      tg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      rk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
        fields: {
          overrideIntValues: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      lb.__glDepthStencil = -1;
      lb.__glMaxTextureMaxAnisotropy = -1;
      lb.__glMaxViewportDims = -1;
      lb.__glMemoryCurrentAvailable = -1;
      lb.__glMemoryTotalAvailable = -1;
      lb.__glTextureMaxAnisotropy = -1;
      Ak.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      ii.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      gi.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Vc.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Vc.limitedProfile = !0;
      ih.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Bk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      jh.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      vg.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      pb.__meta__ = {
        fields: {
          __textureContext: { SuppressWarnings: ["checkstyle:Dynamic"] },
          __getGLFramebuffer: { SuppressWarnings: ["checkstyle:Dynamic"] },
        },
      };
      ph.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      oh.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      tf.__meta__ = {
        fields: { clone: { SuppressWarnings: ["checkstyle:FieldDocComment"] } },
      };
      yd.__soundChannels = [];
      yd.__soundTransform = new tf();
      Oc.defaultObjectEncoding = 10;
      Xf.followRedirects = !0;
      Xf.idleTimeout = 0;
      Xf.manageCookies = !1;
      Gb.currentX = 0;
      Gb.currentY = 1;
      Gb.currentZ = 0;
      Gb.defaultInterval = 34;
      Gb.initialized = !1;
      Gb.supported = !1;
      eh.currentDomain = new eh(null);
      zc.__meta__ = {
        fields: { clone: { SuppressWarnings: ["checkstyle:FieldDocComment"] } },
      };
      vb.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Gk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      sc.__cursor = "auto";
      ka.__meta__ = {
        obj: {
          SuppressWarnings: [
            ["checkstyle:ConstantName", "checkstyle:FieldDocComment"],
          ],
        },
      };
      ka.OPMAP = new ea();
      ka.REGMAP = new ea();
      ka.SAMPLEMAP = new ea();
      ka.initialized = !1;
      hb.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Ed.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Jb.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      la.cache = new Ik();
      la.dispatcher = new sa();
      Jk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      Kk.__meta__ = {
        obj: { SuppressWarnings: ["checkstyle:FieldDocComment"] },
      };
      cb.main();
    })(
      "undefined" != typeof t
        ? t
        : "undefined" != typeof window
        ? window
        : "undefined" != typeof self
        ? self
        : this,
      "undefined" != typeof window
        ? window
        : "undefined" != typeof F
        ? F
        : "undefined" != typeof self
        ? self
        : this
    );
  };
  Q.lime.embed = function (E) {
    var F = {},
      B = Q.lime.$scripts[E];
    if (!B) throw Error('Cannot find project name "' + E + '"');
    B(F, t);
    for (var L in F) Q[L] = Q[L] || F[L];
    (B = F.lime || window.lime) &&
      B.embed &&
      this != B.embed &&
      B.embed.apply(B, arguments);
    return F;
  };
  "function" == typeof define &&
    define.amd &&
    (define([], function () {
      return Q.lime;
    }),
    (define.__amd = define.amd),
    (define.amd = null));
})(
  "undefined" != typeof exports
    ? exports
    : "function" == typeof define && define.amd
    ? {}
    : "undefined" != typeof window
    ? window
    : "undefined" != typeof self
    ? self
    : this,
  "undefined" != typeof window
    ? window
    : "undefined" != typeof global
    ? global
    : "undefined" != typeof self
    ? self
    : this
);
!(function () {
  var Q = function () {
    this.init();
  };
  Q.prototype = {
    init: function () {
      var l = this || t;
      return (
        (l._counter = 1e3),
        (l._html5AudioPool = []),
        (l.html5PoolSize = 10),
        (l._codecs = {}),
        (l._howls = []),
        (l._muted = !1),
        (l._volume = 1),
        (l._canPlayEvent = "canplaythrough"),
        (l._navigator =
          "undefined" != typeof window && window.navigator
            ? window.navigator
            : null),
        (l.masterGain = null),
        (l.noAudio = !1),
        (l.usingWebAudio = !0),
        (l.autoSuspend = !0),
        (l.ctx = null),
        (l.autoUnlock = !0),
        l._setup(),
        l
      );
    },
    volume: function (l) {
      var q = this || t;
      if (
        ((l = parseFloat(l)), q.ctx || g(), void 0 !== l && 0 <= l && 1 >= l)
      ) {
        if (((q._volume = l), q._muted)) return q;
        q.usingWebAudio &&
          q.masterGain.gain.setValueAtTime(l, t.ctx.currentTime);
        for (var r = 0; r < q._howls.length; r++)
          if (!q._howls[r]._webAudio)
            for (
              var T = q._howls[r]._getSoundIds(), ca = 0;
              ca < T.length;
              ca++
            ) {
              var ra = q._howls[r]._soundById(T[ca]);
              ra && ra._node && (ra._node.volume = ra._volume * l);
            }
        return q;
      }
      return q._volume;
    },
    mute: function (l) {
      var q = this || t;
      q.ctx || g();
      q._muted = l;
      q.usingWebAudio &&
        q.masterGain.gain.setValueAtTime(l ? 0 : q._volume, t.ctx.currentTime);
      for (var r = 0; r < q._howls.length; r++)
        if (!q._howls[r]._webAudio)
          for (
            var T = q._howls[r]._getSoundIds(), ca = 0;
            ca < T.length;
            ca++
          ) {
            var ra = q._howls[r]._soundById(T[ca]);
            ra && ra._node && (ra._node.muted = !!l || ra._muted);
          }
      return q;
    },
    unload: function () {
      for (var l = this || t, q = l._howls.length - 1; 0 <= q; q--)
        l._howls[q].unload();
      return (
        l.usingWebAudio &&
          l.ctx &&
          void 0 !== l.ctx.close &&
          (l.ctx.close(), (l.ctx = null), g()),
        l
      );
    },
    codecs: function (l) {
      return (this || t)._codecs[l.replace(/^x-/, "")];
    },
    _setup: function () {
      var l = this || t;
      if (
        ((l.state = l.ctx ? l.ctx.state || "suspended" : "suspended"),
        l._autoSuspend(),
        !l.usingWebAudio)
      )
        if ("undefined" != typeof Audio)
          try {
            var g = new Audio();
            void 0 === g.oncanplaythrough && (l._canPlayEvent = "canplay");
          } catch (y) {
            l.noAudio = !0;
          }
        else l.noAudio = !0;
      try {
        (g = new Audio()), g.muted && (l.noAudio = !0);
      } catch (y) {}
      return l.noAudio || l._setupCodecs(), l;
    },
    _setupCodecs: function () {
      var l = this || t,
        g = null;
      try {
        g = "undefined" != typeof Audio ? new Audio() : null;
      } catch (ca) {
        return l;
      }
      if (!g || "function" != typeof g.canPlayType) return l;
      var q = g.canPlayType("audio/mpeg;").replace(/^no$/, ""),
        r = l._navigator && l._navigator.userAgent.match(/OPR\/([0-6].)/g);
      r = r && 33 > parseInt(r[0].split("/")[1], 10);
      return (
        (l._codecs = {
          mp3: !(r || (!q && !g.canPlayType("audio/mp3;").replace(/^no$/, ""))),
          mpeg: !!q,
          opus: !!g.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
          ogg: !!g
            .canPlayType('audio/ogg; codecs="vorbis"')
            .replace(/^no$/, ""),
          oga: !!g
            .canPlayType('audio/ogg; codecs="vorbis"')
            .replace(/^no$/, ""),
          wav: !!g.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
          aac: !!g.canPlayType("audio/aac;").replace(/^no$/, ""),
          caf: !!g.canPlayType("audio/x-caf;").replace(/^no$/, ""),
          m4a: !!(
            g.canPlayType("audio/x-m4a;") ||
            g.canPlayType("audio/m4a;") ||
            g.canPlayType("audio/aac;")
          ).replace(/^no$/, ""),
          mp4: !!(
            g.canPlayType("audio/x-mp4;") ||
            g.canPlayType("audio/mp4;") ||
            g.canPlayType("audio/aac;")
          ).replace(/^no$/, ""),
          weba: !!g
            .canPlayType('audio/webm; codecs="vorbis"')
            .replace(/^no$/, ""),
          webm: !!g
            .canPlayType('audio/webm; codecs="vorbis"')
            .replace(/^no$/, ""),
          dolby: !!g
            .canPlayType('audio/mp4; codecs="ec-3"')
            .replace(/^no$/, ""),
          flac: !!(
            g.canPlayType("audio/x-flac;") || g.canPlayType("audio/flac;")
          ).replace(/^no$/, ""),
        }),
        l
      );
    },
    _unlockAudio: function () {
      var l = this || t,
        g =
          /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome|Safari/i.test(
            l._navigator && l._navigator.userAgent
          );
      if (!l._audioUnlocked && l.ctx && g) {
        l._audioUnlocked = !1;
        l.autoUnlock = !1;
        l._mobileUnloaded ||
          44100 === l.ctx.sampleRate ||
          ((l._mobileUnloaded = !0), l.unload());
        l._scratchBuffer = l.ctx.createBuffer(1, 1, 22050);
        var q = function (g) {
          for (g = 0; g < l.html5PoolSize; g++) {
            var r = new Audio();
            r._unlocked = !0;
            l._releaseHtml5Audio(r);
          }
          for (g = 0; g < l._howls.length; g++)
            if (!l._howls[g]._webAudio) {
              r = l._howls[g]._getSoundIds();
              for (var y = 0; y < r.length; y++) {
                var z = l._howls[g]._soundById(r[y]);
                z &&
                  z._node &&
                  !z._node._unlocked &&
                  ((z._node._unlocked = !0), z._node.load());
              }
            }
          l._autoResume();
          var t = l.ctx.createBufferSource();
          t.buffer = l._scratchBuffer;
          t.connect(l.ctx.destination);
          void 0 === t.start ? t.noteOn(0) : t.start(0);
          "function" == typeof l.ctx.resume && l.ctx.resume();
          t.onended = function () {
            t.disconnect(0);
            l._audioUnlocked = !0;
            document.removeEventListener("touchstart", q, !0);
            document.removeEventListener("touchend", q, !0);
            document.removeEventListener("click", q, !0);
            for (var g = 0; g < l._howls.length; g++)
              l._howls[g]._emit("unlock");
          };
        };
        return (
          document.addEventListener("touchstart", q, !0),
          document.addEventListener("touchend", q, !0),
          document.addEventListener("click", q, !0),
          l
        );
      }
    },
    _obtainHtml5Audio: function () {
      var l = this || t;
      if (l._html5AudioPool.length) return l._html5AudioPool.pop();
      l = new Audio().play();
      return (
        l &&
          "undefined" != typeof Promise &&
          (l instanceof Promise || "function" == typeof l.then) &&
          l.catch(function () {
            console.warn(
              "HTML5 Audio pool exhausted, returning potentially locked audio object."
            );
          }),
        new Audio()
      );
    },
    _releaseHtml5Audio: function (l) {
      var g = this || t;
      return l._unlocked && g._html5AudioPool.push(l), g;
    },
    _autoSuspend: function () {
      var l = this;
      if (
        l.autoSuspend &&
        l.ctx &&
        void 0 !== l.ctx.suspend &&
        t.usingWebAudio
      ) {
        for (var g = 0; g < l._howls.length; g++)
          if (l._howls[g]._webAudio)
            for (var q = 0; q < l._howls[g]._sounds.length; q++)
              if (!l._howls[g]._sounds[q]._paused) return l;
        return (
          l._suspendTimer && clearTimeout(l._suspendTimer),
          (l._suspendTimer = setTimeout(function () {
            l.autoSuspend &&
              ((l._suspendTimer = null),
              (l.state = "suspending"),
              l.ctx.suspend().then(function () {
                l.state = "suspended";
                l._resumeAfterSuspend &&
                  (delete l._resumeAfterSuspend, l._autoResume());
              }));
          }, 3e4)),
          l
        );
      }
    },
    _autoResume: function () {
      var l = this;
      if (l.ctx && void 0 !== l.ctx.resume && t.usingWebAudio)
        return (
          "running" === l.state && l._suspendTimer
            ? (clearTimeout(l._suspendTimer), (l._suspendTimer = null))
            : "suspended" === l.state
            ? (l.ctx.resume().then(function () {
                l.state = "running";
                for (var g = 0; g < l._howls.length; g++)
                  l._howls[g]._emit("resume");
              }),
              l._suspendTimer &&
                (clearTimeout(l._suspendTimer), (l._suspendTimer = null)))
            : "suspending" === l.state && (l._resumeAfterSuspend = !0),
          l
        );
    },
  };
  var t = new Q(),
    E = function (l) {
      if (!l.src || 0 === l.src.length)
        return void console.error(
          "An array of source files must be passed with any new Howl."
        );
      this.init(l);
    };
  E.prototype = {
    init: function (l) {
      var q = this;
      return (
        t.ctx || g(),
        (q._autoplay = l.autoplay || !1),
        (q._format = "string" != typeof l.format ? l.format : [l.format]),
        (q._html5 = l.html5 || !1),
        (q._muted = l.mute || !1),
        (q._loop = l.loop || !1),
        (q._pool = l.pool || 5),
        (q._preload = "boolean" != typeof l.preload || l.preload),
        (q._rate = l.rate || 1),
        (q._sprite = l.sprite || {}),
        (q._src = "string" != typeof l.src ? l.src : [l.src]),
        (q._volume = void 0 !== l.volume ? l.volume : 1),
        (q._xhrWithCredentials = l.xhrWithCredentials || !1),
        (q._duration = 0),
        (q._state = "unloaded"),
        (q._sounds = []),
        (q._endTimers = {}),
        (q._queue = []),
        (q._playLock = !1),
        (q._onend = l.onend ? [{ fn: l.onend }] : []),
        (q._onfade = l.onfade ? [{ fn: l.onfade }] : []),
        (q._onload = l.onload ? [{ fn: l.onload }] : []),
        (q._onloaderror = l.onloaderror ? [{ fn: l.onloaderror }] : []),
        (q._onplayerror = l.onplayerror ? [{ fn: l.onplayerror }] : []),
        (q._onpause = l.onpause ? [{ fn: l.onpause }] : []),
        (q._onplay = l.onplay ? [{ fn: l.onplay }] : []),
        (q._onstop = l.onstop ? [{ fn: l.onstop }] : []),
        (q._onmute = l.onmute ? [{ fn: l.onmute }] : []),
        (q._onvolume = l.onvolume ? [{ fn: l.onvolume }] : []),
        (q._onrate = l.onrate ? [{ fn: l.onrate }] : []),
        (q._onseek = l.onseek ? [{ fn: l.onseek }] : []),
        (q._onunlock = l.onunlock ? [{ fn: l.onunlock }] : []),
        (q._onresume = []),
        (q._webAudio = t.usingWebAudio && !q._html5),
        void 0 !== t.ctx && t.ctx && t.autoUnlock && t._unlockAudio(),
        t._howls.push(q),
        q._autoplay &&
          q._queue.push({
            event: "play",
            action: function () {
              q.play();
            },
          }),
        q._preload && q.load(),
        q
      );
    },
    load: function () {
      var l = null;
      if (t.noAudio)
        return void this._emit("loaderror", null, "No audio support.");
      "string" == typeof this._src && (this._src = [this._src]);
      for (var g = 0; g < this._src.length; g++) {
        var q;
        if (this._format && this._format[g]) var r = this._format[g];
        else {
          if ("string" != typeof (q = this._src[g])) {
            this._emit(
              "loaderror",
              null,
              "Non-string found in selected audio sources - ignoring."
            );
            continue;
          }
          (r = /^data:audio\/([^;,]+);/i.exec(q)) ||
            (r = /\.([^.]+)$/.exec(q.split("?", 1)[0]));
          r && (r = r[1].toLowerCase());
        }
        if (
          (r ||
            console.warn(
              'No file extension was found. Consider using the "format" property or specify an extension.'
            ),
          r && t.codecs(r))
        ) {
          l = this._src[g];
          break;
        }
      }
      return l
        ? ((this._src = l),
          (this._state = "loading"),
          "https:" === window.location.protocol &&
            "http:" === l.slice(0, 5) &&
            ((this._html5 = !0), (this._webAudio = !1)),
          new F(this),
          this._webAudio && L(this),
          this)
        : void this._emit(
            "loaderror",
            null,
            "No codec support for selected audio sources."
          );
    },
    play: function (l, g) {
      var q = this,
        r = null;
      if ("number" == typeof l) (r = l), (l = null);
      else {
        if ("string" == typeof l && "loaded" === q._state && !q._sprite[l])
          return null;
        if (void 0 === l && ((l = "__default"), !q._playLock)) {
          for (var z = 0, ra = 0; ra < q._sounds.length; ra++)
            q._sounds[ra]._paused &&
              !q._sounds[ra]._ended &&
              (z++, (r = q._sounds[ra]._id));
          1 === z ? (l = null) : (r = null);
        }
      }
      var B = r ? q._soundById(r) : q._inactiveSound();
      if (!B) return null;
      if ((r && !l && (l = B._sprite || "__default"), "loaded" !== q._state)) {
        B._sprite = l;
        B._ended = !1;
        var E = B._id;
        return (
          q._queue.push({
            event: "play",
            action: function () {
              q.play(E);
            },
          }),
          E
        );
      }
      if (r && !B._paused) return g || q._loadQueue("play"), B._id;
      q._webAudio && t._autoResume();
      var F = Math.max(0, 0 < B._seek ? B._seek : q._sprite[l][0] / 1e3),
        L = Math.max(0, (q._sprite[l][0] + q._sprite[l][1]) / 1e3 - F),
        H = (1e3 * L) / Math.abs(B._rate),
        Q = q._sprite[l][0] / 1e3,
        oa = (q._sprite[l][0] + q._sprite[l][1]) / 1e3,
        qb = !(!B._loop && !q._sprite[l][2]);
      B._sprite = l;
      B._ended = !1;
      var Y = function () {
        B._paused = !1;
        B._seek = F;
        B._start = Q;
        B._stop = oa;
        B._loop = qb;
      };
      if (F >= oa) return void q._ended(B);
      var wa = B._node;
      if (q._webAudio)
        (r = function () {
          q._playLock = !1;
          Y();
          q._refreshBuffer(B);
          wa.gain.setValueAtTime(
            B._muted || q._muted ? 0 : B._volume,
            t.ctx.currentTime
          );
          B._playStart = t.ctx.currentTime;
          void 0 === wa.bufferSource.start
            ? B._loop
              ? wa.bufferSource.noteGrainOn(0, F, 86400)
              : wa.bufferSource.noteGrainOn(0, F, L)
            : B._loop
            ? wa.bufferSource.start(0, F, 86400)
            : wa.bufferSource.start(0, F, L);
          H !== 1 / 0 &&
            (q._endTimers[B._id] = setTimeout(q._ended.bind(q, B), H));
          g ||
            setTimeout(function () {
              q._emit("play", B._id);
              q._loadQueue();
            }, 0);
        }),
          "running" === t.state
            ? r()
            : ((q._playLock = !0), q.once("resume", r), q._clearTimer(B._id));
      else {
        var kb = function () {
          wa.currentTime = F;
          wa.muted = B._muted || q._muted || t._muted || wa.muted;
          wa.volume = B._volume * t.volume();
          wa.playbackRate = B._rate;
          try {
            var r = wa.play();
            if (
              (r &&
              "undefined" != typeof Promise &&
              (r instanceof Promise || "function" == typeof r.then)
                ? ((q._playLock = !0),
                  Y(),
                  r
                    .then(function () {
                      q._playLock = !1;
                      wa._unlocked = !0;
                      g || (q._emit("play", B._id), q._loadQueue());
                    })
                    .catch(function () {
                      q._playLock = !1;
                      q._emit(
                        "playerror",
                        B._id,
                        "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."
                      );
                      B._ended = !0;
                      B._paused = !0;
                    }))
                : g ||
                  ((q._playLock = !1),
                  Y(),
                  q._emit("play", B._id),
                  q._loadQueue()),
              (wa.playbackRate = B._rate),
              wa.paused)
            )
              return void q._emit(
                "playerror",
                B._id,
                "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."
              );
            "__default" !== l || B._loop
              ? (q._endTimers[B._id] = setTimeout(q._ended.bind(q, B), H))
              : ((q._endTimers[B._id] = function () {
                  q._ended(B);
                  wa.removeEventListener("ended", q._endTimers[B._id], !1);
                }),
                wa.addEventListener("ended", q._endTimers[B._id], !1));
          } catch (Hb) {
            q._emit("playerror", B._id, Hb);
          }
        };
        r =
          (window && window.ejecta) ||
          (!wa.readyState && t._navigator.isCocoonJS);
        if (3 <= wa.readyState || r) kb();
        else {
          q._playLock = !0;
          var ua = function () {
            kb();
            wa.removeEventListener(t._canPlayEvent, ua, !1);
          };
          wa.addEventListener(t._canPlayEvent, ua, !1);
          q._clearTimer(B._id);
        }
      }
      return B._id;
    },
    pause: function (l, g) {
      var q = this;
      if ("loaded" !== q._state || q._playLock)
        return (
          q._queue.push({
            event: "pause",
            action: function () {
              q.pause(l);
            },
          }),
          q
        );
      for (var r = q._getSoundIds(l), z = 0; z < r.length; z++) {
        q._clearTimer(r[z]);
        var t = q._soundById(r[z]);
        if (
          t &&
          !t._paused &&
          ((t._seek = q.seek(r[z])),
          (t._rateSeek = 0),
          (t._paused = !0),
          q._stopFade(r[z]),
          t._node)
        )
          if (q._webAudio) {
            if (!t._node.bufferSource) continue;
            void 0 === t._node.bufferSource.stop
              ? t._node.bufferSource.noteOff(0)
              : t._node.bufferSource.stop(0);
            q._cleanBuffer(t._node);
          } else
            (isNaN(t._node.duration) && t._node.duration !== 1 / 0) ||
              t._node.pause();
        g || q._emit("pause", t ? t._id : null);
      }
      return q;
    },
    stop: function (l, g) {
      var q = this;
      if ("loaded" !== q._state || q._playLock)
        return (
          q._queue.push({
            event: "stop",
            action: function () {
              q.stop(l);
            },
          }),
          q
        );
      for (var r = q._getSoundIds(l), z = 0; z < r.length; z++) {
        q._clearTimer(r[z]);
        var t = q._soundById(r[z]);
        t &&
          ((t._seek = t._start || 0),
          (t._rateSeek = 0),
          (t._paused = !0),
          (t._ended = !0),
          q._stopFade(r[z]),
          t._node &&
            (q._webAudio
              ? t._node.bufferSource &&
                (void 0 === t._node.bufferSource.stop
                  ? t._node.bufferSource.noteOff(0)
                  : t._node.bufferSource.stop(0),
                q._cleanBuffer(t._node))
              : (isNaN(t._node.duration) && t._node.duration !== 1 / 0) ||
                ((t._node.currentTime = t._start || 0), t._node.pause())),
          g || q._emit("stop", t._id));
      }
      return q;
    },
    mute: function (l, g) {
      var q = this;
      if ("loaded" !== q._state || q._playLock)
        return (
          q._queue.push({
            event: "mute",
            action: function () {
              q.mute(l, g);
            },
          }),
          q
        );
      if (void 0 === g) {
        if ("boolean" != typeof l) return q._muted;
        q._muted = l;
      }
      for (var r = q._getSoundIds(g), z = 0; z < r.length; z++) {
        var B = q._soundById(r[z]);
        B &&
          ((B._muted = l),
          B._interval && q._stopFade(B._id),
          q._webAudio && B._node
            ? B._node.gain.setValueAtTime(l ? 0 : B._volume, t.ctx.currentTime)
            : B._node && (B._node.muted = !!t._muted || l),
          q._emit("mute", B._id));
      }
      return q;
    },
    volume: function () {
      var l,
        g,
        q = this,
        r = arguments;
      if (0 === r.length) return q._volume;
      1 === r.length || (2 === r.length && void 0 === r[1])
        ? 0 <= q._getSoundIds().indexOf(r[0])
          ? (g = parseInt(r[0], 10))
          : (l = parseFloat(r[0]))
        : 2 <= r.length && ((l = parseFloat(r[0])), (g = parseInt(r[1], 10)));
      var B;
      if (!(void 0 !== l && 0 <= l && 1 >= l))
        return (B = g ? q._soundById(g) : q._sounds[0]), B ? B._volume : 0;
      if ("loaded" !== q._state || q._playLock)
        return (
          q._queue.push({
            event: "volume",
            action: function () {
              q.volume.apply(q, r);
            },
          }),
          q
        );
      void 0 === g && (q._volume = l);
      g = q._getSoundIds(g);
      for (var E = 0; E < g.length; E++)
        (B = q._soundById(g[E])) &&
          ((B._volume = l),
          r[2] || q._stopFade(g[E]),
          q._webAudio && B._node && !B._muted
            ? B._node.gain.setValueAtTime(l, t.ctx.currentTime)
            : B._node && !B._muted && (B._node.volume = l * t.volume()),
          q._emit("volume", B._id));
      return q;
    },
    fade: function (l, g, q, r) {
      var z = this;
      if ("loaded" !== z._state || z._playLock)
        return (
          z._queue.push({
            event: "fade",
            action: function () {
              z.fade(l, g, q, r);
            },
          }),
          z
        );
      l = parseFloat(l);
      g = parseFloat(g);
      q = parseFloat(q);
      z.volume(l, r);
      for (var y = z._getSoundIds(r), B = 0; B < y.length; B++) {
        var T = z._soundById(y[B]);
        if (T) {
          if ((r || z._stopFade(y[B]), z._webAudio && !T._muted)) {
            var E = t.ctx.currentTime,
              F = E + q / 1e3;
            T._volume = l;
            T._node.gain.setValueAtTime(l, E);
            T._node.gain.linearRampToValueAtTime(g, F);
          }
          z._startFadeInterval(T, l, g, q, y[B], void 0 === r);
        }
      }
      return z;
    },
    _startFadeInterval: function (l, g, q, r, t, B) {
      var z = this,
        y = g,
        T = q - g;
      t = Math.abs(T / 0.01);
      t = Math.max(4, 0 < t ? r / t : r);
      var E = Date.now();
      l._fadeTo = q;
      l._interval = setInterval(function () {
        var t = (Date.now() - E) / r;
        E = Date.now();
        y += T * t;
        y = Math.max(0, y);
        y = Math.min(1, y);
        y = Math.round(100 * y) / 100;
        z._webAudio ? (l._volume = y) : z.volume(y, l._id, !0);
        B && (z._volume = y);
        ((q < g && y <= q) || (q > g && y >= q)) &&
          (clearInterval(l._interval),
          (l._interval = null),
          (l._fadeTo = null),
          z.volume(q, l._id),
          z._emit("fade", l._id));
      }, t);
    },
    _stopFade: function (l) {
      var g = this._soundById(l);
      return (
        g &&
          g._interval &&
          (this._webAudio &&
            g._node.gain.cancelScheduledValues(t.ctx.currentTime),
          clearInterval(g._interval),
          (g._interval = null),
          this.volume(g._fadeTo, l),
          (g._fadeTo = null),
          this._emit("fade", l)),
        this
      );
    },
    loop: function () {
      var l,
        g,
        q,
        r = arguments;
      if (0 === r.length) return this._loop;
      if (1 === r.length) {
        if ("boolean" != typeof r[0])
          return !!(q = this._soundById(parseInt(r[0], 10))) && q._loop;
        this._loop = l = r[0];
      } else 2 === r.length && ((l = r[0]), (g = parseInt(r[1], 10)));
      g = this._getSoundIds(g);
      for (r = 0; r < g.length; r++)
        (q = this._soundById(g[r])) &&
          ((q._loop = l),
          this._webAudio &&
            q._node &&
            q._node.bufferSource &&
            ((q._node.bufferSource.loop = l),
            l &&
              ((q._node.bufferSource.loopStart = q._start || 0),
              (q._node.bufferSource.loopEnd = q._stop))));
      return this;
    },
    rate: function () {
      var l,
        g,
        q = this,
        r = arguments;
      0 === r.length
        ? (g = q._sounds[0]._id)
        : 1 === r.length
        ? 0 <= q._getSoundIds().indexOf(r[0])
          ? (g = parseInt(r[0], 10))
          : (l = parseFloat(r[0]))
        : 2 === r.length && ((l = parseFloat(r[0])), (g = parseInt(r[1], 10)));
      var B;
      if ("number" != typeof l)
        return (B = q._soundById(g)), B ? B._rate : q._rate;
      if ("loaded" !== q._state || q._playLock)
        return (
          q._queue.push({
            event: "rate",
            action: function () {
              q.rate.apply(q, r);
            },
          }),
          q
        );
      void 0 === g && (q._rate = l);
      g = q._getSoundIds(g);
      for (var E = 0; E < g.length; E++)
        if ((B = q._soundById(g[E]))) {
          q.playing(g[E]) &&
            ((B._rateSeek = q.seek(g[E])),
            (B._playStart = q._webAudio ? t.ctx.currentTime : B._playStart));
          B._rate = l;
          q._webAudio && B._node && B._node.bufferSource
            ? B._node.bufferSource.playbackRate.setValueAtTime(
                l,
                t.ctx.currentTime
              )
            : B._node && (B._node.playbackRate = l);
          var F = q.seek(g[E]);
          F =
            (1e3 *
              ((q._sprite[B._sprite][0] + q._sprite[B._sprite][1]) / 1e3 - F)) /
            Math.abs(B._rate);
          (!q._endTimers[g[E]] && B._paused) ||
            (q._clearTimer(g[E]),
            (q._endTimers[g[E]] = setTimeout(q._ended.bind(q, B), F)));
          q._emit("rate", B._id);
        }
      return q;
    },
    seek: function () {
      var l,
        g,
        q = this,
        r = arguments;
      0 === r.length
        ? (g = q._sounds[0]._id)
        : 1 === r.length
        ? 0 <= q._getSoundIds().indexOf(r[0])
          ? (g = parseInt(r[0], 10))
          : q._sounds.length && ((g = q._sounds[0]._id), (l = parseFloat(r[0])))
        : 2 === r.length && ((l = parseFloat(r[0])), (g = parseInt(r[1], 10)));
      if (void 0 === g) return q;
      if ("loaded" !== q._state || q._playLock)
        return (
          q._queue.push({
            event: "seek",
            action: function () {
              q.seek.apply(q, r);
            },
          }),
          q
        );
      var B = q._soundById(g);
      if (B) {
        if (!("number" == typeof l && 0 <= l))
          return q._webAudio
            ? ((l = q.playing(g) ? t.ctx.currentTime - B._playStart : 0),
              B._seek +
                ((B._rateSeek ? B._rateSeek - B._seek : 0) +
                  l * Math.abs(B._rate)))
            : B._node.currentTime;
        var E = q.playing(g);
        E && q.pause(g, !0);
        B._seek = l;
        B._ended = !1;
        q._clearTimer(g);
        q._webAudio ||
          !B._node ||
          isNaN(B._node.duration) ||
          (B._node.currentTime = l);
        var F = function () {
          q._emit("seek", g);
          E && q.play(g, !0);
        };
        if (E && !q._webAudio) {
          var L = function () {
            q._playLock ? setTimeout(L, 0) : F();
          };
          setTimeout(L, 0);
        } else F();
      }
      return q;
    },
    playing: function (l) {
      if ("number" == typeof l)
        return (l = this._soundById(l)), !!l && !l._paused;
      for (l = 0; l < this._sounds.length; l++)
        if (!this._sounds[l]._paused) return !0;
      return !1;
    },
    duration: function (l) {
      var g = this._duration;
      l = this._soundById(l);
      return l && (g = this._sprite[l._sprite][1] / 1e3), g;
    },
    state: function () {
      return this._state;
    },
    unload: function () {
      for (var l = this._sounds, g = 0; g < l.length; g++)
        (l[g]._paused || this.stop(l[g]._id), this._webAudio) ||
          (/MSIE |Trident\//.test(t._navigator && t._navigator.userAgent) ||
            (l[g]._node.src =
              "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"),
          l[g]._node.removeEventListener("error", l[g]._errorFn, !1),
          l[g]._node.removeEventListener(t._canPlayEvent, l[g]._loadFn, !1),
          t._releaseHtml5Audio(l[g]._node)),
          delete l[g]._node,
          this._clearTimer(l[g]._id);
      g = t._howls.indexOf(this);
      0 <= g && t._howls.splice(g, 1);
      l = !0;
      for (g = 0; g < t._howls.length; g++)
        if (
          t._howls[g]._src === this._src ||
          0 <= this._src.indexOf(t._howls[g]._src)
        ) {
          l = !1;
          break;
        }
      return (
        B && l && delete B[this._src],
        (t.noAudio = !1),
        (this._state = "unloaded"),
        (this._sounds = []),
        null
      );
    },
    on: function (l, g, q, r) {
      l = this["_on" + l];
      return (
        "function" == typeof g &&
          l.push(r ? { id: q, fn: g, once: r } : { id: q, fn: g }),
        this
      );
    },
    off: function (l, g, q) {
      var r = this["_on" + l];
      if (("number" == typeof g && ((q = g), (g = null)), g || q))
        for (l = 0; l < r.length; l++) {
          var z = q === r[l].id;
          if ((g === r[l].fn && z) || (!g && z)) {
            r.splice(l, 1);
            break;
          }
        }
      else if (l) this["_on" + l] = [];
      else
        for (g = Object.keys(this), l = 0; l < g.length; l++)
          0 === g[l].indexOf("_on") &&
            Array.isArray(this[g[l]]) &&
            (this[g[l]] = []);
      return this;
    },
    once: function (l, g, q) {
      return this.on(l, g, q, 1), this;
    },
    _emit: function (g, q, r) {
      for (var l = this["_on" + g], z = l.length - 1; 0 <= z; z--)
        (l[z].id && l[z].id !== q && "load" !== g) ||
          (setTimeout(
            function (g) {
              g.call(this, q, r);
            }.bind(this, l[z].fn),
            0
          ),
          l[z].once && this.off(g, l[z].fn, l[z].id));
      return this._loadQueue(g), this;
    },
    _loadQueue: function (g) {
      if (0 < this._queue.length) {
        var l = this._queue[0];
        l.event === g && (this._queue.shift(), this._loadQueue());
        g || l.action();
      }
      return this;
    },
    _ended: function (g) {
      var l = g._sprite;
      if (
        !this._webAudio &&
        g._node &&
        !g._node.paused &&
        !g._node.ended &&
        g._node.currentTime < g._stop
      )
        return setTimeout(this._ended.bind(this, g), 100), this;
      l = !(!g._loop && !this._sprite[l][2]);
      if (
        (this._emit("end", g._id),
        !this._webAudio && l && this.stop(g._id, !0).play(g._id),
        this._webAudio && l)
      ) {
        this._emit("play", g._id);
        g._seek = g._start || 0;
        g._rateSeek = 0;
        g._playStart = t.ctx.currentTime;
        var q = (1e3 * (g._stop - g._start)) / Math.abs(g._rate);
        this._endTimers[g._id] = setTimeout(this._ended.bind(this, g), q);
      }
      return (
        this._webAudio &&
          !l &&
          ((g._paused = !0),
          (g._ended = !0),
          (g._seek = g._start || 0),
          (g._rateSeek = 0),
          this._clearTimer(g._id),
          this._cleanBuffer(g._node),
          t._autoSuspend()),
        this._webAudio || l || this.stop(g._id, !0),
        this
      );
    },
    _clearTimer: function (g) {
      if (this._endTimers[g]) {
        if ("function" != typeof this._endTimers[g])
          clearTimeout(this._endTimers[g]);
        else {
          var l = this._soundById(g);
          l &&
            l._node &&
            l._node.removeEventListener("ended", this._endTimers[g], !1);
        }
        delete this._endTimers[g];
      }
      return this;
    },
    _soundById: function (g) {
      for (var l = 0; l < this._sounds.length; l++)
        if (g === this._sounds[l]._id) return this._sounds[l];
      return null;
    },
    _inactiveSound: function () {
      this._drain();
      for (var g = 0; g < this._sounds.length; g++)
        if (this._sounds[g]._ended) return this._sounds[g].reset();
      return new F(this);
    },
    _drain: function () {
      var g = this._pool,
        q = 0,
        r;
      if (!(this._sounds.length < g)) {
        for (r = 0; r < this._sounds.length; r++) this._sounds[r]._ended && q++;
        for (r = this._sounds.length - 1; 0 <= r && !(q <= g); r--)
          this._sounds[r]._ended &&
            (this._webAudio &&
              this._sounds[r]._node &&
              this._sounds[r]._node.disconnect(0),
            this._sounds.splice(r, 1),
            q--);
      }
    },
    _getSoundIds: function (g) {
      if (void 0 === g) {
        g = [];
        for (var l = 0; l < this._sounds.length; l++)
          g.push(this._sounds[l]._id);
        return g;
      }
      return [g];
    },
    _refreshBuffer: function (g) {
      return (
        (g._node.bufferSource = t.ctx.createBufferSource()),
        (g._node.bufferSource.buffer = B[this._src]),
        g._panner
          ? g._node.bufferSource.connect(g._panner)
          : g._node.bufferSource.connect(g._node),
        (g._node.bufferSource.loop = g._loop),
        g._loop &&
          ((g._node.bufferSource.loopStart = g._start || 0),
          (g._node.bufferSource.loopEnd = g._stop || 0)),
        g._node.bufferSource.playbackRate.setValueAtTime(
          g._rate,
          t.ctx.currentTime
        ),
        this
      );
    },
    _cleanBuffer: function (g) {
      var l = t._navigator && 0 <= t._navigator.vendor.indexOf("Apple");
      if (
        t._scratchBuffer &&
        g.bufferSource &&
        ((g.bufferSource.onended = null), g.bufferSource.disconnect(0), l)
      )
        try {
          g.bufferSource.buffer = t._scratchBuffer;
        } catch (y) {}
      return (g.bufferSource = null), this;
    },
  };
  var F = function (g) {
    this._parent = g;
    this.init();
  };
  F.prototype = {
    init: function () {
      var g = this._parent;
      return (
        (this._muted = g._muted),
        (this._loop = g._loop),
        (this._volume = g._volume),
        (this._rate = g._rate),
        (this._seek = 0),
        (this._paused = !0),
        (this._ended = !0),
        (this._sprite = "__default"),
        (this._id = ++t._counter),
        g._sounds.push(this),
        this.create(),
        this
      );
    },
    create: function () {
      var g = this._parent,
        q = t._muted || this._muted || this._parent._muted ? 0 : this._volume;
      return (
        g._webAudio
          ? ((this._node =
              void 0 === t.ctx.createGain
                ? t.ctx.createGainNode()
                : t.ctx.createGain()),
            this._node.gain.setValueAtTime(q, t.ctx.currentTime),
            (this._node.paused = !0),
            this._node.connect(t.masterGain))
          : ((this._node = t._obtainHtml5Audio()),
            (this._errorFn = this._errorListener.bind(this)),
            this._node.addEventListener("error", this._errorFn, !1),
            (this._loadFn = this._loadListener.bind(this)),
            this._node.addEventListener(t._canPlayEvent, this._loadFn, !1),
            (this._node.src = g._src),
            (this._node.preload = "auto"),
            (this._node.volume = q * t.volume()),
            this._node.load()),
        this
      );
    },
    reset: function () {
      var g = this._parent;
      return (
        (this._muted = g._muted),
        (this._loop = g._loop),
        (this._volume = g._volume),
        (this._rate = g._rate),
        (this._seek = 0),
        (this._rateSeek = 0),
        (this._paused = !0),
        (this._ended = !0),
        (this._sprite = "__default"),
        (this._id = ++t._counter),
        this
      );
    },
    _errorListener: function () {
      this._parent._emit(
        "loaderror",
        this._id,
        this._node.error ? this._node.error.code : 0
      );
      this._node.removeEventListener("error", this._errorFn, !1);
    },
    _loadListener: function () {
      var g = this._parent;
      g._duration = Math.ceil(10 * this._node.duration) / 10;
      0 === Object.keys(g._sprite).length &&
        (g._sprite = { __default: [0, 1e3 * g._duration] });
      "loaded" !== g._state &&
        ((g._state = "loaded"), g._emit("load"), g._loadQueue());
      this._node.removeEventListener(t._canPlayEvent, this._loadFn, !1);
    },
  };
  var B = {},
    L = function (g) {
      var l = g._src;
      if (B[l]) return (g._duration = B[l].duration), void q(g);
      if (/^data:[^;]+;base64,/.test(l)) {
        for (
          var y = atob(l.split(",")[1]), t = new Uint8Array(y.length), E = 0;
          E < y.length;
          ++E
        )
          t[E] = y.charCodeAt(E);
        oa(t.buffer, g);
      } else {
        var F = new XMLHttpRequest();
        F.open("GET", l, !0);
        F.withCredentials = g._xhrWithCredentials;
        F.responseType = "arraybuffer";
        F.onload = function () {
          var l = (F.status + "")[0];
          if ("0" !== l && "2" !== l && "3" !== l)
            return void g._emit(
              "loaderror",
              null,
              "Failed loading audio file with status: " + F.status + "."
            );
          oa(F.response, g);
        };
        F.onerror = function () {
          g._webAudio &&
            ((g._html5 = !0),
            (g._webAudio = !1),
            (g._sounds = []),
            delete B[l],
            g.load());
        };
        r(F);
      }
    },
    r = function (g) {
      try {
        g.send();
      } catch (z) {
        g.onerror();
      }
    },
    oa = function (g, r) {
      var l = function () {
          r._emit("loaderror", null, "Decoding audio data failed.");
        },
        z = function (g) {
          g && 0 < r._sounds.length ? ((B[r._src] = g), q(r, g)) : l();
        };
      "undefined" != typeof Promise && 1 === t.ctx.decodeAudioData.length
        ? t.ctx.decodeAudioData(g).then(z).catch(l)
        : t.ctx.decodeAudioData(g, z, l);
    },
    q = function (g, q) {
      q && !g._duration && (g._duration = q.duration);
      0 === Object.keys(g._sprite).length &&
        (g._sprite = { __default: [0, 1e3 * g._duration] });
      "loaded" !== g._state &&
        ((g._state = "loaded"), g._emit("load"), g._loadQueue());
    },
    g = function () {
      if (t.usingWebAudio) {
        try {
          "undefined" != typeof AudioContext
            ? (t.ctx = new AudioContext())
            : "undefined" != typeof webkitAudioContext
            ? (t.ctx = new webkitAudioContext())
            : (t.usingWebAudio = !1);
        } catch (y) {
          t.usingWebAudio = !1;
        }
        t.ctx || (t.usingWebAudio = !1);
        var g = /iP(hone|od|ad)/.test(t._navigator && t._navigator.platform),
          q =
            t._navigator &&
            t._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
        q = q ? parseInt(q[1], 10) : null;
        g &&
          q &&
          9 > q &&
          ((g = /safari/.test(
            t._navigator && t._navigator.userAgent.toLowerCase()
          )),
          ((t._navigator && t._navigator.standalone && !g) ||
            (t._navigator && !t._navigator.standalone && !g)) &&
            (t.usingWebAudio = !1));
        t.usingWebAudio &&
          ((t.masterGain =
            void 0 === t.ctx.createGain
              ? t.ctx.createGainNode()
              : t.ctx.createGain()),
          t.masterGain.gain.setValueAtTime(t._muted ? 0 : 1, t.ctx.currentTime),
          t.masterGain.connect(t.ctx.destination));
        t._setup();
      }
    };
  "function" == typeof define &&
    define.amd &&
    define([], function () {
      return { Howler: t, Howl: E };
    });
  "undefined" != typeof exports && ((exports.Howler = t), (exports.Howl = E));
  "undefined" != typeof window
    ? ((window.HowlerGlobal = Q),
      (window.Howler = t),
      (window.Howl = E),
      (window.Sound = F))
    : "undefined" != typeof global &&
      ((global.HowlerGlobal = Q),
      (global.Howler = t),
      (global.Howl = E),
      (global.Sound = F));
})();
!(function () {
  HowlerGlobal.prototype._pos = [0, 0, 0];
  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
  HowlerGlobal.prototype.stereo = function (t) {
    if (!this.ctx || !this.ctx.listener) return this;
    for (var E = this._howls.length - 1; 0 <= E; E--) this._howls[E].stereo(t);
    return this;
  };
  HowlerGlobal.prototype.pos = function (t, E, F) {
    return this.ctx && this.ctx.listener
      ? ((E = "number" != typeof E ? this._pos[1] : E),
        (F = "number" != typeof F ? this._pos[2] : F),
        "number" != typeof t
          ? this._pos
          : ((this._pos = [t, E, F]),
            void 0 !== this.ctx.listener.positionX
              ? (this.ctx.listener.positionX.setTargetAtTime(
                  this._pos[0],
                  Howler.ctx.currentTime,
                  0.1
                ),
                this.ctx.listener.positionY.setTargetAtTime(
                  this._pos[1],
                  Howler.ctx.currentTime,
                  0.1
                ),
                this.ctx.listener.positionZ.setTargetAtTime(
                  this._pos[2],
                  Howler.ctx.currentTime,
                  0.1
                ))
              : this.ctx.listener.setPosition(
                  this._pos[0],
                  this._pos[1],
                  this._pos[2]
                ),
            this))
      : this;
  };
  HowlerGlobal.prototype.orientation = function (t, E, F, B, L, r) {
    if (!this.ctx || !this.ctx.listener) return this;
    var Q = this._orientation;
    return (
      (E = "number" != typeof E ? Q[1] : E),
      (F = "number" != typeof F ? Q[2] : F),
      (B = "number" != typeof B ? Q[3] : B),
      (L = "number" != typeof L ? Q[4] : L),
      (r = "number" != typeof r ? Q[5] : r),
      "number" != typeof t
        ? Q
        : ((this._orientation = [t, E, F, B, L, r]),
          void 0 !== this.ctx.listener.forwardX
            ? (this.ctx.listener.forwardX.setTargetAtTime(
                t,
                Howler.ctx.currentTime,
                0.1
              ),
              this.ctx.listener.forwardY.setTargetAtTime(
                E,
                Howler.ctx.currentTime,
                0.1
              ),
              this.ctx.listener.forwardZ.setTargetAtTime(
                F,
                Howler.ctx.currentTime,
                0.1
              ),
              this.ctx.listener.upX.setTargetAtTime(
                t,
                Howler.ctx.currentTime,
                0.1
              ),
              this.ctx.listener.upY.setTargetAtTime(
                E,
                Howler.ctx.currentTime,
                0.1
              ),
              this.ctx.listener.upZ.setTargetAtTime(
                F,
                Howler.ctx.currentTime,
                0.1
              ))
            : this.ctx.listener.setOrientation(t, E, F, B, L, r),
          this)
    );
  };
  Howl.prototype.init = (function (t) {
    return function (E) {
      return (
        (this._orientation = E.orientation || [1, 0, 0]),
        (this._stereo = E.stereo || null),
        (this._pos = E.pos || null),
        (this._pannerAttr = {
          coneInnerAngle: void 0 !== E.coneInnerAngle ? E.coneInnerAngle : 360,
          coneOuterAngle: void 0 !== E.coneOuterAngle ? E.coneOuterAngle : 360,
          coneOuterGain: void 0 !== E.coneOuterGain ? E.coneOuterGain : 0,
          distanceModel:
            void 0 !== E.distanceModel ? E.distanceModel : "inverse",
          maxDistance: void 0 !== E.maxDistance ? E.maxDistance : 1e4,
          panningModel: void 0 !== E.panningModel ? E.panningModel : "HRTF",
          refDistance: void 0 !== E.refDistance ? E.refDistance : 1,
          rolloffFactor: void 0 !== E.rolloffFactor ? E.rolloffFactor : 1,
        }),
        (this._onstereo = E.onstereo ? [{ fn: E.onstereo }] : []),
        (this._onpos = E.onpos ? [{ fn: E.onpos }] : []),
        (this._onorientation = E.onorientation
          ? [{ fn: E.onorientation }]
          : []),
        t.call(this, E)
      );
    };
  })(Howl.prototype.init);
  Howl.prototype.stereo = function (t, E) {
    var F = this;
    if (!F._webAudio) return F;
    if ("loaded" !== F._state)
      return (
        F._queue.push({
          event: "stereo",
          action: function () {
            F.stereo(t, E);
          },
        }),
        F
      );
    var B = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
    if (void 0 === E) {
      if ("number" != typeof t) return F._stereo;
      F._stereo = t;
      F._pos = [t, 0, 0];
    }
    for (var L = F._getSoundIds(E), r = 0; r < L.length; r++) {
      var oa = F._soundById(L[r]);
      if (oa) {
        if ("number" != typeof t) return oa._stereo;
        oa._stereo = t;
        oa._pos = [t, 0, 0];
        oa._node &&
          ((oa._pannerAttr.panningModel = "equalpower"),
          (oa._panner && oa._panner.pan) || Q(oa, B),
          "spatial" === B
            ? void 0 !== oa._panner.positionX
              ? (oa._panner.positionX.setValueAtTime(t, Howler.ctx.currentTime),
                oa._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                oa._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime))
              : oa._panner.setPosition(t, 0, 0)
            : oa._panner.pan.setValueAtTime(t, Howler.ctx.currentTime));
        F._emit("stereo", oa._id);
      }
    }
    return F;
  };
  Howl.prototype.pos = function (t, E, F, B) {
    var L = this;
    if (!L._webAudio) return L;
    if ("loaded" !== L._state)
      return (
        L._queue.push({
          event: "pos",
          action: function () {
            L.pos(t, E, F, B);
          },
        }),
        L
      );
    if (
      ((E = "number" != typeof E ? 0 : E),
      (F = "number" != typeof F ? -0.5 : F),
      void 0 === B)
    ) {
      if ("number" != typeof t) return L._pos;
      L._pos = [t, E, F];
    }
    for (var r = L._getSoundIds(B), oa = 0; oa < r.length; oa++) {
      var q = L._soundById(r[oa]);
      if (q) {
        if ("number" != typeof t) return q._pos;
        q._pos = [t, E, F];
        q._node &&
          ((q._panner && !q._panner.pan) || Q(q, "spatial"),
          void 0 !== q._panner.positionX
            ? (q._panner.positionX.setValueAtTime(t, Howler.ctx.currentTime),
              q._panner.positionY.setValueAtTime(E, Howler.ctx.currentTime),
              q._panner.positionZ.setValueAtTime(F, Howler.ctx.currentTime))
            : q._panner.setPosition(t, E, F));
        L._emit("pos", q._id);
      }
    }
    return L;
  };
  Howl.prototype.orientation = function (t, E, F, B) {
    var L = this;
    if (!L._webAudio) return L;
    if ("loaded" !== L._state)
      return (
        L._queue.push({
          event: "orientation",
          action: function () {
            L.orientation(t, E, F, B);
          },
        }),
        L
      );
    if (
      ((E = "number" != typeof E ? L._orientation[1] : E),
      (F = "number" != typeof F ? L._orientation[2] : F),
      void 0 === B)
    ) {
      if ("number" != typeof t) return L._orientation;
      L._orientation = [t, E, F];
    }
    for (var r = L._getSoundIds(B), oa = 0; oa < r.length; oa++) {
      var q = L._soundById(r[oa]);
      if (q) {
        if ("number" != typeof t) return q._orientation;
        q._orientation = [t, E, F];
        q._node &&
          (q._panner ||
            (q._pos || (q._pos = L._pos || [0, 0, -0.5]), Q(q, "spatial")),
          void 0 !== q._panner.orientationX
            ? (q._panner.orientationX.setValueAtTime(t, Howler.ctx.currentTime),
              q._panner.orientationY.setValueAtTime(E, Howler.ctx.currentTime),
              q._panner.orientationZ.setValueAtTime(F, Howler.ctx.currentTime))
            : q._panner.setOrientation(t, E, F));
        L._emit("orientation", q._id);
      }
    }
    return L;
  };
  Howl.prototype.pannerAttr = function () {
    var t,
      E,
      F = arguments;
    if (!this._webAudio) return this;
    if (0 === F.length) return this._pannerAttr;
    if (1 === F.length) {
      if ("object" != typeof F[0])
        return (
          (E = this._soundById(parseInt(F[0], 10))),
          E ? E._pannerAttr : this._pannerAttr
        );
      var B = F[0];
      void 0 === t &&
        (B.pannerAttr ||
          (B.pannerAttr = {
            coneInnerAngle: B.coneInnerAngle,
            coneOuterAngle: B.coneOuterAngle,
            coneOuterGain: B.coneOuterGain,
            distanceModel: B.distanceModel,
            maxDistance: B.maxDistance,
            refDistance: B.refDistance,
            rolloffFactor: B.rolloffFactor,
            panningModel: B.panningModel,
          }),
        (this._pannerAttr = {
          coneInnerAngle:
            void 0 !== B.pannerAttr.coneInnerAngle
              ? B.pannerAttr.coneInnerAngle
              : this._coneInnerAngle,
          coneOuterAngle:
            void 0 !== B.pannerAttr.coneOuterAngle
              ? B.pannerAttr.coneOuterAngle
              : this._coneOuterAngle,
          coneOuterGain:
            void 0 !== B.pannerAttr.coneOuterGain
              ? B.pannerAttr.coneOuterGain
              : this._coneOuterGain,
          distanceModel:
            void 0 !== B.pannerAttr.distanceModel
              ? B.pannerAttr.distanceModel
              : this._distanceModel,
          maxDistance:
            void 0 !== B.pannerAttr.maxDistance
              ? B.pannerAttr.maxDistance
              : this._maxDistance,
          refDistance:
            void 0 !== B.pannerAttr.refDistance
              ? B.pannerAttr.refDistance
              : this._refDistance,
          rolloffFactor:
            void 0 !== B.pannerAttr.rolloffFactor
              ? B.pannerAttr.rolloffFactor
              : this._rolloffFactor,
          panningModel:
            void 0 !== B.pannerAttr.panningModel
              ? B.pannerAttr.panningModel
              : this._panningModel,
        }));
    } else 2 === F.length && ((B = F[0]), (t = parseInt(F[1], 10)));
    t = this._getSoundIds(t);
    for (F = 0; F < t.length; F++)
      if ((E = this._soundById(t[F]))) {
        var L = E._pannerAttr;
        L = {
          coneInnerAngle:
            void 0 !== B.coneInnerAngle ? B.coneInnerAngle : L.coneInnerAngle,
          coneOuterAngle:
            void 0 !== B.coneOuterAngle ? B.coneOuterAngle : L.coneOuterAngle,
          coneOuterGain:
            void 0 !== B.coneOuterGain ? B.coneOuterGain : L.coneOuterGain,
          distanceModel:
            void 0 !== B.distanceModel ? B.distanceModel : L.distanceModel,
          maxDistance: void 0 !== B.maxDistance ? B.maxDistance : L.maxDistance,
          refDistance: void 0 !== B.refDistance ? B.refDistance : L.refDistance,
          rolloffFactor:
            void 0 !== B.rolloffFactor ? B.rolloffFactor : L.rolloffFactor,
          panningModel:
            void 0 !== B.panningModel ? B.panningModel : L.panningModel,
        };
        var r = E._panner;
        r
          ? ((r.coneInnerAngle = L.coneInnerAngle),
            (r.coneOuterAngle = L.coneOuterAngle),
            (r.coneOuterGain = L.coneOuterGain),
            (r.distanceModel = L.distanceModel),
            (r.maxDistance = L.maxDistance),
            (r.refDistance = L.refDistance),
            (r.rolloffFactor = L.rolloffFactor),
            (r.panningModel = L.panningModel))
          : (E._pos || (E._pos = this._pos || [0, 0, -0.5]), Q(E, "spatial"));
      }
    return this;
  };
  Sound.prototype.init = (function (t) {
    return function () {
      var E = this._parent;
      this._orientation = E._orientation;
      this._stereo = E._stereo;
      this._pos = E._pos;
      this._pannerAttr = E._pannerAttr;
      t.call(this);
      this._stereo
        ? E.stereo(this._stereo)
        : this._pos &&
          E.pos(this._pos[0], this._pos[1], this._pos[2], this._id);
    };
  })(Sound.prototype.init);
  Sound.prototype.reset = (function (t) {
    return function () {
      var E = this._parent;
      return (
        (this._orientation = E._orientation),
        (this._stereo = E._stereo),
        (this._pos = E._pos),
        (this._pannerAttr = E._pannerAttr),
        this._stereo
          ? E.stereo(this._stereo)
          : this._pos
          ? E.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
          : this._panner &&
            (this._panner.disconnect(0),
            (this._panner = void 0),
            E._refreshBuffer(this)),
        t.call(this)
      );
    };
  })(Sound.prototype.reset);
  var Q = function (t, E) {
    "spatial" === (E || "spatial")
      ? ((t._panner = Howler.ctx.createPanner()),
        (t._panner.coneInnerAngle = t._pannerAttr.coneInnerAngle),
        (t._panner.coneOuterAngle = t._pannerAttr.coneOuterAngle),
        (t._panner.coneOuterGain = t._pannerAttr.coneOuterGain),
        (t._panner.distanceModel = t._pannerAttr.distanceModel),
        (t._panner.maxDistance = t._pannerAttr.maxDistance),
        (t._panner.refDistance = t._pannerAttr.refDistance),
        (t._panner.rolloffFactor = t._pannerAttr.rolloffFactor),
        (t._panner.panningModel = t._pannerAttr.panningModel),
        void 0 !== t._panner.positionX
          ? (t._panner.positionX.setValueAtTime(
              t._pos[0],
              Howler.ctx.currentTime
            ),
            t._panner.positionY.setValueAtTime(
              t._pos[1],
              Howler.ctx.currentTime
            ),
            t._panner.positionZ.setValueAtTime(
              t._pos[2],
              Howler.ctx.currentTime
            ))
          : t._panner.setPosition(t._pos[0], t._pos[1], t._pos[2]),
        void 0 !== t._panner.orientationX
          ? (t._panner.orientationX.setValueAtTime(
              t._orientation[0],
              Howler.ctx.currentTime
            ),
            t._panner.orientationY.setValueAtTime(
              t._orientation[1],
              Howler.ctx.currentTime
            ),
            t._panner.orientationZ.setValueAtTime(
              t._orientation[2],
              Howler.ctx.currentTime
            ))
          : t._panner.setOrientation(
              t._orientation[0],
              t._orientation[1],
              t._orientation[2]
            ))
      : ((t._panner = Howler.ctx.createStereoPanner()),
        t._panner.pan.setValueAtTime(t._stereo, Howler.ctx.currentTime));
    t._panner.connect(t._node);
    t._paused || t._parent.pause(t._id, !0).play(t._id, !0);
  };
})();
!(function (Q) {
  "object" == typeof exports && "undefined" != typeof module
    ? (module.exports = Q())
    : "function" == typeof define && define.amd
    ? define([], Q)
    : (("undefined" != typeof window
        ? window
        : "undefined" != typeof global
        ? global
        : "undefined" != typeof self
        ? self
        : this
      ).pako = Q());
})(function () {
  return (function B(t, E, F) {
    function L(q, g) {
      if (!E[q]) {
        if (!t[q]) {
          var l = "function" == typeof require && require;
          if (!g && l) return l(q, !0);
          if (r) return r(q, !0);
          g = Error("Cannot find module '" + q + "'");
          throw ((g.code = "MODULE_NOT_FOUND"), g);
        }
        g = E[q] = { exports: {} };
        t[q][0].call(
          g.exports,
          function (g) {
            var l = t[q][1][g];
            return L(l ? l : g);
          },
          g,
          g.exports,
          B,
          t,
          E,
          F
        );
      }
      return E[q].exports;
    }
    for (
      var r = "function" == typeof require && require, oa = 0;
      oa < F.length;
      oa++
    )
      L(F[oa]);
    return L;
  })(
    {
      1: [
        function (t, E, F) {
          function B(t) {
            if (!(this instanceof B)) return new B(t);
            t = this.options = oa.assign(
              {
                level: T,
                method: ra,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: ca,
                to: "",
              },
              t || {}
            );
            t.raw && 0 < t.windowBits
              ? (t.windowBits = -t.windowBits)
              : t.gzip &&
                0 < t.windowBits &&
                16 > t.windowBits &&
                (t.windowBits += 16);
            this.err = 0;
            this.msg = "";
            this.ended = !1;
            this.chunks = [];
            this.strm = new l();
            this.strm.avail_out = 0;
            var E = r.deflateInit2(
              this.strm,
              t.level,
              t.method,
              t.windowBits,
              t.memLevel,
              t.strategy
            );
            if (E !== y) throw Error(g[E]);
            if (
              (t.header && r.deflateSetHeader(this.strm, t.header),
              t.dictionary)
            ) {
              var F;
              if (
                ((F =
                  "string" == typeof t.dictionary
                    ? q.string2buf(t.dictionary)
                    : "[object ArrayBuffer]" === z.call(t.dictionary)
                    ? new Uint8Array(t.dictionary)
                    : t.dictionary),
                (E = r.deflateSetDictionary(this.strm, F)),
                E !== y)
              )
                throw Error(g[E]);
              this._dict_set = !0;
            }
          }
          function L(g, l) {
            l = new B(l);
            if ((l.push(g, !0), l.err)) throw l.msg;
            return l.result;
          }
          var r = t("./zlib/deflate"),
            oa = t("./utils/common"),
            q = t("./utils/strings"),
            g = t("./zlib/messages"),
            l = t("./zlib/zstream"),
            z = Object.prototype.toString,
            y = 0,
            T = -1,
            ca = 0,
            ra = 8;
          B.prototype.push = function (g, l) {
            var t,
              B = this.strm,
              H = this.options.chunkSize;
            if (this.ended) return !1;
            l = l === ~~l ? l : !0 === l ? 4 : 0;
            "string" == typeof g
              ? (B.input = q.string2buf(g))
              : "[object ArrayBuffer]" === z.call(g)
              ? (B.input = new Uint8Array(g))
              : (B.input = g);
            B.next_in = 0;
            B.avail_in = B.input.length;
            do {
              if (
                (0 === B.avail_out &&
                  ((B.output = new oa.Buf8(H)),
                  (B.next_out = 0),
                  (B.avail_out = H)),
                (t = r.deflate(B, l)),
                1 !== t && t !== y)
              )
                return this.onEnd(t), (this.ended = !0), !1;
              (0 !== B.avail_out &&
                (0 !== B.avail_in || (4 !== l && 2 !== l))) ||
                ("string" === this.options.to
                  ? this.onData(
                      q.buf2binstring(oa.shrinkBuf(B.output, B.next_out))
                    )
                  : this.onData(oa.shrinkBuf(B.output, B.next_out)));
            } while ((0 < B.avail_in || 0 === B.avail_out) && 1 !== t);
            return 4 === l
              ? ((t = r.deflateEnd(this.strm)),
                this.onEnd(t),
                (this.ended = !0),
                t === y)
              : 2 !== l || (this.onEnd(y), (B.avail_out = 0), !0);
          };
          B.prototype.onData = function (g) {
            this.chunks.push(g);
          };
          B.prototype.onEnd = function (g) {
            g === y &&
              ("string" === this.options.to
                ? (this.result = this.chunks.join(""))
                : (this.result = oa.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = g;
            this.msg = this.strm.msg;
          };
          F.Deflate = B;
          F.deflate = L;
          F.deflateRaw = function (g, l) {
            return (l = l || {}), (l.raw = !0), L(g, l);
          };
          F.gzip = function (g, l) {
            return (l = l || {}), (l.gzip = !0), L(g, l);
          };
        },
        {
          "./utils/common": 3,
          "./utils/strings": 4,
          "./zlib/deflate": 8,
          "./zlib/messages": 13,
          "./zlib/zstream": 15,
        },
      ],
      2: [
        function (t, E, F) {
          function B(q) {
            if (!(this instanceof B)) return new B(q);
            var t = (this.options = oa.assign(
              { chunkSize: 16384, windowBits: 0, to: "" },
              q || {}
            ));
            t.raw &&
              0 <= t.windowBits &&
              16 > t.windowBits &&
              ((t.windowBits = -t.windowBits),
              0 === t.windowBits && (t.windowBits = -15));
            !(0 <= t.windowBits && 16 > t.windowBits) ||
              (q && q.windowBits) ||
              (t.windowBits += 32);
            15 < t.windowBits &&
              48 > t.windowBits &&
              0 === (15 & t.windowBits) &&
              (t.windowBits |= 15);
            this.err = 0;
            this.msg = "";
            this.ended = !1;
            this.chunks = [];
            this.strm = new z();
            this.strm.avail_out = 0;
            q = r.inflateInit2(this.strm, t.windowBits);
            if (q !== g.Z_OK) throw Error(l[q]);
            this.header = new y();
            r.inflateGetHeader(this.strm, this.header);
          }
          function L(g, l) {
            l = new B(l);
            if ((l.push(g, !0), l.err)) throw l.msg;
            return l.result;
          }
          var r = t("./zlib/inflate"),
            oa = t("./utils/common"),
            q = t("./utils/strings"),
            g = t("./zlib/constants"),
            l = t("./zlib/messages"),
            z = t("./zlib/zstream"),
            y = t("./zlib/gzheader"),
            T = Object.prototype.toString;
          B.prototype.push = function (l, t) {
            var y,
              z,
              B,
              E,
              H,
              F = this.strm,
              L = this.options.chunkSize,
              ca = this.options.dictionary,
              Y = !1;
            if (this.ended) return !1;
            t = t === ~~t ? t : !0 === t ? g.Z_FINISH : g.Z_NO_FLUSH;
            "string" == typeof l
              ? (F.input = q.binstring2buf(l))
              : "[object ArrayBuffer]" === T.call(l)
              ? (F.input = new Uint8Array(l))
              : (F.input = l);
            F.next_in = 0;
            F.avail_in = F.input.length;
            do {
              if (
                (0 === F.avail_out &&
                  ((F.output = new oa.Buf8(L)),
                  (F.next_out = 0),
                  (F.avail_out = L)),
                (y = r.inflate(F, g.Z_NO_FLUSH)),
                y === g.Z_NEED_DICT &&
                  ca &&
                  ((H =
                    "string" == typeof ca
                      ? q.string2buf(ca)
                      : "[object ArrayBuffer]" === T.call(ca)
                      ? new Uint8Array(ca)
                      : ca),
                  (y = r.inflateSetDictionary(this.strm, H))),
                y === g.Z_BUF_ERROR && !0 === Y && ((y = g.Z_OK), (Y = !1)),
                y !== g.Z_STREAM_END && y !== g.Z_OK)
              )
                return this.onEnd(y), (this.ended = !0), !1;
              F.next_out &&
                ((0 !== F.avail_out &&
                  y !== g.Z_STREAM_END &&
                  (0 !== F.avail_in ||
                    (t !== g.Z_FINISH && t !== g.Z_SYNC_FLUSH))) ||
                  ("string" === this.options.to
                    ? ((z = q.utf8border(F.output, F.next_out)),
                      (B = F.next_out - z),
                      (E = q.buf2string(F.output, z)),
                      (F.next_out = B),
                      (F.avail_out = L - B),
                      B && oa.arraySet(F.output, F.output, z, B, 0),
                      this.onData(E))
                    : this.onData(oa.shrinkBuf(F.output, F.next_out))));
              0 === F.avail_in && 0 === F.avail_out && (Y = !0);
            } while (
              (0 < F.avail_in || 0 === F.avail_out) &&
              y !== g.Z_STREAM_END
            );
            return (
              y === g.Z_STREAM_END && (t = g.Z_FINISH),
              t === g.Z_FINISH
                ? ((y = r.inflateEnd(this.strm)),
                  this.onEnd(y),
                  (this.ended = !0),
                  y === g.Z_OK)
                : t !== g.Z_SYNC_FLUSH ||
                  (this.onEnd(g.Z_OK), (F.avail_out = 0), !0)
            );
          };
          B.prototype.onData = function (g) {
            this.chunks.push(g);
          };
          B.prototype.onEnd = function (l) {
            l === g.Z_OK &&
              ("string" === this.options.to
                ? (this.result = this.chunks.join(""))
                : (this.result = oa.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = l;
            this.msg = this.strm.msg;
          };
          F.Inflate = B;
          F.inflate = L;
          F.inflateRaw = function (g, l) {
            return (l = l || {}), (l.raw = !0), L(g, l);
          };
          F.ungzip = L;
        },
        {
          "./utils/common": 3,
          "./utils/strings": 4,
          "./zlib/constants": 6,
          "./zlib/gzheader": 9,
          "./zlib/inflate": 11,
          "./zlib/messages": 13,
          "./zlib/zstream": 15,
        },
      ],
      3: [
        function (t, E, F) {
          t =
            "undefined" != typeof Uint8Array &&
            "undefined" != typeof Uint16Array &&
            "undefined" != typeof Int32Array;
          F.assign = function (r) {
            for (var t = Array.prototype.slice.call(arguments, 1); t.length; ) {
              var q = t.shift();
              if (q) {
                if ("object" != typeof q)
                  throw new TypeError(q + "must be non-object");
                for (var g in q) q.hasOwnProperty(g) && (r[g] = q[g]);
              }
            }
            return r;
          };
          F.shrinkBuf = function (r, t) {
            return r.length === t
              ? r
              : r.subarray
              ? r.subarray(0, t)
              : ((r.length = t), r);
          };
          var B = {
              arraySet: function (r, t, q, g, l) {
                if (t.subarray && r.subarray)
                  return void r.set(t.subarray(q, q + g), l);
                for (var z = 0; z < g; z++) r[l + z] = t[q + z];
              },
              flattenChunks: function (r) {
                var t, q;
                var g = (q = 0);
                for (t = r.length; g < t; g++) q += r[g].length;
                var l = new Uint8Array(q);
                g = q = 0;
                for (t = r.length; g < t; g++) {
                  var z = r[g];
                  l.set(z, q);
                  q += z.length;
                }
                return l;
              },
            },
            L = {
              arraySet: function (r, t, q, g, l) {
                for (var z = 0; z < g; z++) r[l + z] = t[q + z];
              },
              flattenChunks: function (r) {
                return [].concat.apply([], r);
              },
            };
          F.setTyped = function (r) {
            r
              ? ((F.Buf8 = Uint8Array),
                (F.Buf16 = Uint16Array),
                (F.Buf32 = Int32Array),
                F.assign(F, B))
              : ((F.Buf8 = Array),
                (F.Buf16 = Array),
                (F.Buf32 = Array),
                F.assign(F, L));
          };
          F.setTyped(t);
        },
        {},
      ],
      4: [
        function (t, E, F) {
          function B(g, l) {
            if (65537 > l && ((g.subarray && oa) || (!g.subarray && r)))
              return String.fromCharCode.apply(null, L.shrinkBuf(g, l));
            for (var q = "", t = 0; t < l; t++) q += String.fromCharCode(g[t]);
            return q;
          }
          var L = t("./common"),
            r = !0,
            oa = !0;
          try {
            String.fromCharCode.apply(null, [0]);
          } catch (g) {
            r = !1;
          }
          try {
            String.fromCharCode.apply(null, new Uint8Array(1));
          } catch (g) {
            oa = !1;
          }
          var q = new L.Buf8(256);
          for (t = 0; 256 > t; t++)
            q[t] =
              252 <= t
                ? 6
                : 248 <= t
                ? 5
                : 240 <= t
                ? 4
                : 224 <= t
                ? 3
                : 192 <= t
                ? 2
                : 1;
          q[254] = q[254] = 1;
          F.string2buf = function (g) {
            var l,
              q,
              r,
              t = g.length,
              B = 0;
            for (q = 0; q < t; q++) {
              var F = g.charCodeAt(q);
              55296 === (64512 & F) &&
                q + 1 < t &&
                ((l = g.charCodeAt(q + 1)),
                56320 === (64512 & l) &&
                  ((F = 65536 + ((F - 55296) << 10) + (l - 56320)), q++));
              B += 128 > F ? 1 : 2048 > F ? 2 : 65536 > F ? 3 : 4;
            }
            var E = new L.Buf8(B);
            for (q = r = 0; r < B; q++)
              (F = g.charCodeAt(q)),
                55296 === (64512 & F) &&
                  q + 1 < t &&
                  ((l = g.charCodeAt(q + 1)),
                  56320 === (64512 & l) &&
                    ((F = 65536 + ((F - 55296) << 10) + (l - 56320)), q++)),
                128 > F
                  ? (E[r++] = F)
                  : 2048 > F
                  ? ((E[r++] = 192 | (F >>> 6)), (E[r++] = 128 | (63 & F)))
                  : 65536 > F
                  ? ((E[r++] = 224 | (F >>> 12)),
                    (E[r++] = 128 | ((F >>> 6) & 63)),
                    (E[r++] = 128 | (63 & F)))
                  : ((E[r++] = 240 | (F >>> 18)),
                    (E[r++] = 128 | ((F >>> 12) & 63)),
                    (E[r++] = 128 | ((F >>> 6) & 63)),
                    (E[r++] = 128 | (63 & F)));
            return E;
          };
          F.buf2binstring = function (g) {
            return B(g, g.length);
          };
          F.binstring2buf = function (g) {
            for (var l = new L.Buf8(g.length), q = 0, r = l.length; q < r; q++)
              l[q] = g.charCodeAt(q);
            return l;
          };
          F.buf2string = function (g, l) {
            var r,
              t,
              F,
              E = l || g.length,
              L = Array(2 * E);
            for (l = r = 0; l < E; )
              if (((t = g[l++]), 128 > t)) L[r++] = t;
              else if (((F = q[t]), 4 < F)) (L[r++] = 65533), (l += F - 1);
              else {
                for (t &= 2 === F ? 31 : 3 === F ? 15 : 7; 1 < F && l < E; )
                  (t = (t << 6) | (63 & g[l++])), F--;
                1 < F
                  ? (L[r++] = 65533)
                  : 65536 > t
                  ? (L[r++] = t)
                  : ((t -= 65536),
                    (L[r++] = 55296 | ((t >> 10) & 1023)),
                    (L[r++] = 56320 | (1023 & t)));
              }
            return B(L, r);
          };
          F.utf8border = function (g, l) {
            var r;
            l = l || g.length;
            l > g.length && (l = g.length);
            for (r = l - 1; 0 <= r && 128 === (192 & g[r]); ) r--;
            return 0 > r ? l : 0 === r ? l : r + q[g[r]] > l ? r : l;
          };
        },
        { "./common": 3 },
      ],
      5: [
        function (t, E, F) {
          E.exports = function (t, F, r, E) {
            var q = (65535 & t) | 0;
            t = ((t >>> 16) & 65535) | 0;
            for (var g; 0 !== r; ) {
              g = 2e3 < r ? 2e3 : r;
              r -= g;
              do (q = (q + F[E++]) | 0), (t = (t + q) | 0);
              while (--g);
              q %= 65521;
              t %= 65521;
            }
            return q | (t << 16) | 0;
          };
        },
        {},
      ],
      6: [
        function (t, E, F) {
          E.exports = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8,
          };
        },
        {},
      ],
      7: [
        function (t, E, F) {
          var B = (function () {
            for (var t, r = [], B = 0; 256 > B; B++) {
              t = B;
              for (var q = 0; 8 > q; q++)
                t = 1 & t ? 3988292384 ^ (t >>> 1) : t >>> 1;
              r[B] = t;
            }
            return r;
          })();
          E.exports = function (t, r, F, q) {
            F = q + F;
            for (t ^= -1; q < F; q++) t = (t >>> 8) ^ B[255 & (t ^ r[q])];
            return t ^ -1;
          };
        },
        {},
      ],
      8: [
        function (t, E, F) {
          function B(g, l) {
            return (g.msg = qb[l]), l;
          }
          function L(g) {
            for (var l = g.length; 0 <= --l; ) g[l] = 0;
          }
          function r(g) {
            var l = g.state,
              q = l.pending;
            q > g.avail_out && (q = g.avail_out);
            0 !== q &&
              (ob.arraySet(
                g.output,
                l.pending_buf,
                l.pending_out,
                q,
                g.next_out
              ),
              (g.next_out += q),
              (l.pending_out += q),
              (g.total_out += q),
              (g.avail_out -= q),
              (l.pending -= q),
              0 === l.pending && (l.pending_out = 0));
          }
          function oa(g, l) {
            H._tr_flush_block(
              g,
              0 <= g.block_start ? g.block_start : -1,
              g.strstart - g.block_start,
              l
            );
            g.block_start = g.strstart;
            r(g.strm);
          }
          function q(g, l) {
            g.pending_buf[g.pending++] = l;
          }
          function g(g, l) {
            g.pending_buf[g.pending++] = (l >>> 8) & 255;
            g.pending_buf[g.pending++] = 255 & l;
          }
          function l(g, l) {
            var q,
              u,
              r = g.max_chain_length,
              t = g.strstart,
              y = g.prev_length,
              z = g.nice_match,
              A = g.strstart > g.w_size - Na ? g.strstart - (g.w_size - Na) : 0,
              B = g.window,
              F = g.w_mask,
              H = g.prev,
              E = g.strstart + fa,
              Y = B[t + y - 1],
              T = B[t + y];
            g.prev_length >= g.good_match && (r >>= 2);
            z > g.lookahead && (z = g.lookahead);
            do
              if (
                ((q = l),
                B[q + y] === T &&
                  B[q + y - 1] === Y &&
                  B[q] === B[t] &&
                  B[++q] === B[t + 1])
              ) {
                t += 2;
                for (
                  q++;
                  B[++t] === B[++q] &&
                  B[++t] === B[++q] &&
                  B[++t] === B[++q] &&
                  B[++t] === B[++q] &&
                  B[++t] === B[++q] &&
                  B[++t] === B[++q] &&
                  B[++t] === B[++q] &&
                  B[++t] === B[++q] &&
                  t < E;

                );
                if (((u = fa - (E - t)), (t = E - fa), u > y)) {
                  if (((g.match_start = l), (y = u), u >= z)) break;
                  Y = B[t + y - 1];
                  T = B[t + y];
                }
              }
            while ((l = H[l & F]) > A && 0 !== --r);
            return y <= g.lookahead ? y : g.lookahead;
          }
          function z(g) {
            var l,
              q,
              u = g.w_size;
            do {
              if (
                ((q = g.window_size - g.lookahead - g.strstart),
                g.strstart >= u + (u - Na))
              ) {
                ob.arraySet(g.window, g.window, u, u, 0);
                g.match_start -= u;
                g.strstart -= u;
                g.block_start -= u;
                var r = (l = g.hash_size);
                do {
                  var t = g.head[--r];
                  g.head[r] = t >= u ? t - u : 0;
                } while (--l);
                r = l = u;
                do (t = g.prev[--r]), (g.prev[r] = t >= u ? t - u : 0);
                while (--l);
                q += u;
              }
              if (0 === g.strm.avail_in) break;
              r = g.strm;
              t = g.window;
              var y = g.strstart + g.lookahead,
                z = r.avail_in;
              if (
                ((l =
                  (z > q && (z = q),
                  0 === z
                    ? 0
                    : ((r.avail_in -= z),
                      ob.arraySet(t, r.input, r.next_in, z, y),
                      1 === r.state.wrap
                        ? (r.adler = jb(r.adler, t, z, y))
                        : 2 === r.state.wrap &&
                          (r.adler = za(r.adler, t, z, y)),
                      (r.next_in += z),
                      (r.total_in += z),
                      z))),
                (g.lookahead += l),
                g.lookahead + g.insert >= va)
              )
                for (
                  q = g.strstart - g.insert,
                    g.ins_h = g.window[q],
                    g.ins_h =
                      ((g.ins_h << g.hash_shift) ^ g.window[q + 1]) &
                      g.hash_mask;
                  g.insert &&
                  ((g.ins_h =
                    ((g.ins_h << g.hash_shift) ^ g.window[q + va - 1]) &
                    g.hash_mask),
                  (g.prev[q & g.w_mask] = g.head[g.ins_h]),
                  (g.head[g.ins_h] = q),
                  q++,
                  g.insert--,
                  !(g.lookahead + g.insert < va));

                );
            } while (g.lookahead < Na && 0 !== g.strm.avail_in);
          }
          function y(g, q) {
            for (var r, u; ; ) {
              if (g.lookahead < Na) {
                if ((z(g), g.lookahead < Na && q === Y)) return X;
                if (0 === g.lookahead) break;
              }
              if (
                ((r = 0),
                g.lookahead >= va &&
                  ((g.ins_h =
                    ((g.ins_h << g.hash_shift) ^
                      g.window[g.strstart + va - 1]) &
                    g.hash_mask),
                  (r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h]),
                  (g.head[g.ins_h] = g.strstart)),
                0 !== r &&
                  g.strstart - r <= g.w_size - Na &&
                  (g.match_length = l(g, r)),
                g.match_length >= va)
              )
                if (
                  ((u = H._tr_tally(
                    g,
                    g.strstart - g.match_start,
                    g.match_length - va
                  )),
                  (g.lookahead -= g.match_length),
                  g.match_length <= g.max_lazy_match && g.lookahead >= va)
                ) {
                  g.match_length--;
                  do
                    g.strstart++,
                      (g.ins_h =
                        ((g.ins_h << g.hash_shift) ^
                          g.window[g.strstart + va - 1]) &
                        g.hash_mask),
                      (r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h]),
                      (g.head[g.ins_h] = g.strstart);
                  while (0 !== --g.match_length);
                  g.strstart++;
                } else
                  (g.strstart += g.match_length),
                    (g.match_length = 0),
                    (g.ins_h = g.window[g.strstart]),
                    (g.ins_h =
                      ((g.ins_h << g.hash_shift) ^ g.window[g.strstart + 1]) &
                      g.hash_mask);
              else
                (u = H._tr_tally(g, 0, g.window[g.strstart])),
                  g.lookahead--,
                  g.strstart++;
              if (u && (oa(g, !1), 0 === g.strm.avail_out)) return X;
            }
            return (
              (g.insert = g.strstart < va - 1 ? g.strstart : va - 1),
              q === wa
                ? (oa(g, !0), 0 === g.strm.avail_out ? Fa : V)
                : g.last_lit && (oa(g, !1), 0 === g.strm.avail_out)
                ? X
                : dc
            );
          }
          function T(g, q) {
            for (var r, u, t; ; ) {
              if (g.lookahead < Na) {
                if ((z(g), g.lookahead < Na && q === Y)) return X;
                if (0 === g.lookahead) break;
              }
              if (
                ((r = 0),
                g.lookahead >= va &&
                  ((g.ins_h =
                    ((g.ins_h << g.hash_shift) ^
                      g.window[g.strstart + va - 1]) &
                    g.hash_mask),
                  (r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h]),
                  (g.head[g.ins_h] = g.strstart)),
                (g.prev_length = g.match_length),
                (g.prev_match = g.match_start),
                (g.match_length = va - 1),
                0 !== r &&
                  g.prev_length < g.max_lazy_match &&
                  g.strstart - r <= g.w_size - Na &&
                  ((g.match_length = l(g, r)),
                  5 >= g.match_length &&
                    (g.strategy === Hb ||
                      (g.match_length === va &&
                        4096 < g.strstart - g.match_start)) &&
                    (g.match_length = va - 1)),
                g.prev_length >= va && g.match_length <= g.prev_length)
              ) {
                t = g.strstart + g.lookahead - va;
                u = H._tr_tally(
                  g,
                  g.strstart - 1 - g.prev_match,
                  g.prev_length - va
                );
                g.lookahead -= g.prev_length - 1;
                g.prev_length -= 2;
                do
                  ++g.strstart <= t &&
                    ((g.ins_h =
                      ((g.ins_h << g.hash_shift) ^
                        g.window[g.strstart + va - 1]) &
                      g.hash_mask),
                    (r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h]),
                    (g.head[g.ins_h] = g.strstart));
                while (0 !== --g.prev_length);
                if (
                  ((g.match_available = 0),
                  (g.match_length = va - 1),
                  g.strstart++,
                  u && (oa(g, !1), 0 === g.strm.avail_out))
                )
                  return X;
              } else if (g.match_available) {
                if (
                  ((u = H._tr_tally(g, 0, g.window[g.strstart - 1])),
                  u && oa(g, !1),
                  g.strstart++,
                  g.lookahead--,
                  0 === g.strm.avail_out)
                )
                  return X;
              } else (g.match_available = 1), g.strstart++, g.lookahead--;
            }
            return (
              g.match_available &&
                (H._tr_tally(g, 0, g.window[g.strstart - 1]),
                (g.match_available = 0)),
              (g.insert = g.strstart < va - 1 ? g.strstart : va - 1),
              q === wa
                ? (oa(g, !0), 0 === g.strm.avail_out ? Fa : V)
                : g.last_lit && (oa(g, !1), 0 === g.strm.avail_out)
                ? X
                : dc
            );
          }
          function ca(g, l, q, r, t) {
            this.good_length = g;
            this.max_lazy = l;
            this.nice_length = q;
            this.max_chain = r;
            this.func = t;
          }
          function ra() {
            this.strm = null;
            this.status = 0;
            this.pending_buf = null;
            this.wrap =
              this.pending =
              this.pending_out =
              this.pending_buf_size =
                0;
            this.gzhead = null;
            this.gzindex = 0;
            this.method = rb;
            this.last_flush = -1;
            this.w_mask = this.w_bits = this.w_size = 0;
            this.window = null;
            this.window_size = 0;
            this.head = this.prev = null;
            this.nice_match =
              this.good_match =
              this.strategy =
              this.level =
              this.max_lazy_match =
              this.max_chain_length =
              this.prev_length =
              this.lookahead =
              this.match_start =
              this.strstart =
              this.match_available =
              this.prev_match =
              this.match_length =
              this.block_start =
              this.hash_shift =
              this.hash_mask =
              this.hash_bits =
              this.hash_size =
              this.ins_h =
                0;
            this.dyn_ltree = new ob.Buf16(2 * ta);
            this.dyn_dtree = new ob.Buf16(2 * (2 * uc + 1));
            this.bl_tree = new ob.Buf16(2 * (2 * A + 1));
            L(this.dyn_ltree);
            L(this.dyn_dtree);
            L(this.bl_tree);
            this.bl_desc = this.d_desc = this.l_desc = null;
            this.bl_count = new ob.Buf16($a + 1);
            this.heap = new ob.Buf16(2 * Lb + 1);
            L(this.heap);
            this.heap_max = this.heap_len = 0;
            this.depth = new ob.Buf16(2 * Lb + 1);
            L(this.depth);
            this.bi_valid =
              this.bi_buf =
              this.insert =
              this.matches =
              this.static_len =
              this.opt_len =
              this.d_buf =
              this.last_lit =
              this.lit_bufsize =
              this.l_buf =
                0;
          }
          function Qb(g) {
            var l;
            return g && g.state
              ? ((g.total_in = g.total_out = 0),
                (g.data_type = sb),
                (l = g.state),
                (l.pending = 0),
                (l.pending_out = 0),
                0 > l.wrap && (l.wrap = -l.wrap),
                (l.status = l.wrap ? xa : aa),
                (g.adler = 2 === l.wrap ? 0 : 1),
                (l.last_flush = Y),
                H._tr_init(l),
                kb)
              : B(g, ua);
          }
          function Rb(g) {
            var l = Qb(g);
            l === kb &&
              ((g = g.state),
              (g.window_size = 2 * g.w_size),
              L(g.head),
              (g.max_lazy_match = La[g.level].max_lazy),
              (g.good_match = La[g.level].good_length),
              (g.nice_match = La[g.level].nice_length),
              (g.max_chain_length = La[g.level].max_chain),
              (g.strstart = 0),
              (g.block_start = 0),
              (g.lookahead = 0),
              (g.insert = 0),
              (g.match_length = g.prev_length = va - 1),
              (g.match_available = 0),
              (g.ins_h = 0));
            return l;
          }
          function ya(g, l, q, r, t, y) {
            if (!g) return ua;
            var u = 1;
            if (
              (l === cb && (l = 6),
              0 > r ? ((u = 0), (r = -r)) : 15 < r && ((u = 2), (r -= 16)),
              1 > t ||
                t > Kb ||
                q !== rb ||
                8 > r ||
                15 < r ||
                0 > l ||
                9 < l ||
                0 > y ||
                y > sa)
            )
              return B(g, ua);
            8 === r && (r = 9);
            var v = new ra();
            return (
              (g.state = v),
              (v.strm = g),
              (v.wrap = u),
              (v.gzhead = null),
              (v.w_bits = r),
              (v.w_size = 1 << v.w_bits),
              (v.w_mask = v.w_size - 1),
              (v.hash_bits = t + 7),
              (v.hash_size = 1 << v.hash_bits),
              (v.hash_mask = v.hash_size - 1),
              (v.hash_shift = ~~((v.hash_bits + va - 1) / va)),
              (v.window = new ob.Buf8(2 * v.w_size)),
              (v.head = new ob.Buf16(v.hash_size)),
              (v.prev = new ob.Buf16(v.w_size)),
              (v.lit_bufsize = 1 << (t + 6)),
              (v.pending_buf_size = 4 * v.lit_bufsize),
              (v.pending_buf = new ob.Buf8(v.pending_buf_size)),
              (v.d_buf = 1 * v.lit_bufsize),
              (v.l_buf = 3 * v.lit_bufsize),
              (v.level = l),
              (v.strategy = y),
              (v.method = q),
              Rb(g)
            );
          }
          var ob = t("../utils/common"),
            H = t("./trees"),
            jb = t("./adler32"),
            za = t("./crc32"),
            qb = t("./messages"),
            Y = 0,
            wa = 4,
            kb = 0,
            ua = -2,
            cb = -1,
            Hb = 1,
            sa = 4,
            sb = 2,
            rb = 8,
            Kb = 9,
            Lb = 286,
            uc = 30,
            A = 19,
            ta = 2 * Lb + 1,
            $a = 15,
            va = 3,
            fa = 258,
            Na = fa + va + 1,
            xa = 42,
            aa = 113,
            X = 1,
            dc = 2,
            Fa = 3,
            V = 4;
          var La = [
            new ca(0, 0, 0, 0, function (g, l) {
              var q = 65535;
              for (
                q > g.pending_buf_size - 5 && (q = g.pending_buf_size - 5);
                ;

              ) {
                if (1 >= g.lookahead) {
                  if ((z(g), 0 === g.lookahead && l === Y)) return X;
                  if (0 === g.lookahead) break;
                }
                g.strstart += g.lookahead;
                g.lookahead = 0;
                var r = g.block_start + q;
                if (
                  ((0 === g.strstart || g.strstart >= r) &&
                    ((g.lookahead = g.strstart - r),
                    (g.strstart = r),
                    oa(g, !1),
                    0 === g.strm.avail_out)) ||
                  (g.strstart - g.block_start >= g.w_size - Na &&
                    (oa(g, !1), 0 === g.strm.avail_out))
                )
                  return X;
              }
              return (
                (g.insert = 0),
                l === wa
                  ? (oa(g, !0), 0 === g.strm.avail_out ? Fa : V)
                  : (g.strstart > g.block_start && oa(g, !1), X)
              );
            }),
            new ca(4, 4, 8, 4, y),
            new ca(4, 5, 16, 8, y),
            new ca(4, 6, 32, 32, y),
            new ca(4, 4, 16, 16, T),
            new ca(8, 16, 32, 32, T),
            new ca(8, 16, 128, 128, T),
            new ca(8, 32, 128, 256, T),
            new ca(32, 128, 258, 1024, T),
            new ca(32, 258, 258, 4096, T),
          ];
          F.deflateInit = function (g, l) {
            return ya(g, l, rb, 15, 8, 0);
          };
          F.deflateInit2 = ya;
          F.deflateReset = Rb;
          F.deflateResetKeep = Qb;
          F.deflateSetHeader = function (g, l) {
            return g && g.state
              ? 2 !== g.state.wrap
                ? ua
                : ((g.state.gzhead = l), kb)
              : ua;
          };
          F.deflate = function (l, t) {
            var u, v;
            if (!l || !l.state || 5 < t || 0 > t) return l ? B(l, ua) : ua;
            if (
              ((v = l.state),
              !l.output ||
                (!l.input && 0 !== l.avail_in) ||
                (666 === v.status && t !== wa))
            )
              return B(l, 0 === l.avail_out ? -5 : ua);
            if (
              ((v.strm = l),
              (u = v.last_flush),
              (v.last_flush = t),
              v.status === xa)
            )
              if (2 === v.wrap)
                (l.adler = 0),
                  q(v, 31),
                  q(v, 139),
                  q(v, 8),
                  v.gzhead
                    ? (q(
                        v,
                        (v.gzhead.text ? 1 : 0) +
                          (v.gzhead.hcrc ? 2 : 0) +
                          (v.gzhead.extra ? 4 : 0) +
                          (v.gzhead.name ? 8 : 0) +
                          (v.gzhead.comment ? 16 : 0)
                      ),
                      q(v, 255 & v.gzhead.time),
                      q(v, (v.gzhead.time >> 8) & 255),
                      q(v, (v.gzhead.time >> 16) & 255),
                      q(v, (v.gzhead.time >> 24) & 255),
                      q(
                        v,
                        9 === v.level
                          ? 2
                          : 2 <= v.strategy || 2 > v.level
                          ? 4
                          : 0
                      ),
                      q(v, 255 & v.gzhead.os),
                      v.gzhead.extra &&
                        v.gzhead.extra.length &&
                        (q(v, 255 & v.gzhead.extra.length),
                        q(v, (v.gzhead.extra.length >> 8) & 255)),
                      v.gzhead.hcrc &&
                        (l.adler = za(l.adler, v.pending_buf, v.pending, 0)),
                      (v.gzindex = 0),
                      (v.status = 69))
                    : (q(v, 0),
                      q(v, 0),
                      q(v, 0),
                      q(v, 0),
                      q(v, 0),
                      q(
                        v,
                        9 === v.level
                          ? 2
                          : 2 <= v.strategy || 2 > v.level
                          ? 4
                          : 0
                      ),
                      q(v, 3),
                      (v.status = aa));
              else {
                var y = (rb + ((v.w_bits - 8) << 4)) << 8;
                y |=
                  (2 <= v.strategy || 2 > v.level
                    ? 0
                    : 6 > v.level
                    ? 1
                    : 6 === v.level
                    ? 2
                    : 3) << 6;
                0 !== v.strstart && (y |= 32);
                v.status = aa;
                g(v, y + (31 - (y % 31)));
                0 !== v.strstart &&
                  (g(v, l.adler >>> 16), g(v, 65535 & l.adler));
                l.adler = 1;
              }
            if (69 === v.status)
              if (v.gzhead.extra) {
                for (
                  y = v.pending;
                  v.gzindex < (65535 & v.gzhead.extra.length) &&
                  (v.pending !== v.pending_buf_size ||
                    (v.gzhead.hcrc &&
                      v.pending > y &&
                      (l.adler = za(l.adler, v.pending_buf, v.pending - y, y)),
                    r(l),
                    (y = v.pending),
                    v.pending !== v.pending_buf_size));

                )
                  q(v, 255 & v.gzhead.extra[v.gzindex]), v.gzindex++;
                v.gzhead.hcrc &&
                  v.pending > y &&
                  (l.adler = za(l.adler, v.pending_buf, v.pending - y, y));
                v.gzindex === v.gzhead.extra.length &&
                  ((v.gzindex = 0), (v.status = 73));
              } else v.status = 73;
            if (73 === v.status)
              if (v.gzhead.name) {
                y = v.pending;
                do {
                  if (
                    v.pending === v.pending_buf_size &&
                    (v.gzhead.hcrc &&
                      v.pending > y &&
                      (l.adler = za(l.adler, v.pending_buf, v.pending - y, y)),
                    r(l),
                    (y = v.pending),
                    v.pending === v.pending_buf_size)
                  ) {
                    var A = 1;
                    break;
                  }
                  A =
                    v.gzindex < v.gzhead.name.length
                      ? 255 & v.gzhead.name.charCodeAt(v.gzindex++)
                      : 0;
                  q(v, A);
                } while (0 !== A);
                v.gzhead.hcrc &&
                  v.pending > y &&
                  (l.adler = za(l.adler, v.pending_buf, v.pending - y, y));
                0 === A && ((v.gzindex = 0), (v.status = 91));
              } else v.status = 91;
            if (91 === v.status)
              if (v.gzhead.comment) {
                y = v.pending;
                do {
                  if (
                    v.pending === v.pending_buf_size &&
                    (v.gzhead.hcrc &&
                      v.pending > y &&
                      (l.adler = za(l.adler, v.pending_buf, v.pending - y, y)),
                    r(l),
                    (y = v.pending),
                    v.pending === v.pending_buf_size)
                  ) {
                    A = 1;
                    break;
                  }
                  A =
                    v.gzindex < v.gzhead.comment.length
                      ? 255 & v.gzhead.comment.charCodeAt(v.gzindex++)
                      : 0;
                  q(v, A);
                } while (0 !== A);
                v.gzhead.hcrc &&
                  v.pending > y &&
                  (l.adler = za(l.adler, v.pending_buf, v.pending - y, y));
                0 === A && (v.status = 103);
              } else v.status = 103;
            if (
              (103 === v.status &&
                (v.gzhead.hcrc
                  ? (v.pending + 2 > v.pending_buf_size && r(l),
                    v.pending + 2 <= v.pending_buf_size &&
                      (q(v, 255 & l.adler),
                      q(v, (l.adler >> 8) & 255),
                      (l.adler = 0),
                      (v.status = aa)))
                  : (v.status = aa)),
              0 !== v.pending)
            ) {
              if ((r(l), 0 === l.avail_out)) return (v.last_flush = -1), kb;
            } else if (
              0 === l.avail_in &&
              (t << 1) - (4 < t ? 9 : 0) <= (u << 1) - (4 < u ? 9 : 0) &&
              t !== wa
            )
              return B(l, -5);
            if (666 === v.status && 0 !== l.avail_in) return B(l, -5);
            if (
              0 !== l.avail_in ||
              0 !== v.lookahead ||
              (t !== Y && 666 !== v.status)
            ) {
              if (2 === v.strategy)
                a: {
                  for (var F; ; ) {
                    if (0 === v.lookahead && (z(v), 0 === v.lookahead)) {
                      if (t === Y) {
                        var E = X;
                        break a;
                      }
                      break;
                    }
                    if (
                      ((v.match_length = 0),
                      (F = H._tr_tally(v, 0, v.window[v.strstart])),
                      v.lookahead--,
                      v.strstart++,
                      F && (oa(v, !1), 0 === v.strm.avail_out))
                    ) {
                      E = X;
                      break a;
                    }
                  }
                  E =
                    ((v.insert = 0),
                    t === wa
                      ? (oa(v, !0), 0 === v.strm.avail_out ? Fa : V)
                      : v.last_lit && (oa(v, !1), 0 === v.strm.avail_out)
                      ? X
                      : dc);
                }
              else if (3 === v.strategy)
                a: {
                  var T, ca;
                  for (F = v.window; ; ) {
                    if (v.lookahead <= fa) {
                      if ((z(v), v.lookahead <= fa && t === Y)) {
                        E = X;
                        break a;
                      }
                      if (0 === v.lookahead) break;
                    }
                    if (
                      ((v.match_length = 0),
                      v.lookahead >= va &&
                        0 < v.strstart &&
                        ((ca = v.strstart - 1),
                        (T = F[ca]),
                        T === F[++ca] && T === F[++ca] && T === F[++ca]))
                    ) {
                      for (
                        u = v.strstart + fa;
                        T === F[++ca] &&
                        T === F[++ca] &&
                        T === F[++ca] &&
                        T === F[++ca] &&
                        T === F[++ca] &&
                        T === F[++ca] &&
                        T === F[++ca] &&
                        T === F[++ca] &&
                        ca < u;

                      );
                      v.match_length = fa - (u - ca);
                      v.match_length > v.lookahead &&
                        (v.match_length = v.lookahead);
                    }
                    if (
                      (v.match_length >= va
                        ? ((E = H._tr_tally(v, 1, v.match_length - va)),
                          (v.lookahead -= v.match_length),
                          (v.strstart += v.match_length),
                          (v.match_length = 0))
                        : ((E = H._tr_tally(v, 0, v.window[v.strstart])),
                          v.lookahead--,
                          v.strstart++),
                      E && (oa(v, !1), 0 === v.strm.avail_out))
                    ) {
                      E = X;
                      break a;
                    }
                  }
                  E =
                    ((v.insert = 0),
                    t === wa
                      ? (oa(v, !0), 0 === v.strm.avail_out ? Fa : V)
                      : v.last_lit && (oa(v, !1), 0 === v.strm.avail_out)
                      ? X
                      : dc);
                }
              else E = La[v.level].func(v, t);
              if (
                ((E !== Fa && E !== V) || (v.status = 666), E === X || E === Fa)
              )
                return 0 === l.avail_out && (v.last_flush = -1), kb;
              if (
                E === dc &&
                (1 === t
                  ? H._tr_align(v)
                  : 5 !== t &&
                    (H._tr_stored_block(v, 0, 0, !1),
                    3 === t &&
                      (L(v.head),
                      0 === v.lookahead &&
                        ((v.strstart = 0),
                        (v.block_start = 0),
                        (v.insert = 0)))),
                r(l),
                0 === l.avail_out)
              )
                return (v.last_flush = -1), kb;
            }
            return t !== wa
              ? kb
              : 0 >= v.wrap
              ? 1
              : (2 === v.wrap
                  ? (q(v, 255 & l.adler),
                    q(v, (l.adler >> 8) & 255),
                    q(v, (l.adler >> 16) & 255),
                    q(v, (l.adler >> 24) & 255),
                    q(v, 255 & l.total_in),
                    q(v, (l.total_in >> 8) & 255),
                    q(v, (l.total_in >> 16) & 255),
                    q(v, (l.total_in >> 24) & 255))
                  : (g(v, l.adler >>> 16), g(v, 65535 & l.adler)),
                r(l),
                0 < v.wrap && (v.wrap = -v.wrap),
                0 !== v.pending ? kb : 1);
          };
          F.deflateEnd = function (g) {
            var l;
            return g && g.state
              ? ((l = g.state.status),
                l !== xa &&
                69 !== l &&
                73 !== l &&
                91 !== l &&
                103 !== l &&
                l !== aa &&
                666 !== l
                  ? B(g, ua)
                  : ((g.state = null), l === aa ? B(g, -3) : kb))
              : ua;
          };
          F.deflateSetDictionary = function (g, l) {
            var q, r, u;
            var t = l.length;
            if (
              !g ||
              !g.state ||
              ((q = g.state),
              (r = q.wrap),
              2 === r || (1 === r && q.status !== xa) || q.lookahead)
            )
              return ua;
            1 === r && (g.adler = jb(g.adler, l, t, 0));
            q.wrap = 0;
            t >= q.w_size &&
              (0 === r &&
                (L(q.head),
                (q.strstart = 0),
                (q.block_start = 0),
                (q.insert = 0)),
              (u = new ob.Buf8(q.w_size)),
              ob.arraySet(u, l, t - q.w_size, q.w_size, 0),
              (l = u),
              (t = q.w_size));
            u = g.avail_in;
            var y = g.next_in;
            var A = g.input;
            g.avail_in = t;
            g.next_in = 0;
            g.input = l;
            for (z(q); q.lookahead >= va; ) {
              l = q.strstart;
              t = q.lookahead - (va - 1);
              do
                (q.ins_h =
                  ((q.ins_h << q.hash_shift) ^ q.window[l + va - 1]) &
                  q.hash_mask),
                  (q.prev[l & q.w_mask] = q.head[q.ins_h]),
                  (q.head[q.ins_h] = l),
                  l++;
              while (--t);
              q.strstart = l;
              q.lookahead = va - 1;
              z(q);
            }
            return (
              (q.strstart += q.lookahead),
              (q.block_start = q.strstart),
              (q.insert = q.lookahead),
              (q.lookahead = 0),
              (q.match_length = q.prev_length = va - 1),
              (q.match_available = 0),
              (g.next_in = y),
              (g.input = A),
              (g.avail_in = u),
              (q.wrap = r),
              kb
            );
          };
          F.deflateInfo = "pako deflate (from Nodeca project)";
        },
        {
          "../utils/common": 3,
          "./adler32": 5,
          "./crc32": 7,
          "./messages": 13,
          "./trees": 14,
        },
      ],
      9: [
        function (t, E, F) {
          E.exports = function () {
            this.os = this.xflags = this.time = this.text = 0;
            this.extra = null;
            this.extra_len = 0;
            this.comment = this.name = "";
            this.hcrc = 0;
            this.done = !1;
          };
        },
        {},
      ],
      10: [
        function (t, E, F) {
          E.exports = function (t, F) {
            var r, B, q;
            var g = t.state;
            var l = t.next_in;
            var z = t.input;
            var y = l + (t.avail_in - 5);
            var E = t.next_out;
            var L = t.output;
            F = E - (F - t.avail_out);
            var ra = E + (t.avail_out - 257);
            var Qb = g.dmax;
            var Rb = g.wsize;
            var ya = g.whave;
            var ob = g.wnext;
            var H = g.window;
            var jb = g.hold;
            var za = g.bits;
            var qb = g.lencode;
            var Y = g.distcode;
            var wa = (1 << g.lenbits) - 1;
            var kb = (1 << g.distbits) - 1;
            a: do {
              15 > za &&
                ((jb += z[l++] << za),
                (za += 8),
                (jb += z[l++] << za),
                (za += 8));
              var ua = qb[jb & wa];
              b: for (;;) {
                if (
                  ((r = ua >>> 24),
                  (jb >>>= r),
                  (za -= r),
                  (r = (ua >>> 16) & 255),
                  0 === r)
                )
                  L[E++] = 65535 & ua;
                else {
                  if (!(16 & r)) {
                    if (0 === (64 & r)) {
                      ua = qb[(65535 & ua) + (jb & ((1 << r) - 1))];
                      continue b;
                    }
                    if (32 & r) {
                      g.mode = 12;
                      break a;
                    }
                    t.msg = "invalid literal/length code";
                    g.mode = 30;
                    break a;
                  }
                  var cb = 65535 & ua;
                  (r &= 15) &&
                    (za < r && ((jb += z[l++] << za), (za += 8)),
                    (cb += jb & ((1 << r) - 1)),
                    (jb >>>= r),
                    (za -= r));
                  15 > za &&
                    ((jb += z[l++] << za),
                    (za += 8),
                    (jb += z[l++] << za),
                    (za += 8));
                  ua = Y[jb & kb];
                  c: for (;;) {
                    if (
                      ((r = ua >>> 24),
                      (jb >>>= r),
                      (za -= r),
                      (r = (ua >>> 16) & 255),
                      !(16 & r))
                    ) {
                      if (0 === (64 & r)) {
                        ua = Y[(65535 & ua) + (jb & ((1 << r) - 1))];
                        continue c;
                      }
                      t.msg = "invalid distance code";
                      g.mode = 30;
                      break a;
                    }
                    if (
                      ((B = 65535 & ua),
                      (r &= 15),
                      za < r &&
                        ((jb += z[l++] << za),
                        (za += 8),
                        za < r && ((jb += z[l++] << za), (za += 8))),
                      (B += jb & ((1 << r) - 1)),
                      B > Qb)
                    ) {
                      t.msg = "invalid distance too far back";
                      g.mode = 30;
                      break a;
                    }
                    if (((jb >>>= r), (za -= r), (r = E - F), B > r)) {
                      if (((r = B - r), r > ya && g.sane)) {
                        t.msg = "invalid distance too far back";
                        g.mode = 30;
                        break a;
                      }
                      if (((ua = 0), (q = H), 0 === ob)) {
                        if (((ua += Rb - r), r < cb)) {
                          cb -= r;
                          do L[E++] = H[ua++];
                          while (--r);
                          ua = E - B;
                          q = L;
                        }
                      } else if (ob < r) {
                        if (((ua += Rb + ob - r), (r -= ob), r < cb)) {
                          cb -= r;
                          do L[E++] = H[ua++];
                          while (--r);
                          if (((ua = 0), ob < cb)) {
                            r = ob;
                            cb -= r;
                            do L[E++] = H[ua++];
                            while (--r);
                            ua = E - B;
                            q = L;
                          }
                        }
                      } else if (((ua += ob - r), r < cb)) {
                        cb -= r;
                        do L[E++] = H[ua++];
                        while (--r);
                        ua = E - B;
                        q = L;
                      }
                      for (; 2 < cb; )
                        (L[E++] = q[ua++]),
                          (L[E++] = q[ua++]),
                          (L[E++] = q[ua++]),
                          (cb -= 3);
                      cb && ((L[E++] = q[ua++]), 1 < cb && (L[E++] = q[ua++]));
                    } else {
                      ua = E - B;
                      do
                        (L[E++] = L[ua++]),
                          (L[E++] = L[ua++]),
                          (L[E++] = L[ua++]),
                          (cb -= 3);
                      while (2 < cb);
                      cb && ((L[E++] = L[ua++]), 1 < cb && (L[E++] = L[ua++]));
                    }
                    break;
                  }
                }
                break;
              }
            } while (l < y && E < ra);
            cb = za >> 3;
            l -= cb;
            za -= cb << 3;
            t.next_in = l;
            t.next_out = E;
            t.avail_in = l < y ? 5 + (y - l) : 5 - (l - y);
            t.avail_out = E < ra ? 257 + (ra - E) : 257 - (E - ra);
            g.hold = jb & ((1 << za) - 1);
            g.bits = za;
          };
        },
        {},
      ],
      11: [
        function (t, E, F) {
          function B(g) {
            return (
              ((g >>> 24) & 255) +
              ((g >>> 8) & 65280) +
              ((65280 & g) << 8) +
              ((255 & g) << 24)
            );
          }
          function L() {
            this.mode = 0;
            this.last = !1;
            this.wrap = 0;
            this.havedict = !1;
            this.total = this.check = this.dmax = this.flags = 0;
            this.head = null;
            this.wnext = this.whave = this.wsize = this.wbits = 0;
            this.window = null;
            this.extra = this.offset = this.length = this.bits = this.hold = 0;
            this.distcode = this.lencode = null;
            this.have =
              this.ndist =
              this.nlen =
              this.ncode =
              this.distbits =
              this.lenbits =
                0;
            this.next = null;
            this.lens = new T.Buf16(320);
            this.work = new T.Buf16(288);
            this.distdyn = this.lendyn = null;
            this.was = this.back = this.sane = 0;
          }
          function r(g) {
            var l;
            return g && g.state
              ? ((l = g.state),
                (g.total_in = g.total_out = l.total = 0),
                (g.msg = ""),
                l.wrap && (g.adler = 1 & l.wrap),
                (l.mode = H),
                (l.last = 0),
                (l.havedict = 0),
                (l.dmax = 32768),
                (l.head = null),
                (l.hold = 0),
                (l.bits = 0),
                (l.lencode = l.lendyn = new T.Buf32(jb)),
                (l.distcode = l.distdyn = new T.Buf32(za)),
                (l.sane = 1),
                (l.back = -1),
                ya)
              : ob;
          }
          function oa(g) {
            var l;
            return g && g.state
              ? ((l = g.state),
                (l.wsize = 0),
                (l.whave = 0),
                (l.wnext = 0),
                r(g))
              : ob;
          }
          function q(g, l) {
            var q, r;
            return g && g.state
              ? ((r = g.state),
                0 > l
                  ? ((q = 0), (l = -l))
                  : ((q = (l >> 4) + 1), 48 > l && (l &= 15)),
                l && (8 > l || 15 < l)
                  ? ob
                  : (null !== r.window && r.wbits !== l && (r.window = null),
                    (r.wrap = q),
                    (r.wbits = l),
                    oa(g)))
              : ob;
          }
          function g(g, l) {
            var r, t;
            return g
              ? ((t = new L()),
                (g.state = t),
                (t.window = null),
                (r = q(g, l)),
                r !== ya && (g.state = null),
                r)
              : ob;
          }
          function l(g, l, q, r) {
            var t;
            g = g.state;
            return (
              null === g.window &&
                ((g.wsize = 1 << g.wbits),
                (g.wnext = 0),
                (g.whave = 0),
                (g.window = new T.Buf8(g.wsize))),
              r >= g.wsize
                ? (T.arraySet(g.window, l, q - g.wsize, g.wsize, 0),
                  (g.wnext = 0),
                  (g.whave = g.wsize))
                : ((t = g.wsize - g.wnext),
                  t > r && (t = r),
                  T.arraySet(g.window, l, q - r, t, g.wnext),
                  (r -= t),
                  r
                    ? (T.arraySet(g.window, l, q - r, r, 0),
                      (g.wnext = r),
                      (g.whave = g.wsize))
                    : ((g.wnext += t),
                      g.wnext === g.wsize && (g.wnext = 0),
                      g.whave < g.wsize && (g.whave += t))),
              0
            );
          }
          var z,
            y,
            T = t("../utils/common"),
            ca = t("./adler32"),
            ra = t("./crc32"),
            Qb = t("./inffast"),
            Rb = t("./inftrees"),
            ya = 0,
            ob = -2,
            H = 1,
            jb = 852,
            za = 592,
            qb = !0;
          F.inflateReset = oa;
          F.inflateReset2 = q;
          F.inflateResetKeep = r;
          F.inflateInit = function (l) {
            return g(l, 15);
          };
          F.inflateInit2 = g;
          F.inflate = function (g, q) {
            var r,
              t,
              E,
              F,
              L,
              Y,
              oa,
              wa = 0,
              za = new T.Buf8(4),
              jb = [
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ];
            if (!g || !g.state || !g.output || (!g.input && 0 !== g.avail_in))
              return ob;
            var A = g.state;
            12 === A.mode && (A.mode = 13);
            var ta = g.next_out;
            var $a = g.output;
            var va = g.avail_out;
            var fa = g.next_in;
            var Na = g.input;
            var xa = g.avail_in;
            var aa = A.hold;
            var X = A.bits;
            var dc = xa;
            var Fa = va;
            var V = ya;
            a: for (;;)
              switch (A.mode) {
                case H:
                  if (0 === A.wrap) {
                    A.mode = 13;
                    break;
                  }
                  for (; 16 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  if (2 & A.wrap && 35615 === aa) {
                    A.check = 0;
                    za[0] = 255 & aa;
                    za[1] = (aa >>> 8) & 255;
                    A.check = ra(A.check, za, 2, 0);
                    X = aa = 0;
                    A.mode = 2;
                    break;
                  }
                  if (
                    ((A.flags = 0),
                    A.head && (A.head.done = !1),
                    !(1 & A.wrap) || (((255 & aa) << 8) + (aa >> 8)) % 31)
                  ) {
                    g.msg = "incorrect header check";
                    A.mode = 30;
                    break;
                  }
                  if (8 !== (15 & aa)) {
                    g.msg = "unknown compression method";
                    A.mode = 30;
                    break;
                  }
                  if (
                    ((aa >>>= 4), (X -= 4), (Y = (15 & aa) + 8), 0 === A.wbits)
                  )
                    A.wbits = Y;
                  else if (Y > A.wbits) {
                    g.msg = "invalid window size";
                    A.mode = 30;
                    break;
                  }
                  A.dmax = 1 << Y;
                  g.adler = A.check = 1;
                  A.mode = 512 & aa ? 10 : 12;
                  X = aa = 0;
                  break;
                case 2:
                  for (; 16 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  if (((A.flags = aa), 8 !== (255 & A.flags))) {
                    g.msg = "unknown compression method";
                    A.mode = 30;
                    break;
                  }
                  if (57344 & A.flags) {
                    g.msg = "unknown header flags set";
                    A.mode = 30;
                    break;
                  }
                  A.head && (A.head.text = (aa >> 8) & 1);
                  512 & A.flags &&
                    ((za[0] = 255 & aa),
                    (za[1] = (aa >>> 8) & 255),
                    (A.check = ra(A.check, za, 2, 0)));
                  X = aa = 0;
                  A.mode = 3;
                case 3:
                  for (; 32 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  A.head && (A.head.time = aa);
                  512 & A.flags &&
                    ((za[0] = 255 & aa),
                    (za[1] = (aa >>> 8) & 255),
                    (za[2] = (aa >>> 16) & 255),
                    (za[3] = (aa >>> 24) & 255),
                    (A.check = ra(A.check, za, 4, 0)));
                  X = aa = 0;
                  A.mode = 4;
                case 4:
                  for (; 16 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  A.head && ((A.head.xflags = 255 & aa), (A.head.os = aa >> 8));
                  512 & A.flags &&
                    ((za[0] = 255 & aa),
                    (za[1] = (aa >>> 8) & 255),
                    (A.check = ra(A.check, za, 2, 0)));
                  X = aa = 0;
                  A.mode = 5;
                case 5:
                  if (1024 & A.flags) {
                    for (; 16 > X; ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    A.length = aa;
                    A.head && (A.head.extra_len = aa);
                    512 & A.flags &&
                      ((za[0] = 255 & aa),
                      (za[1] = (aa >>> 8) & 255),
                      (A.check = ra(A.check, za, 2, 0)));
                    X = aa = 0;
                  } else A.head && (A.head.extra = null);
                  A.mode = 6;
                case 6:
                  if (
                    1024 & A.flags &&
                    ((r = A.length),
                    r > xa && (r = xa),
                    r &&
                      (A.head &&
                        ((Y = A.head.extra_len - A.length),
                        A.head.extra ||
                          (A.head.extra = Array(A.head.extra_len)),
                        T.arraySet(A.head.extra, Na, fa, r, Y)),
                      512 & A.flags && (A.check = ra(A.check, Na, r, fa)),
                      (xa -= r),
                      (fa += r),
                      (A.length -= r)),
                    A.length)
                  )
                    break a;
                  A.length = 0;
                  A.mode = 7;
                case 7:
                  if (2048 & A.flags) {
                    if (0 === xa) break a;
                    r = 0;
                    do
                      (Y = Na[fa + r++]),
                        A.head &&
                          Y &&
                          65536 > A.length &&
                          (A.head.name += String.fromCharCode(Y));
                    while (Y && r < xa);
                    if (
                      (512 & A.flags && (A.check = ra(A.check, Na, r, fa)),
                      (xa -= r),
                      (fa += r),
                      Y)
                    )
                      break a;
                  } else A.head && (A.head.name = null);
                  A.length = 0;
                  A.mode = 8;
                case 8:
                  if (4096 & A.flags) {
                    if (0 === xa) break a;
                    r = 0;
                    do
                      (Y = Na[fa + r++]),
                        A.head &&
                          Y &&
                          65536 > A.length &&
                          (A.head.comment += String.fromCharCode(Y));
                    while (Y && r < xa);
                    if (
                      (512 & A.flags && (A.check = ra(A.check, Na, r, fa)),
                      (xa -= r),
                      (fa += r),
                      Y)
                    )
                      break a;
                  } else A.head && (A.head.comment = null);
                  A.mode = 9;
                case 9:
                  if (512 & A.flags) {
                    for (; 16 > X; ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    if (aa !== (65535 & A.check)) {
                      g.msg = "header crc mismatch";
                      A.mode = 30;
                      break;
                    }
                    X = aa = 0;
                  }
                  A.head &&
                    ((A.head.hcrc = (A.flags >> 9) & 1), (A.head.done = !0));
                  g.adler = A.check = 0;
                  A.mode = 12;
                  break;
                case 10:
                  for (; 32 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  g.adler = A.check = B(aa);
                  X = aa = 0;
                  A.mode = 11;
                case 11:
                  if (0 === A.havedict)
                    return (
                      (g.next_out = ta),
                      (g.avail_out = va),
                      (g.next_in = fa),
                      (g.avail_in = xa),
                      (A.hold = aa),
                      (A.bits = X),
                      2
                    );
                  g.adler = A.check = 1;
                  A.mode = 12;
                case 12:
                  if (5 === q || 6 === q) break a;
                case 13:
                  if (A.last) {
                    aa >>>= 7 & X;
                    X -= 7 & X;
                    A.mode = 27;
                    break;
                  }
                  for (; 3 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  switch (((A.last = 1 & aa), (aa >>>= 1), --X, 3 & aa)) {
                    case 0:
                      A.mode = 14;
                      break;
                    case 1:
                      var La = A;
                      if (qb) {
                        z = new T.Buf32(512);
                        y = new T.Buf32(32);
                        for (E = 0; 144 > E; ) La.lens[E++] = 8;
                        for (; 256 > E; ) La.lens[E++] = 9;
                        for (; 280 > E; ) La.lens[E++] = 7;
                        for (; 288 > E; ) La.lens[E++] = 8;
                        Rb(1, La.lens, 0, 288, z, 0, La.work, { bits: 9 });
                        for (E = 0; 32 > E; ) La.lens[E++] = 5;
                        Rb(2, La.lens, 0, 32, y, 0, La.work, { bits: 5 });
                        qb = !1;
                      }
                      La.lencode = z;
                      La.lenbits = 9;
                      La.distcode = y;
                      La.distbits = 5;
                      if (((A.mode = 20), 6 === q)) {
                        aa >>>= 2;
                        X -= 2;
                        break a;
                      }
                      break;
                    case 2:
                      A.mode = 17;
                      break;
                    case 3:
                      (g.msg = "invalid block type"), (A.mode = 30);
                  }
                  aa >>>= 2;
                  X -= 2;
                  break;
                case 14:
                  aa >>>= 7 & X;
                  for (X -= 7 & X; 32 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  if ((65535 & aa) !== ((aa >>> 16) ^ 65535)) {
                    g.msg = "invalid stored block lengths";
                    A.mode = 30;
                    break;
                  }
                  if (
                    ((A.length = 65535 & aa),
                    (aa = 0),
                    (X = 0),
                    (A.mode = 15),
                    6 === q)
                  )
                    break a;
                case 15:
                  A.mode = 16;
                case 16:
                  if ((r = A.length)) {
                    if ((r > xa && (r = xa), r > va && (r = va), 0 === r))
                      break a;
                    T.arraySet($a, Na, fa, r, ta);
                    xa -= r;
                    fa += r;
                    va -= r;
                    ta += r;
                    A.length -= r;
                    break;
                  }
                  A.mode = 12;
                  break;
                case 17:
                  for (; 14 > X; ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  if (
                    ((A.nlen = (31 & aa) + 257),
                    (aa >>>= 5),
                    (X -= 5),
                    (A.ndist = (31 & aa) + 1),
                    (aa >>>= 5),
                    (X -= 5),
                    (A.ncode = (15 & aa) + 4),
                    (aa >>>= 4),
                    (X -= 4),
                    286 < A.nlen || 30 < A.ndist)
                  ) {
                    g.msg = "too many length or distance symbols";
                    A.mode = 30;
                    break;
                  }
                  A.have = 0;
                  A.mode = 18;
                case 18:
                  for (; A.have < A.ncode; ) {
                    for (; 3 > X; ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    A.lens[jb[A.have++]] = 7 & aa;
                    aa >>>= 3;
                    X -= 3;
                  }
                  for (; 19 > A.have; ) A.lens[jb[A.have++]] = 0;
                  if (
                    ((A.lencode = A.lendyn),
                    (A.lenbits = 7),
                    (oa = { bits: A.lenbits }),
                    (V = Rb(0, A.lens, 0, 19, A.lencode, 0, A.work, oa)),
                    (A.lenbits = oa.bits),
                    V)
                  ) {
                    g.msg = "invalid code lengths set";
                    A.mode = 30;
                    break;
                  }
                  A.have = 0;
                  A.mode = 19;
                case 19:
                  for (; A.have < A.nlen + A.ndist; ) {
                    for (
                      ;
                      (wa = A.lencode[aa & ((1 << A.lenbits) - 1)]),
                        (F = wa >>> 24),
                        (La = 65535 & wa),
                        !(F <= X);

                    ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    if (16 > La) (aa >>>= F), (X -= F), (A.lens[A.have++] = La);
                    else {
                      if (16 === La) {
                        for (E = F + 2; X < E; ) {
                          if (0 === xa) break a;
                          xa--;
                          aa += Na[fa++] << X;
                          X += 8;
                        }
                        if (((aa >>>= F), (X -= F), 0 === A.have)) {
                          g.msg = "invalid bit length repeat";
                          A.mode = 30;
                          break;
                        }
                        Y = A.lens[A.have - 1];
                        r = 3 + (3 & aa);
                        aa >>>= 2;
                        X -= 2;
                      } else if (17 === La) {
                        for (E = F + 3; X < E; ) {
                          if (0 === xa) break a;
                          xa--;
                          aa += Na[fa++] << X;
                          X += 8;
                        }
                        aa >>>= F;
                        X -= F;
                        Y = 0;
                        r = 3 + (7 & aa);
                        aa >>>= 3;
                        X -= 3;
                      } else {
                        for (E = F + 7; X < E; ) {
                          if (0 === xa) break a;
                          xa--;
                          aa += Na[fa++] << X;
                          X += 8;
                        }
                        aa >>>= F;
                        X -= F;
                        Y = 0;
                        r = 11 + (127 & aa);
                        aa >>>= 7;
                        X -= 7;
                      }
                      if (A.have + r > A.nlen + A.ndist) {
                        g.msg = "invalid bit length repeat";
                        A.mode = 30;
                        break;
                      }
                      for (; r--; ) A.lens[A.have++] = Y;
                    }
                  }
                  if (30 === A.mode) break;
                  if (0 === A.lens[256]) {
                    g.msg = "invalid code -- missing end-of-block";
                    A.mode = 30;
                    break;
                  }
                  if (
                    ((A.lenbits = 9),
                    (oa = { bits: A.lenbits }),
                    (V = Rb(1, A.lens, 0, A.nlen, A.lencode, 0, A.work, oa)),
                    (A.lenbits = oa.bits),
                    V)
                  ) {
                    g.msg = "invalid literal/lengths set";
                    A.mode = 30;
                    break;
                  }
                  if (
                    ((A.distbits = 6),
                    (A.distcode = A.distdyn),
                    (oa = { bits: A.distbits }),
                    (V = Rb(
                      2,
                      A.lens,
                      A.nlen,
                      A.ndist,
                      A.distcode,
                      0,
                      A.work,
                      oa
                    )),
                    (A.distbits = oa.bits),
                    V)
                  ) {
                    g.msg = "invalid distances set";
                    A.mode = 30;
                    break;
                  }
                  if (((A.mode = 20), 6 === q)) break a;
                case 20:
                  A.mode = 21;
                case 21:
                  if (6 <= xa && 258 <= va) {
                    g.next_out = ta;
                    g.avail_out = va;
                    g.next_in = fa;
                    g.avail_in = xa;
                    A.hold = aa;
                    A.bits = X;
                    Qb(g, Fa);
                    ta = g.next_out;
                    $a = g.output;
                    va = g.avail_out;
                    fa = g.next_in;
                    Na = g.input;
                    xa = g.avail_in;
                    aa = A.hold;
                    X = A.bits;
                    12 === A.mode && (A.back = -1);
                    break;
                  }
                  for (
                    A.back = 0;
                    (wa = A.lencode[aa & ((1 << A.lenbits) - 1)]),
                      (F = wa >>> 24),
                      (E = (wa >>> 16) & 255),
                      (La = 65535 & wa),
                      !(F <= X);

                  ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  if (E && 0 === (240 & E)) {
                    var u = F;
                    var qd = E;
                    for (
                      L = La;
                      (wa = A.lencode[L + ((aa & ((1 << (u + qd)) - 1)) >> u)]),
                        (F = wa >>> 24),
                        (E = (wa >>> 16) & 255),
                        (La = 65535 & wa),
                        !(u + F <= X);

                    ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    aa >>>= u;
                    X -= u;
                    A.back += u;
                  }
                  if (
                    ((aa >>>= F),
                    (X -= F),
                    (A.back += F),
                    (A.length = La),
                    0 === E)
                  ) {
                    A.mode = 26;
                    break;
                  }
                  if (32 & E) {
                    A.back = -1;
                    A.mode = 12;
                    break;
                  }
                  if (64 & E) {
                    g.msg = "invalid literal/length code";
                    A.mode = 30;
                    break;
                  }
                  A.extra = 15 & E;
                  A.mode = 22;
                case 22:
                  if (A.extra) {
                    for (E = A.extra; X < E; ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    A.length += aa & ((1 << A.extra) - 1);
                    aa >>>= A.extra;
                    X -= A.extra;
                    A.back += A.extra;
                  }
                  A.was = A.length;
                  A.mode = 23;
                case 23:
                  for (
                    ;
                    (wa = A.distcode[aa & ((1 << A.distbits) - 1)]),
                      (F = wa >>> 24),
                      (E = (wa >>> 16) & 255),
                      (La = 65535 & wa),
                      !(F <= X);

                  ) {
                    if (0 === xa) break a;
                    xa--;
                    aa += Na[fa++] << X;
                    X += 8;
                  }
                  if (0 === (240 & E)) {
                    u = F;
                    qd = E;
                    for (
                      L = La;
                      (wa =
                        A.distcode[L + ((aa & ((1 << (u + qd)) - 1)) >> u)]),
                        (F = wa >>> 24),
                        (E = (wa >>> 16) & 255),
                        (La = 65535 & wa),
                        !(u + F <= X);

                    ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    aa >>>= u;
                    X -= u;
                    A.back += u;
                  }
                  if (((aa >>>= F), (X -= F), (A.back += F), 64 & E)) {
                    g.msg = "invalid distance code";
                    A.mode = 30;
                    break;
                  }
                  A.offset = La;
                  A.extra = 15 & E;
                  A.mode = 24;
                case 24:
                  if (A.extra) {
                    for (E = A.extra; X < E; ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    A.offset += aa & ((1 << A.extra) - 1);
                    aa >>>= A.extra;
                    X -= A.extra;
                    A.back += A.extra;
                  }
                  if (A.offset > A.dmax) {
                    g.msg = "invalid distance too far back";
                    A.mode = 30;
                    break;
                  }
                  A.mode = 25;
                case 25:
                  if (0 === va) break a;
                  if (((r = Fa - va), A.offset > r)) {
                    if (((r = A.offset - r), r > A.whave && A.sane)) {
                      g.msg = "invalid distance too far back";
                      A.mode = 30;
                      break;
                    }
                    r > A.wnext
                      ? ((r -= A.wnext), (t = A.wsize - r))
                      : (t = A.wnext - r);
                    r > A.length && (r = A.length);
                    E = A.window;
                  } else (E = $a), (t = ta - A.offset), (r = A.length);
                  r > va && (r = va);
                  va -= r;
                  A.length -= r;
                  do $a[ta++] = E[t++];
                  while (--r);
                  0 === A.length && (A.mode = 21);
                  break;
                case 26:
                  if (0 === va) break a;
                  $a[ta++] = A.length;
                  va--;
                  A.mode = 21;
                  break;
                case 27:
                  if (A.wrap) {
                    for (; 32 > X; ) {
                      if (0 === xa) break a;
                      xa--;
                      aa |= Na[fa++] << X;
                      X += 8;
                    }
                    if (
                      ((Fa -= va),
                      (g.total_out += Fa),
                      (A.total += Fa),
                      Fa &&
                        (g.adler = A.check =
                          A.flags
                            ? ra(A.check, $a, Fa, ta - Fa)
                            : ca(A.check, $a, Fa, ta - Fa)),
                      (Fa = va),
                      (A.flags ? aa : B(aa)) !== A.check)
                    ) {
                      g.msg = "incorrect data check";
                      A.mode = 30;
                      break;
                    }
                    X = aa = 0;
                  }
                  A.mode = 28;
                case 28:
                  if (A.wrap && A.flags) {
                    for (; 32 > X; ) {
                      if (0 === xa) break a;
                      xa--;
                      aa += Na[fa++] << X;
                      X += 8;
                    }
                    if (aa !== (4294967295 & A.total)) {
                      g.msg = "incorrect length check";
                      A.mode = 30;
                      break;
                    }
                    X = aa = 0;
                  }
                  A.mode = 29;
                case 29:
                  V = 1;
                  break a;
                case 30:
                  V = -3;
                  break a;
                case 31:
                  return -4;
                default:
                  return ob;
              }
            return (
              (g.next_out = ta),
              (g.avail_out = va),
              (g.next_in = fa),
              (g.avail_in = xa),
              (A.hold = aa),
              (A.bits = X),
              (A.wsize ||
                (Fa !== g.avail_out &&
                  30 > A.mode &&
                  (27 > A.mode || 4 !== q))) &&
              l(g, g.output, g.next_out, Fa - g.avail_out)
                ? ((A.mode = 31), -4)
                : ((dc -= g.avail_in),
                  (Fa -= g.avail_out),
                  (g.total_in += dc),
                  (g.total_out += Fa),
                  (A.total += Fa),
                  A.wrap &&
                    Fa &&
                    (g.adler = A.check =
                      A.flags
                        ? ra(A.check, $a, Fa, g.next_out - Fa)
                        : ca(A.check, $a, Fa, g.next_out - Fa)),
                  (g.data_type =
                    A.bits +
                    (A.last ? 64 : 0) +
                    (12 === A.mode ? 128 : 0) +
                    (20 === A.mode || 15 === A.mode ? 256 : 0)),
                  ((0 === dc && 0 === Fa) || 4 === q) && V === ya && (V = -5),
                  V)
            );
          };
          F.inflateEnd = function (g) {
            if (!g || !g.state) return ob;
            var l = g.state;
            return l.window && (l.window = null), (g.state = null), ya;
          };
          F.inflateGetHeader = function (g, l) {
            var q;
            return g && g.state
              ? ((q = g.state),
                0 === (2 & q.wrap) ? ob : ((q.head = l), (l.done = !1), ya))
              : ob;
          };
          F.inflateSetDictionary = function (g, q) {
            var r,
              t,
              y = q.length;
            return g && g.state
              ? ((r = g.state),
                0 !== r.wrap && 11 !== r.mode
                  ? ob
                  : 11 === r.mode &&
                    ((t = 1), (t = ca(t, q, y, 0)), t !== r.check)
                  ? -3
                  : l(g, q, y, y)
                  ? ((r.mode = 31), -4)
                  : ((r.havedict = 1), ya))
              : ob;
          };
          F.inflateInfo = "pako inflate (from Nodeca project)";
        },
        {
          "../utils/common": 3,
          "./adler32": 5,
          "./crc32": 7,
          "./inffast": 10,
          "./inftrees": 12,
        },
      ],
      12: [
        function (t, E, F) {
          var B = t("../utils/common"),
            L = [
              3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43,
              51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
            ],
            r = [
              16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
              19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
            ],
            oa = [
              1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257,
              385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289,
              16385, 24577, 0, 0,
            ],
            q = [
              16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
              23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
            ];
          E.exports = function (g, l, t, y, E, F, ra, Qb) {
            var z,
              T,
              ca,
              H,
              jb,
              za,
              qb = Qb.bits,
              Y,
              wa,
              kb,
              ua,
              cb,
              Hb = 0,
              sa,
              sb = null,
              rb = 0,
              Kb = new B.Buf16(16);
            var Lb = new B.Buf16(16);
            var uc = null,
              A = 0;
            for (Y = 0; 15 >= Y; Y++) Kb[Y] = 0;
            for (wa = 0; wa < y; wa++) Kb[l[t + wa]]++;
            var ta = qb;
            for (kb = 15; 1 <= kb && 0 === Kb[kb]; kb--);
            if ((ta > kb && (ta = kb), 0 === kb))
              return (E[F++] = 20971520), (E[F++] = 20971520), (Qb.bits = 1), 0;
            for (qb = 1; qb < kb && 0 === Kb[qb]; qb++);
            ta < qb && (ta = qb);
            for (Y = z = 1; 15 >= Y; Y++)
              if (((z <<= 1), (z -= Kb[Y]), 0 > z)) return -1;
            if (0 < z && (0 === g || 1 !== kb)) return -1;
            Lb[1] = 0;
            for (Y = 1; 15 > Y; Y++) Lb[Y + 1] = Lb[Y] + Kb[Y];
            for (wa = 0; wa < y; wa++)
              0 !== l[t + wa] && (ra[Lb[l[t + wa]]++] = wa);
            if (
              (0 === g
                ? ((sb = uc = ra), (H = 19))
                : 1 === g
                ? ((sb = L), (rb -= 257), (uc = r), (A -= 257), (H = 256))
                : ((sb = oa), (uc = q), (H = -1)),
              (sa = 0),
              (wa = 0),
              (Y = qb),
              (Lb = F),
              (ua = ta),
              (cb = 0),
              (ca = -1),
              (Hb = 1 << ta),
              (y = Hb - 1),
              (1 === g && 852 < Hb) || (2 === g && 592 < Hb))
            )
              return 1;
            for (var $a = 0; ; ) {
              $a++;
              var va = Y - cb;
              ra[wa] < H
                ? ((jb = 0), (za = ra[wa]))
                : ra[wa] > H
                ? ((jb = uc[A + ra[wa]]), (za = sb[rb + ra[wa]]))
                : ((jb = 96), (za = 0));
              z = 1 << (Y - cb);
              qb = T = 1 << ua;
              do
                (T -= z),
                  (E[Lb + (sa >> cb) + T] = (va << 24) | (jb << 16) | za | 0);
              while (0 !== T);
              for (z = 1 << (Y - 1); sa & z; ) z >>= 1;
              if (
                (0 !== z ? ((sa &= z - 1), (sa += z)) : (sa = 0),
                wa++,
                0 === --Kb[Y])
              ) {
                if (Y === kb) break;
                Y = l[t + ra[wa]];
              }
              if (Y > ta && (sa & y) !== ca) {
                0 === cb && (cb = ta);
                Lb += qb;
                ua = Y - cb;
                for (
                  z = 1 << ua;
                  ua + cb < kb && ((z -= Kb[ua + cb]), !(0 >= z));

                )
                  ua++, (z <<= 1);
                if (
                  ((Hb += 1 << ua),
                  (1 === g && 852 < Hb) || (2 === g && 592 < Hb))
                )
                  return 1;
                ca = sa & y;
                E[ca] = (ta << 24) | (ua << 16) | (Lb - F) | 0;
              }
            }
            return (
              0 !== sa && (E[Lb + sa] = ((Y - cb) << 24) | 4194304),
              (Qb.bits = ta),
              0
            );
          };
        },
        { "../utils/common": 3 },
      ],
      13: [
        function (t, E, F) {
          E.exports = {
            2: "need dictionary",
            1: "stream end",
            0: "",
            "-1": "file error",
            "-2": "stream error",
            "-3": "data error",
            "-4": "insufficient memory",
            "-5": "buffer error",
            "-6": "incompatible version",
          };
        },
        {},
      ],
      14: [
        function (t, E, F) {
          function B(g) {
            for (var l = g.length; 0 <= --l; ) g[l] = 0;
          }
          function L(g, l, q, r, t) {
            this.static_tree = g;
            this.extra_bits = l;
            this.extra_base = q;
            this.elems = r;
            this.max_length = t;
            this.has_stree = g && g.length;
          }
          function r(g, l) {
            this.dyn_tree = g;
            this.max_code = 0;
            this.stat_desc = l;
          }
          function oa(g, l) {
            g.pending_buf[g.pending++] = 255 & l;
            g.pending_buf[g.pending++] = (l >>> 8) & 255;
          }
          function q(g, l, q) {
            g.bi_valid > rb - q
              ? ((g.bi_buf |= (l << g.bi_valid) & 65535),
                oa(g, g.bi_buf),
                (g.bi_buf = l >> (rb - g.bi_valid)),
                (g.bi_valid += q - rb))
              : ((g.bi_buf |= (l << g.bi_valid) & 65535), (g.bi_valid += q));
          }
          function g(g, l, r) {
            q(g, r[2 * l], r[2 * l + 1]);
          }
          function l(g, l) {
            var q = 0;
            do (q |= 1 & g), (g >>>= 1), (q <<= 1);
            while (0 < --l);
            return q >>> 1;
          }
          function z(g, q, r) {
            var t,
              u = Array(sb + 1),
              v = 0;
            for (t = 1; t <= sb; t++) u[t] = v = (v + r[t - 1]) << 1;
            for (r = 0; r <= q; r++)
              (t = g[2 * r + 1]), 0 !== t && (g[2 * r] = l(u[t]++, t));
          }
          function y(g) {
            var l;
            for (l = 0; l < ua; l++) g.dyn_ltree[2 * l] = 0;
            for (l = 0; l < cb; l++) g.dyn_dtree[2 * l] = 0;
            for (l = 0; l < Hb; l++) g.bl_tree[2 * l] = 0;
            g.dyn_ltree[2 * Kb] = 1;
            g.opt_len = g.static_len = 0;
            g.last_lit = g.matches = 0;
          }
          function T(g) {
            8 < g.bi_valid
              ? oa(g, g.bi_buf)
              : 0 < g.bi_valid && (g.pending_buf[g.pending++] = g.bi_buf);
            g.bi_buf = 0;
            g.bi_valid = 0;
          }
          function ca(g, l, q, r) {
            var t = 2 * l,
              u = 2 * q;
            return g[t] < g[u] || (g[t] === g[u] && r[l] <= r[q]);
          }
          function ra(g, l, q) {
            for (
              var r = g.heap[q], t = q << 1;
              t <= g.heap_len &&
              (t < g.heap_len &&
                ca(l, g.heap[t + 1], g.heap[t], g.depth) &&
                t++,
              !ca(l, r, g.heap[t], g.depth));

            )
              (g.heap[q] = g.heap[t]), (q = t), (t <<= 1);
            g.heap[q] = r;
          }
          function Qb(l, r, t) {
            var u,
              v,
              y = 0;
            if (0 !== l.last_lit) {
              do {
                var z =
                  (l.pending_buf[l.d_buf + 2 * y] << 8) |
                  l.pending_buf[l.d_buf + 2 * y + 1];
                var A = l.pending_buf[l.l_buf + y];
                y++;
                0 === z
                  ? g(l, A, r)
                  : ((u = X[A]),
                    g(l, u + kb + 1, r),
                    (v = ta[u]),
                    0 !== v && ((A -= dc[u]), q(l, A, v)),
                    z--,
                    (u = 256 > z ? aa[z] : aa[256 + (z >>> 7)]),
                    g(l, u, t),
                    (v = $a[u]),
                    0 !== v && ((z -= Fa[u]), q(l, z, v)));
              } while (y < l.last_lit);
            }
            g(l, Kb, r);
          }
          function Rb(g, l) {
            var q,
              r = l.dyn_tree;
            var t = l.stat_desc.static_tree;
            var u = l.stat_desc.has_stree,
              v = l.stat_desc.elems,
              y = -1;
            g.heap_len = 0;
            g.heap_max = sa;
            for (q = 0; q < v; q++)
              0 !== r[2 * q]
                ? ((g.heap[++g.heap_len] = y = q), (g.depth[q] = 0))
                : (r[2 * q + 1] = 0);
            for (; 2 > g.heap_len; ) {
              var A = (g.heap[++g.heap_len] = 2 > y ? ++y : 0);
              r[2 * A] = 1;
              g.depth[A] = 0;
              g.opt_len--;
              u && (g.static_len -= t[2 * A + 1]);
            }
            l.max_code = y;
            for (q = g.heap_len >> 1; 1 <= q; q--) ra(g, r, q);
            A = v;
            do
              (q = g.heap[1]),
                (g.heap[1] = g.heap[g.heap_len--]),
                ra(g, r, 1),
                (t = g.heap[1]),
                (g.heap[--g.heap_max] = q),
                (g.heap[--g.heap_max] = t),
                (r[2 * A] = r[2 * q] + r[2 * t]),
                (g.depth[A] =
                  (g.depth[q] >= g.depth[t] ? g.depth[q] : g.depth[t]) + 1),
                (r[2 * q + 1] = r[2 * t + 1] = A),
                (g.heap[1] = A++),
                ra(g, r, 1);
            while (2 <= g.heap_len);
            g.heap[--g.heap_max] = g.heap[1];
            var B, E;
            q = l.dyn_tree;
            A = l.max_code;
            v = l.stat_desc.static_tree;
            var F = l.stat_desc.has_stree,
              O = l.stat_desc.extra_bits,
              H = l.stat_desc.extra_base,
              L = l.stat_desc.max_length,
              T = 0;
            for (u = 0; u <= sb; u++) g.bl_count[u] = 0;
            q[2 * g.heap[g.heap_max] + 1] = 0;
            for (l = g.heap_max + 1; l < sa; l++)
              (t = g.heap[l]),
                (u = q[2 * q[2 * t + 1] + 1] + 1),
                u > L && ((u = L), T++),
                (q[2 * t + 1] = u),
                t > A ||
                  (g.bl_count[u]++,
                  (B = 0),
                  t >= H && (B = O[t - H]),
                  (E = q[2 * t]),
                  (g.opt_len += E * (u + B)),
                  F && (g.static_len += E * (v[2 * t + 1] + B)));
            if (0 !== T) {
              do {
                for (u = L - 1; 0 === g.bl_count[u]; ) u--;
                g.bl_count[u]--;
                g.bl_count[u + 1] += 2;
                g.bl_count[L]--;
                T -= 2;
              } while (0 < T);
              for (u = L; 0 !== u; u--)
                for (t = g.bl_count[u]; 0 !== t; )
                  (B = g.heap[--l]),
                    B > A ||
                      (q[2 * B + 1] !== u &&
                        ((g.opt_len += (u - q[2 * B + 1]) * q[2 * B]),
                        (q[2 * B + 1] = u)),
                      t--);
            }
            z(r, y, g.bl_count);
          }
          function ya(g, l, q) {
            var r,
              t = -1,
              u = l[1],
              v = 0,
              y = 7,
              z = 4;
            0 === u && ((y = 138), (z = 3));
            l[2 * (q + 1) + 1] = 65535;
            for (r = 0; r <= q; r++) {
              var B = u;
              u = l[2 * (r + 1) + 1];
              (++v < y && B === u) ||
                (v < z
                  ? (g.bl_tree[2 * B] += v)
                  : 0 !== B
                  ? (B !== t && g.bl_tree[2 * B]++, g.bl_tree[2 * Lb]++)
                  : 10 >= v
                  ? g.bl_tree[2 * uc]++
                  : g.bl_tree[2 * A]++,
                (v = 0),
                (t = B),
                0 === u
                  ? ((y = 138), (z = 3))
                  : B === u
                  ? ((y = 6), (z = 3))
                  : ((y = 7), (z = 4)));
            }
          }
          function ob(l, r, t) {
            var u,
              v,
              y = -1,
              z = r[1],
              B = 0,
              E = 7,
              F = 4;
            0 === z && ((E = 138), (F = 3));
            for (u = 0; u <= t; u++)
              if (((v = z), (z = r[2 * (u + 1) + 1]), !(++B < E && v === z))) {
                if (B < F) {
                  do g(l, v, l.bl_tree);
                  while (0 !== --B);
                } else
                  0 !== v
                    ? (v !== y && (g(l, v, l.bl_tree), B--),
                      g(l, Lb, l.bl_tree),
                      q(l, B - 3, 2))
                    : 10 >= B
                    ? (g(l, uc, l.bl_tree), q(l, B - 3, 3))
                    : (g(l, A, l.bl_tree), q(l, B - 11, 7));
                B = 0;
                y = v;
                0 === z
                  ? ((E = 138), (F = 3))
                  : v === z
                  ? ((E = 6), (F = 3))
                  : ((E = 7), (F = 4));
              }
          }
          function H(g) {
            var l,
              q = 4093624447;
            for (l = 0; 31 >= l; l++, q >>>= 1)
              if (1 & q && 0 !== g.dyn_ltree[2 * l]) return qb;
            if (
              0 !== g.dyn_ltree[18] ||
              0 !== g.dyn_ltree[20] ||
              0 !== g.dyn_ltree[26]
            )
              return Y;
            for (l = 32; l < kb; l++) if (0 !== g.dyn_ltree[2 * l]) return Y;
            return qb;
          }
          function jb(g, l, r, t) {
            q(g, (wa << 1) + (t ? 1 : 0), 3);
            T(g);
            oa(g, r);
            oa(g, ~r);
            za.arraySet(g.pending_buf, g.window, l, r, g.pending);
            g.pending += r;
          }
          var za = t("../utils/common"),
            qb = 0,
            Y = 1,
            wa = 0,
            kb = 256,
            ua = kb + 1 + 29,
            cb = 30,
            Hb = 19,
            sa = 2 * ua + 1,
            sb = 15,
            rb = 16,
            Kb = 256,
            Lb = 16,
            uc = 17,
            A = 18,
            ta = [
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0,
            ],
            $a = [
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13,
            ],
            va = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
            fa = [
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ],
            Na = Array(2 * (ua + 2));
          B(Na);
          var xa = Array(2 * cb);
          B(xa);
          var aa = Array(512);
          B(aa);
          var X = Array(256);
          B(X);
          var dc = Array(29);
          B(dc);
          var Fa = Array(cb);
          B(Fa);
          var V,
            La,
            u,
            qd = !1;
          F._tr_init = function (g) {
            if (!qd) {
              var q,
                t,
                A,
                B = Array(sb + 1);
              for (A = t = 0; 28 > A; A++)
                for (dc[A] = t, q = 0; q < 1 << ta[A]; q++) X[t++] = A;
              X[t - 1] = A;
              for (A = t = 0; 16 > A; A++)
                for (Fa[A] = t, q = 0; q < 1 << $a[A]; q++) aa[t++] = A;
              for (t >>= 7; A < cb; A++)
                for (Fa[A] = t << 7, q = 0; q < 1 << ($a[A] - 7); q++)
                  aa[256 + t++] = A;
              for (q = 0; q <= sb; q++) B[q] = 0;
              for (q = 0; 143 >= q; ) (Na[2 * q + 1] = 8), q++, B[8]++;
              for (; 255 >= q; ) (Na[2 * q + 1] = 9), q++, B[9]++;
              for (; 279 >= q; ) (Na[2 * q + 1] = 7), q++, B[7]++;
              for (; 287 >= q; ) (Na[2 * q + 1] = 8), q++, B[8]++;
              z(Na, ua + 1, B);
              for (q = 0; q < cb; q++)
                (xa[2 * q + 1] = 5), (xa[2 * q] = l(q, 5));
              V = new L(Na, ta, kb + 1, ua, sb);
              La = new L(xa, $a, 0, cb, sb);
              u = new L([], va, 0, Hb, 7);
              qd = !0;
            }
            g.l_desc = new r(g.dyn_ltree, V);
            g.d_desc = new r(g.dyn_dtree, La);
            g.bl_desc = new r(g.bl_tree, u);
            g.bi_buf = 0;
            g.bi_valid = 0;
            y(g);
          };
          F._tr_stored_block = jb;
          F._tr_flush_block = function (g, l, r, t) {
            var u = 0;
            if (0 < g.level) {
              2 === g.strm.data_type && (g.strm.data_type = H(g));
              Rb(g, g.l_desc);
              Rb(g, g.d_desc);
              ya(g, g.dyn_ltree, g.l_desc.max_code);
              ya(g, g.dyn_dtree, g.d_desc.max_code);
              Rb(g, g.bl_desc);
              for (u = Hb - 1; 3 <= u && 0 === g.bl_tree[2 * fa[u] + 1]; u--);
              u = ((g.opt_len += 3 * (u + 1) + 14), u);
              var v = (g.opt_len + 3 + 7) >>> 3;
              var z = (g.static_len + 3 + 7) >>> 3;
              z <= v && (v = z);
            } else v = z = r + 5;
            if (r + 4 <= v && -1 !== l) jb(g, l, r, t);
            else if (4 === g.strategy || z === v)
              q(g, 2 + (t ? 1 : 0), 3), Qb(g, Na, xa);
            else {
              q(g, 4 + (t ? 1 : 0), 3);
              l = g.l_desc.max_code + 1;
              r = g.d_desc.max_code + 1;
              u += 1;
              q(g, l - 257, 5);
              q(g, r - 1, 5);
              q(g, u - 4, 4);
              for (v = 0; v < u; v++) q(g, g.bl_tree[2 * fa[v] + 1], 3);
              ob(g, g.dyn_ltree, l - 1);
              ob(g, g.dyn_dtree, r - 1);
              Qb(g, g.dyn_ltree, g.dyn_dtree);
            }
            y(g);
            t && T(g);
          };
          F._tr_tally = function (g, l, q) {
            return (
              (g.pending_buf[g.d_buf + 2 * g.last_lit] = (l >>> 8) & 255),
              (g.pending_buf[g.d_buf + 2 * g.last_lit + 1] = 255 & l),
              (g.pending_buf[g.l_buf + g.last_lit] = 255 & q),
              g.last_lit++,
              0 === l
                ? g.dyn_ltree[2 * q]++
                : (g.matches++,
                  l--,
                  g.dyn_ltree[2 * (X[q] + kb + 1)]++,
                  g.dyn_dtree[2 * (256 > l ? aa[l] : aa[256 + (l >>> 7)])]++),
              g.last_lit === g.lit_bufsize - 1
            );
          };
          F._tr_align = function (l) {
            q(l, 2, 3);
            g(l, Kb, Na);
            16 === l.bi_valid
              ? (oa(l, l.bi_buf), (l.bi_buf = 0), (l.bi_valid = 0))
              : 8 <= l.bi_valid &&
                ((l.pending_buf[l.pending++] = 255 & l.bi_buf),
                (l.bi_buf >>= 8),
                (l.bi_valid -= 8));
          };
        },
        { "../utils/common": 3 },
      ],
      15: [
        function (t, E, F) {
          E.exports = function () {
            this.input = null;
            this.total_in = this.avail_in = this.next_in = 0;
            this.output = null;
            this.total_out = this.avail_out = this.next_out = 0;
            this.msg = "";
            this.state = null;
            this.data_type = 2;
            this.adler = 0;
          };
        },
        {},
      ],
      "/": [
        function (t, E, F) {
          F = t("./lib/utils/common").assign;
          var B = t("./lib/deflate"),
            L = t("./lib/inflate");
          t = t("./lib/zlib/constants");
          var r = {};
          F(r, B, L, t);
          E.exports = r;
        },
        {
          "./lib/deflate": 1,
          "./lib/inflate": 2,
          "./lib/utils/common": 3,
          "./lib/zlib/constants": 6,
        },
      ],
    },
    {},
    []
  )("/");
});
var saveAs =
  saveAs ||
  (function (Q) {
    if (
      !(
        "undefined" === typeof Q ||
        ("undefined" !== typeof navigator &&
          /MSIE [1-9]\./.test(navigator.userAgent))
      )
    ) {
      var t = Q.document.createElementNS("http://www.w3.org/1999/xhtml", "a"),
        E = "download" in t,
        F = /constructor/i.test(Q.HTMLElement) || Q.safari,
        B = /CriOS\/[\d]+/.test(navigator.userAgent),
        L = function (g) {
          (Q.setImmediate || Q.setTimeout)(function () {
            throw g;
          }, 0);
        },
        r = function (g) {
          setTimeout(function () {
            "string" === typeof g
              ? (Q.URL || Q.webkitURL || Q).revokeObjectURL(g)
              : g.remove();
          }, 4e4);
        },
        oa = function (g) {
          return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
            g.type
          )
            ? new Blob([String.fromCharCode(65279), g], { type: g.type })
            : g;
        },
        q = function (g, q, y) {
          y || (g = oa(g));
          var l = this,
            z = "application/octet-stream" === g.type,
            ra = function () {
              var g = ["writestart", "progress", "write", "writeend"];
              g = [].concat(g);
              for (var q = g.length; q--; ) {
                var r = l["on" + g[q]];
                if ("function" === typeof r)
                  try {
                    r.call(l, l);
                  } catch (H) {
                    L(H);
                  }
              }
            };
          l.readyState = l.INIT;
          if (E) {
            var Qb = (Q.URL || Q.webkitURL || Q).createObjectURL(g);
            setTimeout(function () {
              t.href = Qb;
              t.download = q;
              var g = new MouseEvent("click");
              t.dispatchEvent(g);
              ra();
              r(Qb);
              l.readyState = l.DONE;
            });
          } else
            (function () {
              if ((B || (z && F)) && Q.FileReader) {
                var q = new FileReader();
                q.onloadend = function () {
                  var g = B
                    ? q.result
                    : q.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                  Q.open(g, "_blank") || (Q.location.href = g);
                  l.readyState = l.DONE;
                  ra();
                };
                q.readAsDataURL(g);
                l.readyState = l.INIT;
              } else
                Qb || (Qb = (Q.URL || Q.webkitURL || Q).createObjectURL(g)),
                  z
                    ? (Q.location.href = Qb)
                    : Q.open(Qb, "_blank") || (Q.location.href = Qb),
                  (l.readyState = l.DONE),
                  ra(),
                  r(Qb);
            })();
        },
        g = q.prototype;
      if ("undefined" !== typeof navigator && navigator.msSaveOrOpenBlob)
        return function (g, q, r) {
          q = q || g.name || "download";
          r || (g = oa(g));
          return navigator.msSaveOrOpenBlob(g, q);
        };
      g.abort = function () {};
      g.readyState = g.INIT = 0;
      g.WRITING = 1;
      g.DONE = 2;
      g.error =
        g.onwritestart =
        g.onprogress =
        g.onwrite =
        g.onabort =
        g.onerror =
        g.onwriteend =
          null;
      return function (g, r, t) {
        return new q(g, r || g.name || "download", t);
      };
    }
  })(
    ("undefined" !== typeof self && self) ||
      ("undefined" !== typeof window && window) ||
      this.content
  );
"undefined" !== typeof module && module.exports
  ? (module.exports.saveAs = saveAs)
  : "undefined" !== typeof define &&
    null !== define &&
    null !== define.amd &&
    define("FileSaver.js", function () {
      return saveAs;
    });
"function" == typeof define &&
  define.__amd &&
  ((define.amd = define.__amd), delete define.__amd);
